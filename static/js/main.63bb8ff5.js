/*! For license information please see main.63bb8ff5.js.LICENSE.txt */
!function(){var e={228:function(e){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l},e.exports.__esModule=!0,e.exports.default=e.exports},858:function(e){e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},646:function(e,t,n){var l=n(228);e.exports=function(e){if(Array.isArray(e))return l(e)},e.exports.__esModule=!0,e.exports.default=e.exports},860:function(e){e.exports=function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},884:function(e){e.exports=function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}},e.exports.__esModule=!0,e.exports.default=e.exports},521:function(e){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},206:function(e){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},38:function(e,t,n){var l=n(858),q=n(884),r=n(379),i=n(521);e.exports=function(e,t){return l(e)||q(e,t)||r(e,t)||i()},e.exports.__esModule=!0,e.exports.default=e.exports},319:function(e,t,n){var l=n(646),q=n(860),r=n(379),i=n(206);e.exports=function(e){return l(e)||q(e)||r(e)||i()},e.exports.__esModule=!0,e.exports.default=e.exports},379:function(e,t,n){var l=n(228);e.exports=function(e,t){if(e){if("string"===typeof e)return l(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},757:function(e,t,n){e.exports=n(727)},738:function(e,t,n){"use strict";var l={};n.r(l),n.d(l,{computeMorphedAttributes:function(){return qc},computeTangents:function(){return JA},estimateBytesUsed:function(){return tc},interleaveAttributes:function(){return ec},mergeBufferAttributes:function(){return $A},mergeBufferGeometries:function(){return KA},mergeVertices:function(){return nc},toTrianglesDrawMode:function(){return lc}});var q=n(791),r=n(164);n.p;function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||s(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||s(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){if(e){if("string"===typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}var A=function(e,t){var n=new Set(t);return Object.assign.apply(Object,[{}].concat(o(Object.entries(e).filter((function(e){var t=a(e,1)[0];return!n.has(t)})).map((function(e){var t=a(e,2);return i({},t[0],t[1])})))))},c=n(189),m=n.n(c);function h(e){return h="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||p(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e){return function(e){if(Array.isArray(e))return x(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||p(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){if(e){if("string"===typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(e,t):void 0}}function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}var v=function(e,t){var n="object"===h(t)?t:{wrapperElementType:t,methodNames:(arguments.length<=2?void 0:arguments[2])||void 0,initPropNames:(arguments.length<=3?void 0:arguments[3])||void 0},l=n.wrapperElementType,r=void 0===l?"div":l,i=n.nodeMapper,a=void 0===i?function(e){return e}:i,o=n.methodNames,s=void 0===o?[]:o,u=n.initPropNames,c=void 0===u?[]:u;return(0,q.forwardRef)((function(t,n){var l=(0,q.useRef)(),i=f((0,q.useState)({}),2),o=i[0],u=i[1];(0,q.useEffect)((function(){return u(t)}));var h=(0,q.useMemo)((function(){var n=m()(c.filter((function(e){return t.hasOwnProperty(e)})).map((function(e){return[e,t[e]]})));return e(n)}),[]);(0,q.useLayoutEffect)((function(){h(a(l.current))}),[]),(0,q.useEffect)((function(){return h._destructor instanceof Function?h._destructor:void 0}),[]);var p=(0,q.useCallback)((function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),l=1;l<t;l++)n[l-1]=arguments[l];return h[e]instanceof Function?h[e].apply(h,n):void 0}),[h]),x=A(t,[].concat(d(s),d(c)));return Object.keys(x).filter((function(e){return o[e]!==t[e]})).forEach((function(e){return p(e,t[e])})),(0,q.useImperativeHandle)(n,(function(){return m()(s.map((function(e){return[e,function(){for(var t=arguments.length,n=new Array(t),l=0;l<t;l++)n[l]=arguments[l];return p.apply(void 0,[e].concat(n))}]})))})),q.createElement(r,{ref:l})}))};function g(e,t,n,l,q,r,i){try{var a=e[r](i),o=a.value}catch(s){return void n(s)}a.done?t(o):Promise.resolve(o).then(l,q)}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}function y(e,t){if(e){if("string"===typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_(e,t):void 0}}function b(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=y(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var l=0,q=function(){};return{s:q,n:function(){return l>=e.length?{done:!0}:{done:!1,value:e[l++]}},e:function(e){throw e},f:q}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,r=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw r}}}}function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function M(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}}(e,t)||y(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function z(e,t){if(t&&("object"===S(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return E(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function C(){return C="undefined"!==typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var l=T(e,t);if(l){var q=Object.getOwnPropertyDescriptor(l,t);return q.get?q.get.call(arguments.length<3?e:n):q.value}},C.apply(this,arguments)}function L(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function P(e,t){return P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},P(e,t)}function R(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(e,"prototype",{value:Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),writable:!1}),t&&P(e,t)}function D(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function I(e){var t=D();return function(){var n,l=k(e);if(t){var q=k(this).constructor;n=Reflect.construct(l,arguments,q)}else n=l.apply(this,arguments);return z(this,n)}}function O(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function B(e,t){for(var n=0;n<t.length;n++){var l=t[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}function N(e,t,n){return t&&B(e.prototype,t),n&&B(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}for(var U,F=n(757),H=n.n(F),G="135",j={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},V=0,W=1,Q=2,Y=3,X=100,Z=301,J=302,K=303,$=304,ee=306,te=307,ne=1e3,le=1001,qe=1002,re=1003,ie=1004,ae=1005,oe=1006,se=1008,ue=1009,Ae=1012,ce=1014,me=1015,he=1016,fe=1020,de=1022,pe=1023,xe=1026,ve=1027,ge=2300,_e=2301,ye=2302,be=2400,we=2401,Me=2402,Se=2500,Ee=2501,ze=3e3,ke=3001,Te=3007,Ce=3002,Le=7680,Pe=35044,Re=35048,De="300 es",Ie=function(){function e(){O(this,e)}return N(e,[{key:"addEventListener",value:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}},{key:"hasEventListener",value:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}},{key:"removeEventListener",value:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var l=n.indexOf(t);-1!==l&&n.splice(l,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),l=0,q=n.length;l<q;l++)n[l].call(this,e);e.target=null}}}}]),e}(),Oe=[],Be=0;Be<256;Be++)Oe[Be]=(Be<16?"0":"")+Be.toString(16);var Ne=1234567,Ue=Math.PI/180,Fe=180/Math.PI;function He(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,l=4294967295*Math.random()|0;return(Oe[255&e]+Oe[e>>8&255]+Oe[e>>16&255]+Oe[e>>24&255]+"-"+Oe[255&t]+Oe[t>>8&255]+"-"+Oe[t>>16&15|64]+Oe[t>>24&255]+"-"+Oe[63&n|128]+Oe[n>>8&255]+"-"+Oe[n>>16&255]+Oe[n>>24&255]+Oe[255&l]+Oe[l>>8&255]+Oe[l>>16&255]+Oe[l>>24&255]).toUpperCase()}function Ge(e,t,n){return Math.max(t,Math.min(n,e))}function je(e,t){return(e%t+t)%t}function Ve(e,t,n){return(1-n)*e+n*t}function We(e){return 0===(e&e-1)&&0!==e}function Qe(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Ye(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var Xe=Object.freeze({__proto__:null,DEG2RAD:Ue,RAD2DEG:Fe,generateUUID:He,clamp:Ge,euclideanModulo:je,mapLinear:function(e,t,n,l,q){return l+(e-t)*(q-l)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Ve,damp:function(e,t,n,l){return Ve(e,t,1-Math.exp(-n*l))},pingpong:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return t-Math.abs(je(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Ne=e%2147483647),((Ne=16807*Ne%2147483647)-1)/2147483646},degToRad:function(e){return e*Ue},radToDeg:function(e){return e*Fe},isPowerOfTwo:We,ceilPowerOfTwo:Qe,floorPowerOfTwo:Ye,setQuaternionFromProperEuler:function(e,t,n,l,q){var r=Math.cos,i=Math.sin,a=r(n/2),o=i(n/2),s=r((t+l)/2),u=i((t+l)/2),A=r((t-l)/2),c=i((t-l)/2),m=r((l-t)/2),h=i((l-t)/2);switch(q){case"XYX":e.set(a*u,o*A,o*c,a*s);break;case"YZY":e.set(o*c,a*u,o*A,a*s);break;case"ZXZ":e.set(o*A,o*c,a*u,a*s);break;case"XZX":e.set(a*u,o*h,o*m,a*s);break;case"YXY":e.set(o*m,a*u,o*h,a*s);break;case"ZYZ":e.set(o*h,o*m,a*u,a*s);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+q)}}}),Ze=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;O(this,t),this.x=e,this.y=n}return N(t,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,t){return this.x=e,this.y=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,l=e.elements;return this.x=l[0]*t+l[3]*n+l[6],this.y=l[1]*t+l[4]*n+l[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}},{key:"rotateAround",value:function(e,t){var n=Math.cos(t),l=Math.sin(t),q=this.x-e.x,r=this.y-e.y;return this.x=q*n-r*l+e.x,this.y=q*l+r*n+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:H().mark((function e(){return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:case"end":return e.stop()}}),e,this)}))}]),t}();Ze.prototype.isVector2=!0;var Je=function(){function e(){O(this,e),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}return N(e,[{key:"set",value:function(e,t,n,l,q,r,i,a,o){var s=this.elements;return s[0]=e,s[1]=l,s[2]=i,s[3]=t,s[4]=q,s[5]=a,s[6]=n,s[7]=r,s[8]=o,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,l=t.elements,q=this.elements,r=n[0],i=n[3],a=n[6],o=n[1],s=n[4],u=n[7],A=n[2],c=n[5],m=n[8],h=l[0],f=l[3],d=l[6],p=l[1],x=l[4],v=l[7],g=l[2],_=l[5],y=l[8];return q[0]=r*h+i*p+a*g,q[3]=r*f+i*x+a*_,q[6]=r*d+i*v+a*y,q[1]=o*h+s*p+u*g,q[4]=o*f+s*x+u*_,q[7]=o*d+s*v+u*y,q[2]=A*h+c*p+m*g,q[5]=A*f+c*x+m*_,q[8]=A*d+c*v+m*y,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[1],l=e[2],q=e[3],r=e[4],i=e[5],a=e[6],o=e[7],s=e[8];return t*r*s-t*i*o-n*q*s+n*i*a+l*q*o-l*r*a}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],l=e[2],q=e[3],r=e[4],i=e[5],a=e[6],o=e[7],s=e[8],u=s*r-i*o,A=i*a-s*q,c=o*q-r*a,m=t*u+n*A+l*c;if(0===m)return this.set(0,0,0,0,0,0,0,0,0);var h=1/m;return e[0]=u*h,e[1]=(l*o-s*n)*h,e[2]=(i*n-l*r)*h,e[3]=A*h,e[4]=(s*t-l*a)*h,e[5]=(l*q-i*t)*h,e[6]=c*h,e[7]=(n*a-o*t)*h,e[8]=(r*t-n*q)*h,this}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},{key:"setUvTransform",value:function(e,t,n,l,q,r,i){var a=Math.cos(q),o=Math.sin(q);return this.set(n*a,n*o,-n*(a*r+o*i)+r+e,-l*o,l*a,-l*(-o*r+a*i)+i+t,0,0,1),this}},{key:"scale",value:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}},{key:"rotate",value:function(e){var t=Math.cos(e),n=Math.sin(e),l=this.elements,q=l[0],r=l[3],i=l[6],a=l[1],o=l[4],s=l[7];return l[0]=t*q+n*a,l[3]=t*r+n*o,l[6]=t*i+n*s,l[1]=-n*q+t*a,l[4]=-n*r+t*o,l[7]=-n*i+t*s,this}},{key:"translate",value:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,l=0;l<9;l++)if(t[l]!==n[l])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<9;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}();function Ke(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,l=e.length;n<l;++n)e[n]>t&&(t=e[n]);return t}Je.prototype.isMatrix3=!0;var $e;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function et(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function tt(e){for(var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=3735928559^n,q=1103547991^n,r=0;r<e.length;r++)t=e.charCodeAt(r),l=Math.imul(l^t,2654435761),q=Math.imul(q^t,1597334677);return l=Math.imul(l^l>>>16,2246822507)^Math.imul(q^q>>>13,3266489909),4294967296*(2097151&(q=Math.imul(q^q>>>16,2246822507)^Math.imul(l^l>>>13,3266489909)))+(l>>>0)}var nt=function(){function e(){O(this,e)}return N(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===$e&&($e=et("canvas")),$e.width=e.width,$e.height=e.height;var n=$e.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=$e}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}]),e}(),lt=0,qt=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.DEFAULT_IMAGE,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.DEFAULT_MAPPING,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:le,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:le,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:oe,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:se,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:pe,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:ue,A=arguments.length>8&&void 0!==arguments[8]?arguments[8]:1,c=arguments.length>9&&void 0!==arguments[9]?arguments[9]:ze;return O(this,n),e=t.call(this),Object.defineProperty(E(e),"id",{value:lt++}),e.uuid=He(),e.name="",e.image=l,e.mipmaps=[],e.mapping=q,e.wrapS=r,e.wrapT=i,e.magFilter=a,e.minFilter=o,e.anisotropy=A,e.format=s,e.internalFormat=null,e.type=u,e.offset=new Ze(0,0),e.repeat=new Ze(1,1),e.center=new Ze(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new Je,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=c,e.userData={},e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e}return N(n,[{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var l=this.image;if(void 0===l.uuid&&(l.uuid=He()),!t&&void 0===e.images[l.uuid]){var q;if(Array.isArray(l)){q=[];for(var r=0,i=l.length;r<i;r++)l[r].isDataTexture?q.push(rt(l[r].image)):q.push(rt(l[r]))}else q=rt(l);e.images[l.uuid]={uuid:l.uuid,url:q}}n.image=l.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ne:e.x=e.x-Math.floor(e.x);break;case le:e.x=e.x<0?0:1;break;case qe:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case ne:e.y=e.y-Math.floor(e.y);break;case le:e.y=e.y<0?0:1;break;case qe:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(Ie);function rt(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap?nt.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}qt.DEFAULT_IMAGE=void 0,qt.DEFAULT_MAPPING=300,qt.prototype.isTexture=!0;var it=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;O(this,t),this.x=e,this.y=n,this.z=l,this.w=q}return N(t,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,t,n,l){return this.x=e,this.y=t,this.z=n,this.w=l,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,l=this.z,q=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*l+r[12]*q,this.y=r[1]*t+r[5]*n+r[9]*l+r[13]*q,this.z=r[2]*t+r[6]*n+r[10]*l+r[14]*q,this.w=r[3]*t+r[7]*n+r[11]*l+r[15]*q,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var t,n,l,q,r=.01,i=.1,a=e.elements,o=a[0],s=a[4],u=a[8],A=a[1],c=a[5],m=a[9],h=a[2],f=a[6],d=a[10];if(Math.abs(s-A)<r&&Math.abs(u-h)<r&&Math.abs(m-f)<r){if(Math.abs(s+A)<i&&Math.abs(u+h)<i&&Math.abs(m+f)<i&&Math.abs(o+c+d-3)<i)return this.set(1,0,0,0),this;t=Math.PI;var p=(o+1)/2,x=(c+1)/2,v=(d+1)/2,g=(s+A)/4,_=(u+h)/4,y=(m+f)/4;return p>x&&p>v?p<r?(n=0,l=.707106781,q=.707106781):(l=g/(n=Math.sqrt(p)),q=_/n):x>v?x<r?(n=.707106781,l=0,q=.707106781):(n=g/(l=Math.sqrt(x)),q=y/l):v<r?(n=.707106781,l=.707106781,q=0):(n=_/(q=Math.sqrt(v)),l=y/q),this.set(n,l,q,t),this}var b=Math.sqrt((f-m)*(f-m)+(u-h)*(u-h)+(A-s)*(A-s));return Math.abs(b)<.001&&(b=1),this.x=(f-m)/b,this.y=(u-h)/b,this.z=(A-s)/b,this.w=Math.acos((o+c+d-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:H().mark((function e(){return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:return e.next=8,this.w;case 8:case"end":return e.stop()}}),e,this)}))}]),t}();it.prototype.isVector4=!0;var at=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return O(this,n),(q=t.call(this)).width=e,q.height=l,q.depth=1,q.scissor=new it(0,0,e,l),q.scissorTest=!1,q.viewport=new it(0,0,e,l),q.texture=new qt(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),q.texture.isRenderTargetTexture=!0,q.texture.image={width:e,height:l,depth:1},q.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,q.texture.internalFormat=void 0!==r.internalFormat?r.internalFormat:null,q.texture.minFilter=void 0!==r.minFilter?r.minFilter:oe,q.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,q.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,q.depthTexture=void 0!==r.depthTexture?r.depthTexture:null,q}return N(n,[{key:"setTexture",value:function(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}},{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?L(Object(n),!0).forEach((function(t){w(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):L(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},this.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Ie);at.prototype.isWebGLRenderTarget=!0;var ot=function(e){R(n,e);var t=I(n);function n(e,l,q){var r;O(this,n);var i=(r=t.call(this,e,l)).texture;r.texture=[];for(var a=0;a<q;a++)r.texture[a]=i.clone();return r}return N(n,[{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(var l=0,q=this.texture.length;l<q;l++)this.texture[l].image.width=e,this.texture[l].image.height=t,this.texture[l].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}},{key:"copy",value:function(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(var t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}]),n}(at);ot.prototype.isWebGLMultipleRenderTargets=!0;var st=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return O(this,n),(q=t.call(this,e,l,r)).samples=4,q.ignoreDepthForMultisampleCopy=void 0===r.ignoreDepth||r.ignoreDepth,q.useRenderToTexture=void 0!==r.useRenderToTexture&&r.useRenderToTexture,q.useRenderbuffer=!1===q.useRenderToTexture,q}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}]),n}(at);st.prototype.isWebGLMultisampleRenderTarget=!0;var ut=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;O(this,e),this._x=t,this._y=n,this._z=l,this._w=q}return N(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n,l){return this._x=e,this._y=t,this._z=n,this._w=l,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,l=e._y,q=e._z,r=e._order,i=Math.cos,a=Math.sin,o=i(n/2),s=i(l/2),u=i(q/2),A=a(n/2),c=a(l/2),m=a(q/2);switch(r){case"XYZ":this._x=A*s*u+o*c*m,this._y=o*c*u-A*s*m,this._z=o*s*m+A*c*u,this._w=o*s*u-A*c*m;break;case"YXZ":this._x=A*s*u+o*c*m,this._y=o*c*u-A*s*m,this._z=o*s*m-A*c*u,this._w=o*s*u+A*c*m;break;case"ZXY":this._x=A*s*u-o*c*m,this._y=o*c*u+A*s*m,this._z=o*s*m+A*c*u,this._w=o*s*u-A*c*m;break;case"ZYX":this._x=A*s*u-o*c*m,this._y=o*c*u+A*s*m,this._z=o*s*m-A*c*u,this._w=o*s*u+A*c*m;break;case"YZX":this._x=A*s*u+o*c*m,this._y=o*c*u+A*s*m,this._z=o*s*m-A*c*u,this._w=o*s*u-A*c*m;break;case"XZY":this._x=A*s*u-o*c*m,this._y=o*c*u-A*s*m,this._z=o*s*m+A*c*u,this._w=o*s*u+A*c*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==t&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,t){var n=t/2,l=Math.sin(n);return this._x=e.x*l,this._y=e.y*l,this._z=e.z*l,this._w=Math.cos(n),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=e.elements,n=t[0],l=t[4],q=t[8],r=t[1],i=t[5],a=t[9],o=t[2],s=t[6],u=t[10],A=n+i+u;if(A>0){var c=.5/Math.sqrt(A+1);this._w=.25/c,this._x=(s-a)*c,this._y=(q-o)*c,this._z=(r-l)*c}else if(n>i&&n>u){var m=2*Math.sqrt(1+n-i-u);this._w=(s-a)/m,this._x=.25*m,this._y=(l+r)/m,this._z=(q+o)/m}else if(i>u){var h=2*Math.sqrt(1+i-n-u);this._w=(q-o)/h,this._x=(l+r)/h,this._y=.25*h,this._z=(a+s)/h}else{var f=2*Math.sqrt(1+u-n-i);this._w=(r-l)/f,this._x=(q+o)/f,this._y=(a+s)/f,this._z=.25*f}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,t){var n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(Ge(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,t){var n=this.angleTo(e);if(0===n)return this;var l=Math.min(1,t/n);return this.slerp(e,l),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,t){var n=e._x,l=e._y,q=e._z,r=e._w,i=t._x,a=t._y,o=t._z,s=t._w;return this._x=n*s+r*i+l*o-q*a,this._y=l*s+r*a+q*i-n*o,this._z=q*s+r*o+n*a-l*i,this._w=r*s-n*i-l*a-q*o,this._onChangeCallback(),this}},{key:"slerp",value:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,l=this._y,q=this._z,r=this._w,i=r*e._w+n*e._x+l*e._y+q*e._z;if(i<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,i=-i):this.copy(e),i>=1)return this._w=r,this._x=n,this._y=l,this._z=q,this;var a=1-i*i;if(a<=Number.EPSILON){var o=1-t;return this._w=o*r+t*this._w,this._x=o*n+t*this._x,this._y=o*l+t*this._y,this._z=o*q+t*this._z,this.normalize(),this._onChangeCallback(),this}var s=Math.sqrt(a),u=Math.atan2(s,i),A=Math.sin((1-t)*u)/s,c=Math.sin(t*u)/s;return this._w=r*A+this._w*c,this._x=n*A+this._x*c,this._y=l*A+this._y*c,this._z=q*A+this._z*c,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,t,n){this.copy(e).slerp(t,n)}},{key:"random",value:function(){var e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),l=2*Math.PI*Math.random(),q=2*Math.PI*Math.random();return this.set(t*Math.cos(l),n*Math.sin(q),n*Math.cos(q),t*Math.sin(l))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}}],[{key:"slerp",value:function(e,t,n,l){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,l)}},{key:"slerpFlat",value:function(e,t,n,l,q,r,i){var a=n[l+0],o=n[l+1],s=n[l+2],u=n[l+3],A=q[r+0],c=q[r+1],m=q[r+2],h=q[r+3];if(0===i)return e[t+0]=a,e[t+1]=o,e[t+2]=s,void(e[t+3]=u);if(1===i)return e[t+0]=A,e[t+1]=c,e[t+2]=m,void(e[t+3]=h);if(u!==h||a!==A||o!==c||s!==m){var f=1-i,d=a*A+o*c+s*m+u*h,p=d>=0?1:-1,x=1-d*d;if(x>Number.EPSILON){var v=Math.sqrt(x),g=Math.atan2(v,d*p);f=Math.sin(f*g)/v,i=Math.sin(i*g)/v}var _=i*p;if(a=a*f+A*_,o=o*f+c*_,s=s*f+m*_,u=u*f+h*_,f===1-i){var y=1/Math.sqrt(a*a+o*o+s*s+u*u);a*=y,o*=y,s*=y,u*=y}}e[t]=a,e[t+1]=o,e[t+2]=s,e[t+3]=u}},{key:"multiplyQuaternionsFlat",value:function(e,t,n,l,q,r){var i=n[l],a=n[l+1],o=n[l+2],s=n[l+3],u=q[r],A=q[r+1],c=q[r+2],m=q[r+3];return e[t]=i*m+s*u+a*c-o*A,e[t+1]=a*m+s*A+o*u-i*c,e[t+2]=o*m+s*c+i*A-a*u,e[t+3]=s*m-i*u-a*A-o*c,e}}]),e}();ut.prototype.isQuaternion=!0;var At=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;O(this,t),this.x=e,this.y=n,this.z=l}return N(t,[{key:"set",value:function(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}},{key:"applyEuler",value:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(mt.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,t){return this.applyQuaternion(mt.setFromAxisAngle(e,t))}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,l=this.z,q=e.elements;return this.x=q[0]*t+q[3]*n+q[6]*l,this.y=q[1]*t+q[4]*n+q[7]*l,this.z=q[2]*t+q[5]*n+q[8]*l,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,l=this.z,q=e.elements,r=1/(q[3]*t+q[7]*n+q[11]*l+q[15]);return this.x=(q[0]*t+q[4]*n+q[8]*l+q[12])*r,this.y=(q[1]*t+q[5]*n+q[9]*l+q[13])*r,this.z=(q[2]*t+q[6]*n+q[10]*l+q[14])*r,this}},{key:"applyQuaternion",value:function(e){var t=this.x,n=this.y,l=this.z,q=e.x,r=e.y,i=e.z,a=e.w,o=a*t+r*l-i*n,s=a*n+i*t-q*l,u=a*l+q*n-r*t,A=-q*t-r*n-i*l;return this.x=o*a+A*-q+s*-i-u*-r,this.y=s*a+A*-r+u*-q-o*-i,this.z=u*a+A*-i+o*-r-s*-q,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var t=this.x,n=this.y,l=this.z,q=e.elements;return this.x=q[0]*t+q[4]*n+q[8]*l,this.y=q[1]*t+q[5]*n+q[9]*l,this.z=q[2]*t+q[6]*n+q[10]*l,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}},{key:"cross",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,t){var n=e.x,l=e.y,q=e.z,r=t.x,i=t.y,a=t.z;return this.x=l*a-q*i,this.y=q*r-n*a,this.z=n*i-l*r,this}},{key:"projectOnVector",value:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}},{key:"projectOnPlane",value:function(e){return ct.copy(this).projectOnVector(e),this.sub(ct)}},{key:"reflect",value:function(e){return this.sub(ct.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var n=this.dot(e)/t;return Math.acos(Ge(n,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y,l=this.z-e.z;return t*t+n*n+l*l}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,t,n){var l=Math.sin(t)*e;return this.x=l*Math.sin(n),this.y=Math.cos(t)*e,this.z=l*Math.cos(n),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}},{key:"setFromMatrixPosition",value:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}},{key:"setFromMatrixScale",value:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),l=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=l,this}},{key:"setFromMatrixColumn",value:function(e,t){return this.fromArray(e.elements,4*t)}},{key:"setFromMatrix3Column",value:function(e,t){return this.fromArray(e.elements,3*t)}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-Math.pow(e,2));return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}},{key:Symbol.iterator,value:H().mark((function e(){return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:case"end":return e.stop()}}),e,this)}))}]),t}();At.prototype.isVector3=!0;var ct=new At,mt=new ut,ht=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At(1/0,1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At(-1/0,-1/0,-1/0);O(this,e),this.min=t,this.max=n}return N(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromArray",value:function(e){for(var t=1/0,n=1/0,l=1/0,q=-1/0,r=-1/0,i=-1/0,a=0,o=e.length;a<o;a+=3){var s=e[a],u=e[a+1],A=e[a+2];s<t&&(t=s),u<n&&(n=u),A<l&&(l=A),s>q&&(q=s),u>r&&(r=u),A>i&&(i=A)}return this.min.set(t,n,l),this.max.set(q,r,i),this}},{key:"setFromBufferAttribute",value:function(e){for(var t=1/0,n=1/0,l=1/0,q=-1/0,r=-1/0,i=-1/0,a=0,o=e.count;a<o;a++){var s=e.getX(a),u=e.getY(a),A=e.getZ(a);s<t&&(t=s),u<n&&(n=u),A<l&&(l=A),s>q&&(q=s),u>r&&(r=u),A>i&&(i=A)}return this.min.set(t,n,l),this.max.set(q,r,i),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=dt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"setFromObject",value:function(e){return this.makeEmpty(),this.expandByObject(e)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),pt.copy(t.boundingBox),pt.applyMatrix4(e.matrixWorld),this.union(pt));for(var n=e.children,l=0,q=n.length;l<q;l++)this.expandByObject(n[l]);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,dt),dt.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter(wt),Mt.subVectors(this.max,wt),xt.subVectors(e.a,wt),vt.subVectors(e.b,wt),gt.subVectors(e.c,wt),_t.subVectors(vt,xt),yt.subVectors(gt,vt),bt.subVectors(xt,gt);var t=[0,-_t.z,_t.y,0,-yt.z,yt.y,0,-bt.z,bt.y,_t.z,0,-_t.x,yt.z,0,-yt.x,bt.z,0,-bt.x,-_t.y,_t.x,0,-yt.y,yt.x,0,-bt.y,bt.x,0];return!!zt(t,xt,vt,gt,Mt)&&(!!zt(t=[1,0,0,0,1,0,0,0,1],xt,vt,gt,Mt)&&(St.crossVectors(_t,yt),zt(t=[St.x,St.y,St.z],xt,vt,gt,Mt)))}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return dt.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(dt).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(ft[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ft[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ft[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ft[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ft[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ft[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ft[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ft[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ft)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}();ht.prototype.isBox3=!0;var ft=[new At,new At,new At,new At,new At,new At,new At,new At],dt=new At,pt=new ht,xt=new At,vt=new At,gt=new At,_t=new At,yt=new At,bt=new At,wt=new At,Mt=new At,St=new At,Et=new At;function zt(e,t,n,l,q){for(var r=0,i=e.length-3;r<=i;r+=3){Et.fromArray(e,r);var a=q.x*Math.abs(Et.x)+q.y*Math.abs(Et.y)+q.z*Math.abs(Et.z),o=t.dot(Et),s=n.dot(Et),u=l.dot(Et);if(Math.max(-Math.max(o,s,u),Math.min(o,s,u))>a)return!1}return!0}var kt=new ht,Tt=new At,Ct=new At,Lt=new At,Pt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;O(this,e),this.center=t,this.radius=n}return N(e,[{key:"set",value:function(e,t){return this.center.copy(e),this.radius=t,this}},{key:"setFromPoints",value:function(e,t){var n=this.center;void 0!==t?n.copy(t):kt.setFromPoints(e).getCenter(n);for(var l=0,q=0,r=e.length;q<r;q++)l=Math.max(l,n.distanceToSquared(e[q]));return this.radius=Math.sqrt(l),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){Lt.subVectors(e,this.center);var t=Lt.lengthSq();if(t>this.radius*this.radius){var n=Math.sqrt(t),l=.5*(n-this.radius);this.center.add(Lt.multiplyScalar(l/n)),this.radius+=l}return this}},{key:"union",value:function(e){return Ct.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Tt.copy(e.center).add(Ct)),this.expandByPoint(Tt.copy(e.center).sub(Ct)),this}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Rt=new At,Dt=new At,It=new At,Ot=new At,Bt=new At,Nt=new At,Ut=new At,Ft=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At(0,0,-1);O(this,e),this.origin=t,this.direction=n}return N(e,[{key:"set",value:function(e,t){return this.origin.copy(e),this.direction.copy(t),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,Rt)),this}},{key:"closestPointToPoint",value:function(e,t){t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var t=Rt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rt.copy(this.direction).multiplyScalar(t).add(this.origin),Rt.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,t,n,l){Dt.copy(e).add(t).multiplyScalar(.5),It.copy(t).sub(e).normalize(),Ot.copy(this.origin).sub(Dt);var q,r,i,a,o=.5*e.distanceTo(t),s=-this.direction.dot(It),u=Ot.dot(this.direction),A=-Ot.dot(It),c=Ot.lengthSq(),m=Math.abs(1-s*s);if(m>0)if(r=s*u-A,a=o*m,(q=s*A-u)>=0)if(r>=-a)if(r<=a){var h=1/m;i=(q*=h)*(q+s*(r*=h)+2*u)+r*(s*q+r+2*A)+c}else r=o,i=-(q=Math.max(0,-(s*r+u)))*q+r*(r+2*A)+c;else r=-o,i=-(q=Math.max(0,-(s*r+u)))*q+r*(r+2*A)+c;else r<=-a?i=-(q=Math.max(0,-(-s*o+u)))*q+(r=q>0?-o:Math.min(Math.max(-o,-A),o))*(r+2*A)+c:r<=a?(q=0,i=(r=Math.min(Math.max(-o,-A),o))*(r+2*A)+c):i=-(q=Math.max(0,-(s*o+u)))*q+(r=q>0?o:Math.min(Math.max(-o,-A),o))*(r+2*A)+c;else r=s>0?-o:o,i=-(q=Math.max(0,-(s*r+u)))*q+r*(r+2*A)+c;return n&&n.copy(this.direction).multiplyScalar(q).add(this.origin),l&&l.copy(It).multiplyScalar(r).add(Dt),i}},{key:"intersectSphere",value:function(e,t){Rt.subVectors(e.center,this.origin);var n=Rt.dot(this.direction),l=Rt.dot(Rt)-n*n,q=e.radius*e.radius;if(l>q)return null;var r=Math.sqrt(q-l),i=n-r,a=n+r;return i<0&&a<0?null:i<0?this.at(a,t):this.at(i,t)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}},{key:"intersectPlane",value:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}},{key:"intersectsPlane",value:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}},{key:"intersectBox",value:function(e,t){var n,l,q,r,i,a,o=1/this.direction.x,s=1/this.direction.y,u=1/this.direction.z,A=this.origin;return o>=0?(n=(e.min.x-A.x)*o,l=(e.max.x-A.x)*o):(n=(e.max.x-A.x)*o,l=(e.min.x-A.x)*o),s>=0?(q=(e.min.y-A.y)*s,r=(e.max.y-A.y)*s):(q=(e.max.y-A.y)*s,r=(e.min.y-A.y)*s),n>r||q>l?null:((q>n||n!==n)&&(n=q),(r<l||l!==l)&&(l=r),u>=0?(i=(e.min.z-A.z)*u,a=(e.max.z-A.z)*u):(i=(e.max.z-A.z)*u,a=(e.min.z-A.z)*u),n>a||i>l?null:((i>n||n!==n)&&(n=i),(a<l||l!==l)&&(l=a),l<0?null:this.at(n>=0?n:l,t)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,Rt)}},{key:"intersectTriangle",value:function(e,t,n,l,q){Bt.subVectors(t,e),Nt.subVectors(n,e),Ut.crossVectors(Bt,Nt);var r,i=this.direction.dot(Ut);if(i>0){if(l)return null;r=1}else{if(!(i<0))return null;r=-1,i=-i}Ot.subVectors(this.origin,e);var a=r*this.direction.dot(Nt.crossVectors(Ot,Nt));if(a<0)return null;var o=r*this.direction.dot(Bt.cross(Ot));if(o<0)return null;if(a+o>i)return null;var s=-r*Ot.dot(Ut);return s<0?null:this.at(s/i,q)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Ht=function(){function e(){O(this,e),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}return N(e,[{key:"set",value:function(e,t,n,l,q,r,i,a,o,s,u,A,c,m,h,f){var d=this.elements;return d[0]=e,d[4]=t,d[8]=n,d[12]=l,d[1]=q,d[5]=r,d[9]=i,d[13]=a,d[2]=o,d[6]=s,d[10]=u,d[14]=A,d[3]=c,d[7]=m,d[11]=h,d[15]=f,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}},{key:"copyPosition",value:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}},{key:"setFromMatrix3",value:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var t=this.elements,n=e.elements,l=1/Gt.setFromMatrixColumn(e,0).length(),q=1/Gt.setFromMatrixColumn(e,1).length(),r=1/Gt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*l,t[1]=n[1]*l,t[2]=n[2]*l,t[3]=0,t[4]=n[4]*q,t[5]=n[5]*q,t[6]=n[6]*q,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,l=e.y,q=e.z,r=Math.cos(n),i=Math.sin(n),a=Math.cos(l),o=Math.sin(l),s=Math.cos(q),u=Math.sin(q);if("XYZ"===e.order){var A=r*s,c=r*u,m=i*s,h=i*u;t[0]=a*s,t[4]=-a*u,t[8]=o,t[1]=c+m*o,t[5]=A-h*o,t[9]=-i*a,t[2]=h-A*o,t[6]=m+c*o,t[10]=r*a}else if("YXZ"===e.order){var f=a*s,d=a*u,p=o*s,x=o*u;t[0]=f+x*i,t[4]=p*i-d,t[8]=r*o,t[1]=r*u,t[5]=r*s,t[9]=-i,t[2]=d*i-p,t[6]=x+f*i,t[10]=r*a}else if("ZXY"===e.order){var v=a*s,g=a*u,_=o*s,y=o*u;t[0]=v-y*i,t[4]=-r*u,t[8]=_+g*i,t[1]=g+_*i,t[5]=r*s,t[9]=y-v*i,t[2]=-r*o,t[6]=i,t[10]=r*a}else if("ZYX"===e.order){var b=r*s,w=r*u,M=i*s,S=i*u;t[0]=a*s,t[4]=M*o-w,t[8]=b*o+S,t[1]=a*u,t[5]=S*o+b,t[9]=w*o-M,t[2]=-o,t[6]=i*a,t[10]=r*a}else if("YZX"===e.order){var E=r*a,z=r*o,k=i*a,T=i*o;t[0]=a*s,t[4]=T-E*u,t[8]=k*u+z,t[1]=u,t[5]=r*s,t[9]=-i*s,t[2]=-o*s,t[6]=z*u+k,t[10]=E-T*u}else if("XZY"===e.order){var C=r*a,L=r*o,P=i*a,R=i*o;t[0]=a*s,t[4]=-u,t[8]=o*s,t[1]=C*u+R,t[5]=r*s,t[9]=L*u-P,t[2]=P*u-L,t[6]=i*s,t[10]=R*u+C}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(Vt,e,Wt)}},{key:"lookAt",value:function(e,t,n){var l=this.elements;return Xt.subVectors(e,t),0===Xt.lengthSq()&&(Xt.z=1),Xt.normalize(),Qt.crossVectors(n,Xt),0===Qt.lengthSq()&&(1===Math.abs(n.z)?Xt.x+=1e-4:Xt.z+=1e-4,Xt.normalize(),Qt.crossVectors(n,Xt)),Qt.normalize(),Yt.crossVectors(Xt,Qt),l[0]=Qt.x,l[4]=Yt.x,l[8]=Xt.x,l[1]=Qt.y,l[5]=Yt.y,l[9]=Xt.y,l[2]=Qt.z,l[6]=Yt.z,l[10]=Xt.z,this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,l=t.elements,q=this.elements,r=n[0],i=n[4],a=n[8],o=n[12],s=n[1],u=n[5],A=n[9],c=n[13],m=n[2],h=n[6],f=n[10],d=n[14],p=n[3],x=n[7],v=n[11],g=n[15],_=l[0],y=l[4],b=l[8],w=l[12],M=l[1],S=l[5],E=l[9],z=l[13],k=l[2],T=l[6],C=l[10],L=l[14],P=l[3],R=l[7],D=l[11],I=l[15];return q[0]=r*_+i*M+a*k+o*P,q[4]=r*y+i*S+a*T+o*R,q[8]=r*b+i*E+a*C+o*D,q[12]=r*w+i*z+a*L+o*I,q[1]=s*_+u*M+A*k+c*P,q[5]=s*y+u*S+A*T+c*R,q[9]=s*b+u*E+A*C+c*D,q[13]=s*w+u*z+A*L+c*I,q[2]=m*_+h*M+f*k+d*P,q[6]=m*y+h*S+f*T+d*R,q[10]=m*b+h*E+f*C+d*D,q[14]=m*w+h*z+f*L+d*I,q[3]=p*_+x*M+v*k+g*P,q[7]=p*y+x*S+v*T+g*R,q[11]=p*b+x*E+v*C+g*D,q[15]=p*w+x*z+v*L+g*I,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[4],l=e[8],q=e[12],r=e[1],i=e[5],a=e[9],o=e[13],s=e[2],u=e[6],A=e[10],c=e[14];return e[3]*(+q*a*u-l*o*u-q*i*A+n*o*A+l*i*c-n*a*c)+e[7]*(+t*a*c-t*o*A+q*r*A-l*r*c+l*o*s-q*a*s)+e[11]*(+t*o*u-t*i*c-q*r*u+n*r*c+q*i*s-n*o*s)+e[15]*(-l*i*s-t*a*u+t*i*A+l*r*u-n*r*A+n*a*s)}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}},{key:"setPosition",value:function(e,t,n){var l=this.elements;return e.isVector3?(l[12]=e.x,l[13]=e.y,l[14]=e.z):(l[12]=e,l[13]=t,l[14]=n),this}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],l=e[2],q=e[3],r=e[4],i=e[5],a=e[6],o=e[7],s=e[8],u=e[9],A=e[10],c=e[11],m=e[12],h=e[13],f=e[14],d=e[15],p=u*f*o-h*A*o+h*a*c-i*f*c-u*a*d+i*A*d,x=m*A*o-s*f*o-m*a*c+r*f*c+s*a*d-r*A*d,v=s*h*o-m*u*o+m*i*c-r*h*c-s*i*d+r*u*d,g=m*u*a-s*h*a-m*i*A+r*h*A+s*i*f-r*u*f,_=t*p+n*x+l*v+q*g;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var y=1/_;return e[0]=p*y,e[1]=(h*A*q-u*f*q-h*l*c+n*f*c+u*l*d-n*A*d)*y,e[2]=(i*f*q-h*a*q+h*l*o-n*f*o-i*l*d+n*a*d)*y,e[3]=(u*a*q-i*A*q-u*l*o+n*A*o+i*l*c-n*a*c)*y,e[4]=x*y,e[5]=(s*f*q-m*A*q+m*l*c-t*f*c-s*l*d+t*A*d)*y,e[6]=(m*a*q-r*f*q-m*l*o+t*f*o+r*l*d-t*a*d)*y,e[7]=(r*A*q-s*a*q+s*l*o-t*A*o-r*l*c+t*a*c)*y,e[8]=v*y,e[9]=(m*u*q-s*h*q-m*n*c+t*h*c+s*n*d-t*u*d)*y,e[10]=(r*h*q-m*i*q+m*n*o-t*h*o-r*n*d+t*i*d)*y,e[11]=(s*i*q-r*u*q-s*n*o+t*u*o+r*n*c-t*i*c)*y,e[12]=g*y,e[13]=(s*h*l-m*u*l+m*n*A-t*h*A-s*n*f+t*u*f)*y,e[14]=(m*i*l-r*h*l-m*n*a+t*h*a+r*n*f-t*i*f)*y,e[15]=(r*u*l-s*i*l+s*n*a-t*u*a-r*n*A+t*i*A)*y,this}},{key:"scale",value:function(e){var t=this.elements,n=e.x,l=e.y,q=e.z;return t[0]*=n,t[4]*=l,t[8]*=q,t[1]*=n,t[5]*=l,t[9]*=q,t[2]*=n,t[6]*=l,t[10]*=q,t[3]*=n,t[7]*=l,t[11]*=q,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],l=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,l))}},{key:"makeTranslation",value:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,t){var n=Math.cos(t),l=Math.sin(t),q=1-n,r=e.x,i=e.y,a=e.z,o=q*r,s=q*i;return this.set(o*r+n,o*i-l*a,o*a+l*i,0,o*i+l*a,s*i+n,s*a-l*r,0,o*a-l*i,s*a+l*r,q*a*a+n,0,0,0,0,1),this}},{key:"makeScale",value:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}},{key:"makeShear",value:function(e,t,n,l,q,r){return this.set(1,n,q,0,e,1,r,0,t,l,1,0,0,0,0,1),this}},{key:"compose",value:function(e,t,n){var l=this.elements,q=t._x,r=t._y,i=t._z,a=t._w,o=q+q,s=r+r,u=i+i,A=q*o,c=q*s,m=q*u,h=r*s,f=r*u,d=i*u,p=a*o,x=a*s,v=a*u,g=n.x,_=n.y,y=n.z;return l[0]=(1-(h+d))*g,l[1]=(c+v)*g,l[2]=(m-x)*g,l[3]=0,l[4]=(c-v)*_,l[5]=(1-(A+d))*_,l[6]=(f+p)*_,l[7]=0,l[8]=(m+x)*y,l[9]=(f-p)*y,l[10]=(1-(A+h))*y,l[11]=0,l[12]=e.x,l[13]=e.y,l[14]=e.z,l[15]=1,this}},{key:"decompose",value:function(e,t,n){var l=this.elements,q=Gt.set(l[0],l[1],l[2]).length(),r=Gt.set(l[4],l[5],l[6]).length(),i=Gt.set(l[8],l[9],l[10]).length();this.determinant()<0&&(q=-q),e.x=l[12],e.y=l[13],e.z=l[14],jt.copy(this);var a=1/q,o=1/r,s=1/i;return jt.elements[0]*=a,jt.elements[1]*=a,jt.elements[2]*=a,jt.elements[4]*=o,jt.elements[5]*=o,jt.elements[6]*=o,jt.elements[8]*=s,jt.elements[9]*=s,jt.elements[10]*=s,t.setFromRotationMatrix(jt),n.x=q,n.y=r,n.z=i,this}},{key:"makePerspective",value:function(e,t,n,l,q,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var i=this.elements,a=2*q/(t-e),o=2*q/(n-l),s=(t+e)/(t-e),u=(n+l)/(n-l),A=-(r+q)/(r-q),c=-2*r*q/(r-q);return i[0]=a,i[4]=0,i[8]=s,i[12]=0,i[1]=0,i[5]=o,i[9]=u,i[13]=0,i[2]=0,i[6]=0,i[10]=A,i[14]=c,i[3]=0,i[7]=0,i[11]=-1,i[15]=0,this}},{key:"makeOrthographic",value:function(e,t,n,l,q,r){var i=this.elements,a=1/(t-e),o=1/(n-l),s=1/(r-q),u=(t+e)*a,A=(n+l)*o,c=(r+q)*s;return i[0]=2*a,i[4]=0,i[8]=0,i[12]=-u,i[1]=0,i[5]=2*o,i[9]=0,i[13]=-A,i[2]=0,i[6]=0,i[10]=-2*s,i[14]=-c,i[3]=0,i[7]=0,i[11]=0,i[15]=1,this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,l=0;l<16;l++)if(t[l]!==n[l])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<16;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}]),e}();Ht.prototype.isMatrix4=!0;var Gt=new At,jt=new Ht,Vt=new At(0,0,0),Wt=new At(1,1,1),Qt=new At,Yt=new At,Xt=new At,Zt=new Ht,Jt=new ut,Kt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.DefaultOrder;O(this,e),this._x=t,this._y=n,this._z=l,this._order=q}return N(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n){var l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=t,this._z=n,this._order=l,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=e.elements,q=l[0],r=l[4],i=l[8],a=l[1],o=l[5],s=l[9],u=l[2],A=l[6],c=l[10];switch(t){case"XYZ":this._y=Math.asin(Ge(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-s,c),this._z=Math.atan2(-r,q)):(this._x=Math.atan2(A,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Ge(s,-1,1)),Math.abs(s)<.9999999?(this._y=Math.atan2(i,c),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-u,q),this._z=0);break;case"ZXY":this._x=Math.asin(Ge(A,-1,1)),Math.abs(A)<.9999999?(this._y=Math.atan2(-u,c),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,q));break;case"ZYX":this._y=Math.asin(-Ge(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(A,c),this._z=Math.atan2(a,q)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(Ge(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-s,o),this._y=Math.atan2(-u,q)):(this._x=0,this._y=Math.atan2(i,c));break;case"XZY":this._z=Math.asin(-Ge(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(A,o),this._y=Math.atan2(i,q)):(this._x=Math.atan2(-s,c),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,t,n){return Zt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Zt,t,n)}},{key:"setFromVector3",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,t)}},{key:"reorder",value:function(e){return Jt.setFromEuler(this),this.setFromQuaternion(Jt,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}},{key:"toVector3",value:function(e){return e?e.set(this._x,this._y,this._z):new At(this._x,this._y,this._z)}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}}]),e}();Kt.prototype.isEuler=!0,Kt.DefaultOrder="XYZ",Kt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var $t=function(){function e(){O(this,e),this.mask=1}return N(e,[{key:"set",value:function(e){this.mask=(1<<e|0)>>>0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!==(this.mask&e.mask)}},{key:"isEnabled",value:function(e){return 0!==(this.mask&(1<<e|0))}}]),e}(),en=0,tn=new At,nn=new ut,ln=new Ht,qn=new At,rn=new At,an=new At,on=new ut,sn=new At(1,0,0),un=new At(0,1,0),An=new At(0,0,1),cn={type:"added"},mn={type:"removed"},hn=function(e){R(n,e);var t=I(n);function n(){var e;O(this,n),e=t.call(this),Object.defineProperty(E(e),"id",{value:en++}),e.uuid=He(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=n.DefaultUp.clone();var l=new At,q=new Kt,r=new ut,i=new At(1,1,1);return q._onChange((function(){r.setFromEuler(q,!1)})),r._onChange((function(){q.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(E(e),{position:{configurable:!0,enumerable:!0,value:l},rotation:{configurable:!0,enumerable:!0,value:q},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ht},normalMatrix:{value:new Je}}),e.matrix=new Ht,e.matrixWorld=new Ht,e.matrixAutoUpdate=n.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.layers=new $t,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return N(n,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,t){this.quaternion.setFromAxisAngle(e,t)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,t){return nn.setFromAxisAngle(e,t),this.quaternion.multiply(nn),this}},{key:"rotateOnWorldAxis",value:function(e,t){return nn.setFromAxisAngle(e,t),this.quaternion.premultiply(nn),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(sn,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(un,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(An,e)}},{key:"translateOnAxis",value:function(e,t){return tn.copy(e).applyQuaternion(this.quaternion),this.position.add(tn.multiplyScalar(t)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(sn,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(un,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(An,e)}},{key:"localToWorld",value:function(e){return e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return e.applyMatrix4(ln.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,t,n){e.isVector3?qn.copy(e):qn.set(e,t,n);var l=this.parent;this.updateWorldMatrix(!0,!1),rn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ln.lookAt(rn,qn,this.up):ln.lookAt(qn,rn,this.up),this.quaternion.setFromRotationMatrix(ln),l&&(ln.extractRotation(l.matrixWorld),nn.setFromRotationMatrix(ln),this.quaternion.premultiply(nn.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(cn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(mn)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(mn)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),ln.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),ln.multiply(e.parent.matrixWorld)),e.applyMatrix4(ln),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,t){if(this[e]===t)return this;for(var n=0,l=this.children.length;n<l;n++){var q=this.children[n].getObjectByProperty(e,t);if(void 0!==q)return q}}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rn,e,an),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rn,on,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var t=this.children,n=0,l=t.length;n<l;n++)t[n].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,l=t.length;n<l;n++)t[n].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,l=t.length;n<l;n++)t[n].updateMatrixWorld(e)}},{key:"updateWorldMatrix",value:function(e,t){var n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var l=this.children,q=0,r=l.length;q<r;q++)l[q].updateWorldMatrix(!1,!0)}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var l={};function q(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(l.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?l.background=this.background.toJSON():this.background.isTexture&&(l.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(l.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){l.geometry=q(e.geometries,this.geometry);var r=this.geometry.parameters;if(void 0!==r&&void 0!==r.shapes){var i=r.shapes;if(Array.isArray(i))for(var a=0,o=i.length;a<o;a++){var s=i[a];q(e.shapes,s)}else q(e.shapes,i)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(q(e.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var u=[],A=0,c=this.material.length;A<c;A++)u.push(q(e.materials,this.material[A]));l.material=u}else l.material=q(e.materials,this.material);if(this.children.length>0){l.children=[];for(var m=0;m<this.children.length;m++)l.children.push(this.children[m].toJSON(e).object)}if(this.animations.length>0){l.animations=[];for(var h=0;h<this.animations.length;h++){var f=this.animations[h];l.animations.push(q(e.animations,f))}}if(t){var d=b(e.geometries),p=b(e.materials),x=b(e.textures),v=b(e.images),g=b(e.shapes),_=b(e.skeletons),y=b(e.animations);d.length>0&&(n.geometries=d),p.length>0&&(n.materials=p),x.length>0&&(n.textures=x),v.length>0&&(n.images=v),g.length>0&&(n.shapes=g),_.length>0&&(n.skeletons=_),y.length>0&&(n.animations=y)}return n.object=l,n;function b(e){var t=[];for(var n in e){var l=e[n];delete l.metadata,t.push(l)}return t}}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var l=e.children[n];this.add(l.clone())}return this}}]),n}(Ie);hn.DefaultUp=new At(0,1,0),hn.DefaultMatrixAutoUpdate=!0,hn.prototype.isObject3D=!0;var fn=new At,dn=new At,pn=new At,xn=new At,vn=new At,gn=new At,_n=new At,yn=new At,bn=new At,wn=new At,Mn=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new At;O(this,e),this.a=t,this.b=n,this.c=l}return N(e,[{key:"set",value:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}},{key:"setFromPointsAndIndices",value:function(e,t,n,l){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[l]),this}},{key:"setFromAttributeAndIndices",value:function(e,t,n,l){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,l),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return fn.subVectors(this.c,this.b),dn.subVectors(this.a,this.b),.5*fn.cross(dn).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(t){return e.getNormal(this.a,this.b,this.c,t)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(t,n){return e.getBarycoord(t,this.a,this.b,this.c,n)}},{key:"getUV",value:function(t,n,l,q,r){return e.getUV(t,this.a,this.b,this.c,n,l,q,r)}},{key:"containsPoint",value:function(t){return e.containsPoint(t,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(t){return e.isFrontFacing(this.a,this.b,this.c,t)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,t){var n,l,q=this.a,r=this.b,i=this.c;vn.subVectors(r,q),gn.subVectors(i,q),yn.subVectors(e,q);var a=vn.dot(yn),o=gn.dot(yn);if(a<=0&&o<=0)return t.copy(q);bn.subVectors(e,r);var s=vn.dot(bn),u=gn.dot(bn);if(s>=0&&u<=s)return t.copy(r);var A=a*u-s*o;if(A<=0&&a>=0&&s<=0)return n=a/(a-s),t.copy(q).addScaledVector(vn,n);wn.subVectors(e,i);var c=vn.dot(wn),m=gn.dot(wn);if(m>=0&&c<=m)return t.copy(i);var h=c*o-a*m;if(h<=0&&o>=0&&m<=0)return l=o/(o-m),t.copy(q).addScaledVector(gn,l);var f=s*m-c*u;if(f<=0&&u-s>=0&&c-m>=0)return _n.subVectors(i,r),l=(u-s)/(u-s+(c-m)),t.copy(r).addScaledVector(_n,l);var d=1/(f+h+A);return n=h*d,l=A*d,t.copy(q).addScaledVector(vn,n).addScaledVector(gn,l)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,t,n,l){l.subVectors(n,t),fn.subVectors(e,t),l.cross(fn);var q=l.lengthSq();return q>0?l.multiplyScalar(1/Math.sqrt(q)):l.set(0,0,0)}},{key:"getBarycoord",value:function(e,t,n,l,q){fn.subVectors(l,t),dn.subVectors(n,t),pn.subVectors(e,t);var r=fn.dot(fn),i=fn.dot(dn),a=fn.dot(pn),o=dn.dot(dn),s=dn.dot(pn),u=r*o-i*i;if(0===u)return q.set(-2,-1,-1);var A=1/u,c=(o*a-i*s)*A,m=(r*s-i*a)*A;return q.set(1-c-m,m,c)}},{key:"containsPoint",value:function(e,t,n,l){return this.getBarycoord(e,t,n,l,xn),xn.x>=0&&xn.y>=0&&xn.x+xn.y<=1}},{key:"getUV",value:function(e,t,n,l,q,r,i,a){return this.getBarycoord(e,t,n,l,xn),a.set(0,0),a.addScaledVector(q,xn.x),a.addScaledVector(r,xn.y),a.addScaledVector(i,xn.z),a}},{key:"isFrontFacing",value:function(e,t,n,l){return fn.subVectors(n,t),dn.subVectors(e,t),fn.cross(dn).dot(l)<0}}]),e}(),Sn=0,En=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),e=t.call(this),Object.defineProperty(E(e),"id",{value:Sn++}),e.uuid=He(),e.name="",e.type="Material",e.fog=!0,e.blending=1,e.side=0,e.vertexColors=!1,e.opacity=1,e.format=pe,e.transparent=!1,e.blendSrc=204,e.blendDst=205,e.blendEquation=X,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=3,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=519,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=Le,e.stencilZFail=Le,e.stencilZPass=Le,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return N(n,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!==e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n)if("shading"!==t){var l=this[t];void 0!==l?l&&l.isColor?l.set(n):l&&l.isVector3&&n&&n.isVector3?l.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function l(e){var t=[];for(var n in e){var l=e[n];delete l.metadata,t.push(l)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==pe&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){var q=l(e.textures),r=l(e.images);q.length>0&&(n.textures=q),r.length>0&&(n.images=r)}return n}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(null!==t){var l=t.length;n=new Array(l);for(var q=0;q!==l;++q)n[q]=t[q].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(Ie);En.prototype.isMaterial=!0;var zn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kn={h:0,s:0,l:0},Tn={h:0,s:0,l:0};function Cn(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Ln(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Pn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var Rn=function(){function e(t,n,l){return O(this,e),void 0===n&&void 0===l?this.set(t):this.setRGB(t,n,l)}return N(e,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}},{key:"setRGB",value:function(e,t,n){return this.r=e,this.g=t,this.b=n,this}},{key:"setHSL",value:function(e,t,n){if(e=je(e,1),t=Ge(t,0,1),n=Ge(n,0,1),0===t)this.r=this.g=this.b=n;else{var l=n<=.5?n*(1+t):n+t-n*t,q=2*n-l;this.r=Cn(q,l,e+1/3),this.g=Cn(q,l,e),this.b=Cn(q,l,e-1/3)}return this}},{key:"setStyle",value:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var l,q=n[1],r=n[2];switch(q){case"rgb":case"rgba":if(l=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(l[1],10))/255,this.g=Math.min(255,parseInt(l[2],10))/255,this.b=Math.min(255,parseInt(l[3],10))/255,t(l[4]),this;if(l=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(l[1],10))/100,this.g=Math.min(100,parseInt(l[2],10))/100,this.b=Math.min(100,parseInt(l[3],10))/100,t(l[4]),this;break;case"hsl":case"hsla":if(l=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){var i=parseFloat(l[1])/360,a=parseInt(l[2],10)/100,o=parseInt(l[3],10)/100;return t(l[4]),this.setHSL(i,a,o)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){var s=n[1],u=s.length;if(3===u)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}},{key:"setColorName",value:function(e){var t=zn[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copyGammaToLinear",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}},{key:"copyLinearToGamma",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}},{key:"convertGammaToLinear",value:function(e){return this.copyGammaToLinear(this,e),this}},{key:"convertLinearToGamma",value:function(e){return this.copyLinearToGamma(this,e),this}},{key:"copySRGBToLinear",value:function(e){return this.r=Ln(e.r),this.g=Ln(e.g),this.b=Ln(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=Pn(e.r),this.g=Pn(e.g),this.b=Pn(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}},{key:"getHexString",value:function(){return("000000"+this.getHex().toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var t,n,l=this.r,q=this.g,r=this.b,i=Math.max(l,q,r),a=Math.min(l,q,r),o=(a+i)/2;if(a===i)t=0,n=0;else{var s=i-a;switch(n=o<=.5?s/(i+a):s/(2-i-a),i){case l:t=(q-r)/s+(q<r?6:0);break;case q:t=(r-l)/s+2;break;case r:t=(l-q)/s+4}t/=6}return e.h=t,e.s=n,e.l=o,e}},{key:"getStyle",value:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}},{key:"offsetHSL",value:function(e,t,n){return this.getHSL(kn),kn.h+=e,kn.s+=t,kn.l+=n,this.setHSL(kn.h,kn.s,kn.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}},{key:"lerpColors",value:function(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}},{key:"lerpHSL",value:function(e,t){this.getHSL(kn),e.getHSL(Tn);var n=Ve(kn.h,Tn.h,t),l=Ve(kn.s,Tn.s,t),q=Ve(kn.l,Tn.l,t);return this.setHSL(n,l,q),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}},{key:"toJSON",value:function(){return this.getHex()}}]),e}();Rn.NAMES=zn,Rn.prototype.isColor=!0,Rn.prototype.r=1,Rn.prototype.g=1,Rn.prototype.b=1;var Dn=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshBasicMaterial",l.color=new Rn(16777215),l.map=null,l.lightMap=null,l.lightMapIntensity=1,l.aoMap=null,l.aoMapIntensity=1,l.specularMap=null,l.alphaMap=null,l.envMap=null,l.combine=0,l.reflectivity=1,l.refractionRatio=.98,l.wireframe=!1,l.wireframeLinewidth=1,l.wireframeLinecap="round",l.wireframeLinejoin="round",l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(En);Dn.prototype.isMeshBasicMaterial=!0;var In=new At,On=new Ze,Bn=function(){function e(t,n,l){if(O(this,e),Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=n,this.count=void 0!==t?t.length/n:0,this.normalized=!0===l,this.usage=Pe,this.updateRange={offset:0,count:-1},this.version=0}return N(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var l=0,q=this.itemSize;l<q;l++)this.array[e+l]=t.array[n+l];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"copyColorsArray",value:function(e){for(var t=this.array,n=0,l=0,q=e.length;l<q;l++){var r=e[l];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",l),r=new Rn),t[n++]=r.r,t[n++]=r.g,t[n++]=r.b}return this}},{key:"copyVector2sArray",value:function(e){for(var t=this.array,n=0,l=0,q=e.length;l<q;l++){var r=e[l];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",l),r=new Ze),t[n++]=r.x,t[n++]=r.y}return this}},{key:"copyVector3sArray",value:function(e){for(var t=this.array,n=0,l=0,q=e.length;l<q;l++){var r=e[l];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",l),r=new At),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z}return this}},{key:"copyVector4sArray",value:function(e){for(var t=this.array,n=0,l=0,q=e.length;l<q;l++){var r=e[l];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",l),r=new it),t[n++]=r.x,t[n++]=r.y,t[n++]=r.z,t[n++]=r.w}return this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var t=0,n=this.count;t<n;t++)On.fromBufferAttribute(this,t),On.applyMatrix3(e),this.setXY(t,On.x,On.y);else if(3===this.itemSize)for(var l=0,q=this.count;l<q;l++)In.fromBufferAttribute(this,l),In.applyMatrix3(e),this.setXYZ(l,In.x,In.y,In.z);return this}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.count;t<n;t++)In.x=this.getX(t),In.y=this.getY(t),In.z=this.getZ(t),In.applyMatrix4(e),this.setXYZ(t,In.x,In.y,In.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)In.x=this.getX(t),In.y=this.getY(t),In.z=this.getZ(t),In.applyNormalMatrix(e),this.setXYZ(t,In.x,In.y,In.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)In.x=this.getX(t),In.y=this.getY(t),In.z=this.getZ(t),In.transformDirection(e),this.setXYZ(t,In.x,In.y,In.z);return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"getX",value:function(e){return this.array[e*this.itemSize]}},{key:"setX",value:function(e,t){return this.array[e*this.itemSize]=t,this}},{key:"getY",value:function(e){return this.array[e*this.itemSize+1]}},{key:"setY",value:function(e,t){return this.array[e*this.itemSize+1]=t,this}},{key:"getZ",value:function(e){return this.array[e*this.itemSize+2]}},{key:"setZ",value:function(e,t){return this.array[e*this.itemSize+2]=t,this}},{key:"getW",value:function(e){return this.array[e*this.itemSize+3]}},{key:"setW",value:function(e,t){return this.array[e*this.itemSize+3]=t,this}},{key:"setXY",value:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,l){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=l,this}},{key:"setXYZW",value:function(e,t,n,l,q){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=l,this.array[e+3]=q,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Pe&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}]),e}();Bn.prototype.isBufferAttribute=!0;var Nn=function(e){R(n,e);var t=I(n);function n(e,l,q){return O(this,n),t.call(this,new Uint16Array(e),l,q)}return N(n)}(Bn),Un=function(e){R(n,e);var t=I(n);function n(e,l,q){return O(this,n),t.call(this,new Uint32Array(e),l,q)}return N(n)}(Bn),Fn=function(e){R(n,e);var t=I(n);function n(e,l,q){return O(this,n),t.call(this,new Uint16Array(e),l,q)}return N(n)}(Bn);Fn.prototype.isFloat16BufferAttribute=!0;var Hn=function(e){R(n,e);var t=I(n);function n(e,l,q){return O(this,n),t.call(this,new Float32Array(e),l,q)}return N(n)}(Bn),Gn=0,jn=new Ht,Vn=new hn,Wn=new At,Qn=new ht,Yn=new ht,Xn=new At,Zn=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),e=t.call(this),Object.defineProperty(E(e),"id",{value:Gn++}),e.uuid=He(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return N(n,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(Ke(e)>65535?Un:Nn)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,t){return this.attributes[e]=t,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:t,materialIndex:n})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,t){this.drawRange.start=e,this.drawRange.count=t}},{key:"applyMatrix4",value:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var l=(new Je).getNormalMatrix(e);n.applyNormalMatrix(l),n.needsUpdate=!0}var q=this.attributes.tangent;return void 0!==q&&(q.transformDirection(e),q.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return jn.makeRotationFromQuaternion(e),this.applyMatrix4(jn),this}},{key:"rotateX",value:function(e){return jn.makeRotationX(e),this.applyMatrix4(jn),this}},{key:"rotateY",value:function(e){return jn.makeRotationY(e),this.applyMatrix4(jn),this}},{key:"rotateZ",value:function(e){return jn.makeRotationZ(e),this.applyMatrix4(jn),this}},{key:"translate",value:function(e,t,n){return jn.makeTranslation(e,t,n),this.applyMatrix4(jn),this}},{key:"scale",value:function(e,t,n){return jn.makeScale(e,t,n),this.applyMatrix4(jn),this}},{key:"lookAt",value:function(e){return Vn.lookAt(e),Vn.updateMatrix(),this.applyMatrix4(Vn.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Wn).negate(),this.translate(Wn.x,Wn.y,Wn.z),this}},{key:"setFromPoints",value:function(e){for(var t=[],n=0,l=e.length;n<l;n++){var q=e[n];t.push(q.x,q.y,q.z||0)}return this.setAttribute("position",new Hn(t,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new ht);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new At(-1/0,-1/0,-1/0),new At(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,l=t.length;n<l;n++){var q=t[n];Qn.setFromBufferAttribute(q),this.morphTargetsRelative?(Xn.addVectors(this.boundingBox.min,Qn.min),this.boundingBox.expandByPoint(Xn),Xn.addVectors(this.boundingBox.max,Qn.max),this.boundingBox.expandByPoint(Xn)):(this.boundingBox.expandByPoint(Qn.min),this.boundingBox.expandByPoint(Qn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new Pt);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new At,1/0);if(e){var n=this.boundingSphere.center;if(Qn.setFromBufferAttribute(e),t)for(var l=0,q=t.length;l<q;l++){var r=t[l];Yn.setFromBufferAttribute(r),this.morphTargetsRelative?(Xn.addVectors(Qn.min,Yn.min),Qn.expandByPoint(Xn),Xn.addVectors(Qn.max,Yn.max),Qn.expandByPoint(Xn)):(Qn.expandByPoint(Yn.min),Qn.expandByPoint(Yn.max))}Qn.getCenter(n);for(var i=0,a=0,o=e.count;a<o;a++)Xn.fromBufferAttribute(e,a),i=Math.max(i,n.distanceToSquared(Xn));if(t)for(var s=0,u=t.length;s<u;s++)for(var A=t[s],c=this.morphTargetsRelative,m=0,h=A.count;m<h;m++)Xn.fromBufferAttribute(A,m),c&&(Wn.fromBufferAttribute(e,m),Xn.add(Wn)),i=Math.max(i,n.distanceToSquared(Xn));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var n=e.array,l=t.position.array,q=t.normal.array,r=t.uv.array,i=l.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Bn(new Float32Array(4*i),4));for(var a=t.tangent.array,o=[],s=[],u=0;u<i;u++)o[u]=new At,s[u]=new At;var A=new At,c=new At,m=new At,h=new Ze,f=new Ze,d=new Ze,p=new At,x=new At,v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(var g=0,_=v.length;g<_;++g)for(var y=v[g],b=y.start,w=b,M=b+y.count;w<M;w+=3)I(n[w+0],n[w+1],n[w+2]);for(var S=new At,E=new At,z=new At,k=new At,T=0,C=v.length;T<C;++T)for(var L=v[T],P=L.start,R=P,D=P+L.count;R<D;R+=3)O(n[R+0]),O(n[R+1]),O(n[R+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");function I(e,t,n){A.fromArray(l,3*e),c.fromArray(l,3*t),m.fromArray(l,3*n),h.fromArray(r,2*e),f.fromArray(r,2*t),d.fromArray(r,2*n),c.sub(A),m.sub(A),f.sub(h),d.sub(h);var q=1/(f.x*d.y-d.x*f.y);isFinite(q)&&(p.copy(c).multiplyScalar(d.y).addScaledVector(m,-f.y).multiplyScalar(q),x.copy(m).multiplyScalar(f.x).addScaledVector(c,-d.x).multiplyScalar(q),o[e].add(p),o[t].add(p),o[n].add(p),s[e].add(x),s[t].add(x),s[n].add(x))}function O(e){z.fromArray(q,3*e),k.copy(z);var t=o[e];S.copy(t),S.sub(z.multiplyScalar(z.dot(t))).normalize(),E.crossVectors(k,t);var n=E.dot(s[e])<0?-1:1;a[4*e]=S.x,a[4*e+1]=S.y,a[4*e+2]=S.z,a[4*e+3]=n}}},{key:"computeVertexNormals",value:function(){var e=this.index,t=this.getAttribute("position");if(void 0!==t){var n=this.getAttribute("normal");if(void 0===n)n=new Bn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(var l=0,q=n.count;l<q;l++)n.setXYZ(l,0,0,0);var r=new At,i=new At,a=new At,o=new At,s=new At,u=new At,A=new At,c=new At;if(e)for(var m=0,h=e.count;m<h;m+=3){var f=e.getX(m+0),d=e.getX(m+1),p=e.getX(m+2);r.fromBufferAttribute(t,f),i.fromBufferAttribute(t,d),a.fromBufferAttribute(t,p),A.subVectors(a,i),c.subVectors(r,i),A.cross(c),o.fromBufferAttribute(n,f),s.fromBufferAttribute(n,d),u.fromBufferAttribute(n,p),o.add(A),s.add(A),u.add(A),n.setXYZ(f,o.x,o.y,o.z),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,u.x,u.y,u.z)}else for(var x=0,v=t.count;x<v;x+=3)r.fromBufferAttribute(t,x+0),i.fromBufferAttribute(t,x+1),a.fromBufferAttribute(t,x+2),A.subVectors(a,i),c.subVectors(r,i),A.cross(c),n.setXYZ(x+0,A.x,A.y,A.z),n.setXYZ(x+1,A.x,A.y,A.z),n.setXYZ(x+2,A.x,A.y,A.z);this.normalizeNormals(),n.needsUpdate=!0}}},{key:"merge",value:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var l in n)if(void 0!==e.attributes[l])for(var q=n[l].array,r=e.attributes[l],i=r.array,a=r.itemSize*t,o=Math.min(i.length,q.length-a),s=0,u=a;s<o;s++,u++)q[u]=i[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)Xn.fromBufferAttribute(e,t),Xn.normalize(),e.setXYZ(t,Xn.x,Xn.y,Xn.z)}},{key:"toNonIndexed",value:function(){function e(e,t){for(var n=e.array,l=e.itemSize,q=e.normalized,r=new n.constructor(t.length*l),i=0,a=0,o=0,s=t.length;o<s;o++){i=e.isInterleavedBufferAttribute?t[o]*e.data.stride+e.offset:t[o]*l;for(var u=0;u<l;u++)r[a++]=n[i++]}return new Bn(r,l,q)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var t=new n,l=this.index.array,q=this.attributes;for(var r in q){var i=e(q[r],l);t.setAttribute(r,i)}var a=this.morphAttributes;for(var o in a){for(var s=[],u=a[o],A=0,c=u.length;A<c;A++){var m=e(u[A],l);s.push(m)}t.morphAttributes[o]=s}t.morphTargetsRelative=this.morphTargetsRelative;for(var h=this.groups,f=0,d=h.length;f<d;f++){var p=h[f];t.addGroup(p.start,p.count,p.materialIndex)}return t}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var l=this.index;null!==l&&(e.data.index={type:l.array.constructor.name,array:Array.prototype.slice.call(l.array)});var q=this.attributes;for(var r in q){var i=q[r];e.data.attributes[r]=i.toJSON(e.data)}var a={},o=!1;for(var s in this.morphAttributes){for(var u=this.morphAttributes[s],A=[],c=0,m=u.length;c<m;c++){var h=u[c];A.push(h.toJSON(e.data))}A.length>0&&(a[s]=A,o=!0)}o&&(e.data.morphAttributes=a,e.data.morphTargetsRelative=this.morphTargetsRelative);var f=this.groups;f.length>0&&(e.data.groups=JSON.parse(JSON.stringify(f)));var d=this.boundingSphere;return null!==d&&(e.data.boundingSphere={center:d.center.toArray(),radius:d.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var t={};this.name=e.name;var n=e.index;null!==n&&this.setIndex(n.clone(t));var l=e.attributes;for(var q in l){var r=l[q];this.setAttribute(q,r.clone(t))}var i=e.morphAttributes;for(var a in i){for(var o=[],s=i[a],u=0,A=s.length;u<A;u++)o.push(s[u].clone(t));this.morphAttributes[a]=o}this.morphTargetsRelative=e.morphTargetsRelative;for(var c=e.groups,m=0,h=c.length;m<h;m++){var f=c[m];this.addGroup(f.start,f.count,f.materialIndex)}var d=e.boundingBox;null!==d&&(this.boundingBox=d.clone());var p=e.boundingSphere;return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Ie);Zn.prototype.isBufferGeometry=!0;var Jn=new Ht,Kn=new Ft,$n=new Pt,el=new At,tl=new At,nl=new At,ll=new At,ql=new At,rl=new At,il=new At,al=new At,ol=new At,sl=new Ze,ul=new Ze,Al=new Ze,cl=new At,ml=new At,hl=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Zn,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Dn;return O(this,n),(e=t.call(this)).type="Mesh",e.geometry=l,e.material=q,e.updateMorphTargets(),e}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var l=t[n[0]];if(void 0!==l){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var q=0,r=l.length;q<r;q++){var i=l[q].name||String(q);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=q}}}}else{var a=e.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"raycast",value:function(e,t){var n,l=this.geometry,q=this.material,r=this.matrixWorld;if(void 0!==q&&(null===l.boundingSphere&&l.computeBoundingSphere(),$n.copy(l.boundingSphere),$n.applyMatrix4(r),!1!==e.ray.intersectsSphere($n)&&(Jn.copy(r).invert(),Kn.copy(e.ray).applyMatrix4(Jn),null===l.boundingBox||!1!==Kn.intersectsBox(l.boundingBox))))if(l.isBufferGeometry){var i=l.index,a=l.attributes.position,o=l.morphAttributes.position,s=l.morphTargetsRelative,u=l.attributes.uv,A=l.attributes.uv2,c=l.groups,m=l.drawRange;if(null!==i)if(Array.isArray(q))for(var h=0,f=c.length;h<f;h++)for(var d=c[h],p=q[d.materialIndex],x=Math.max(d.start,m.start),v=Math.min(i.count,Math.min(d.start+d.count,m.start+m.count));x<v;x+=3){var g=i.getX(x),_=i.getX(x+1),y=i.getX(x+2);(n=fl(this,p,e,Kn,a,o,s,u,A,g,_,y))&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=d.materialIndex,t.push(n))}else for(var b=Math.max(0,m.start),w=Math.min(i.count,m.start+m.count);b<w;b+=3){var M=i.getX(b),S=i.getX(b+1),E=i.getX(b+2);(n=fl(this,q,e,Kn,a,o,s,u,A,M,S,E))&&(n.faceIndex=Math.floor(b/3),t.push(n))}else if(void 0!==a)if(Array.isArray(q))for(var z=0,k=c.length;z<k;z++)for(var T=c[z],C=q[T.materialIndex],L=Math.max(T.start,m.start),P=Math.min(a.count,Math.min(T.start+T.count,m.start+m.count));L<P;L+=3){(n=fl(this,C,e,Kn,a,o,s,u,A,L,L+1,L+2))&&(n.faceIndex=Math.floor(L/3),n.face.materialIndex=T.materialIndex,t.push(n))}else for(var R=Math.max(0,m.start),D=Math.min(a.count,m.start+m.count);R<D;R+=3){(n=fl(this,q,e,Kn,a,o,s,u,A,R,R+1,R+2))&&(n.faceIndex=Math.floor(R/3),t.push(n))}}else l.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}]),n}(hn);function fl(e,t,n,l,q,r,i,a,o,s,u,A){el.fromBufferAttribute(q,s),tl.fromBufferAttribute(q,u),nl.fromBufferAttribute(q,A);var c=e.morphTargetInfluences;if(r&&c){il.set(0,0,0),al.set(0,0,0),ol.set(0,0,0);for(var m=0,h=r.length;m<h;m++){var f=c[m],d=r[m];0!==f&&(ll.fromBufferAttribute(d,s),ql.fromBufferAttribute(d,u),rl.fromBufferAttribute(d,A),i?(il.addScaledVector(ll,f),al.addScaledVector(ql,f),ol.addScaledVector(rl,f)):(il.addScaledVector(ll.sub(el),f),al.addScaledVector(ql.sub(tl),f),ol.addScaledVector(rl.sub(nl),f)))}el.add(il),tl.add(al),nl.add(ol)}e.isSkinnedMesh&&(e.boneTransform(s,el),e.boneTransform(u,tl),e.boneTransform(A,nl));var p=function(e,t,n,l,q,r,i,a){if(null===(1===t.side?l.intersectTriangle(i,r,q,!0,a):l.intersectTriangle(q,r,i,2!==t.side,a)))return null;ml.copy(a),ml.applyMatrix4(e.matrixWorld);var o=n.ray.origin.distanceTo(ml);return o<n.near||o>n.far?null:{distance:o,point:ml.clone(),object:e}}(e,t,n,l,el,tl,nl,cl);if(p){a&&(sl.fromBufferAttribute(a,s),ul.fromBufferAttribute(a,u),Al.fromBufferAttribute(a,A),p.uv=Mn.getUV(cl,el,tl,nl,sl,ul,Al,new Ze)),o&&(sl.fromBufferAttribute(o,s),ul.fromBufferAttribute(o,u),Al.fromBufferAttribute(o,A),p.uv2=Mn.getUV(cl,el,tl,nl,sl,ul,Al,new Ze));var x={a:s,b:u,c:A,normal:new At,materialIndex:0};Mn.getNormal(el,tl,nl,x.normal),p.face=x}return p}hl.prototype.isMesh=!0;var dl=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;O(this,n),(e=t.call(this)).type="BoxGeometry",e.parameters={width:l,height:q,depth:r,widthSegments:i,heightSegments:a,depthSegments:o};var s=E(e);i=Math.floor(i),a=Math.floor(a),o=Math.floor(o);var u=[],A=[],c=[],m=[],h=0,f=0;function d(e,t,n,l,q,r,i,a,o,d,p){for(var x=r/o,v=i/d,g=r/2,_=i/2,y=a/2,b=o+1,w=d+1,M=0,S=0,E=new At,z=0;z<w;z++)for(var k=z*v-_,T=0;T<b;T++){var C=T*x-g;E[e]=C*l,E[t]=k*q,E[n]=y,A.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[n]=a>0?1:-1,c.push(E.x,E.y,E.z),m.push(T/o),m.push(1-z/d),M+=1}for(var L=0;L<d;L++)for(var P=0;P<o;P++){var R=h+P+b*L,D=h+P+b*(L+1),I=h+(P+1)+b*(L+1),O=h+(P+1)+b*L;u.push(R,D,O),u.push(D,I,O),S+=6}s.addGroup(f,S,p),f+=S,h+=M}return d("z","y","x",-1,-1,r,q,l,o,a,0),d("z","y","x",1,-1,r,q,-l,o,a,1),d("x","z","y",1,1,l,r,q,i,o,2),d("x","z","y",1,-1,l,r,-q,i,o,3),d("x","y","z",1,-1,l,q,r,i,a,4),d("x","y","z",-1,-1,l,q,-r,i,a,5),e.setIndex(u),e.setAttribute("position",new Hn(A,3)),e.setAttribute("normal",new Hn(c,3)),e.setAttribute("uv",new Hn(m,2)),e}return N(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),n}(Zn);function pl(e){var t={};for(var n in e)for(var l in t[n]={},e[n]){var q=e[n][l];q&&(q.isColor||q.isMatrix3||q.isMatrix4||q.isVector2||q.isVector3||q.isVector4||q.isTexture||q.isQuaternion)?t[n][l]=q.clone():Array.isArray(q)?t[n][l]=q.slice():t[n][l]=q}return t}function xl(e){for(var t={},n=0;n<e.length;n++){var l=pl(e[n]);for(var q in l)t[q]=l[q]}return t}var vl={clone:pl,merge:xl},gl=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="ShaderMaterial",l.defines={},l.uniforms={},l.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",l.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",l.linewidth=1,l.wireframe=!1,l.wireframeLinewidth=1,l.fog=!1,l.lights=!1,l.clipping=!1,l.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},l.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},l.index0AttributeName=void 0,l.uniformsNeedUpdate=!1,l.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),l.setValues(e)),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=pl(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);for(var l in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){var q=this.uniforms[l].value;q&&q.isTexture?t.uniforms[l]={type:"t",value:q.toJSON(e).uuid}:q&&q.isColor?t.uniforms[l]={type:"c",value:q.getHex()}:q&&q.isVector2?t.uniforms[l]={type:"v2",value:q.toArray()}:q&&q.isVector3?t.uniforms[l]={type:"v3",value:q.toArray()}:q&&q.isVector4?t.uniforms[l]={type:"v4",value:q.toArray()}:q&&q.isMatrix3?t.uniforms[l]={type:"m3",value:q.toArray()}:q&&q.isMatrix4?t.uniforms[l]={type:"m4",value:q.toArray()}:t.uniforms[l]={value:q}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var r={};for(var i in this.extensions)!0===this.extensions[i]&&(r[i]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}]),n}(En);gl.prototype.isShaderMaterial=!0;var _l=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="Camera",e.matrixWorldInverse=new Ht,e.projectionMatrix=new Ht,e.projectionMatrixInverse=new Ht,e}return N(n,[{key:"copy",value:function(e,t){return C(k(n.prototype),"copy",this).call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){C(k(n.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,t){C(k(n.prototype),"updateWorldMatrix",this).call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),n}(hn);_l.prototype.isCamera=!0;var yl=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return O(this,n),(e=t.call(this)).type="PerspectiveCamera",e.fov=l,e.zoom=1,e.near=r,e.far=i,e.focus=10,e.aspect=q,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return N(n,[{key:"copy",value:function(e,t){return C(k(n.prototype),"copy",this).call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*Fe*Math.atan(t),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*Ue*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*Fe*Math.atan(Math.tan(.5*Ue*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,t,n,l,q,r){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=l,this.view.width=q,this.view.height=r,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,t=e*Math.tan(.5*Ue*this.fov)/this.zoom,n=2*t,l=this.aspect*n,q=-.5*l,r=this.view;if(null!==this.view&&this.view.enabled){var i=r.fullWidth,a=r.fullHeight;q+=r.offsetX*l/i,t-=r.offsetY*n/a,l*=r.width/i,n*=r.height/a}var o=this.filmOffset;0!==o&&(q+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(q,q+l,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}]),n}(_l);yl.prototype.isPerspectiveCamera=!0;var bl=90,wl=function(e){R(n,e);var t=I(n);function n(e,l,q){var r;if(O(this,n),(r=t.call(this)).type="CubeCamera",!0!==q.isWebGLCubeRenderTarget)return console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."),z(r);r.renderTarget=q;var i=new yl(bl,1,e,l);i.layers=r.layers,i.up.set(0,-1,0),i.lookAt(new At(1,0,0)),r.add(i);var a=new yl(bl,1,e,l);a.layers=r.layers,a.up.set(0,-1,0),a.lookAt(new At(-1,0,0)),r.add(a);var o=new yl(bl,1,e,l);o.layers=r.layers,o.up.set(0,0,1),o.lookAt(new At(0,1,0)),r.add(o);var s=new yl(bl,1,e,l);s.layers=r.layers,s.up.set(0,0,-1),s.lookAt(new At(0,-1,0)),r.add(s);var u=new yl(bl,1,e,l);u.layers=r.layers,u.up.set(0,-1,0),u.lookAt(new At(0,0,1)),r.add(u);var A=new yl(bl,1,e,l);return A.layers=r.layers,A.up.set(0,-1,0),A.lookAt(new At(0,0,-1)),r.add(A),r}return N(n,[{key:"update",value:function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,l=M(this.children,6),q=l[0],r=l[1],i=l[2],a=l[3],o=l[4],s=l[5],u=e.xr.enabled,A=e.getRenderTarget();e.xr.enabled=!1;var c=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,q),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,i),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=c,e.setRenderTarget(n,5),e.render(t,s),e.setRenderTarget(A),e.xr.enabled=u}}]),n}(hn),Ml=function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a,o,s,u,A){var c;return O(this,n),e=void 0!==e?e:[],l=void 0!==l?l:Z,(c=t.call(this,e,l,q,r,i,a,o,s,u,A)).flipY=!1,c}return N(n,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),n}(qt);Ml.prototype.isCubeTexture=!0;var Sl=function(e){R(n,e);var t=I(n);function n(e,l,q){var r;return O(this,n),Number.isInteger(l)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),l=q),r=t.call(this,e,e,l),l=l||{},r.texture=new Ml(void 0,l.mapping,l.wrapS,l.wrapT,l.magFilter,l.minFilter,l.format,l.type,l.anisotropy,l.encoding),r.texture.isRenderTargetTexture=!0,r.texture.generateMipmaps=void 0!==l.generateMipmaps&&l.generateMipmaps,r.texture.minFilter=void 0!==l.minFilter?l.minFilter:oe,r.texture._needsFlipEnvMap=!1,r}return N(n,[{key:"fromEquirectangularTexture",value:function(e,t){this.texture.type=t.type,this.texture.format=pe,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={tEquirect:{value:null}},l="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",q="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",r=new dl(5,5,5),i=new gl({name:"CubemapFromEquirect",uniforms:pl(n),vertexShader:l,fragmentShader:q,side:1,blending:0});i.uniforms.tEquirect.value=t;var a=new hl(r,i),o=t.minFilter;return t.minFilter===se&&(t.minFilter=oe),new wl(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}},{key:"clear",value:function(e,t,n,l){for(var q=e.getRenderTarget(),r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,l);e.setRenderTarget(q)}}]),n}(at);Sl.prototype.isWebGLCubeRenderTarget=!0;var El=new At,zl=new At,kl=new Je,Tl=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At(1,0,0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;O(this,e),this.normal=t,this.constant=n}return N(e,[{key:"set",value:function(e,t){return this.normal.copy(e),this.constant=t,this}},{key:"setComponents",value:function(e,t,n,l){return this.normal.set(e,t,n),this.constant=l,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,t,n){var l=El.subVectors(n,t).cross(zl.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(l,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,t){var n=e.delta(El),l=this.normal.dot(n);if(0===l)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;var q=-(e.start.dot(this.normal)+this.constant)/l;return q<0||q>1?null:t.copy(n).multiplyScalar(q).add(e.start)}},{key:"intersectsLine",value:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,t){var n=t||kl.getNormalMatrix(e),l=this.coplanarPoint(El).applyMatrix4(e),q=this.normal.applyMatrix3(n).normalize();return this.constant=-l.dot(q),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();Tl.prototype.isPlane=!0;var Cl=new Pt,Ll=new At,Pl=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Tl,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Tl,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Tl,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Tl,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Tl,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new Tl;O(this,e),this.planes=[t,n,l,q,r,i]}return N(e,[{key:"set",value:function(e,t,n,l,q,r){var i=this.planes;return i[0].copy(e),i[1].copy(t),i[2].copy(n),i[3].copy(l),i[4].copy(q),i[5].copy(r),this}},{key:"copy",value:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this}},{key:"setFromProjectionMatrix",value:function(e){var t=this.planes,n=e.elements,l=n[0],q=n[1],r=n[2],i=n[3],a=n[4],o=n[5],s=n[6],u=n[7],A=n[8],c=n[9],m=n[10],h=n[11],f=n[12],d=n[13],p=n[14],x=n[15];return t[0].setComponents(i-l,u-a,h-A,x-f).normalize(),t[1].setComponents(i+l,u+a,h+A,x+f).normalize(),t[2].setComponents(i+q,u+o,h+c,x+d).normalize(),t[3].setComponents(i-q,u-o,h-c,x-d).normalize(),t[4].setComponents(i-r,u-s,h-m,x-p).normalize(),t[5].setComponents(i+r,u+s,h+m,x+p).normalize(),this}},{key:"intersectsObject",value:function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Cl.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Cl)}},{key:"intersectsSprite",value:function(e){return Cl.center.set(0,0,0),Cl.radius=.7071067811865476,Cl.applyMatrix4(e.matrixWorld),this.intersectsSphere(Cl)}},{key:"intersectsSphere",value:function(e){for(var t=this.planes,n=e.center,l=-e.radius,q=0;q<6;q++){if(t[q].distanceToPoint(n)<l)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var t=this.planes,n=0;n<6;n++){var l=t[n];if(Ll.x=l.normal.x>0?e.max.x:e.min.x,Ll.y=l.normal.y>0?e.max.y:e.min.y,Ll.z=l.normal.z>0?e.max.z:e.min.z,l.distanceToPoint(Ll)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function Rl(){var e=null,t=!1,n=null,l=null;function q(t,r){n(t,r),l=e.requestAnimationFrame(q)}return{start:function(){!0!==t&&null!==n&&(l=e.requestAnimationFrame(q),t=!0)},stop:function(){e.cancelAnimationFrame(l),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Dl(e,t){var n=t.isWebGL2,l=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),l.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var n=l.get(t);n&&(e.deleteBuffer(n.buffer),l.delete(t))},update:function(t,q){if(t.isGLBufferAttribute){var r=l.get(t);(!r||r.version<t.version)&&l.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version})}else{t.isInterleavedBufferAttribute&&(t=t.data);var i=l.get(t);void 0===i?l.set(t,function(t,l){var q=t.array,r=t.usage,i=e.createBuffer();e.bindBuffer(l,i),e.bufferData(l,q,r),t.onUploadCallback();var a=5126;return q instanceof Float32Array?a=5126:q instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):q instanceof Uint16Array?t.isFloat16BufferAttribute?n?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:q instanceof Int16Array?a=5122:q instanceof Uint32Array?a=5125:q instanceof Int32Array?a=5124:q instanceof Int8Array?a=5120:(q instanceof Uint8Array||q instanceof Uint8ClampedArray)&&(a=5121),{buffer:i,type:a,bytesPerElement:q.BYTES_PER_ELEMENT,version:t.version}}(t,q)):i.version<t.version&&(!function(t,l,q){var r=l.array,i=l.updateRange;e.bindBuffer(q,t),-1===i.count?e.bufferSubData(q,0,r):(n?e.bufferSubData(q,i.offset*r.BYTES_PER_ELEMENT,r,i.offset,i.count):e.bufferSubData(q,i.offset*r.BYTES_PER_ELEMENT,r.subarray(i.offset,i.offset+i.count)),i.count=-1)}(i.buffer,t,q),i.version=t.version)}}}}var Il=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;O(this,n),(e=t.call(this)).type="PlaneGeometry",e.parameters={width:l,height:q,widthSegments:r,heightSegments:i};for(var a=l/2,o=q/2,s=Math.floor(r),u=Math.floor(i),A=s+1,c=u+1,m=l/s,h=q/u,f=[],d=[],p=[],x=[],v=0;v<c;v++)for(var g=v*h-o,_=0;_<A;_++){var y=_*m-a;d.push(y,-g,0),p.push(0,0,1),x.push(_/s),x.push(1-v/u)}for(var b=0;b<u;b++)for(var w=0;w<s;w++){var M=w+A*b,S=w+A*(b+1),E=w+1+A*(b+1),z=w+1+A*b;f.push(M,S,z),f.push(S,E,z)}return e.setIndex(f),e.setAttribute("position",new Hn(d,3)),e.setAttribute("normal",new Hn(p,3)),e.setAttribute("uv",new Hn(x,2)),e}return N(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.widthSegments,e.heightSegments)}}]),n}(Zn),Ol={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Bl={common:{diffuse:{value:new Rn(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Je},uv2Transform:{value:new Je},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ze(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Rn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Rn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Je}},sprite:{diffuse:{value:new Rn(16777215)},opacity:{value:1},center:{value:new Ze(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Je}}},Nl={basic:{uniforms:xl([Bl.common,Bl.specularmap,Bl.envmap,Bl.aomap,Bl.lightmap,Bl.fog]),vertexShader:Ol.meshbasic_vert,fragmentShader:Ol.meshbasic_frag},lambert:{uniforms:xl([Bl.common,Bl.specularmap,Bl.envmap,Bl.aomap,Bl.lightmap,Bl.emissivemap,Bl.fog,Bl.lights,{emissive:{value:new Rn(0)}}]),vertexShader:Ol.meshlambert_vert,fragmentShader:Ol.meshlambert_frag},phong:{uniforms:xl([Bl.common,Bl.specularmap,Bl.envmap,Bl.aomap,Bl.lightmap,Bl.emissivemap,Bl.bumpmap,Bl.normalmap,Bl.displacementmap,Bl.fog,Bl.lights,{emissive:{value:new Rn(0)},specular:{value:new Rn(1118481)},shininess:{value:30}}]),vertexShader:Ol.meshphong_vert,fragmentShader:Ol.meshphong_frag},standard:{uniforms:xl([Bl.common,Bl.envmap,Bl.aomap,Bl.lightmap,Bl.emissivemap,Bl.bumpmap,Bl.normalmap,Bl.displacementmap,Bl.roughnessmap,Bl.metalnessmap,Bl.fog,Bl.lights,{emissive:{value:new Rn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ol.meshphysical_vert,fragmentShader:Ol.meshphysical_frag},toon:{uniforms:xl([Bl.common,Bl.aomap,Bl.lightmap,Bl.emissivemap,Bl.bumpmap,Bl.normalmap,Bl.displacementmap,Bl.gradientmap,Bl.fog,Bl.lights,{emissive:{value:new Rn(0)}}]),vertexShader:Ol.meshtoon_vert,fragmentShader:Ol.meshtoon_frag},matcap:{uniforms:xl([Bl.common,Bl.bumpmap,Bl.normalmap,Bl.displacementmap,Bl.fog,{matcap:{value:null}}]),vertexShader:Ol.meshmatcap_vert,fragmentShader:Ol.meshmatcap_frag},points:{uniforms:xl([Bl.points,Bl.fog]),vertexShader:Ol.points_vert,fragmentShader:Ol.points_frag},dashed:{uniforms:xl([Bl.common,Bl.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ol.linedashed_vert,fragmentShader:Ol.linedashed_frag},depth:{uniforms:xl([Bl.common,Bl.displacementmap]),vertexShader:Ol.depth_vert,fragmentShader:Ol.depth_frag},normal:{uniforms:xl([Bl.common,Bl.bumpmap,Bl.normalmap,Bl.displacementmap,{opacity:{value:1}}]),vertexShader:Ol.meshnormal_vert,fragmentShader:Ol.meshnormal_frag},sprite:{uniforms:xl([Bl.sprite,Bl.fog]),vertexShader:Ol.sprite_vert,fragmentShader:Ol.sprite_frag},background:{uniforms:{uvTransform:{value:new Je},t2D:{value:null}},vertexShader:Ol.background_vert,fragmentShader:Ol.background_frag},cube:{uniforms:xl([Bl.envmap,{opacity:{value:1}}]),vertexShader:Ol.cube_vert,fragmentShader:Ol.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ol.equirect_vert,fragmentShader:Ol.equirect_frag},distanceRGBA:{uniforms:xl([Bl.common,Bl.displacementmap,{referencePosition:{value:new At},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ol.distanceRGBA_vert,fragmentShader:Ol.distanceRGBA_frag},shadow:{uniforms:xl([Bl.lights,Bl.fog,{color:{value:new Rn(0)},opacity:{value:1}}]),vertexShader:Ol.shadow_vert,fragmentShader:Ol.shadow_frag}};function Ul(e,t,n,l,q){var r,i,a=new Rn(0),o=0,s=null,u=0,A=null;function c(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,q)}return{getClearColor:function(){return a},setClearColor:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;a.set(e),c(a,o=t)},getClearAlpha:function(){return o},setClearAlpha:function(e){c(a,o=e)},render:function(n,q){var m=!1,h=!0===q.isScene?q.background:null;h&&h.isTexture&&(h=t.get(h));var f=e.xr,d=f.getSession&&f.getSession();d&&"additive"===d.environmentBlendMode&&(h=null),null===h?c(a,o):h&&h.isColor&&(c(h,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),h&&(h.isCubeTexture||h.mapping===ee)?(void 0===i&&((i=new hl(new dl(1,1,1),new gl({name:"BackgroundCubeMaterial",uniforms:pl(Nl.cube.uniforms),vertexShader:Nl.cube.vertexShader,fragmentShader:Nl.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),i.geometry.deleteAttribute("uv"),i.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(i.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),l.update(i)),i.material.uniforms.envMap.value=h,i.material.uniforms.flipEnvMap.value=h.isCubeTexture&&!1===h.isRenderTargetTexture?-1:1,s===h&&u===h.version&&A===e.toneMapping||(i.material.needsUpdate=!0,s=h,u=h.version,A=e.toneMapping),n.unshift(i,i.geometry,i.material,0,0,null)):h&&h.isTexture&&(void 0===r&&((r=new hl(new Il(2,2),new gl({name:"BackgroundMaterial",uniforms:pl(Nl.background.uniforms),vertexShader:Nl.background.vertexShader,fragmentShader:Nl.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(r.material,"map",{get:function(){return this.uniforms.t2D.value}}),l.update(r)),r.material.uniforms.t2D.value=h,!0===h.matrixAutoUpdate&&h.updateMatrix(),r.material.uniforms.uvTransform.value.copy(h.matrix),s===h&&u===h.version&&A===e.toneMapping||(r.material.needsUpdate=!0,s=h,u=h.version,A=e.toneMapping),n.unshift(r,r.geometry,r.material,0,0,null))}}}function Fl(e,t,n,l){var q=e.getParameter(34921),r=l.isWebGL2?null:t.get("OES_vertex_array_object"),i=l.isWebGL2||null!==r,a={},o=c(null),s=o;function u(t){return l.isWebGL2?e.bindVertexArray(t):r.bindVertexArrayOES(t)}function A(t){return l.isWebGL2?e.deleteVertexArray(t):r.deleteVertexArrayOES(t)}function c(e){for(var t=[],n=[],l=[],r=0;r<q;r++)t[r]=0,n[r]=0,l[r]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:l,object:e,attributes:{},index:null}}function m(){for(var e=s.newAttributes,t=0,n=e.length;t<n;t++)e[t]=0}function h(e){f(e,0)}function f(n,q){var r=s.newAttributes,i=s.enabledAttributes,a=s.attributeDivisors;(r[n]=1,0===i[n]&&(e.enableVertexAttribArray(n),i[n]=1),a[n]!==q)&&((l.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[l.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,q),a[n]=q)}function d(){for(var t=s.newAttributes,n=s.enabledAttributes,l=0,q=n.length;l<q;l++)n[l]!==t[l]&&(e.disableVertexAttribArray(l),n[l]=0)}function p(t,n,q,r,i,a){!0!==l.isWebGL2||5124!==q&&5125!==q?e.vertexAttribPointer(t,n,q,r,i,a):e.vertexAttribIPointer(t,n,q,i,a)}function x(){v(),s!==o&&u((s=o).object)}function v(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function(q,o,A,x,v){var g=!1;if(i){var _=function(t,n,q){var i=!0===q.wireframe,o=a[t.id];void 0===o&&(o={},a[t.id]=o);var s=o[n.id];void 0===s&&(s={},o[n.id]=s);var u=s[i];void 0===u&&(u=c(l.isWebGL2?e.createVertexArray():r.createVertexArrayOES()),s[i]=u);return u}(x,A,o);s!==_&&u((s=_).object),g=function(e,t){var n=s.attributes,l=e.attributes,q=0;for(var r in l){var i=n[r],a=l[r];if(void 0===i)return!0;if(i.attribute!==a)return!0;if(i.data!==a.data)return!0;q++}return s.attributesNum!==q||s.index!==t}(x,v),g&&function(e,t){var n={},l=e.attributes,q=0;for(var r in l){var i=l[r],a={};a.attribute=i,i.data&&(a.data=i.data),n[r]=a,q++}s.attributes=n,s.attributesNum=q,s.index=t}(x,v)}else{var y=!0===o.wireframe;s.geometry===x.id&&s.program===A.id&&s.wireframe===y||(s.geometry=x.id,s.program=A.id,s.wireframe=y,g=!0)}!0===q.isInstancedMesh&&(g=!0),null!==v&&n.update(v,34963),g&&(!function(q,r,i,a){if(!1===l.isWebGL2&&(q.isInstancedMesh||a.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;m();var o=a.attributes,s=i.getAttributes(),u=r.defaultAttributeValues;for(var A in s){var c=s[A];if(c.location>=0){var x=o[A];if(void 0===x&&("instanceMatrix"===A&&q.instanceMatrix&&(x=q.instanceMatrix),"instanceColor"===A&&q.instanceColor&&(x=q.instanceColor)),void 0!==x){var v=x.normalized,g=x.itemSize,_=n.get(x);if(void 0===_)continue;var y=_.buffer,b=_.type,w=_.bytesPerElement;if(x.isInterleavedBufferAttribute){var M=x.data,S=M.stride,E=x.offset;if(M&&M.isInstancedInterleavedBuffer){for(var z=0;z<c.locationSize;z++)f(c.location+z,M.meshPerAttribute);!0!==q.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=M.meshPerAttribute*M.count)}else for(var k=0;k<c.locationSize;k++)h(c.location+k);e.bindBuffer(34962,y);for(var T=0;T<c.locationSize;T++)p(c.location+T,g/c.locationSize,b,v,S*w,(E+g/c.locationSize*T)*w)}else{if(x.isInstancedBufferAttribute){for(var C=0;C<c.locationSize;C++)f(c.location+C,x.meshPerAttribute);!0!==q.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=x.meshPerAttribute*x.count)}else for(var L=0;L<c.locationSize;L++)h(c.location+L);e.bindBuffer(34962,y);for(var P=0;P<c.locationSize;P++)p(c.location+P,g/c.locationSize,b,v,g*w,g/c.locationSize*P*w)}}else if(void 0!==u){var R=u[A];if(void 0!==R)switch(R.length){case 2:e.vertexAttrib2fv(c.location,R);break;case 3:e.vertexAttrib3fv(c.location,R);break;case 4:e.vertexAttrib4fv(c.location,R);break;default:e.vertexAttrib1fv(c.location,R)}}}}d()}(q,o,A,x),null!==v&&e.bindBuffer(34963,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){for(var e in x(),a){var t=a[e];for(var n in t){var l=t[n];for(var q in l)A(l[q].object),delete l[q];delete t[n]}delete a[e]}},releaseStatesOfGeometry:function(e){if(void 0!==a[e.id]){var t=a[e.id];for(var n in t){var l=t[n];for(var q in l)A(l[q].object),delete l[q];delete t[n]}delete a[e.id]}},releaseStatesOfProgram:function(e){for(var t in a){var n=a[t];if(void 0!==n[e.id]){var l=n[e.id];for(var q in l)A(l[q].object),delete l[q];delete n[e.id]}}},initAttributes:m,enableAttribute:h,disableUnusedAttributes:d}}function Hl(e,t,n,l){var q,r=l.isWebGL2;this.setMode=function(e){q=e},this.render=function(t,l){e.drawArrays(q,t,l),n.update(l,q,1)},this.renderInstances=function(l,i,a){if(0!==a){var o,s;if(r)o=e,s="drawArraysInstanced";else if(s="drawArraysInstancedANGLE",null===(o=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[s](q,l,i,a),n.update(i,q,a)}}}function Gl(e,t,n){var l;function q(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var r="undefined"!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,i=void 0!==n.precision?n.precision:"highp",a=q(i);a!==i&&(console.warn("THREE.WebGLRenderer:",i,"not supported, using",a,"instead."),i=a);var o=r||t.has("WEBGL_draw_buffers"),s=!0===n.logarithmicDepthBuffer,u=e.getParameter(34930),A=e.getParameter(35660),c=e.getParameter(3379),m=e.getParameter(34076),h=e.getParameter(34921),f=e.getParameter(36347),d=e.getParameter(36348),p=e.getParameter(36349),x=A>0,v=r||t.has("OES_texture_float");return{isWebGL2:r,drawBuffers:o,getMaxAnisotropy:function(){if(void 0!==l)return l;if(!0===t.has("EXT_texture_filter_anisotropic")){var n=t.get("EXT_texture_filter_anisotropic");l=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else l=0;return l},getMaxPrecision:q,precision:i,logarithmicDepthBuffer:s,maxTextures:u,maxVertexTextures:A,maxTextureSize:c,maxCubemapSize:m,maxAttributes:h,maxVertexUniforms:f,maxVaryings:d,maxFragmentUniforms:p,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:r?e.getParameter(36183):0}}function jl(e){var t=this,n=null,l=0,q=!1,r=!1,i=new Tl,a=new Je,o={value:null,needsUpdate:!1};function s(){o.value!==n&&(o.value=n,o.needsUpdate=l>0),t.numPlanes=l,t.numIntersection=0}function u(e,n,l,q){var r=null!==e?e.length:0,s=null;if(0!==r){if(s=o.value,!0!==q||null===s){var u=l+4*r,A=n.matrixWorldInverse;a.getNormalMatrix(A),(null===s||s.length<u)&&(s=new Float32Array(u));for(var c=0,m=l;c!==r;++c,m+=4)i.copy(e[c]).applyMatrix4(A,a),i.normal.toArray(s,m),s[m+3]=i.constant}o.value=s,o.needsUpdate=!0}return t.numPlanes=r,t.numIntersection=0,s}this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){var i=0!==e.length||t||0!==l||q;return q=t,n=u(e,r,0),l=e.length,i},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,s()},this.setState=function(t,i,a){var A=t.clippingPlanes,c=t.clipIntersection,m=t.clipShadows,h=e.get(t);if(!q||null===A||0===A.length||r&&!m)r?u(null):s();else{var f=r?0:l,d=4*f,p=h.clippingState||null;o.value=p,p=u(A,i,d,a);for(var x=0;x!==d;++x)p[x]=n[x];h.clippingState=p,this.numIntersection=c?this.numPlanes:0,this.numPlanes+=f}}}function Vl(e){var t=new WeakMap;function n(e,t){return t===K?e.mapping=Z:t===$&&(e.mapping=J),e}function l(e){var n=e.target;n.removeEventListener("dispose",l);var q=t.get(n);void 0!==q&&(t.delete(n),q.dispose())}return{get:function(q){if(q&&q.isTexture&&!1===q.isRenderTargetTexture){var r=q.mapping;if(r===K||r===$){if(t.has(q))return n(t.get(q).texture,q.mapping);var i=q.image;if(i&&i.height>0){var a=e.getRenderTarget(),o=new Sl(i.height/2);return o.fromEquirectangularTexture(e,q),t.set(q,o),e.setRenderTarget(a),q.addEventListener("dispose",l),n(o.texture,q.mapping)}return null}}return q},dispose:function(){t=new WeakMap}}}Nl.physical={uniforms:xl([Nl.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ze(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Rn(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ze},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Rn(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new Rn(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ol.meshphysical_vert,fragmentShader:Ol.meshphysical_frag};var Wl=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return O(this,n),(e=t.call(this)).type="OrthographicCamera",e.zoom=1,e.view=null,e.left=l,e.right=q,e.top=r,e.bottom=i,e.near=a,e.far=o,e.updateProjectionMatrix(),e}return N(n,[{key:"copy",value:function(e,t){return C(k(n.prototype),"copy",this).call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,t,n,l,q,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=l,this.view.width=q,this.view.height=r,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,l=(this.top+this.bottom)/2,q=n-e,r=n+e,i=l+t,a=l-t;if(null!==this.view&&this.view.enabled){var o=(this.right-this.left)/this.view.fullWidth/this.zoom,s=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r=(q+=o*this.view.offsetX)+o*this.view.width,a=(i-=s*this.view.offsetY)-s*this.view.height}this.projectionMatrix.makeOrthographic(q,r,i,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}]),n}(_l);Wl.prototype.isOrthographicCamera=!0;var Ql=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this,e)).type="RawShaderMaterial",l}return N(n)}(gl);Ql.prototype.isRawShaderMaterial=!0;var Yl=Math.pow(2,8),Xl=[.125,.215,.35,.446,.526,.582],Zl=5+Xl.length,Jl=20,Kl=(w(U={},ze,0),w(U,ke,1),w(U,Ce,2),w(U,3004,3),w(U,3005,4),w(U,3006,5),w(U,Te,6),U),$l=new Wl,eq=Aq(),tq=eq._lodPlanes,nq=eq._sizeLods,lq=eq._sigmas,qq=new Rn,rq=null,iq=(1+Math.sqrt(5))/2,aq=1/iq,oq=[new At(1,1,1),new At(-1,1,1),new At(1,1,-1),new At(-1,1,-1),new At(0,iq,aq),new At(0,iq,-aq),new At(aq,0,iq),new At(-aq,0,iq),new At(iq,aq,0),new At(-iq,aq,0)],sq=function(){function e(t){O(this,e),this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(e){var t=new Float32Array(e),n=new At(0,1,0);return new Ql({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:Kl[3e3]},outputEncoding:{value:Kl[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})}(Jl),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}return N(e,[{key:"fromScene",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;rq=this._renderer.getRenderTarget();var q=this._allocateTargets();return this._sceneToCubeUV(e,n,l,q),t>0&&this._blur(q,0,0,t),this._applyPMREM(q),this._cleanup(q),q}},{key:"fromEquirectangular",value:function(e){return this._fromTexture(e)}},{key:"fromCubemap",value:function(e){return this._fromTexture(e)}},{key:"compileCubemapShader",value:function(){null===this._cubemapShader&&(this._cubemapShader=fq(),this._compileMaterial(this._cubemapShader))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectShader&&(this._equirectShader=hq(),this._compileMaterial(this._equirectShader))}},{key:"dispose",value:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(var e=0;e<tq.length;e++)tq[e].dispose()}},{key:"_cleanup",value:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(rq),e.scissorTest=!1,mq(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e){rq=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}},{key:"_allocateTargets",value:function(e){var t={magFilter:re,minFilter:re,generateMipmaps:!1,type:ue,format:1023,encoding:uq(e)?e.encoding:Ce,depthBuffer:!1},n=cq(t);return n.depthBuffer=!e,this._pingPongRenderTarget=cq(t),n}},{key:"_compileMaterial",value:function(e){var t=new hl(tq[0],e);this._renderer.compile(t,$l)}},{key:"_sceneToCubeUV",value:function(e,t,n,l){var q=new yl(90,1,t,n),r=[1,-1,1,1,1,1],i=[1,1,1,-1,-1,-1],a=this._renderer,o=a.autoClear,s=a.outputEncoding,u=a.toneMapping;a.getClearColor(qq),a.toneMapping=0,a.outputEncoding=ze,a.autoClear=!1;var A=new Dn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),c=new hl(new dl,A),m=!1,h=e.background;h?h.isColor&&(A.color.copy(h),e.background=null,m=!0):(A.color.copy(qq),m=!0);for(var f=0;f<6;f++){var d=f%3;0==d?(q.up.set(0,r[f],0),q.lookAt(i[f],0,0)):1==d?(q.up.set(0,0,r[f]),q.lookAt(0,i[f],0)):(q.up.set(0,r[f],0),q.lookAt(0,0,i[f])),mq(l,d*Yl,f>2?Yl:0,Yl,Yl),a.setRenderTarget(l),m&&a.render(c,q),a.render(e,q)}c.geometry.dispose(),c.material.dispose(),a.toneMapping=u,a.outputEncoding=s,a.autoClear=o,e.background=h}},{key:"_setEncoding",value:function(e,t){e.value=Kl[t.encoding]}},{key:"_textureToCubeUV",value:function(e,t){var n=this._renderer,l=e.mapping===Z||e.mapping===J;l?null==this._cubemapShader&&(this._cubemapShader=fq()):null==this._equirectShader&&(this._equirectShader=hq());var q=l?this._cubemapShader:this._equirectShader,r=new hl(tq[0],q),i=q.uniforms;i.envMap.value=e,l||i.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(i.inputEncoding,e),this._setEncoding(i.outputEncoding,t.texture),mq(t,0,0,3*Yl,2*Yl),n.setRenderTarget(t),n.render(r,$l)}},{key:"_applyPMREM",value:function(e){var t=this._renderer,n=t.autoClear;t.autoClear=!1;for(var l=1;l<Zl;l++){var q=Math.sqrt(lq[l]*lq[l]-lq[l-1]*lq[l-1]),r=oq[(l-1)%oq.length];this._blur(e,l-1,l,q,r)}t.autoClear=n}},{key:"_blur",value:function(e,t,n,l,q){var r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,l,"latitudinal",q),this._halfBlur(r,e,n,n,l,"longitudinal",q)}},{key:"_halfBlur",value:function(e,t,n,l,q,r,i){var a=this._renderer,o=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");var s=new hl(tq[l],o),u=o.uniforms,A=nq[n]-1,c=isFinite(q)?Math.PI/(2*A):2*Math.PI/39,m=q/c,h=isFinite(q)?1+Math.floor(3*m):Jl;h>Jl&&console.warn("sigmaRadians, ".concat(q,", is too large and will clip, as it requested ").concat(h," samples when the maximum is set to ").concat(Jl));for(var f=[],d=0,p=0;p<Jl;++p){var x=p/m,v=Math.exp(-x*x/2);f.push(v),0==p?d+=v:p<h&&(d+=2*v)}for(var g=0;g<f.length;g++)f[g]=f[g]/d;u.envMap.value=e.texture,u.samples.value=h,u.weights.value=f,u.latitudinal.value="latitudinal"===r,i&&(u.poleAxis.value=i),u.dTheta.value=c,u.mipInt.value=8-n,this._setEncoding(u.inputEncoding,e.texture),this._setEncoding(u.outputEncoding,e.texture);var _=nq[l];mq(t,3*Math.max(0,Yl-2*_),(0===l?0:2*Yl)+2*_*(l>4?l-8+4:0),3*_,2*_),a.setRenderTarget(t),a.render(s,$l)}}]),e}();function uq(e){return void 0!==e&&e.type===ue&&(e.encoding===ze||e.encoding===ke||e.encoding===Te)}function Aq(){for(var e=[],t=[],n=[],l=8,q=0;q<Zl;q++){var r=Math.pow(2,l);t.push(r);var i=1/r;q>4?i=Xl[q-8+4-1]:0==q&&(i=0),n.push(i);for(var a=1/(r-1),o=-a/2,s=1+a/2,u=[o,o,s,o,s,s,o,o,s,s,o,s],A=new Float32Array(108),c=new Float32Array(72),m=new Float32Array(36),h=0;h<6;h++){var f=h%3*2/3-1,d=h>2?0:-1,p=[f,d,0,f+2/3,d,0,f+2/3,d+1,0,f,d,0,f+2/3,d+1,0,f,d+1,0];A.set(p,18*h),c.set(u,12*h);var x=[h,h,h,h,h,h];m.set(x,6*h)}var v=new Zn;v.setAttribute("position",new Bn(A,3)),v.setAttribute("uv",new Bn(c,2)),v.setAttribute("faceIndex",new Bn(m,1)),e.push(v),l>4&&l--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function cq(e){var t=new at(3*Yl,3*Yl,e);return t.texture.mapping=ee,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function mq(e,t,n,l,q){e.viewport.set(t,n,l,q),e.scissor.set(t,n,l,q)}function hq(){var e=new Ze(1,1);return new Ql({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Kl[3e3]},outputEncoding:{value:Kl[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})}function fq(){return new Ql({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Kl[3e3]},outputEncoding:{value:Kl[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})}function dq(e){var t=new WeakMap,n=null;function l(e){var n=e.target;n.removeEventListener("dispose",l);var q=t.get(n);void 0!==q&&(t.delete(n),q.dispose())}return{get:function(q){if(q&&q.isTexture&&!1===q.isRenderTargetTexture){var r=q.mapping,i=r===K||r===$,a=r===Z||r===J;if(i||a){if(t.has(q))return t.get(q).texture;var o=q.image;if(i&&o&&o.height>0||a&&o&&function(e){for(var t=0,n=6,l=0;l<n;l++)void 0!==e[l]&&t++;return t===n}(o)){var s=e.getRenderTarget();null===n&&(n=new sq(e));var u=i?n.fromEquirectangular(q):n.fromCubemap(q);return t.set(q,u),e.setRenderTarget(s),q.addEventListener("dispose",l),u.texture}return null}}return q},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function pq(e){var t={};function n(n){if(void 0!==t[n])return t[n];var l;switch(n){case"WEBGL_depth_texture":l=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":l=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":l=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":l=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:l=e.getExtension(n)}return t[n]=l,l}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){var t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function xq(e,t,n,l){var q={},r=new WeakMap;function i(e){var a=e.target;for(var o in null!==a.index&&t.remove(a.index),a.attributes)t.remove(a.attributes[o]);a.removeEventListener("dispose",i),delete q[a.id];var s=r.get(a);s&&(t.remove(s),r.delete(a)),l.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(e){var n=[],l=e.index,q=e.attributes.position,i=0;if(null!==l){var a=l.array;i=l.version;for(var o=0,s=a.length;o<s;o+=3){var u=a[o+0],A=a[o+1],c=a[o+2];n.push(u,A,A,c,c,u)}}else{var m=q.array;i=q.version;for(var h=0,f=m.length/3-1;h<f;h+=3){var d=h+0,p=h+1,x=h+2;n.push(d,p,p,x,x,d)}}var v=new(Ke(n)>65535?Un:Nn)(n,1);v.version=i;var g=r.get(e);g&&t.remove(g),r.set(e,v)}return{get:function(e,t){return!0===q[t.id]||(t.addEventListener("dispose",i),q[t.id]=!0,n.memory.geometries++),t},update:function(e){var n=e.attributes;for(var l in n)t.update(n[l],34962);var q=e.morphAttributes;for(var r in q)for(var i=q[r],a=0,o=i.length;a<o;a++)t.update(i[a],34962)},getWireframeAttribute:function(e){var t=r.get(e);if(t){var n=e.index;null!==n&&t.version<n.version&&a(e)}else a(e);return r.get(e)}}}function vq(e,t,n,l){var q,r,i,a=l.isWebGL2;this.setMode=function(e){q=e},this.setIndex=function(e){r=e.type,i=e.bytesPerElement},this.render=function(t,l){e.drawElements(q,l,r,t*i),n.update(l,q,1)},this.renderInstances=function(l,o,s){if(0!==s){var u,A;if(a)u=e,A="drawElementsInstanced";else if(A="drawElementsInstancedANGLE",null===(u=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[A](q,o,r,l*i,s),n.update(o,q,s)}}}function gq(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,l){switch(t.calls++,n){case 4:t.triangles+=l*(e/3);break;case 1:t.lines+=l*(e/2);break;case 3:t.lines+=l*(e-1);break;case 2:t.lines+=l*e;break;case 0:t.points+=l*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}var _q=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return O(this,n),(e=t.call(this,null)).image={data:l,width:q,height:r,depth:i},e.magFilter=re,e.minFilter=re,e.wrapR=le,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return N(n)}(qt);function yq(e,t){return e[0]-t[0]}function bq(e,t){return Math.abs(t[1])-Math.abs(e[1])}function wq(e,t){var n=1,l=t.isInterleavedBufferAttribute?t.data.array:t.array;l instanceof Int8Array?n=127:l instanceof Int16Array?n=32767:l instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",l),e.divideScalar(n)}function Mq(e,t,n){for(var l={},q=new Float32Array(8),r=new WeakMap,i=new At,a=[],o=0;o<8;o++)a[o]=[o,0];return{update:function(o,s,u,A){var c=o.morphTargetInfluences;if(!0===t.isWebGL2){var m=s.morphAttributes.position.length,h=r.get(s);if(void 0===h||h.count!==m){void 0!==h&&h.texture.dispose();var f=void 0!==s.morphAttributes.normal,d=s.morphAttributes.position,p=s.morphAttributes.normal||[],x=!0===f?2:1,v=s.attributes.position.count*x,g=1;v>t.maxTextureSize&&(g=Math.ceil(v/t.maxTextureSize),v=t.maxTextureSize);var _=new Float32Array(v*g*4*m),y=new _q(_,v,g,m);y.format=pe,y.type=me;for(var b=4*x,w=0;w<m;w++)for(var M=d[w],S=p[w],E=v*g*4*w,z=0;z<M.count;z++){i.fromBufferAttribute(M,z),!0===M.normalized&&wq(i,M);var k=z*b;_[E+k+0]=i.x,_[E+k+1]=i.y,_[E+k+2]=i.z,_[E+k+3]=0,!0===f&&(i.fromBufferAttribute(S,z),!0===S.normalized&&wq(i,S),_[E+k+4]=i.x,_[E+k+5]=i.y,_[E+k+6]=i.z,_[E+k+7]=0)}h={count:m,texture:y,size:new Ze(v,g)},r.set(s,h)}for(var T=0,C=0;C<c.length;C++)T+=c[C];var L=s.morphTargetsRelative?1:1-T;A.getUniforms().setValue(e,"morphTargetBaseInfluence",L),A.getUniforms().setValue(e,"morphTargetInfluences",c),A.getUniforms().setValue(e,"morphTargetsTexture",h.texture,n),A.getUniforms().setValue(e,"morphTargetsTextureSize",h.size)}else{var P=void 0===c?0:c.length,R=l[s.id];if(void 0===R||R.length!==P){R=[];for(var D=0;D<P;D++)R[D]=[D,0];l[s.id]=R}for(var I=0;I<P;I++){var O=R[I];O[0]=I,O[1]=c[I]}R.sort(bq);for(var B=0;B<8;B++)B<P&&R[B][1]?(a[B][0]=R[B][0],a[B][1]=R[B][1]):(a[B][0]=Number.MAX_SAFE_INTEGER,a[B][1]=0);a.sort(yq);for(var N=s.morphAttributes.position,U=s.morphAttributes.normal,F=0,H=0;H<8;H++){var G=a[H],j=G[0],V=G[1];j!==Number.MAX_SAFE_INTEGER&&V?(N&&s.getAttribute("morphTarget"+H)!==N[j]&&s.setAttribute("morphTarget"+H,N[j]),U&&s.getAttribute("morphNormal"+H)!==U[j]&&s.setAttribute("morphNormal"+H,U[j]),q[H]=V,F+=V):(N&&!0===s.hasAttribute("morphTarget"+H)&&s.deleteAttribute("morphTarget"+H),U&&!0===s.hasAttribute("morphNormal"+H)&&s.deleteAttribute("morphNormal"+H),q[H]=0)}var W=s.morphTargetsRelative?1:1-F;A.getUniforms().setValue(e,"morphTargetBaseInfluence",W),A.getUniforms().setValue(e,"morphTargetInfluences",q)}}}}function Sq(e,t,n,l){var q=new WeakMap;function r(e){var t=e.target;t.removeEventListener("dispose",r),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){var i=l.render.frame,a=e.geometry,o=t.get(e,a);return q.get(o)!==i&&(t.update(o),q.set(o,i)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",r)&&e.addEventListener("dispose",r),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),o},dispose:function(){q=new WeakMap}}}_q.prototype.isDataTexture2DArray=!0;var Eq=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return O(this,n),(e=t.call(this,null)).image={data:l,width:q,height:r,depth:i},e.magFilter=re,e.minFilter=re,e.wrapR=le,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return N(n)}(qt);Eq.prototype.isDataTexture3D=!0;var zq=new qt,kq=new _q,Tq=new Eq,Cq=new Ml,Lq=[],Pq=[],Rq=new Float32Array(16),Dq=new Float32Array(9),Iq=new Float32Array(4);function Oq(e,t,n){var l=e[0];if(l<=0||l>0)return e;var q=t*n,r=Lq[q];if(void 0===r&&(r=new Float32Array(q),Lq[q]=r),0!==t){l.toArray(r,0);for(var i=1,a=0;i!==t;++i)a+=n,e[i].toArray(r,a)}return r}function Bq(e,t){if(e.length!==t.length)return!1;for(var n=0,l=e.length;n<l;n++)if(e[n]!==t[n])return!1;return!0}function Nq(e,t){for(var n=0,l=t.length;n<l;n++)e[n]=t[n]}function Uq(e,t){var n=Pq[t];void 0===n&&(n=new Int32Array(t),Pq[t]=n);for(var l=0;l!==t;++l)n[l]=e.allocateTextureUnit();return n}function Fq(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Hq(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Bq(n,t))return;e.uniform2fv(this.addr,t),Nq(n,t)}}function Gq(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Bq(n,t))return;e.uniform3fv(this.addr,t),Nq(n,t)}}function jq(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Bq(n,t))return;e.uniform4fv(this.addr,t),Nq(n,t)}}function Vq(e,t){var n=this.cache,l=t.elements;if(void 0===l){if(Bq(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Nq(n,t)}else{if(Bq(n,l))return;Iq.set(l),e.uniformMatrix2fv(this.addr,!1,Iq),Nq(n,l)}}function Wq(e,t){var n=this.cache,l=t.elements;if(void 0===l){if(Bq(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Nq(n,t)}else{if(Bq(n,l))return;Dq.set(l),e.uniformMatrix3fv(this.addr,!1,Dq),Nq(n,l)}}function Qq(e,t){var n=this.cache,l=t.elements;if(void 0===l){if(Bq(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Nq(n,t)}else{if(Bq(n,l))return;Rq.set(l),e.uniformMatrix4fv(this.addr,!1,Rq),Nq(n,l)}}function Yq(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Xq(e,t){var n=this.cache;Bq(n,t)||(e.uniform2iv(this.addr,t),Nq(n,t))}function Zq(e,t){var n=this.cache;Bq(n,t)||(e.uniform3iv(this.addr,t),Nq(n,t))}function Jq(e,t){var n=this.cache;Bq(n,t)||(e.uniform4iv(this.addr,t),Nq(n,t))}function Kq(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function $q(e,t){var n=this.cache;Bq(n,t)||(e.uniform2uiv(this.addr,t),Nq(n,t))}function er(e,t){var n=this.cache;Bq(n,t)||(e.uniform3uiv(this.addr,t),Nq(n,t))}function tr(e,t){var n=this.cache;Bq(n,t)||(e.uniform4uiv(this.addr,t),Nq(n,t))}function nr(e,t,n){var l=this.cache,q=n.allocateTextureUnit();l[0]!==q&&(e.uniform1i(this.addr,q),l[0]=q),n.safeSetTexture2D(t||zq,q)}function lr(e,t,n){var l=this.cache,q=n.allocateTextureUnit();l[0]!==q&&(e.uniform1i(this.addr,q),l[0]=q),n.setTexture3D(t||Tq,q)}function qr(e,t,n){var l=this.cache,q=n.allocateTextureUnit();l[0]!==q&&(e.uniform1i(this.addr,q),l[0]=q),n.safeSetTextureCube(t||Cq,q)}function rr(e,t,n){var l=this.cache,q=n.allocateTextureUnit();l[0]!==q&&(e.uniform1i(this.addr,q),l[0]=q),n.setTexture2DArray(t||kq,q)}function ir(e,t){e.uniform1fv(this.addr,t)}function ar(e,t){var n=Oq(t,this.size,2);e.uniform2fv(this.addr,n)}function or(e,t){var n=Oq(t,this.size,3);e.uniform3fv(this.addr,n)}function sr(e,t){var n=Oq(t,this.size,4);e.uniform4fv(this.addr,n)}function ur(e,t){var n=Oq(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Ar(e,t){var n=Oq(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function cr(e,t){var n=Oq(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function mr(e,t){e.uniform1iv(this.addr,t)}function hr(e,t){e.uniform2iv(this.addr,t)}function fr(e,t){e.uniform3iv(this.addr,t)}function dr(e,t){e.uniform4iv(this.addr,t)}function pr(e,t){e.uniform1uiv(this.addr,t)}function xr(e,t){e.uniform2uiv(this.addr,t)}function vr(e,t){e.uniform3uiv(this.addr,t)}function gr(e,t){e.uniform4uiv(this.addr,t)}function _r(e,t,n){var l=t.length,q=Uq(n,l);e.uniform1iv(this.addr,q);for(var r=0;r!==l;++r)n.safeSetTexture2D(t[r]||zq,q[r])}function yr(e,t,n){var l=t.length,q=Uq(n,l);e.uniform1iv(this.addr,q);for(var r=0;r!==l;++r)n.setTexture3D(t[r]||Tq,q[r])}function br(e,t,n){var l=t.length,q=Uq(n,l);e.uniform1iv(this.addr,q);for(var r=0;r!==l;++r)n.safeSetTextureCube(t[r]||Cq,q[r])}function wr(e,t,n){var l=t.length,q=Uq(n,l);e.uniform1iv(this.addr,q);for(var r=0;r!==l;++r)n.setTexture2DArray(t[r]||kq,q[r])}function Mr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Fq;case 35664:return Hq;case 35665:return Gq;case 35666:return jq;case 35674:return Vq;case 35675:return Wq;case 35676:return Qq;case 5124:case 35670:return Yq;case 35667:case 35671:return Xq;case 35668:case 35672:return Zq;case 35669:case 35673:return Jq;case 5125:return Kq;case 36294:return $q;case 36295:return er;case 36296:return tr;case 35678:case 36198:case 36298:case 36306:case 35682:return nr;case 35679:case 36299:case 36307:return lr;case 35680:case 36300:case 36308:case 36293:return qr;case 36289:case 36303:case 36311:case 36292:return rr}}(t.type)}function Sr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return ir;case 35664:return ar;case 35665:return or;case 35666:return sr;case 35674:return ur;case 35675:return Ar;case 35676:return cr;case 5124:case 35670:return mr;case 35667:case 35671:return hr;case 35668:case 35672:return fr;case 35669:case 35673:return dr;case 5125:return pr;case 36294:return xr;case 36295:return vr;case 36296:return gr;case 35678:case 36198:case 36298:case 36306:case 35682:return _r;case 35679:case 36299:case 36307:return yr;case 35680:case 36300:case 36308:case 36293:return br;case 36289:case 36303:case 36311:case 36292:return wr}}(t.type)}function Er(e){this.id=e,this.seq=[],this.map={}}Sr.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Nq(t,e)},Er.prototype.setValue=function(e,t,n){for(var l=this.seq,q=0,r=l.length;q!==r;++q){var i=l[q];i.setValue(e,t[i.id],n)}};var zr=/(\w+)(\])?(\[|\.)?/g;function kr(e,t){e.seq.push(t),e.map[t.id]=t}function Tr(e,t,n){var l=e.name,q=l.length;for(zr.lastIndex=0;;){var r=zr.exec(l),i=zr.lastIndex,a=r[1],o="]"===r[2],s=r[3];if(o&&(a|=0),void 0===s||"["===s&&i+2===q){kr(n,void 0===s?new Mr(a,e,t):new Sr(a,e,t));break}var u=n.map[a];void 0===u&&kr(n,u=new Er(a)),n=u}}function Cr(e,t){this.seq=[],this.map={};for(var n=e.getProgramParameter(t,35718),l=0;l<n;++l){var q=e.getActiveUniform(t,l);Tr(q,e.getUniformLocation(t,q.name),this)}}function Lr(e,t,n){var l=e.createShader(t);return e.shaderSource(l,n),e.compileShader(l),l}Cr.prototype.setValue=function(e,t,n,l){var q=this.map[t];void 0!==q&&q.setValue(e,n,l)},Cr.prototype.setOptional=function(e,t,n){var l=t[n];void 0!==l&&this.setValue(e,n,l)},Cr.upload=function(e,t,n,l){for(var q=0,r=t.length;q!==r;++q){var i=t[q],a=n[i.id];!1!==a.needsUpdate&&i.setValue(e,a.value,l)}},Cr.seqWithValue=function(e,t){for(var n=[],l=0,q=e.length;l!==q;++l){var r=e[l];r.id in t&&n.push(r)}return n};var Pr=0;function Rr(e){switch(e){case ze:return["Linear","( value )"];case ke:return["sRGB","( value )"];case Ce:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case Te:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Dr(e,t,n){var l=e.getShaderParameter(t,35713),q=e.getShaderInfoLog(t).trim();return l&&""===q?"":n.toUpperCase()+"\n\n"+q+"\n\n"+function(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(e.getShaderSource(t))}function Ir(e,t){var n=Rr(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Or(e,t){var n=Rr(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Br(e,t){var n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Nr(e){return""!==e}function Ur(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Fr(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var Hr=/^[ \t]*#include +<([\w\d./]+)>/gm;function Gr(e){return e.replace(Hr,jr)}function jr(e,t){var n=Ol[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Gr(n)}var Vr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Wr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qr(e){return e.replace(Wr,Xr).replace(Vr,Yr)}function Yr(e,t,n,l){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Xr(e,t,n,l)}function Xr(e,t,n,l){for(var q="",r=parseInt(t);r<parseInt(n);r++)q+=l.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return q}function Zr(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Jr(e,t,n,l){var q,r,i=e.getContext(),a=n.defines,o=n.vertexShader,s=n.fragmentShader,u=function(e){var t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),A=function(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Z:case J:t="ENVMAP_TYPE_CUBE";break;case ee:case te:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),c=function(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case J:case te:t="ENVMAP_MODE_REFRACTION"}return t}(n),m=function(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),h=e.gammaFactor>0?e.gammaFactor:1,f=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Nr).join("\n")}(n),d=function(e){var t=[];for(var n in e){var l=e[n];!1!==l&&t.push("#define "+n+" "+l)}return t.join("\n")}(a),p=i.createProgram(),x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((q=[d].filter(Nr).join("\n")).length>0&&(q+="\n"),(r=[f,d].filter(Nr).join("\n")).length>0&&(r+="\n")):(q=[Zr(n),"#define SHADER_NAME "+n.shaderName,d,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Nr).join("\n"),r=[f,Zr(n),"#define SHADER_NAME "+n.shaderName,d,"#define GAMMA_FACTOR "+h,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+A:"",n.envMap?"#define "+c:"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Ol.tonemapping_pars_fragment:"",0!==n.toneMapping?Br("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===de?"#define OPAQUE":"",Ol.encodings_pars_fragment,n.map?Ir("mapTexelToLinear",n.mapEncoding):"",n.matcap?Ir("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Ir("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Ir("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularColorMap?Ir("specularColorMapTexelToLinear",n.specularColorMapEncoding):"",n.sheenColorMap?Ir("sheenColorMapTexelToLinear",n.sheenColorMapEncoding):"",n.lightMap?Ir("lightMapTexelToLinear",n.lightMapEncoding):"",Or("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Nr).join("\n")),o=Fr(o=Ur(o=Gr(o),n),n),s=Fr(s=Ur(s=Gr(s),n),n),o=Qr(o),s=Qr(s),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",q=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+q,r=["#define varying in",n.glslVersion===De?"":"out highp vec4 pc_fragColor;",n.glslVersion===De?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+r);var v,g,_=x+r+s,y=Lr(i,35633,x+q+o),b=Lr(i,35632,_);if(i.attachShader(p,y),i.attachShader(p,b),void 0!==n.index0AttributeName?i.bindAttribLocation(p,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),e.debug.checkShaderErrors){var w=i.getProgramInfoLog(p).trim(),M=i.getShaderInfoLog(y).trim(),S=i.getShaderInfoLog(b).trim(),E=!0,z=!0;if(!1===i.getProgramParameter(p,35714)){E=!1;var k=Dr(i,y,"vertex"),T=Dr(i,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(p,35715)+"\n\nProgram Info Log: "+w+"\n"+k+"\n"+T)}else""!==w?console.warn("THREE.WebGLProgram: Program Info Log:",w):""!==M&&""!==S||(z=!1);z&&(this.diagnostics={runnable:E,programLog:w,vertexShader:{log:M,prefix:q},fragmentShader:{log:S,prefix:r}})}return i.deleteShader(y),i.deleteShader(b),this.getUniforms=function(){return void 0===v&&(v=new Cr(i,p)),v},this.getAttributes=function(){return void 0===g&&(g=function(e,t){for(var n={},l=e.getProgramParameter(t,35721),q=0;q<l;q++){var r=e.getActiveAttrib(t,q),i=r.name,a=1;35674===r.type&&(a=2),35675===r.type&&(a=3),35676===r.type&&(a=4),n[i]={type:r.type,location:e.getAttribLocation(t,i),locationSize:a}}return n}(i,p)),g},this.destroy=function(){l.releaseStatesOfProgram(this),i.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=Pr++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=y,this.fragmentShader=b,this}function Kr(e,t,n,l,q,r,i){var a=[],o=q.isWebGL2,s=q.logarithmicDepthBuffer,u=q.floatVertexTextures,A=q.maxVertexUniforms,c=q.vertexTextures,m=q.precision,h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap",,"roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","specularIntensityMap","specularColorMap","specularColorMapEncoding","transmission","transmissionMap","thicknessMap","sheen","sheenColorMap","sheenColorMapEncoding","sheenRoughnessMap"];function d(e){var t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=ze,t}return{getParameters:function(r,a,f,p,x){var v,g,_=p.fog,y=r.isMeshStandardMaterial?p.environment:null,b=(r.isMeshStandardMaterial?n:t).get(r.envMap||y),w=h[r.type],M=x.isSkinnedMesh?function(e){var t=e.skeleton.bones;if(u)return 1024;var n=A,l=Math.floor((n-20)/4),q=Math.min(l,t.length);return q<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+q+"."),0):q}(x):0;if(null!==r.precision&&(m=q.getMaxPrecision(r.precision))!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",m,"instead."),w){var S=Nl[w];v=S.vertexShader,g=S.fragmentShader}else v=r.vertexShader,g=r.fragmentShader;var E=e.getRenderTarget(),z=r.alphaTest>0,k=r.clearcoat>0;return{isWebGL2:o,shaderID:w,shaderName:r.type,vertexShader:v,fragmentShader:g,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:m,instancing:!0===x.isInstancedMesh,instancingColor:!0===x.isInstancedMesh&&null!==x.instanceColor,supportsVertexTextures:c,outputEncoding:null!==E?d(E.texture):e.outputEncoding,map:!!r.map,mapEncoding:d(r.map),matcap:!!r.matcap,matcapEncoding:d(r.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:d(b),envMapCubeUV:!!b&&(b.mapping===ee||b.mapping===te),lightMap:!!r.lightMap,lightMapEncoding:d(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:d(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoat:k,clearcoatMap:k&&!!r.clearcoatMap,clearcoatRoughnessMap:k&&!!r.clearcoatRoughnessMap,clearcoatNormalMap:k&&!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,specularIntensityMap:!!r.specularIntensityMap,specularColorMap:!!r.specularColorMap,specularColorMapEncoding:d(r.specularColorMap),alphaMap:!!r.alphaMap,alphaTest:z,gradientMap:!!r.gradientMap,sheen:r.sheen>0,sheenColorMap:!!r.sheenColorMap,sheenColorMapEncoding:d(r.sheenColorMap),sheenRoughnessMap:!!r.sheenRoughnessMap,transmission:r.transmission>0,transmissionMap:!!r.transmissionMap,thicknessMap:!!r.thicknessMap,combine:r.combine,vertexTangents:!!r.normalMap&&!!x.geometry&&!!x.geometry.attributes.tangent,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&!!x.geometry&&!!x.geometry.attributes.color&&4===x.geometry.attributes.color.itemSize,vertexUvs:!!r.map||!!r.bumpMap||!!r.normalMap||!!r.specularMap||!!r.alphaMap||!!r.emissiveMap||!!r.roughnessMap||!!r.metalnessMap||!!r.clearcoatMap||!!r.clearcoatRoughnessMap||!!r.clearcoatNormalMap||!!r.displacementMap||!!r.transmissionMap||!!r.thicknessMap||!!r.specularIntensityMap||!!r.specularColorMap||!!r.sheenColorMap||r.sheenRoughnessMap,uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmission>0||r.transmissionMap||r.thicknessMap||r.specularIntensityMap||r.specularColorMap||r.sheen>0||r.sheenColorMap||r.sheenRoughnessMap)&&!!r.displacementMap,fog:!!_,useFog:r.fog,fogExp2:_&&_.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:s,skinning:!0===x.isSkinnedMesh&&M>0,maxBones:M,useVertexTexture:u,morphTargets:!!x.geometry&&!!x.geometry.morphAttributes.position,morphNormals:!!x.geometry&&!!x.geometry.morphAttributes.normal,morphTargetsCount:x.geometry&&x.geometry.morphAttributes.position?x.geometry.morphAttributes.position.length:0,numDirLights:a.directional.length,numPointLights:a.point.length,numSpotLights:a.spot.length,numRectAreaLights:a.rectArea.length,numHemiLights:a.hemi.length,numDirLightShadows:a.directionalShadowMap.length,numPointLightShadows:a.pointShadowMap.length,numSpotLightShadows:a.spotShadowMap.length,numClippingPlanes:i.numPlanes,numClipIntersection:i.numIntersection,format:r.format,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||l.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||l.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||l.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(tt(t.fragmentShader)),n.push(tt(t.vertexShader))),void 0!==t.defines)for(var l in t.defines)n.push(l),n.push(t.defines[l]);if(!1===t.isRawShaderMaterial){for(var q=0;q<f.length;q++)n.push(t[f[q]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t,n=h[e.type];if(n){var l=Nl[n];t=vl.clone(l.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){for(var l,q=0,i=a.length;q<i;q++){var o=a[q];if(o.cacheKey===n){++(l=o).usedTimes;break}}return void 0===l&&(l=new Jr(e,n,t,r),a.push(l)),l},releaseProgram:function(e){if(0===--e.usedTimes){var t=a.indexOf(e);a[t]=a[a.length-1],a.pop(),e.destroy()}},programs:a}}function $r(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,l){e.get(t)[n]=l},dispose:function(){e=new WeakMap}}}function ei(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ti(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function ni(e){var t=[],n=0,l=[],q=[],r=[],i={id:-1};function a(l,q,r,a,o,s){var u=t[n],A=e.get(r);return void 0===u?(u={id:l.id,object:l,geometry:q,material:r,program:A.program||i,groupOrder:a,renderOrder:l.renderOrder,z:o,group:s},t[n]=u):(u.id=l.id,u.object=l,u.geometry=q,u.material=r,u.program=A.program||i,u.groupOrder=a,u.renderOrder=l.renderOrder,u.z=o,u.group=s),n++,u}return{opaque:l,transmissive:q,transparent:r,init:function(){n=0,l.length=0,q.length=0,r.length=0},push:function(e,t,n,i,o,s){var u=a(e,t,n,i,o,s);n.transmission>0?q.push(u):!0===n.transparent?r.push(u):l.push(u)},unshift:function(e,t,n,i,o,s){var u=a(e,t,n,i,o,s);n.transmission>0?q.unshift(u):!0===n.transparent?r.unshift(u):l.unshift(u)},finish:function(){for(var e=n,l=t.length;e<l;e++){var q=t[e];if(null===q.id)break;q.id=null,q.object=null,q.geometry=null,q.material=null,q.program=null,q.group=null}},sort:function(e,t){l.length>1&&l.sort(e||ei),q.length>1&&q.sort(t||ti),r.length>1&&r.sort(t||ti)}}}function li(e){var t=new WeakMap;return{get:function(n,l){var q;return!1===t.has(n)?(q=new ni(e),t.set(n,[q])):l>=t.get(n).length?(q=new ni(e),t.get(n).push(q)):q=t.get(n)[l],q},dispose:function(){t=new WeakMap}}}function qi(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new At,color:new Rn};break;case"SpotLight":n={position:new At,direction:new At,color:new Rn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new At,color:new Rn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new At,skyColor:new Rn,groundColor:new Rn};break;case"RectAreaLight":n={color:new Rn,position:new At,halfWidth:new At,halfHeight:new At}}return e[t.id]=n,n}}}var ri=0;function ii(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function ai(e,t){for(var n=new qi,l=function(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ze};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ze,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),q={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},r=0;r<9;r++)q.probe.push(new At);var i=new At,a=new Ht,o=new Ht;return{setup:function(r,i){for(var a=0,o=0,s=0,u=0;u<9;u++)q.probe[u].set(0,0,0);var A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0;r.sort(ii);for(var v=!0!==i?Math.PI:1,g=0,_=r.length;g<_;g++){var y=r[g],b=y.color,w=y.intensity,M=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)a+=b.r*w*v,o+=b.g*w*v,s+=b.b*w*v;else if(y.isLightProbe)for(var E=0;E<9;E++)q.probe[E].addScaledVector(y.sh.coefficients[E],w);else if(y.isDirectionalLight){var z=n.get(y);if(z.color.copy(y.color).multiplyScalar(y.intensity*v),y.castShadow){var k=y.shadow,T=l.get(y);T.shadowBias=k.bias,T.shadowNormalBias=k.normalBias,T.shadowRadius=k.radius,T.shadowMapSize=k.mapSize,q.directionalShadow[A]=T,q.directionalShadowMap[A]=S,q.directionalShadowMatrix[A]=y.shadow.matrix,d++}q.directional[A]=z,A++}else if(y.isSpotLight){var C=n.get(y);if(C.position.setFromMatrixPosition(y.matrixWorld),C.color.copy(b).multiplyScalar(w*v),C.distance=M,C.coneCos=Math.cos(y.angle),C.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),C.decay=y.decay,y.castShadow){var L=y.shadow,P=l.get(y);P.shadowBias=L.bias,P.shadowNormalBias=L.normalBias,P.shadowRadius=L.radius,P.shadowMapSize=L.mapSize,q.spotShadow[m]=P,q.spotShadowMap[m]=S,q.spotShadowMatrix[m]=y.shadow.matrix,x++}q.spot[m]=C,m++}else if(y.isRectAreaLight){var R=n.get(y);R.color.copy(b).multiplyScalar(w),R.halfWidth.set(.5*y.width,0,0),R.halfHeight.set(0,.5*y.height,0),q.rectArea[h]=R,h++}else if(y.isPointLight){var D=n.get(y);if(D.color.copy(y.color).multiplyScalar(y.intensity*v),D.distance=y.distance,D.decay=y.decay,y.castShadow){var I=y.shadow,O=l.get(y);O.shadowBias=I.bias,O.shadowNormalBias=I.normalBias,O.shadowRadius=I.radius,O.shadowMapSize=I.mapSize,O.shadowCameraNear=I.camera.near,O.shadowCameraFar=I.camera.far,q.pointShadow[c]=O,q.pointShadowMap[c]=S,q.pointShadowMatrix[c]=y.shadow.matrix,p++}q.point[c]=D,c++}else if(y.isHemisphereLight){var B=n.get(y);B.skyColor.copy(y.color).multiplyScalar(w*v),B.groundColor.copy(y.groundColor).multiplyScalar(w*v),q.hemi[f]=B,f++}}h>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(q.rectAreaLTC1=Bl.LTC_FLOAT_1,q.rectAreaLTC2=Bl.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(q.rectAreaLTC1=Bl.LTC_HALF_1,q.rectAreaLTC2=Bl.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),q.ambient[0]=a,q.ambient[1]=o,q.ambient[2]=s;var N=q.hash;N.directionalLength===A&&N.pointLength===c&&N.spotLength===m&&N.rectAreaLength===h&&N.hemiLength===f&&N.numDirectionalShadows===d&&N.numPointShadows===p&&N.numSpotShadows===x||(q.directional.length=A,q.spot.length=m,q.rectArea.length=h,q.point.length=c,q.hemi.length=f,q.directionalShadow.length=d,q.directionalShadowMap.length=d,q.pointShadow.length=p,q.pointShadowMap.length=p,q.spotShadow.length=x,q.spotShadowMap.length=x,q.directionalShadowMatrix.length=d,q.pointShadowMatrix.length=p,q.spotShadowMatrix.length=x,N.directionalLength=A,N.pointLength=c,N.spotLength=m,N.rectAreaLength=h,N.hemiLength=f,N.numDirectionalShadows=d,N.numPointShadows=p,N.numSpotShadows=x,q.version=ri++)},setupView:function(e,t){for(var n=0,l=0,r=0,s=0,u=0,A=t.matrixWorldInverse,c=0,m=e.length;c<m;c++){var h=e[c];if(h.isDirectionalLight){var f=q.directional[n];f.direction.setFromMatrixPosition(h.matrixWorld),i.setFromMatrixPosition(h.target.matrixWorld),f.direction.sub(i),f.direction.transformDirection(A),n++}else if(h.isSpotLight){var d=q.spot[r];d.position.setFromMatrixPosition(h.matrixWorld),d.position.applyMatrix4(A),d.direction.setFromMatrixPosition(h.matrixWorld),i.setFromMatrixPosition(h.target.matrixWorld),d.direction.sub(i),d.direction.transformDirection(A),r++}else if(h.isRectAreaLight){var p=q.rectArea[s];p.position.setFromMatrixPosition(h.matrixWorld),p.position.applyMatrix4(A),o.identity(),a.copy(h.matrixWorld),a.premultiply(A),o.extractRotation(a),p.halfWidth.set(.5*h.width,0,0),p.halfHeight.set(0,.5*h.height,0),p.halfWidth.applyMatrix4(o),p.halfHeight.applyMatrix4(o),s++}else if(h.isPointLight){var x=q.point[l];x.position.setFromMatrixPosition(h.matrixWorld),x.position.applyMatrix4(A),l++}else if(h.isHemisphereLight){var v=q.hemi[u];v.direction.setFromMatrixPosition(h.matrixWorld),v.direction.transformDirection(A),v.direction.normalize(),u++}}},state:q}}function oi(e,t){var n=new ai(e,t),l=[],q=[];return{init:function(){l.length=0,q.length=0},state:{lightsArray:l,shadowsArray:q,lights:n},setupLights:function(e){n.setup(l,e)},setupLightsView:function(e){n.setupView(l,e)},pushLight:function(e){l.push(e)},pushShadow:function(e){q.push(e)}}}function si(e,t){var n=new WeakMap;return{get:function(l){var q,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return!1===n.has(l)?(q=new oi(e,t),n.set(l,[q])):r>=n.get(l).length?(q=new oi(e,t),n.get(l).push(q)):q=n.get(l)[r],q},dispose:function(){n=new WeakMap}}}var ui=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshDepthMaterial",l.depthPacking=3200,l.map=null,l.alphaMap=null,l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.wireframe=!1,l.wireframeLinewidth=1,l.fog=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),n}(En);ui.prototype.isMeshDepthMaterial=!0;var Ai=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshDistanceMaterial",l.referencePosition=new At,l.nearDistance=1,l.farDistance=1e3,l.map=null,l.alphaMap=null,l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.fog=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),n}(En);Ai.prototype.isMeshDistanceMaterial=!0;function ci(e,t,n){var l=new Pl,q=new Ze,r=new Ze,i=new it,a=new ui({depthPacking:3201}),o=new Ai,s={},u=n.maxTextureSize,A={0:1,1:0,2:2},c=new gl({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ze},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=c.clone();m.defines.HORIZONTAL_PASS=1;var h=new Zn;h.setAttribute("position",new Bn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var f=new hl(h,c),d=this;function p(n,l){var q=t.update(f);c.defines.VSM_SAMPLES!==n.blurSamples&&(c.defines.VSM_SAMPLES=n.blurSamples,m.defines.VSM_SAMPLES=n.blurSamples,c.needsUpdate=!0,m.needsUpdate=!0),c.uniforms.shadow_pass.value=n.map.texture,c.uniforms.resolution.value=n.mapSize,c.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(l,null,q,c,f,null),m.uniforms.shadow_pass.value=n.mapPass.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(l,null,q,m,f,null)}function x(t,n,l,q,r,i,u){var c=null,m=!0===q.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(c=void 0!==m?m:!0===q.isPointLight?o:a,e.localClippingEnabled&&!0===l.clipShadows&&0!==l.clippingPlanes.length||l.displacementMap&&0!==l.displacementScale||l.alphaMap&&l.alphaTest>0){var h=c.uuid,f=l.uuid,d=s[h];void 0===d&&(d={},s[h]=d);var p=d[f];void 0===p&&(p=c.clone(),d[f]=p),c=p}return c.visible=l.visible,c.wireframe=l.wireframe,c.side=3===u?null!==l.shadowSide?l.shadowSide:l.side:null!==l.shadowSide?l.shadowSide:A[l.side],c.alphaMap=l.alphaMap,c.alphaTest=l.alphaTest,c.clipShadows=l.clipShadows,c.clippingPlanes=l.clippingPlanes,c.clipIntersection=l.clipIntersection,c.displacementMap=l.displacementMap,c.displacementScale=l.displacementScale,c.displacementBias=l.displacementBias,c.wireframeLinewidth=l.wireframeLinewidth,c.linewidth=l.linewidth,!0===q.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(q.matrixWorld),c.nearDistance=r,c.farDistance=i),c}function v(n,q,r,i,a){if(!1!==n.visible){if(n.layers.test(q.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===a)&&(!n.frustumCulled||l.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,n.matrixWorld);var o=t.update(n),s=n.material;if(Array.isArray(s))for(var u=o.groups,A=0,c=u.length;A<c;A++){var m=u[A],h=s[m.materialIndex];if(h&&h.visible){var f=x(n,0,h,i,r.near,r.far,a);e.renderBufferDirect(r,null,o,f,n,m)}}else if(s.visible){var d=x(n,0,s,i,r.near,r.far,a);e.renderBufferDirect(r,null,o,d,n,null)}}for(var p=n.children,g=0,_=p.length;g<_;g++)v(p[g],q,r,i,a)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,a){if(!1!==d.enabled&&(!1!==d.autoUpdate||!1!==d.needsUpdate)&&0!==t.length){var o=e.getRenderTarget(),s=e.getActiveCubeFace(),A=e.getActiveMipmapLevel(),c=e.state;c.setBlending(0),c.buffers.color.setClear(1,1,1,1),c.buffers.depth.setTest(!0),c.setScissorTest(!1);for(var m=0,h=t.length;m<h;m++){var f=t[m],x=f.shadow;if(void 0!==x){if(!1!==x.autoUpdate||!1!==x.needsUpdate){q.copy(x.mapSize);var g=x.getFrameExtents();if(q.multiply(g),r.copy(x.mapSize),(q.x>u||q.y>u)&&(q.x>u&&(r.x=Math.floor(u/g.x),q.x=r.x*g.x,x.mapSize.x=r.x),q.y>u&&(r.y=Math.floor(u/g.y),q.y=r.y*g.y,x.mapSize.y=r.y)),null===x.map&&!x.isPointLightShadow&&3===this.type){var _={minFilter:oe,magFilter:oe,format:pe};x.map=new at(q.x,q.y,_),x.map.texture.name=f.name+".shadowMap",x.mapPass=new at(q.x,q.y,_),x.camera.updateProjectionMatrix()}if(null===x.map){var y={minFilter:re,magFilter:re,format:pe};x.map=new at(q.x,q.y,y),x.map.texture.name=f.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();for(var b=x.getViewportCount(),w=0;w<b;w++){var M=x.getViewport(w);i.set(r.x*M.x,r.y*M.y,r.x*M.z,r.y*M.w),c.viewport(i),x.updateMatrices(f,w),l=x.getFrustum(),v(n,a,x.camera,f,this.type)}x.isPointLightShadow||3!==this.type||p(x,a),x.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",f,"has no shadow.")}d.needsUpdate=!1,e.setRenderTarget(o,s,A)}}}function mi(e,t,n){var l,q,r=n.isWebGL2;var i=new function(){var t=!1,n=new it,l=null,q=new it(0,0,0,0);return{setMask:function(n){l===n||t||(e.colorMask(n,n,n,n),l=n)},setLocked:function(e){t=e},setClear:function(t,l,r,i,a){!0===a&&(t*=i,l*=i,r*=i),n.set(t,l,r,i),!1===q.equals(n)&&(e.clearColor(t,l,r,i),q.copy(n))},reset:function(){t=!1,l=null,q.set(-1,0,0,0)}}},a=new function(){var t=!1,n=null,l=null,q=null;return{setTest:function(e){e?N(2929):U(2929)},setMask:function(l){n===l||t||(e.depthMask(l),n=l)},setFunc:function(t){if(l!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);l=t}},setLocked:function(e){t=e},setClear:function(t){q!==t&&(e.clearDepth(t),q=t)},reset:function(){t=!1,n=null,l=null,q=null}}},o=new function(){var t=!1,n=null,l=null,q=null,r=null,i=null,a=null,o=null,s=null;return{setTest:function(e){t||(e?N(2960):U(2960))},setMask:function(l){n===l||t||(e.stencilMask(l),n=l)},setFunc:function(t,n,i){l===t&&q===n&&r===i||(e.stencilFunc(t,n,i),l=t,q=n,r=i)},setOp:function(t,n,l){i===t&&a===n&&o===l||(e.stencilOp(t,n,l),i=t,a=n,o=l)},setLocked:function(e){t=e},setClear:function(t){s!==t&&(e.clearStencil(t),s=t)},reset:function(){t=!1,n=null,l=null,q=null,r=null,i=null,a=null,o=null,s=null}}},s={},u={},A=null,c=!1,m=null,h=null,f=null,d=null,p=null,x=null,v=null,g=!1,_=null,y=null,b=null,M=null,S=null,E=e.getParameter(35661),z=!1,k=0,T=e.getParameter(7938);-1!==T.indexOf("WebGL")?(k=parseFloat(/^WebGL (\d)/.exec(T)[1]),z=k>=1):-1!==T.indexOf("OpenGL ES")&&(k=parseFloat(/^OpenGL ES (\d)/.exec(T)[1]),z=k>=2);var C=null,L={},P=e.getParameter(3088),R=e.getParameter(2978),D=(new it).fromArray(P),I=(new it).fromArray(R);function O(t,n,l){var q=new Uint8Array(4),r=e.createTexture();e.bindTexture(t,r),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var i=0;i<l;i++)e.texImage2D(n+i,0,6408,1,1,0,6408,5121,q);return r}var B={};function N(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function U(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}B[3553]=O(3553,3553,1),B[34067]=O(34067,34069,6),i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),N(2929),a.setFunc(3),V(!1),W(1),N(2884),j(0);var F=(w(l={},X,32774),w(l,101,32778),w(l,102,32779),l);if(r)F[103]=32775,F[104]=32776;else{var H=t.get("EXT_blend_minmax");null!==H&&(F[103]=H.MIN_EXT,F[104]=H.MAX_EXT)}var G=(w(q={},200,0),w(q,201,1),w(q,202,768),w(q,204,770),w(q,210,776),w(q,208,774),w(q,206,772),w(q,203,769),w(q,205,771),w(q,209,775),w(q,207,773),q);function j(t,n,l,q,r,i,a,o){if(0!==t){if(!1===c&&(N(3042),c=!0),5===t)r=r||n,i=i||l,a=a||q,n===h&&r===p||(e.blendEquationSeparate(F[n],F[r]),h=n,p=r),l===f&&q===d&&i===x&&a===v||(e.blendFuncSeparate(G[l],G[q],G[i],G[a]),f=l,d=q,x=i,v=a),m=t,g=null;else if(t!==m||o!==g){if(h===X&&p===X||(e.blendEquation(32774),h=X,p=X),o)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,d=null,x=null,v=null,m=t,g=o}}else!0===c&&(U(3042),c=!1)}function V(t){_!==t&&(t?e.frontFace(2304):e.frontFace(2305),_=t)}function W(t){0!==t?(N(2884),t!==y&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):U(2884),y=t}function Q(t,n,l){t?(N(32823),M===n&&S===l||(e.polygonOffset(n,l),M=n,S=l)):U(32823)}function Y(t){void 0===t&&(t=33984+E-1),C!==t&&(e.activeTexture(t),C=t)}return{buffers:{color:i,depth:a,stencil:o},enable:N,disable:U,bindFramebuffer:function(t,n){return u[t]!==n&&(e.bindFramebuffer(t,n),u[t]=n,r&&(36009===t&&(u[36160]=n),36160===t&&(u[36009]=n)),!0)},useProgram:function(t){return A!==t&&(e.useProgram(t),A=t,!0)},setBlending:j,setMaterial:function(e,t){2===e.side?U(2884):N(2884);var n=1===e.side;t&&(n=!n),V(n),1===e.blending&&!1===e.transparent?j(0):j(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),i.setMask(e.colorWrite);var l=e.stencilWrite;o.setTest(l),l&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Q(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?N(32926):U(32926)},setFlipSided:V,setCullFace:W,setLineWidth:function(t){t!==b&&(z&&e.lineWidth(t),b=t)},setPolygonOffset:Q,setScissorTest:function(e){e?N(3089):U(3089)},activeTexture:Y,bindTexture:function(t,n){null===C&&Y();var l=L[C];void 0===l&&(l={type:void 0,texture:void 0},L[C]=l),l.type===t&&l.texture===n||(e.bindTexture(t,n||B[t]),l.type=t,l.texture=n)},unbindTexture:function(){var t=L[C];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===D.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),D.copy(t))},viewport:function(t){!1===I.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),I.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===r&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),s={},C=null,L={},u={},A=null,c=!1,m=null,h=null,f=null,d=null,p=null,x=null,v=null,g=!1,_=null,y=null,b=null,M=null,S=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),o.reset()}}}function hi(e,t,n,l,q,r,i){var a,o,s,u=q.isWebGL2,A=q.maxTextures,c=q.maxCubemapSize,m=q.maxTextureSize,h=q.maxSamples,f=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):void 0,d=new WeakMap,p=!1;try{p="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(H){}function x(e,t){return p?new OffscreenCanvas(e,t):et("canvas")}function v(e,t,n,l){var q=1;if((e.width>l||e.height>l)&&(q=l/Math.max(e.width,e.height)),q<1||!0===t){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var r=t?Ye:Math.floor,i=r(q*e.width),a=r(q*e.height);void 0===s&&(s=x(i,a));var o=n?x(i,a):s;return o.width=i,o.height=a,o.getContext("2d").drawImage(e,0,0,i,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+i+"x"+a+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function g(e){return We(e.width)&&We(e.height)}function _(e,t){return e.generateMipmaps&&t&&e.minFilter!==re&&e.minFilter!==oe}function y(t){e.generateMipmap(t)}function b(n,l,q){if(!1===u)return l;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var r=l;return 6403===l&&(5126===q&&(r=33326),5131===q&&(r=33325),5121===q&&(r=33321)),6407===l&&(5126===q&&(r=34837),5131===q&&(r=34843),5121===q&&(r=32849)),6408===l&&(5126===q&&(r=34836),5131===q&&(r=34842),5121===q&&(r=32856)),33325!==r&&33326!==r&&34842!==r&&34836!==r||t.get("EXT_color_buffer_float"),r}function M(e){return e===re||e===ie||e===ae?9728:9729}function S(t){var n=t.target;n.removeEventListener("dispose",S),function(t){var n=l.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),l.remove(t)}(n),n.isVideoTexture&&d.delete(n),i.memory.textures--}function E(t){var n=t.target;n.removeEventListener("dispose",E),function(t){var n=t.texture,q=l.get(t),r=l.get(n);if(!t)return;void 0!==r.__webglTexture&&(e.deleteTexture(r.__webglTexture),i.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(var a=0;a<6;a++)e.deleteFramebuffer(q.__webglFramebuffer[a]),q.__webglDepthbuffer&&e.deleteRenderbuffer(q.__webglDepthbuffer[a]);else e.deleteFramebuffer(q.__webglFramebuffer),q.__webglDepthbuffer&&e.deleteRenderbuffer(q.__webglDepthbuffer),q.__webglMultisampledFramebuffer&&e.deleteFramebuffer(q.__webglMultisampledFramebuffer),q.__webglColorRenderbuffer&&e.deleteRenderbuffer(q.__webglColorRenderbuffer),q.__webglDepthRenderbuffer&&e.deleteRenderbuffer(q.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(var o=0,s=n.length;o<s;o++){var u=l.get(n[o]);u.__webglTexture&&(e.deleteTexture(u.__webglTexture),i.memory.textures--),l.remove(n[o])}l.remove(n),l.remove(t)}(n)}var z=0;function k(e,t){var q=l.get(e);if(e.isVideoTexture&&function(e){var t=i.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&q.__version!==e.version){var r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==r.complete)return void D(q,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,q.__webglTexture)}function T(t,q){var i=l.get(t);t.version>0&&i.__version!==t.version?function(t,l,q){if(6!==l.image.length)return;R(t,l),n.activeTexture(33984+q),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,l.flipY),e.pixelStorei(37441,l.premultiplyAlpha),e.pixelStorei(3317,l.unpackAlignment),e.pixelStorei(37443,0);for(var i=l&&(l.isCompressedTexture||l.image[0].isCompressedTexture),a=l.image[0]&&l.image[0].isDataTexture,o=[],s=0;s<6;s++)o[s]=i||a?a?l.image[s].image:l.image[s]:v(l.image[s],!1,!0,c);var A,m=g(o[0])||u,h=r.convert(l.format),f=r.convert(l.type),d=b(l.internalFormat,h,f,l.encoding);if(P(34067,l,m),i)for(var p=0;p<6;p++){A=o[p].mipmaps;for(var x=0;x<A.length;x++){var w=A[x];l.format!==pe&&l.format!==de?null!==h?n.compressedTexImage2D(34069+p,x,d,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+p,x,d,w.width,w.height,0,h,f,w.data)}}else{A=l.mipmaps;for(var M=0;M<6;M++)if(a){n.texImage2D(34069+M,0,d,o[M].width,o[M].height,0,h,f,o[M].data);for(var S=0;S<A.length;S++){var E=A[S].image[M].image;n.texImage2D(34069+M,S+1,d,E.width,E.height,0,h,f,E.data)}}else{n.texImage2D(34069+M,0,d,h,f,o[M]);for(var z=0;z<A.length;z++){var k=A[z];n.texImage2D(34069+M,z+1,d,h,f,k.image[M])}}}_(l,m)&&y(34067);t.__version=l.version,l.onUpdate&&l.onUpdate(l)}(i,t,q):(n.activeTexture(33984+q),n.bindTexture(34067,i.__webglTexture))}var C=(w(a={},ne,10497),w(a,le,33071),w(a,qe,33648),a),L=(w(o={},re,9728),w(o,ie,9984),w(o,ae,9986),w(o,oe,9729),w(o,1007,9985),w(o,se,9987),o);function P(n,r,i){if(i?(e.texParameteri(n,10242,C[r.wrapS]),e.texParameteri(n,10243,C[r.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,C[r.wrapR]),e.texParameteri(n,10240,L[r.magFilter]),e.texParameteri(n,10241,L[r.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),r.wrapS===le&&r.wrapT===le||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,M(r.magFilter)),e.texParameteri(n,10241,M(r.minFilter)),r.minFilter!==re&&r.minFilter!==oe&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){var a=t.get("EXT_texture_filter_anisotropic");if(r.type===me&&!1===t.has("OES_texture_float_linear"))return;if(!1===u&&r.type===he&&!1===t.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||l.get(r).__currentAnisotropy)&&(e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,q.getMaxAnisotropy())),l.get(r).__currentAnisotropy=r.anisotropy)}}function R(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",S),t.__webglTexture=e.createTexture(),i.memory.textures++)}function D(t,l,q){var i=3553;l.isDataTexture2DArray&&(i=35866),l.isDataTexture3D&&(i=32879),R(t,l),n.activeTexture(33984+q),n.bindTexture(i,t.__webglTexture),e.pixelStorei(37440,l.flipY),e.pixelStorei(37441,l.premultiplyAlpha),e.pixelStorei(3317,l.unpackAlignment),e.pixelStorei(37443,0);var a,o=function(e){return!u&&(e.wrapS!==le||e.wrapT!==le||e.minFilter!==re&&e.minFilter!==oe)}(l)&&!1===g(l.image),s=v(l.image,o,!1,m),A=g(s)||u,c=r.convert(l.format),h=r.convert(l.type),f=b(l.internalFormat,c,h,l.encoding);P(i,l,A);var d=l.mipmaps;if(l.isDepthTexture)f=6402,u?f=l.type===me?36012:l.type===ce?33190:l.type===fe?35056:33189:l.type===me&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),l.format===xe&&6402===f&&l.type!==Ae&&l.type!==ce&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),l.type=Ae,h=r.convert(l.type)),l.format===ve&&6402===f&&(f=34041,l.type!==fe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),l.type=fe,h=r.convert(l.type))),n.texImage2D(3553,0,f,s.width,s.height,0,c,h,null);else if(l.isDataTexture)if(d.length>0&&A){for(var p=0,x=d.length;p<x;p++)a=d[p],n.texImage2D(3553,p,f,a.width,a.height,0,c,h,a.data);l.generateMipmaps=!1}else n.texImage2D(3553,0,f,s.width,s.height,0,c,h,s.data);else if(l.isCompressedTexture)for(var w=0,M=d.length;w<M;w++)a=d[w],l.format!==pe&&l.format!==de?null!==c?n.compressedTexImage2D(3553,w,f,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,w,f,a.width,a.height,0,c,h,a.data);else if(l.isDataTexture2DArray)n.texImage3D(35866,0,f,s.width,s.height,s.depth,0,c,h,s.data);else if(l.isDataTexture3D)n.texImage3D(32879,0,f,s.width,s.height,s.depth,0,c,h,s.data);else{var S=function(e,t,n){return!0===_(e,n)?Math.log2(Math.max(t.width,t.height))+1:e.mipmaps.length>0?e.mipmaps.length:1}(l,s,A),E=u&&!0!==l.isVideoTexture,z=void 0===t.__version;if(d.length>0&&A){E&&z&&n.texStorage2D(3553,S,f,d[0].width,d[0].height);for(var k=0,T=d.length;k<T;k++)a=d[k],E?n.texSubImage2D(3553,k,0,0,c,h,a):n.texImage2D(3553,k,f,c,h,a);l.generateMipmaps=!1}else E?(z&&n.texStorage2D(3553,S,f,s.width,s.height),n.texSubImage2D(3553,0,0,0,c,h,s)):n.texImage2D(3553,0,f,c,h,s)}_(l,A)&&y(i),t.__version=l.version,l.onUpdate&&l.onUpdate(l)}function I(t,q,i,a,o){var s=r.convert(i.format),u=r.convert(i.type),A=b(i.internalFormat,s,u,i.encoding);l.get(q).__hasExternalTextures||(32879===o||35866===o?n.texImage3D(o,0,A,q.width,q.height,q.depth,0,s,u,null):n.texImage2D(o,0,A,q.width,q.height,0,s,u,null)),n.bindFramebuffer(36160,t),q.useRenderToTexture?f.framebufferTexture2DMultisampleEXT(36160,a,o,l.get(i).__webglTexture,0,N(q)):e.framebufferTexture2D(36160,a,o,l.get(i).__webglTexture,0),n.bindFramebuffer(36160,null)}function O(t,n,l){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){var q=33189;if(l||n.useRenderToTexture){var i=n.depthTexture;i&&i.isDepthTexture&&(i.type===me?q=36012:i.type===ce&&(q=33190));var a=N(n);n.useRenderToTexture?f.renderbufferStorageMultisampleEXT(36161,a,q,n.width,n.height):e.renderbufferStorageMultisample(36161,a,q,n.width,n.height)}else e.renderbufferStorage(36161,q,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){var o=N(n);l&&n.useRenderbuffer?e.renderbufferStorageMultisample(36161,o,35056,n.width,n.height):n.useRenderToTexture?f.renderbufferStorageMultisampleEXT(36161,o,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{var s=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,u=r.convert(s.format),A=r.convert(s.type),c=b(s.internalFormat,u,A,s.encoding),m=N(n);l&&n.useRenderbuffer?e.renderbufferStorageMultisample(36161,m,c,n.width,n.height):n.useRenderToTexture?f.renderbufferStorageMultisampleEXT(36161,m,c,n.width,n.height):e.renderbufferStorage(36161,c,n.width,n.height)}e.bindRenderbuffer(36161,null)}function B(t){var q=l.get(t),r=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!q.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,q){if(q&&q.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!q.depthTexture||!q.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");l.get(q.depthTexture).__webglTexture&&q.depthTexture.image.width===q.width&&q.depthTexture.image.height===q.height||(q.depthTexture.image.width=q.width,q.depthTexture.image.height=q.height,q.depthTexture.needsUpdate=!0),k(q.depthTexture,0);var r=l.get(q.depthTexture).__webglTexture,i=N(q);if(q.depthTexture.format===xe)q.useRenderToTexture?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,r,0,i):e.framebufferTexture2D(36160,36096,3553,r,0);else{if(q.depthTexture.format!==ve)throw new Error("Unknown depthTexture format");q.useRenderToTexture?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,r,0,i):e.framebufferTexture2D(36160,33306,3553,r,0)}}(q.__webglFramebuffer,t)}else if(r){q.__webglDepthbuffer=[];for(var i=0;i<6;i++)n.bindFramebuffer(36160,q.__webglFramebuffer[i]),q.__webglDepthbuffer[i]=e.createRenderbuffer(),O(q.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(36160,q.__webglFramebuffer),q.__webglDepthbuffer=e.createRenderbuffer(),O(q.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function N(e){return u&&(e.useRenderbuffer||e.useRenderToTexture)?Math.min(h,e.samples):0}var U=!1,F=!1;this.allocateTextureUnit=function(){var e=z;return e>=A&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+A),z+=1,e},this.resetTextureUnits=function(){z=0},this.setTexture2D=k,this.setTexture2DArray=function(e,t){var q=l.get(e);e.version>0&&q.__version!==e.version?D(q,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,q.__webglTexture))},this.setTexture3D=function(e,t){var q=l.get(e);e.version>0&&q.__version!==e.version?D(q,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,q.__webglTexture))},this.setTextureCube=T,this.rebindTextures=function(e,t,n){var q=l.get(e);void 0!==t&&I(q.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&B(e)},this.setupRenderTarget=function(t){var a=t.texture,o=l.get(t),s=l.get(a);t.addEventListener("dispose",E),!0!==t.isWebGLMultipleRenderTargets&&(void 0===s.__webglTexture&&(s.__webglTexture=e.createTexture()),s.__version=a.version,i.memory.textures++);var A=!0===t.isWebGLCubeRenderTarget,c=!0===t.isWebGLMultipleRenderTargets,m=a.isDataTexture3D||a.isDataTexture2DArray,h=g(t)||u;if(!u||a.format!==de||a.type!==me&&a.type!==he||(a.format=pe,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),A){o.__webglFramebuffer=[];for(var f=0;f<6;f++)o.__webglFramebuffer[f]=e.createFramebuffer()}else if(o.__webglFramebuffer=e.createFramebuffer(),c)if(q.drawBuffers)for(var d=t.texture,p=0,x=d.length;p<x;p++){var v=l.get(d[p]);void 0===v.__webglTexture&&(v.__webglTexture=e.createTexture(),i.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(t.useRenderbuffer)if(u){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,o.__webglColorRenderbuffer);var w=r.convert(a.format),M=r.convert(a.type),S=b(a.internalFormat,w,M,a.encoding),z=N(t);e.renderbufferStorageMultisample(36161,z,S,t.width,t.height),n.bindFramebuffer(36160,o.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,o.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),O(o.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(A){n.bindTexture(34067,s.__webglTexture),P(34067,a,h);for(var k=0;k<6;k++)I(o.__webglFramebuffer[k],t,a,36064,34069+k);_(a,h)&&y(34067),n.unbindTexture()}else if(c){for(var T=t.texture,C=0,L=T.length;C<L;C++){var R=T[C],D=l.get(R);n.bindTexture(3553,D.__webglTexture),P(3553,R,h),I(o.__webglFramebuffer,t,R,36064+C,3553),_(R,h)&&y(3553)}n.unbindTexture()}else{var U=3553;if(m)if(u)U=a.isDataTexture3D?32879:35866;else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(U,s.__webglTexture),P(U,a,h),I(o.__webglFramebuffer,t,a,36064,U),_(a,h)&&y(U),n.unbindTexture()}t.depthBuffer&&B(t)},this.updateRenderTargetMipmap=function(e){for(var t=g(e)||u,q=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],r=0,i=q.length;r<i;r++){var a=q[r];if(_(a,t)){var o=e.isWebGLCubeRenderTarget?34067:3553,s=l.get(a).__webglTexture;n.bindTexture(o,s),y(o),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.useRenderbuffer)if(u){var q=t.width,r=t.height,i=16384,a=[36064],o=t.stencilBuffer?33306:36096;t.depthBuffer&&a.push(o),t.ignoreDepthForMultisampleCopy||(t.depthBuffer&&(i|=256),t.stencilBuffer&&(i|=1024));var s=l.get(t);n.bindFramebuffer(36008,s.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,s.__webglFramebuffer),t.ignoreDepthForMultisampleCopy&&(e.invalidateFramebuffer(36008,[o]),e.invalidateFramebuffer(36009,[o])),e.blitFramebuffer(0,0,q,r,0,0,q,r,i,9728),e.invalidateFramebuffer(36008,a),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,s.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=I,this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),U=!0),e=e.texture),k(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),T(e,t)}}function fi(e,t,n){var l=n.isWebGL2;return{convert:function(e){var n;if(e===ue)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(e===Ae)return 5123;if(1013===e)return 5124;if(e===ce)return 5125;if(e===me)return 5126;if(e===he)return l?5131:null!==(n=t.get("OES_texture_half_float"))?n.HALF_FLOAT_OES:null;if(1021===e)return 6406;if(e===de)return 6407;if(e===pe)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(e===xe)return 6402;if(e===ve)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(null===(n=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(null===(n=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===e)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return null!==(n=t.get("WEBGL_compressed_texture_etc1"))?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&null!==(n=t.get("WEBGL_compressed_texture_etc"))){if(37492===e)return n.COMPRESSED_RGB8_ETC2;if(37496===e)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?null!==(n=t.get("WEBGL_compressed_texture_astc"))?e:null:36492===e?null!==(n=t.get("EXT_texture_compression_bptc"))?e:null:e===fe?l?34042:null!==(n=t.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}var di=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return O(this,n),(e=t.call(this)).cameras=l,e}return N(n)}(yl);di.prototype.isArrayCamera=!0;var pi=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="Group",e}return N(n)}(hn);pi.prototype.isGroup=!0;var xi={type:"move"},vi=function(){function e(){O(this,e),this._targetRay=null,this._grip=null,this._hand=null}return N(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new pi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new pi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new At,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new At),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new pi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new At,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new At),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,t,n){var l=null,q=null,r=null,i=this._targetRay,a=this._grip,o=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==i&&null!==(l=t.getPose(e.targetRaySpace,n))&&(i.matrix.fromArray(l.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),l.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(l.linearVelocity)):i.hasLinearVelocity=!1,l.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(l.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(xi)),o&&e.hand){r=!0;var s,u=b(e.hand.values());try{for(u.s();!(s=u.n()).done;){var A=s.value,c=t.getJointPose(A,n);if(void 0===o.joints[A.jointName]){var m=new pi;m.matrixAutoUpdate=!1,m.visible=!1,o.joints[A.jointName]=m,o.add(m)}var h=o.joints[A.jointName];null!==c&&(h.matrix.fromArray(c.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.jointRadius=c.radius),h.visible=null!==c}}catch(x){u.e(x)}finally{u.f()}var f=o.joints["index-finger-tip"],d=o.joints["thumb-tip"],p=f.position.distanceTo(d.position);o.inputState.pinching&&p>.025?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!o.inputState.pinching&&p<=.015&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==a&&e.gripSpace&&null!==(q=t.getPose(e.gripSpace,n))&&(a.matrix.fromArray(q.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),q.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(q.linearVelocity)):a.hasLinearVelocity=!1,q.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(q.angularVelocity)):a.hasAngularVelocity=!1);return null!==i&&(i.visible=null!==l),null!==a&&(a.visible=null!==q),null!==o&&(o.visible=null!==r),this}}]),e}(),gi=function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a,o,s,u,A){var c;if(O(this,n),(A=void 0!==A?A:xe)!==xe&&A!==ve)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===q&&A===xe&&(q=Ae),void 0===q&&A===ve&&(q=fe),(c=t.call(this,null,r,i,a,o,s,A,q,u)).image={width:e,height:l},c.magFilter=void 0!==o?o:re,c.minFilter=void 0!==s?s:re,c.flipY=!1,c.generateMipmaps=!1,c}return N(n)}(qt);gi.prototype.isDepthTexture=!0;var _i=function(e){R(n,e);var t=I(n);function n(e,l){var q;O(this,n);var r=E(q=t.call(this)),i=null,a=1,o=null,s="local-floor",u=e.extensions.has("WEBGL_multisampled_render_to_texture"),A=null,c=null,m=null,h=null,f=!1,d=null,p=l.getContextAttributes(),x=null,v=null,_=[],y=new Map,b=new yl;b.layers.enable(1),b.viewport=new it;var w=new yl;w.layers.enable(2),w.viewport=new it;var M=[b,w],S=new di;S.layers.enable(1),S.layers.enable(2);var z=null,k=null;function T(e){var t=y.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function C(){y.forEach((function(e,t){e.disconnect(t)})),y.clear(),z=null,k=null,e.setRenderTarget(x),h=null,m=null,c=null,i=null,v=null,B.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function L(e){for(var t=i.inputSources,n=0;n<_.length;n++)y.set(t[n],_[n]);for(var l=0;l<e.removed.length;l++){var q=e.removed[l],r=y.get(q);r&&(r.dispatchEvent({type:"disconnected",data:q}),y.delete(q))}for(var a=0;a<e.added.length;a++){var o=e.added[a],s=y.get(o);s&&s.dispatchEvent({type:"connected",data:o})}}q.cameraAutoUpdate=!0,q.enabled=!1,q.isPresenting=!1,q.getController=function(e){var t=_[e];return void 0===t&&(t=new vi,_[e]=t),t.getTargetRaySpace()},q.getControllerGrip=function(e){var t=_[e];return void 0===t&&(t=new vi,_[e]=t),t.getGripSpace()},q.getHand=function(e){var t=_[e];return void 0===t&&(t=new vi,_[e]=t),t.getHandSpace()},q.setFramebufferScaleFactor=function(e){a=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},q.setReferenceSpaceType=function(e){s=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},q.getReferenceSpace=function(){return o},q.getBaseLayer=function(){return null!==m?m:h},q.getBinding=function(){return c},q.getFrame=function(){return d},q.getSession=function(){return i},q.setSession=function(){var t,n=(t=H().mark((function t(n){var q,A,d,g,_;return H().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null===(i=n)){t.next=23;break}if(x=e.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",C),i.addEventListener("inputsourceschange",L),!0===p.xrCompatible){t.next=14;break}return t.next=14,l.makeXRCompatible();case 14:return void 0===i.renderState.layers||!1===e.capabilities.isWebGL2?(q={antialias:void 0!==i.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:a},h=new XRWebGLLayer(i,l,q),i.updateRenderState({baseLayer:h}),v=new at(h.framebufferWidth,h.framebufferHeight)):(f=p.antialias,A=null,d=null,g=null,p.depth&&(g=p.stencil?35056:33189,A=p.stencil?ve:xe,d=p.stencil?fe:Ae),_={colorFormat:p.alpha||f?32856:32849,depthFormat:g,scaleFactor:a},c=new XRWebGLBinding(i,l),m=c.createProjectionLayer(_),i.updateRenderState({layers:[m]}),v=f?new st(m.textureWidth,m.textureHeight,{format:pe,type:ue,depthTexture:new gi(m.textureWidth,m.textureHeight,d,void 0,void 0,void 0,void 0,void 0,void 0,A),stencilBuffer:p.stencil,ignoreDepth:m.ignoreDepthValues,useRenderToTexture:u}):new at(m.textureWidth,m.textureHeight,{format:p.alpha?pe:de,type:ue,depthTexture:new gi(m.textureWidth,m.textureHeight,d,void 0,void 0,void 0,void 0,void 0,void 0,A),stencilBuffer:p.stencil,ignoreDepth:m.ignoreDepthValues})),this.setFoveation(0),t.next=18,i.requestReferenceSpace(s);case 18:o=t.sent,B.setContext(i),B.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"});case 23:case"end":return t.stop()}}),t,this)})),function(){var e=this,n=arguments;return new Promise((function(l,q){var r=t.apply(e,n);function i(e){g(r,l,q,i,a,"next",e)}function a(e){g(r,l,q,i,a,"throw",e)}i(void 0)}))});return function(e){return n.apply(this,arguments)}}();var P=new At,R=new At;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}q.updateCamera=function(e){if(null!==i){S.near=w.near=b.near=e.near,S.far=w.far=b.far=e.far,z===S.near&&k===S.far||(i.updateRenderState({depthNear:S.near,depthFar:S.far}),z=S.near,k=S.far);var t=e.parent,n=S.cameras;D(S,t);for(var l=0;l<n.length;l++)D(n[l],t);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),e.position.copy(S.position),e.quaternion.copy(S.quaternion),e.scale.copy(S.scale),e.matrix.copy(S.matrix),e.matrixWorld.copy(S.matrixWorld);for(var q=e.children,r=0,a=q.length;r<a;r++)q[r].updateMatrixWorld(!0);2===n.length?function(e,t,n){P.setFromMatrixPosition(t.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);var l=P.distanceTo(R),q=t.projectionMatrix.elements,r=n.projectionMatrix.elements,i=q[14]/(q[10]-1),a=q[14]/(q[10]+1),o=(q[9]+1)/q[5],s=(q[9]-1)/q[5],u=(q[8]-1)/q[0],A=(r[8]+1)/r[0],c=i*u,m=i*A,h=l/(-u+A),f=h*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(h),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var d=i+h,p=a+h,x=c-f,v=m+(l-f),g=o*a/p*d,_=s*a/p*d;e.projectionMatrix.makePerspective(x,v,g,_,d,p)}(S,b,w):S.projectionMatrix.copy(b.projectionMatrix)}},q.getCamera=function(){return S},q.getFoveation=function(){return null!==m?m.fixedFoveation:null!==h?h.fixedFoveation:void 0},q.setFoveation=function(e){null!==m&&(m.fixedFoveation=e),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=e)};var I=null;var B=new Rl;return B.setAnimationLoop((function(t,n){if(A=n.getViewerPose(o),d=n,null!==A){var l=A.views;null!==h&&(e.setRenderTargetFramebuffer(v,h.framebuffer),e.setRenderTarget(v));var q=!1;l.length!==S.cameras.length&&(S.cameras.length=0,q=!0);for(var r=0;r<l.length;r++){var a=l[r],s=null;if(null!==h)s=h.getViewport(a);else{var u=c.getViewSubImage(m,a);s=u.viewport,0===r&&(e.setRenderTargetTextures(v,u.colorTexture,m.ignoreDepthValues?void 0:u.depthStencilTexture),e.setRenderTarget(v))}var f=M[r];f.matrix.fromArray(a.transform.matrix),f.projectionMatrix.fromArray(a.projectionMatrix),f.viewport.set(s.x,s.y,s.width,s.height),0===r&&S.matrix.copy(f.matrix),!0===q&&S.cameras.push(f)}}for(var p=i.inputSources,x=0;x<_.length;x++){var g=_[x],y=p[x];g.update(y,n,o)}I&&I(t,n),d=null})),q.setAnimationLoop=function(e){I=e},q.dispose=function(){},q}return N(n)}(Ie);function yi(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap),n.alphaTest>0&&(t.alphaTest.value=n.alphaTest);var l,q,r=e.get(n).envMap;r&&(t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=n.reflectivity,t.ior.value=n.ior,t.refractionRatio.value=n.refractionRatio),n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?l=n.map:n.specularMap?l=n.specularMap:n.displacementMap?l=n.displacementMap:n.normalMap?l=n.normalMap:n.bumpMap?l=n.bumpMap:n.roughnessMap?l=n.roughnessMap:n.metalnessMap?l=n.metalnessMap:n.alphaMap?l=n.alphaMap:n.emissiveMap?l=n.emissiveMap:n.clearcoatMap?l=n.clearcoatMap:n.clearcoatNormalMap?l=n.clearcoatNormalMap:n.clearcoatRoughnessMap?l=n.clearcoatRoughnessMap:n.specularIntensityMap?l=n.specularIntensityMap:n.specularColorMap?l=n.specularColorMap:n.transmissionMap?l=n.transmissionMap:n.thicknessMap?l=n.thicknessMap:n.sheenColorMap?l=n.sheenColorMap:n.sheenRoughnessMap&&(l=n.sheenRoughnessMap),void 0!==l&&(l.isWebGLRenderTarget&&(l=l.texture),!0===l.matrixAutoUpdate&&l.updateMatrix(),t.uvTransform.value.copy(l.matrix)),n.aoMap?q=n.aoMap:n.lightMap&&(q=n.lightMap),void 0!==q&&(q.isWebGLRenderTarget&&(q=q.texture),!0===q.matrixAutoUpdate&&q.updateMatrix(),t.uv2Transform.value.copy(q.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,l,q,r,i){l.isMeshBasicMaterial?t(e,l):l.isMeshLambertMaterial?(t(e,l),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,l)):l.isMeshToonMaterial?(t(e,l),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,l)):l.isMeshPhongMaterial?(t(e,l),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,l)):l.isMeshStandardMaterial?(t(e,l),l.isMeshPhysicalMaterial?function(e,t,l){n(e,t),e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate()));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=l.texture,e.transmissionSamplerSize.value.set(l.width,l.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap);t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,l,i):n(e,l)):l.isMeshMatcapMaterial?(t(e,l),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,l)):l.isMeshDepthMaterial?(t(e,l),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,l)):l.isMeshDistanceMaterial?(t(e,l),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,l)):l.isMeshNormalMaterial?(t(e,l),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,l)):l.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,l),l.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,l)):l.isPointsMaterial?function(e,t,n,l){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*l,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var q;t.map?q=t.map:t.alphaMap&&(q=t.alphaMap);void 0!==q&&(!0===q.matrixAutoUpdate&&q.updateMatrix(),e.uvTransform.value.copy(q.matrix))}(e,l,q,r):l.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,l):l.isShadowMaterial?(e.color.value.copy(l.color),e.opacity.value=l.opacity):l.isShaderMaterial&&(l.uniformsNeedUpdate=!1)}}}function bi(){var e=et("canvas");return e.style.display="block",e}function wi(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=void 0!==e.canvas?e.canvas:bi(),n=void 0!==e.context?e.context:null,l=void 0!==e.alpha&&e.alpha,q=void 0===e.depth||e.depth,r=void 0===e.stencil||e.stencil,i=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,o=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,s=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,A=null,c=null,m=[],h=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=ze,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;var f=this,d=!1,p=0,x=0,v=null,g=-1,_=null,y=new it,b=new it,w=null,M=t.width,S=t.height,E=1,z=null,k=null,T=new it(0,0,M,S),C=new it(0,0,M,S),L=!1,P=[],R=new Pl,D=!1,I=!1,O=null,B=new Ht,N=new At,U={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function F(){return null===v?E:1}var H,j,V,W,Q,Y,X,Z,J,K,$,ee,te,ne,qe,ie,ae,oe,Ae,ce,fe,de,xe,ve=n;function ge(e,n){for(var l=0;l<e.length;l++){var q=e[l],r=t.getContext(q,n);if(null!==r)return r}return null}try{var _e={alpha:l,depth:q,stencil:r,antialias:i,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:s,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine","three.js r".concat(G)),t.addEventListener("webglcontextlost",Me,!1),t.addEventListener("webglcontextrestored",Se,!1),null===ve){var ye=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&ye.shift(),null===(ve=ge(ye,_e)))throw ge(ye)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ve.getShaderPrecisionFormat&&(ve.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(We){throw console.error("THREE.WebGLRenderer: "+We.message),We}function be(){H=new pq(ve),j=new Gl(ve,H,e),H.init(j),de=new fi(ve,H,j),V=new mi(ve,H,j),P[0]=1029,W=new gq(ve),Q=new $r,Y=new hi(ve,H,V,Q,j,de,W),X=new Vl(f),Z=new dq(f),J=new Dl(ve,j),xe=new Fl(ve,H,J,j),K=new xq(ve,J,W,xe),$=new Sq(ve,K,J,W),Ae=new Mq(ve,j,Y),ie=new jl(Q),ee=new Kr(f,X,Z,H,j,xe,ie),te=new yi(Q),ne=new li(Q),qe=new si(H,j),oe=new Ul(f,X,V,$,a),ae=new ci(f,$,j),ce=new Hl(ve,H,W,j),fe=new vq(ve,H,W,j),W.programs=ee.programs,f.capabilities=j,f.extensions=H,f.properties=Q,f.renderLists=ne,f.shadowMap=ae,f.state=V,f.info=W}be();var we=new _i(f,ve);function Me(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),d=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),d=!1;var e=W.autoReset,t=ae.enabled,n=ae.autoUpdate,l=ae.needsUpdate,q=ae.type;be(),W.autoReset=e,ae.enabled=t,ae.autoUpdate=n,ae.needsUpdate=l,ae.type=q}function Ee(e){var t=e.target;t.removeEventListener("dispose",Ee),ke(t)}function ke(e){Te(e),Q.remove(e)}function Te(e){var t=Q.get(e).programs;void 0!==t&&t.forEach((function(e){ee.releaseProgram(e)}))}this.xr=we,this.getContext=function(){return ve},this.getContextAttributes=function(){return ve.getContextAttributes()},this.forceContextLoss=function(){var e=H.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=H.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return E},this.setPixelRatio=function(e){void 0!==e&&(E=e,this.setSize(M,S,!1))},this.getSize=function(e){return e.set(M,S)},this.setSize=function(e,n,l){we.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,S=n,t.width=Math.floor(e*E),t.height=Math.floor(n*E),!1!==l&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(M*E,S*E).floor()},this.setDrawingBufferSize=function(e,n,l){M=e,S=n,E=l,t.width=Math.floor(e*l),t.height=Math.floor(n*l),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(y)},this.getViewport=function(e){return e.copy(T)},this.setViewport=function(e,t,n,l){e.isVector4?T.set(e.x,e.y,e.z,e.w):T.set(e,t,n,l),V.viewport(y.copy(T).multiplyScalar(E).floor())},this.getScissor=function(e){return e.copy(C)},this.setScissor=function(e,t,n,l){e.isVector4?C.set(e.x,e.y,e.z,e.w):C.set(e,t,n,l),V.scissor(b.copy(C).multiplyScalar(E).floor())},this.getScissorTest=function(){return L},this.setScissorTest=function(e){V.setScissorTest(L=e)},this.setOpaqueSort=function(e){z=e},this.setTransparentSort=function(e){k=e},this.getClearColor=function(e){return e.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(e,t,n){var l=0;(void 0===e||e)&&(l|=16384),(void 0===t||t)&&(l|=256),(void 0===n||n)&&(l|=1024),ve.clear(l)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Me,!1),t.removeEventListener("webglcontextrestored",Se,!1),ne.dispose(),qe.dispose(),Q.dispose(),X.dispose(),Z.dispose(),$.dispose(),xe.dispose(),we.dispose(),we.removeEventListener("sessionstart",Pe),we.removeEventListener("sessionend",Re),O&&(O.dispose(),O=null),De.stop()},this.renderBufferDirect=function(e,t,n,l,q,r){null===t&&(t=U);var i=q.isMesh&&q.matrixWorld.determinant()<0,a=Ge(e,t,n,l,q);V.setMaterial(l,i);var o=n.index,s=n.attributes.position;if(null===o){if(void 0===s||0===s.count)return}else if(0===o.count)return;var u,A=1;!0===l.wireframe&&(o=K.getWireframeAttribute(n),A=2),xe.setup(q,l,a,n,o);var c=ce;null!==o&&(u=J.get(o),(c=fe).setIndex(u));var m=null!==o?o.count:s.count,h=n.drawRange.start*A,f=n.drawRange.count*A,d=null!==r?r.start*A:0,p=null!==r?r.count*A:1/0,x=Math.max(h,d),v=Math.min(m,h+f,d+p)-1,g=Math.max(0,v-x+1);if(0!==g){if(q.isMesh)!0===l.wireframe?(V.setLineWidth(l.wireframeLinewidth*F()),c.setMode(1)):c.setMode(4);else if(q.isLine){var _=l.linewidth;void 0===_&&(_=1),V.setLineWidth(_*F()),q.isLineSegments?c.setMode(1):q.isLineLoop?c.setMode(2):c.setMode(3)}else q.isPoints?c.setMode(0):q.isSprite&&c.setMode(4);if(q.isInstancedMesh)c.renderInstances(x,g,q.count);else if(n.isInstancedBufferGeometry){var y=Math.min(n.instanceCount,n._maxInstanceCount);c.renderInstances(x,g,y)}else c.render(x,g)}},this.compile=function(e,t){(c=qe.get(e)).init(),h.push(c),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(c.pushLight(e),e.castShadow&&c.pushShadow(e))})),c.setupLights(f.physicallyCorrectLights),e.traverse((function(t){var n=t.material;if(n)if(Array.isArray(n))for(var l=0;l<n.length;l++){Fe(n[l],e,t)}else Fe(n,e,t)})),h.pop(),c=null};var Ce=null;function Le(e){Ce&&Ce(e)}function Pe(){De.stop()}function Re(){De.start()}var De=new Rl;function Ie(e,t,n,l){if(!1!==e.visible){if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)c.pushLight(e),e.castShadow&&c.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||R.intersectsSprite(e)){l&&N.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);var q=$.update(e),r=e.material;r.visible&&A.push(e,q,r,n,N.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==W.render.frame&&(e.skeleton.update(),e.skeleton.frame=W.render.frame),!e.frustumCulled||R.intersectsObject(e))){l&&N.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);var i=$.update(e),a=e.material;if(Array.isArray(a))for(var o=i.groups,s=0,u=o.length;s<u;s++){var m=o[s],h=a[m.materialIndex];h&&h.visible&&A.push(e,i,h,n,N.z,m)}else a.visible&&A.push(e,i,a,n,N.z,null)}for(var f=e.children,d=0,p=f.length;d<p;d++)Ie(f[d],t,n,l)}}function Oe(e,t,n,l){var q=e.opaque,r=e.transmissive,i=e.transparent;c.setupLightsView(n),r.length>0&&Be(q,t,n),l&&V.viewport(y.copy(l)),q.length>0&&Ne(q,t,n),r.length>0&&Ne(r,t,n),i.length>0&&Ne(i,t,n)}function Be(e,t,n){if(null===O){var l=!0===i&&!0===j.isWebGL2;O=new(l?st:at)(1024,1024,{generateMipmaps:!0,type:null!==de.convert(he)?he:ue,minFilter:se,magFilter:re,wrapS:le,wrapT:le,useRenderToTexture:H.has("WEBGL_multisampled_render_to_texture")})}var q=f.getRenderTarget();f.setRenderTarget(O),f.clear();var r=f.toneMapping;f.toneMapping=0,Ne(e,t,n),f.toneMapping=r,Y.updateMultisampleRenderTarget(O),Y.updateRenderTargetMipmap(O),f.setRenderTarget(q)}function Ne(e,t,n){for(var l=!0===t.isScene?t.overrideMaterial:null,q=0,r=e.length;q<r;q++){var i=e[q],a=i.object,o=i.geometry,s=null===l?i.material:l,u=i.group;a.layers.test(n.layers)&&Ue(a,t,n,o,s,u)}}function Ue(e,t,n,l,q,r){e.onBeforeRender(f,t,n,l,q,r),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),q.onBeforeRender(f,t,n,l,e,r),!0===q.transparent&&2===q.side?(q.side=1,q.needsUpdate=!0,f.renderBufferDirect(n,t,l,q,e,r),q.side=0,q.needsUpdate=!0,f.renderBufferDirect(n,t,l,q,e,r),q.side=2):f.renderBufferDirect(n,t,l,q,e,r),e.onAfterRender(f,t,n,l,q,r)}function Fe(e,t,n){!0!==t.isScene&&(t=U);var l=Q.get(e),q=c.state.lights,r=c.state.shadowsArray,i=q.state.version,a=ee.getParameters(e,q.state,r,t,n),o=ee.getProgramCacheKey(a),s=l.programs;l.environment=e.isMeshStandardMaterial?t.environment:null,l.fog=t.fog,l.envMap=(e.isMeshStandardMaterial?Z:X).get(e.envMap||l.environment),void 0===s&&(e.addEventListener("dispose",Ee),s=new Map,l.programs=s);var u=s.get(o);if(void 0!==u){if(l.currentProgram===u&&l.lightsStateVersion===i)return He(e,a),u}else a.uniforms=ee.getUniforms(e),e.onBuild(n,a,f),e.onBeforeCompile(a,f),u=ee.acquireProgram(a,o),s.set(o,u),l.uniforms=a.uniforms;var A=l.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(A.clippingPlanes=ie.uniform),He(e,a),l.needsLights=Ve(e),l.lightsStateVersion=i,l.needsLights&&(A.ambientLightColor.value=q.state.ambient,A.lightProbe.value=q.state.probe,A.directionalLights.value=q.state.directional,A.directionalLightShadows.value=q.state.directionalShadow,A.spotLights.value=q.state.spot,A.spotLightShadows.value=q.state.spotShadow,A.rectAreaLights.value=q.state.rectArea,A.ltc_1.value=q.state.rectAreaLTC1,A.ltc_2.value=q.state.rectAreaLTC2,A.pointLights.value=q.state.point,A.pointLightShadows.value=q.state.pointShadow,A.hemisphereLights.value=q.state.hemi,A.directionalShadowMap.value=q.state.directionalShadowMap,A.directionalShadowMatrix.value=q.state.directionalShadowMatrix,A.spotShadowMap.value=q.state.spotShadowMap,A.spotShadowMatrix.value=q.state.spotShadowMatrix,A.pointShadowMap.value=q.state.pointShadowMap,A.pointShadowMatrix.value=q.state.pointShadowMatrix);var m=u.getUniforms(),h=Cr.seqWithValue(m.seq,A);return l.currentProgram=u,l.uniformsList=h,u}function He(e,t){var n=Q.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents}function Ge(e,t,n,l,q){!0!==t.isScene&&(t=U),Y.resetTextureUnits();var r=t.fog,i=l.isMeshStandardMaterial?t.environment:null,a=null===v?f.outputEncoding:v.texture.encoding,o=(l.isMeshStandardMaterial?Z:X).get(l.envMap||i),s=!0===l.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!l.normalMap&&!!n.attributes.tangent,A=!!n.morphAttributes.position,m=!!n.morphAttributes.normal,h=n.morphAttributes.position?n.morphAttributes.position.length:0,d=Q.get(l),p=c.state.lights;if(!0===D&&(!0===I||e!==_)){var x=e===_&&l.id===g;ie.setState(l,e,x)}var y=!1;l.version===d.__version?d.needsLights&&d.lightsStateVersion!==p.state.version||d.outputEncoding!==a||q.isInstancedMesh&&!1===d.instancing?y=!0:q.isInstancedMesh||!0!==d.instancing?q.isSkinnedMesh&&!1===d.skinning?y=!0:q.isSkinnedMesh||!0!==d.skinning?d.envMap!==o||l.fog&&d.fog!==r?y=!0:void 0===d.numClippingPlanes||d.numClippingPlanes===ie.numPlanes&&d.numIntersection===ie.numIntersection?(d.vertexAlphas!==s||d.vertexTangents!==u||d.morphTargets!==A||d.morphNormals!==m||!0===j.isWebGL2&&d.morphTargetsCount!==h)&&(y=!0):y=!0:y=!0:y=!0:(y=!0,d.__version=l.version);var b=d.currentProgram;!0===y&&(b=Fe(l,t,q));var w=!1,M=!1,z=!1,k=b.getUniforms(),T=d.uniforms;if(V.useProgram(b.program)&&(w=!0,M=!0,z=!0),l.id!==g&&(g=l.id,M=!0),w||_!==e){if(k.setValue(ve,"projectionMatrix",e.projectionMatrix),j.logarithmicDepthBuffer&&k.setValue(ve,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),_!==e&&(_=e,M=!0,z=!0),l.isShaderMaterial||l.isMeshPhongMaterial||l.isMeshToonMaterial||l.isMeshStandardMaterial||l.envMap){var C=k.map.cameraPosition;void 0!==C&&C.setValue(ve,N.setFromMatrixPosition(e.matrixWorld))}(l.isMeshPhongMaterial||l.isMeshToonMaterial||l.isMeshLambertMaterial||l.isMeshBasicMaterial||l.isMeshStandardMaterial||l.isShaderMaterial)&&k.setValue(ve,"isOrthographic",!0===e.isOrthographicCamera),(l.isMeshPhongMaterial||l.isMeshToonMaterial||l.isMeshLambertMaterial||l.isMeshBasicMaterial||l.isMeshStandardMaterial||l.isShaderMaterial||l.isShadowMaterial||q.isSkinnedMesh)&&k.setValue(ve,"viewMatrix",e.matrixWorldInverse)}if(q.isSkinnedMesh){k.setOptional(ve,q,"bindMatrix"),k.setOptional(ve,q,"bindMatrixInverse");var L=q.skeleton;L&&(j.floatVertexTextures?(null===L.boneTexture&&L.computeBoneTexture(),k.setValue(ve,"boneTexture",L.boneTexture,Y),k.setValue(ve,"boneTextureSize",L.boneTextureSize)):k.setOptional(ve,L,"boneMatrices"))}return!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||Ae.update(q,n,l,b),(M||d.receiveShadow!==q.receiveShadow)&&(d.receiveShadow=q.receiveShadow,k.setValue(ve,"receiveShadow",q.receiveShadow)),M&&(k.setValue(ve,"toneMappingExposure",f.toneMappingExposure),d.needsLights&&je(T,z),r&&l.fog&&te.refreshFogUniforms(T,r),te.refreshMaterialUniforms(T,l,E,S,O),Cr.upload(ve,d.uniformsList,T,Y)),l.isShaderMaterial&&!0===l.uniformsNeedUpdate&&(Cr.upload(ve,d.uniformsList,T,Y),l.uniformsNeedUpdate=!1),l.isSpriteMaterial&&k.setValue(ve,"center",q.center),k.setValue(ve,"modelViewMatrix",q.modelViewMatrix),k.setValue(ve,"normalMatrix",q.normalMatrix),k.setValue(ve,"modelMatrix",q.matrixWorld),b}function je(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function Ve(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}De.setAnimationLoop(Le),"undefined"!==typeof window&&De.setContext(window),this.setAnimationLoop=function(e){Ce=e,we.setAnimationLoop(e),null===e?De.stop():De.start()},we.addEventListener("sessionstart",Pe),we.addEventListener("sessionend",Re),this.render=function(e,t){if(void 0===t||!0===t.isCamera){if(!0!==d){!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===we.enabled&&!0===we.isPresenting&&(!0===we.cameraAutoUpdate&&we.updateCamera(t),t=we.getCamera()),!0===e.isScene&&e.onBeforeRender(f,e,t,v),(c=qe.get(e,h.length)).init(),h.push(c),B.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),R.setFromProjectionMatrix(B),I=this.localClippingEnabled,D=ie.init(this.clippingPlanes,I,t),(A=ne.get(e,m.length)).init(),m.push(A),Ie(e,t,0,f.sortObjects),A.finish(),!0===f.sortObjects&&A.sort(z,k),!0===D&&ie.beginShadows();var n=c.state.shadowsArray;if(ae.render(n,e,t),!0===D&&ie.endShadows(),!0===this.info.autoReset&&this.info.reset(),oe.render(A,e),c.setupLights(f.physicallyCorrectLights),t.isArrayCamera)for(var l=t.cameras,q=0,r=l.length;q<r;q++){var i=l[q];Oe(A,e,i,i.viewport)}else Oe(A,e,t);null!==v&&(Y.updateMultisampleRenderTarget(v),Y.updateRenderTargetMipmap(v)),!0===e.isScene&&e.onAfterRender(f,e,t),V.buffers.depth.setTest(!0),V.buffers.depth.setMask(!0),V.buffers.color.setMask(!0),V.setPolygonOffset(!1),xe.resetDefaultState(),g=-1,_=null,h.pop(),c=h.length>0?h[h.length-1]:null,m.pop(),A=m.length>0?m[m.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return p},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(e,t,n){Q.get(e.texture).__webglTexture=t,Q.get(e.depthTexture).__webglTexture=n;var l=Q.get(e);l.__hasExternalTextures=!0,l.__hasExternalTextures&&(l.__autoAllocateDepthBuffer=void 0===n,l.__autoAllocateDepthBuffer||e.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),e.useRenderToTexture=!1,e.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(e,t){var n=Q.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;v=e,p=t,x=n;var l=!0;if(e){var q=Q.get(e);void 0!==q.__useDefaultFramebuffer?(V.bindFramebuffer(36160,null),l=!1):void 0===q.__webglFramebuffer?Y.setupRenderTarget(e):q.__hasExternalTextures&&Y.rebindTextures(e,Q.get(e.texture).__webglTexture,Q.get(e.depthTexture).__webglTexture)}var r=null,i=!1,a=!1;if(e){var o=e.texture;(o.isDataTexture3D||o.isDataTexture2DArray)&&(a=!0);var s=Q.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=s[t],i=!0):r=e.useRenderbuffer?Q.get(e).__webglMultisampledFramebuffer:s,y.copy(e.viewport),b.copy(e.scissor),w=e.scissorTest}else y.copy(T).multiplyScalar(E).floor(),b.copy(C).multiplyScalar(E).floor(),w=L;var u=V.bindFramebuffer(36160,r);if(u&&j.drawBuffers&&l){var A=!1;if(e)if(e.isWebGLMultipleRenderTargets){var c=e.texture;if(P.length!==c.length||36064!==P[0]){for(var m=0,h=c.length;m<h;m++)P[m]=36064+m;P.length=c.length,A=!0}}else 1===P.length&&36064===P[0]||(P[0]=36064,P.length=1,A=!0);else 1===P.length&&1029===P[0]||(P[0]=1029,P.length=1,A=!0);A&&(j.isWebGL2?ve.drawBuffers(P):H.get("WEBGL_draw_buffers").drawBuffersWEBGL(P))}if(V.viewport(y),V.scissor(b),V.setScissorTest(w),i){var f=Q.get(e.texture);ve.framebufferTexture2D(36160,36064,34069+t,f.__webglTexture,n)}else if(a){var d=Q.get(e.texture),_=t||0;ve.framebufferTextureLayer(36160,36064,d.__webglTexture,n||0,_)}g=-1},this.readRenderTargetPixels=function(e,t,n,l,q,r,i){if(e&&e.isWebGLRenderTarget){var a=Q.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==i&&(a=a[i]),a){V.bindFramebuffer(36160,a);try{var o=e.texture,s=o.format,u=o.type;if(s!==pe&&de.convert(s)!==ve.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var A=u===he&&(H.has("EXT_color_buffer_half_float")||j.isWebGL2&&H.has("EXT_color_buffer_float"));if(u!==ue&&de.convert(u)!==ve.getParameter(35738)&&(u!==me||!(j.isWebGL2||H.has("OES_texture_float")||H.has("WEBGL_color_buffer_float")))&&!A)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ve.checkFramebufferStatus(36160)?t>=0&&t<=e.width-l&&n>=0&&n<=e.height-q&&ve.readPixels(t,n,l,q,de.convert(s),de.convert(u),r):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{var c=null!==v?Q.get(v).__webglFramebuffer:null;V.bindFramebuffer(36160,c)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=Math.pow(2,-n),q=Math.floor(t.image.width*l),r=Math.floor(t.image.height*l),i=de.convert(t.format);j.isWebGL2&&(6407===i&&(i=32849),6408===i&&(i=32856)),Y.setTexture2D(t,0),ve.copyTexImage2D(3553,n,i,e.x,e.y,q,r,0),V.unbindTexture()},this.copyTextureToTexture=function(e,t,n){var l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,q=t.image.width,r=t.image.height,i=de.convert(n.format),a=de.convert(n.type);Y.setTexture2D(n,0),ve.pixelStorei(37440,n.flipY),ve.pixelStorei(37441,n.premultiplyAlpha),ve.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ve.texSubImage2D(3553,l,e.x,e.y,q,r,i,a,t.image.data):t.isCompressedTexture?ve.compressedTexSubImage2D(3553,l,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,i,t.mipmaps[0].data):ve.texSubImage2D(3553,l,e.x,e.y,i,a,t.image),0===l&&n.generateMipmaps&&ve.generateMipmap(3553),V.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,l){var q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(f.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var r,i=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,s=de.convert(l.format),u=de.convert(l.type);if(l.isDataTexture3D)Y.setTexture3D(l,0),r=32879;else{if(!l.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Y.setTexture2DArray(l,0),r=35866}ve.pixelStorei(37440,l.flipY),ve.pixelStorei(37441,l.premultiplyAlpha),ve.pixelStorei(3317,l.unpackAlignment);var A=ve.getParameter(3314),c=ve.getParameter(32878),m=ve.getParameter(3316),h=ve.getParameter(3315),d=ve.getParameter(32877),p=n.isCompressedTexture?n.mipmaps[0]:n.image;ve.pixelStorei(3314,p.width),ve.pixelStorei(32878,p.height),ve.pixelStorei(3316,e.min.x),ve.pixelStorei(3315,e.min.y),ve.pixelStorei(32877,e.min.z),n.isDataTexture||n.isDataTexture3D?ve.texSubImage3D(r,q,t.x,t.y,t.z,i,a,o,s,u,p.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ve.compressedTexSubImage3D(r,q,t.x,t.y,t.z,i,a,o,s,p.data)):ve.texSubImage3D(r,q,t.x,t.y,t.z,i,a,o,s,u,p),ve.pixelStorei(3314,A),ve.pixelStorei(32878,c),ve.pixelStorei(3316,m),ve.pixelStorei(3315,h),ve.pixelStorei(32877,d),0===q&&l.generateMipmaps&&ve.generateMipmap(r),V.unbindTexture()}},this.initTexture=function(e){Y.setTexture2D(e,0),V.unbindTexture()},this.resetState=function(){p=0,x=0,v=null,V.reset(),xe.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}wi.prototype.isWebGLRenderer=!0;var Mi=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(wi);Mi.prototype.isWebGL1Renderer=!0;var Si=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25e-5;O(this,e),this.name="",this.color=new Rn(t),this.density=n}return N(e,[{key:"clone",value:function(){return new e(this.color,this.density)}},{key:"toJSON",value:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}]),e}();Si.prototype.isFogExp2=!0;var Ei=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;O(this,e),this.name="",this.color=new Rn(t),this.near=n,this.far=l}return N(e,[{key:"clone",value:function(){return new e(this.color,this.near,this.far)}},{key:"toJSON",value:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}]),e}();Ei.prototype.isFog=!0;var zi=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="Scene",e.background=null,e.environment=null,e.fog=null,e.overrideMaterial=null,e.autoUpdate=!0,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:E(e)})),e}return N(n,[{key:"copy",value:function(e,t){return C(k(n.prototype),"copy",this).call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}]),n}(hn);zi.prototype.isScene=!0;var ki=function(){function e(t,n){O(this,e),this.array=t,this.stride=n,this.count=void 0!==t?t.length/n:0,this.usage=Pe,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=He()}return N(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.stride,n*=t.stride;for(var l=0,q=this.stride;l<q;l++)this.array[e+l]=t.array[n+l];return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"clone",value:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=He()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);var t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"toJSON",value:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=He()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}]),e}();ki.prototype.isInterleavedBuffer=!0;var Ti=new At,Ci=function(){function e(t,n,l){var q=arguments.length>3&&void 0!==arguments[3]&&arguments[3];O(this,e),this.name="",this.data=t,this.itemSize=n,this.offset=l,this.normalized=!0===q}return N(e,[{key:"count",get:function(){return this.data.count}},{key:"array",get:function(){return this.data.array}},{key:"needsUpdate",set:function(e){this.data.needsUpdate=e}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.data.count;t<n;t++)Ti.x=this.getX(t),Ti.y=this.getY(t),Ti.z=this.getZ(t),Ti.applyMatrix4(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)Ti.x=this.getX(t),Ti.y=this.getY(t),Ti.z=this.getZ(t),Ti.applyNormalMatrix(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)Ti.x=this.getX(t),Ti.y=this.getY(t),Ti.z=this.getZ(t),Ti.transformDirection(e),this.setXYZ(t,Ti.x,Ti.y,Ti.z);return this}},{key:"setX",value:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}},{key:"setY",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}},{key:"setZ",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}},{key:"setW",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}},{key:"getX",value:function(e){return this.data.array[e*this.data.stride+this.offset]}},{key:"getY",value:function(e){return this.data.array[e*this.data.stride+this.offset+1]}},{key:"getZ",value:function(e){return this.data.array[e*this.data.stride+this.offset+2]}},{key:"getW",value:function(e){return this.data.array[e*this.data.stride+this.offset+3]}},{key:"setXY",value:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,l){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=l,this}},{key:"setXYZW",value:function(e,t,n,l,q){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=l,this.data.array[e+3]=q,this}},{key:"clone",value:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");for(var n=[],l=0;l<this.count;l++)for(var q=l*this.data.stride+this.offset,r=0;r<this.itemSize;r++)n.push(this.data.array[q+r]);return new Bn(new this.array.constructor(n),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new e(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},{key:"toJSON",value:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");for(var t=[],n=0;n<this.count;n++)for(var l=n*this.data.stride+this.offset,q=0;q<this.itemSize;q++)t.push(this.data.array[l+q]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}]),e}();Ci.prototype.isInterleavedBufferAttribute=!0;var Li,Pi=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="SpriteMaterial",l.color=new Rn(16777215),l.map=null,l.alphaMap=null,l.rotation=0,l.sizeAttenuation=!0,l.transparent=!0,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}]),n}(En);Pi.prototype.isSpriteMaterial=!0;var Ri=new At,Di=new At,Ii=new At,Oi=new Ze,Bi=new Ze,Ni=new Ht,Ui=new At,Fi=new At,Hi=new At,Gi=new Ze,ji=new Ze,Vi=new Ze,Wi=function(e){R(n,e);var t=I(n);function n(e){var l;if(O(this,n),(l=t.call(this)).type="Sprite",void 0===Li){Li=new Zn;var q=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),r=new ki(q,5);Li.setIndex([0,1,2,0,2,3]),Li.setAttribute("position",new Ci(r,3,0,!1)),Li.setAttribute("uv",new Ci(r,2,3,!1))}return l.geometry=Li,l.material=void 0!==e?e:new Pi,l.center=new Ze(.5,.5),l}return N(n,[{key:"raycast",value:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Di.setFromMatrixScale(this.matrixWorld),Ni.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ii.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Di.multiplyScalar(-Ii.z);var n,l,q=this.material.rotation;0!==q&&(l=Math.cos(q),n=Math.sin(q));var r=this.center;Qi(Ui.set(-.5,-.5,0),Ii,r,Di,n,l),Qi(Fi.set(.5,-.5,0),Ii,r,Di,n,l),Qi(Hi.set(.5,.5,0),Ii,r,Di,n,l),Gi.set(0,0),ji.set(1,0),Vi.set(1,1);var i=e.ray.intersectTriangle(Ui,Fi,Hi,!1,Ri);if(null!==i||(Qi(Fi.set(-.5,.5,0),Ii,r,Di,n,l),ji.set(0,1),null!==(i=e.ray.intersectTriangle(Ui,Hi,Fi,!1,Ri)))){var a=e.ray.origin.distanceTo(Ri);a<e.near||a>e.far||t.push({distance:a,point:Ri.clone(),uv:Mn.getUV(Ri,Ui,Fi,Hi,Gi,ji,Vi,new Ze),face:null,object:this})}}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}]),n}(hn);function Qi(e,t,n,l,q,r){Oi.subVectors(e,n).addScalar(.5).multiply(l),void 0!==q?(Bi.x=r*Oi.x-q*Oi.y,Bi.y=q*Oi.x+r*Oi.y):Bi.copy(Oi),e.copy(t),e.x+=Bi.x,e.y+=Bi.y,e.applyMatrix4(Ni)}Wi.prototype.isSprite=!0;var Yi=new At,Xi=new it,Zi=new it,Ji=new At,Ki=new Ht,$i=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this,e,l)).type="SkinnedMesh",q.bindMode="attached",q.bindMatrix=new Ht,q.bindMatrixInverse=new Ht,q}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}},{key:"bind",value:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}},{key:"pose",value:function(){this.skeleton.pose()}},{key:"normalizeSkinWeights",value:function(){for(var e=new it,t=this.geometry.attributes.skinWeight,n=0,l=t.count;n<l;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);var q=1/e.manhattanLength();q!==1/0?e.multiplyScalar(q):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}},{key:"updateMatrixWorld",value:function(e){C(k(n.prototype),"updateMatrixWorld",this).call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},{key:"boneTransform",value:function(e,t){var n=this.skeleton,l=this.geometry;Xi.fromBufferAttribute(l.attributes.skinIndex,e),Zi.fromBufferAttribute(l.attributes.skinWeight,e),Yi.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(var q=0;q<4;q++){var r=Zi.getComponent(q);if(0!==r){var i=Xi.getComponent(q);Ki.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Ji.copy(Yi).applyMatrix4(Ki),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}]),n}(hl);$i.prototype.isSkinnedMesh=!0;var ea=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="Bone",e}return N(n)}(hn);ea.prototype.isBone=!0;var ta=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0,u=arguments.length>7?arguments[7]:void 0,A=arguments.length>8&&void 0!==arguments[8]?arguments[8]:re,c=arguments.length>9&&void 0!==arguments[9]?arguments[9]:re,m=arguments.length>10?arguments[10]:void 0,h=arguments.length>11?arguments[11]:void 0;return O(this,n),(e=t.call(this,null,o,s,u,A,c,i,a,m,h)).image={data:l,width:q,height:r},e.magFilter=A,e.minFilter=c,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return N(n)}(qt);ta.prototype.isDataTexture=!0;var na=function(e){R(n,e);var t=I(n);function n(e,l,q){var r,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return O(this,n),"number"===typeof q&&(i=q,q=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),(r=t.call(this,e,l,q)).meshPerAttribute=i,r}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}]),n}(Bn);na.prototype.isInstancedBufferAttribute=!0;var la=new Ht,qa=new Ht,ra=[],ia=new hl,aa=function(e){R(n,e);var t=I(n);function n(e,l,q){var r;return O(this,n),(r=t.call(this,e,l)).instanceMatrix=new na(new Float32Array(16*q),16),r.instanceColor=null,r.count=q,r.frustumCulled=!1,r}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}},{key:"getColorAt",value:function(e,t){t.fromArray(this.instanceColor.array,3*e)}},{key:"getMatrixAt",value:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)}},{key:"raycast",value:function(e,t){var n=this.matrixWorld,l=this.count;if(ia.geometry=this.geometry,ia.material=this.material,void 0!==ia.material)for(var q=0;q<l;q++){this.getMatrixAt(q,la),qa.multiplyMatrices(n,la),ia.matrixWorld=qa,ia.raycast(e,ra);for(var r=0,i=ra.length;r<i;r++){var a=ra[r];a.instanceId=q,a.object=this,t.push(a)}ra.length=0}}},{key:"setColorAt",value:function(e,t){null===this.instanceColor&&(this.instanceColor=new na(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}},{key:"setMatrixAt",value:function(e,t){t.toArray(this.instanceMatrix.array,16*e)}},{key:"updateMorphTargets",value:function(){}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(hl);aa.prototype.isInstancedMesh=!0;var oa=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="LineBasicMaterial",l.color=new Rn(16777215),l.linewidth=1,l.linecap="round",l.linejoin="round",l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}]),n}(En);oa.prototype.isLineBasicMaterial=!0;var sa=new At,ua=new At,Aa=new Ht,ca=new Ft,ma=new Pt,ha=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Zn,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new oa;return O(this,n),(e=t.call(this)).type="Line",e.geometry=l,e.material=q,e.updateMorphTargets(),e}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.material=e.material,this.geometry=e.geometry,this}},{key:"computeLineDistances",value:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,n=[0],l=1,q=t.count;l<q;l++)sa.fromBufferAttribute(t,l-1),ua.fromBufferAttribute(t,l),n[l]=n[l-1],n[l]+=sa.distanceTo(ua);e.setAttribute("lineDistance",new Hn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}},{key:"raycast",value:function(e,t){var n=this.geometry,l=this.matrixWorld,q=e.params.Line.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ma.copy(n.boundingSphere),ma.applyMatrix4(l),ma.radius+=q,!1!==e.ray.intersectsSphere(ma)){Aa.copy(l).invert(),ca.copy(e.ray).applyMatrix4(Aa);var i=q/((this.scale.x+this.scale.y+this.scale.z)/3),a=i*i,o=new At,s=new At,u=new At,A=new At,c=this.isLineSegments?2:1;if(n.isBufferGeometry){var m=n.index,h=n.attributes.position;if(null!==m)for(var f=Math.max(0,r.start),d=Math.min(m.count,r.start+r.count)-1;f<d;f+=c){var p=m.getX(f),x=m.getX(f+1);if(o.fromBufferAttribute(h,p),s.fromBufferAttribute(h,x),!(ca.distanceSqToSegment(o,s,A,u)>a)){A.applyMatrix4(this.matrixWorld);var v=e.ray.origin.distanceTo(A);v<e.near||v>e.far||t.push({distance:v,point:u.clone().applyMatrix4(this.matrixWorld),index:f,face:null,faceIndex:null,object:this})}}else for(var g=Math.max(0,r.start),_=Math.min(h.count,r.start+r.count)-1;g<_;g+=c){if(o.fromBufferAttribute(h,g),s.fromBufferAttribute(h,g+1),!(ca.distanceSqToSegment(o,s,A,u)>a)){A.applyMatrix4(this.matrixWorld);var y=e.ray.origin.distanceTo(A);y<e.near||y>e.far||t.push({distance:y,point:u.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var l=t[n[0]];if(void 0!==l){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var q=0,r=l.length;q<r;q++){var i=l[q].name||String(q);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=q}}}}else{var a=e.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}]),n}(hn);ha.prototype.isLine=!0;var fa=new At,da=new At,pa=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this,e,l)).type="LineSegments",q}return N(n,[{key:"computeLineDistances",value:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,n=[],l=0,q=t.count;l<q;l+=2)fa.fromBufferAttribute(t,l),da.fromBufferAttribute(t,l+1),n[l]=0===l?0:n[l-1],n[l+1]=n[l]+fa.distanceTo(da);e.setAttribute("lineDistance",new Hn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}]),n}(ha);pa.prototype.isLineSegments=!0;var xa=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this,e,l)).type="LineLoop",q}return N(n)}(ha);xa.prototype.isLineLoop=!0;var va=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="PointsMaterial",l.color=new Rn(16777215),l.map=null,l.alphaMap=null,l.size=1,l.sizeAttenuation=!0,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}]),n}(En);va.prototype.isPointsMaterial=!0;var ga=new Ht,_a=new Ft,ya=new Pt,ba=new At,wa=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Zn,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new va;return O(this,n),(e=t.call(this)).type="Points",e.geometry=l,e.material=q,e.updateMorphTargets(),e}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.material=e.material,this.geometry=e.geometry,this}},{key:"raycast",value:function(e,t){var n=this.geometry,l=this.matrixWorld,q=e.params.Points.threshold,r=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ya.copy(n.boundingSphere),ya.applyMatrix4(l),ya.radius+=q,!1!==e.ray.intersectsSphere(ya)){ga.copy(l).invert(),_a.copy(e.ray).applyMatrix4(ga);var i=q/((this.scale.x+this.scale.y+this.scale.z)/3),a=i*i;if(n.isBufferGeometry){var o=n.index,s=n.attributes.position;if(null!==o)for(var u=Math.max(0,r.start),A=Math.min(o.count,r.start+r.count);u<A;u++){var c=o.getX(u);ba.fromBufferAttribute(s,c),Ma(ba,c,a,l,e,t,this)}else for(var m=Math.max(0,r.start),h=Math.min(s.count,r.start+r.count);m<h;m++)ba.fromBufferAttribute(s,m),Ma(ba,m,a,l,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var l=t[n[0]];if(void 0!==l){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var q=0,r=l.length;q<r;q++){var i=l[q].name||String(q);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=q}}}}else{var a=e.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}]),n}(hn);function Ma(e,t,n,l,q,r,i){var a=_a.distanceSqToPoint(e);if(a<n){var o=new At;_a.closestPointToPoint(e,o),o.applyMatrix4(l);var s=q.ray.origin.distanceTo(o);if(s<q.near||s>q.far)return;r.push({distance:s,distanceToRay:Math.sqrt(a),point:o,index:t,face:null,object:i})}}wa.prototype.isPoints=!0,function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a,o,s,u){var A;O(this,n),(A=t.call(this,e,l,q,r,i,a,o,s,u)).format=void 0!==o?o:de,A.minFilter=void 0!==a?a:oe,A.magFilter=void 0!==i?i:oe,A.generateMipmaps=!1;var c=E(A);return"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){c.needsUpdate=!0,e.requestVideoFrameCallback(t)})),A}return N(n,[{key:"clone",value:function(){return new this.constructor(this.image).copy(this)}},{key:"update",value:function(){var e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}]),n}(qt).prototype.isVideoTexture=!0;var Sa=function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a,o,s,u,A,c,m){var h;return O(this,n),(h=t.call(this,null,a,o,s,u,A,r,i,c,m)).image={width:l,height:q},h.mipmaps=e,h.flipY=!1,h.generateMipmaps=!1,h}return N(n)}(qt);Sa.prototype.isCompressedTexture=!0,function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a,o,s,u){var A;return O(this,n),(A=t.call(this,e,l,q,r,i,a,o,s,u)).needsUpdate=!0,A}return N(n)}(qt).prototype.isCanvasTexture=!0;var Ea=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:8,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;O(this,n),(e=t.call(this)).type="CircleGeometry",e.parameters={radius:l,segments:q,thetaStart:r,thetaLength:i},q=Math.max(3,q);var a=[],o=[],s=[],u=[],A=new At,c=new Ze;o.push(0,0,0),s.push(0,0,1),u.push(.5,.5);for(var m=0,h=3;m<=q;m++,h+=3){var f=r+m/q*i;A.x=l*Math.cos(f),A.y=l*Math.sin(f),o.push(A.x,A.y,A.z),s.push(0,0,1),c.x=(o[h]/l+1)/2,c.y=(o[h+1]/l+1)/2,u.push(c.x,c.y)}for(var d=1;d<=q;d++)a.push(d,d+1,0);return e.setIndex(a),e.setAttribute("position",new Hn(o,3)),e.setAttribute("normal",new Hn(s,3)),e.setAttribute("uv",new Hn(u,2)),e}return N(n,null,[{key:"fromJSON",value:function(e){return new n(e.radius,e.segments,e.thetaStart,e.thetaLength)}}]),n}(Zn),za=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:2*Math.PI;O(this,n),(e=t.call(this)).type="CylinderGeometry",e.parameters={radiusTop:l,radiusBottom:q,height:r,radialSegments:i,heightSegments:a,openEnded:o,thetaStart:s,thetaLength:u};var A=E(e);i=Math.floor(i),a=Math.floor(a);var c=[],m=[],h=[],f=[],d=0,p=[],x=r/2,v=0;function g(){for(var e=new At,t=new At,n=0,o=(q-l)/r,g=0;g<=a;g++){for(var _=[],y=g/a,b=y*(q-l)+l,w=0;w<=i;w++){var M=w/i,S=M*u+s,E=Math.sin(S),z=Math.cos(S);t.x=b*E,t.y=-y*r+x,t.z=b*z,m.push(t.x,t.y,t.z),e.set(E,o,z).normalize(),h.push(e.x,e.y,e.z),f.push(M,1-y),_.push(d++)}p.push(_)}for(var k=0;k<i;k++)for(var T=0;T<a;T++){var C=p[T][k],L=p[T+1][k],P=p[T+1][k+1],R=p[T][k+1];c.push(C,L,R),c.push(L,P,R),n+=6}A.addGroup(v,n,0),v+=n}function _(e){for(var t=d,n=new Ze,r=new At,a=0,o=!0===e?l:q,p=!0===e?1:-1,g=1;g<=i;g++)m.push(0,x*p,0),h.push(0,p,0),f.push(.5,.5),d++;for(var _=d,y=0;y<=i;y++){var b=y/i*u+s,w=Math.cos(b),M=Math.sin(b);r.x=o*M,r.y=x*p,r.z=o*w,m.push(r.x,r.y,r.z),h.push(0,p,0),n.x=.5*w+.5,n.y=.5*M*p+.5,f.push(n.x,n.y),d++}for(var S=0;S<i;S++){var E=t+S,z=_+S;!0===e?c.push(z,z+1,E):c.push(z+1,z,E),a+=3}A.addGroup(v,a,!0===e?1:2),v+=a}return g(),!1===o&&(l>0&&_(!0),q>0&&_(!1)),e.setIndex(c),e.setAttribute("position",new Hn(m,3)),e.setAttribute("normal",new Hn(h,3)),e.setAttribute("uv",new Hn(f,2)),e}return N(n,null,[{key:"fromJSON",value:function(e){return new n(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}]),n}(Zn),ka=(new At,new At,new At,new Mn,function(){function e(){O(this,e),this.type="Curve",this.arcLengthDivisions=200}return N(e,[{key:"getPoint",value:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}},{key:"getPointAt",value:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)}},{key:"getPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}},{key:"getLength",value:function(){var e=this.getLengths();return e[e.length-1]}},{key:"getLengths",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n=[],l=this.getPoint(0),q=0;n.push(0);for(var r=1;r<=e;r++)q+=(t=this.getPoint(r/e)).distanceTo(l),n.push(q),l=t;return this.cacheArcLengths=n,n}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.getLengths()}},{key:"getUtoTmapping",value:function(e,t){var n,l=this.getLengths(),q=0,r=l.length;n=t||e*l[r-1];for(var i,a=0,o=r-1;a<=o;)if((i=l[q=Math.floor(a+(o-a)/2)]-n)<0)a=q+1;else{if(!(i>0)){o=q;break}o=q-1}if(l[q=o]===n)return q/(r-1);var s=l[q];return(q+(n-s)/(l[q+1]-s))/(r-1)}},{key:"getTangent",value:function(e,t){var n=1e-4,l=e-n,q=e+n;l<0&&(l=0),q>1&&(q=1);var r=this.getPoint(l),i=this.getPoint(q),a=t||(r.isVector2?new Ze:new At);return a.copy(i).sub(r).normalize(),a}},{key:"getTangentAt",value:function(e,t){var n=this.getUtoTmapping(e);return this.getTangent(n,t)}},{key:"computeFrenetFrames",value:function(e,t){for(var n=new At,l=[],q=[],r=[],i=new At,a=new Ht,o=0;o<=e;o++){var s=o/e;l[o]=this.getTangentAt(s,new At)}q[0]=new At,r[0]=new At;var u=Number.MAX_VALUE,A=Math.abs(l[0].x),c=Math.abs(l[0].y),m=Math.abs(l[0].z);A<=u&&(u=A,n.set(1,0,0)),c<=u&&(u=c,n.set(0,1,0)),m<=u&&n.set(0,0,1),i.crossVectors(l[0],n).normalize(),q[0].crossVectors(l[0],i),r[0].crossVectors(l[0],q[0]);for(var h=1;h<=e;h++){if(q[h]=q[h-1].clone(),r[h]=r[h-1].clone(),i.crossVectors(l[h-1],l[h]),i.length()>Number.EPSILON){i.normalize();var f=Math.acos(Ge(l[h-1].dot(l[h]),-1,1));q[h].applyMatrix4(a.makeRotationAxis(i,f))}r[h].crossVectors(l[h],q[h])}if(!0===t){var d=Math.acos(Ge(q[0].dot(q[e]),-1,1));d/=e,l[0].dot(i.crossVectors(q[0],q[e]))>0&&(d=-d);for(var p=1;p<=e;p++)q[p].applyMatrix4(a.makeRotationAxis(l[p],d*p)),r[p].crossVectors(l[p],q[p])}return{tangents:l,normals:q,binormals:r}}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}},{key:"fromJSON",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}]),e}()),Ta=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;return O(this,n),(e=t.call(this)).type="EllipseCurve",e.aX=l,e.aY=q,e.xRadius=r,e.yRadius=i,e.aStartAngle=a,e.aEndAngle=o,e.aClockwise=s,e.aRotation=u,e}return N(n,[{key:"getPoint",value:function(e,t){for(var n=t||new Ze,l=2*Math.PI,q=this.aEndAngle-this.aStartAngle,r=Math.abs(q)<Number.EPSILON;q<0;)q+=l;for(;q>l;)q-=l;q<Number.EPSILON&&(q=r?0:l),!0!==this.aClockwise||r||(q===l?q=-l:q-=l);var i=this.aStartAngle+e*q,a=this.aX+this.xRadius*Math.cos(i),o=this.aY+this.yRadius*Math.sin(i);if(0!==this.aRotation){var s=Math.cos(this.aRotation),u=Math.sin(this.aRotation),A=a-this.aX,c=o-this.aY;a=A*s-c*u+this.aX,o=A*u+c*s+this.aY}return n.set(a,o)}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}]),n}(ka);Ta.prototype.isEllipseCurve=!0;var Ca=function(e){R(n,e);var t=I(n);function n(e,l,q,r,i,a){var o;return O(this,n),(o=t.call(this,e,l,q,q,r,i,a)).type="ArcCurve",o}return N(n)}(Ta);function La(){var e=0,t=0,n=0,l=0;function q(q,r,i,a){e=q,t=i,n=-3*q+3*r-2*i-a,l=2*q-2*r+i+a}return{initCatmullRom:function(e,t,n,l,r){q(t,n,r*(n-e),r*(l-t))},initNonuniformCatmullRom:function(e,t,n,l,r,i,a){var o=(t-e)/r-(n-e)/(r+i)+(n-t)/i,s=(n-t)/i-(l-t)/(i+a)+(l-n)/a;q(t,n,o*=i,s*=i)},calc:function(q){var r=q*q;return e+t*q+n*r+l*(r*q)}}}Ca.prototype.isArcCurve=!0;var Pa=new At,Ra=new La,Da=new La,Ia=new La,Oa=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],q=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"centripetal",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;return O(this,n),(e=t.call(this)).type="CatmullRomCurve3",e.points=l,e.closed=q,e.curveType=r,e.tension=i,e}return N(n,[{key:"getPoint",value:function(e){var t,n,l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,q=l,r=this.points,i=r.length,a=(i-(this.closed?0:1))*e,o=Math.floor(a),s=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i:0===s&&o===i-1&&(o=i-2,s=1),this.closed||o>0?t=r[(o-1)%i]:(Pa.subVectors(r[0],r[1]).add(r[0]),t=Pa);var u=r[o%i],A=r[(o+1)%i];if(this.closed||o+2<i?n=r[(o+2)%i]:(Pa.subVectors(r[i-1],r[i-2]).add(r[i-1]),n=Pa),"centripetal"===this.curveType||"chordal"===this.curveType){var c="chordal"===this.curveType?.5:.25,m=Math.pow(t.distanceToSquared(u),c),h=Math.pow(u.distanceToSquared(A),c),f=Math.pow(A.distanceToSquared(n),c);h<1e-4&&(h=1),m<1e-4&&(m=h),f<1e-4&&(f=h),Ra.initNonuniformCatmullRom(t.x,u.x,A.x,n.x,m,h,f),Da.initNonuniformCatmullRom(t.y,u.y,A.y,n.y,m,h,f),Ia.initNonuniformCatmullRom(t.z,u.z,A.z,n.z,m,h,f)}else"catmullrom"===this.curveType&&(Ra.initCatmullRom(t.x,u.x,A.x,n.x,this.tension),Da.initCatmullRom(t.y,u.y,A.y,n.y,this.tension),Ia.initCatmullRom(t.z,u.z,A.z,n.z,this.tension));return q.set(Ra.calc(s),Da.calc(s),Ia.calc(s)),q}},{key:"copy",value:function(e){C(k(n.prototype),"copy",this).call(this,e),this.points=[];for(var t=0,l=e.points.length;t<l;t++){var q=e.points[t];this.points.push(q.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);e.points=[];for(var t=0,l=this.points.length;t<l;t++){var q=this.points[t];e.points.push(q.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}},{key:"fromJSON",value:function(e){C(k(n.prototype),"fromJSON",this).call(this,e),this.points=[];for(var t=0,l=e.points.length;t<l;t++){var q=e.points[t];this.points.push((new At).fromArray(q))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}]),n}(ka);function Ba(e,t,n,l,q){var r=.5*(l-t),i=.5*(q-n),a=e*e;return(2*n-2*l+r+i)*(e*a)+(-3*n+3*l-2*r-i)*a+r*e+n}function Na(e,t,n,l){return function(e,t){var n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,l)}function Ua(e,t,n,l,q){return function(e,t){var n=1-e;return n*n*n*t}(e,t)+function(e,t){var n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,l)+function(e,t){return e*e*e*t}(e,q)}Oa.prototype.isCatmullRomCurve3=!0;var Fa=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ze,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ze,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ze;return O(this,n),(e=t.call(this)).type="CubicBezierCurve",e.v0=l,e.v1=q,e.v2=r,e.v3=i,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,n=t,l=this.v0,q=this.v1,r=this.v2,i=this.v3;return n.set(Ua(e,l.x,q.x,r.x,i.x),Ua(e,l.y,q.y,r.y,i.y)),n}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),n}(ka);Fa.prototype.isCubicBezierCurve=!0;var Ha=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new At,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new At;return O(this,n),(e=t.call(this)).type="CubicBezierCurve3",e.v0=l,e.v1=q,e.v2=r,e.v3=i,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,n=t,l=this.v0,q=this.v1,r=this.v2,i=this.v3;return n.set(Ua(e,l.x,q.x,r.x,i.x),Ua(e,l.y,q.y,r.y,i.y),Ua(e,l.z,q.z,r.z,i.z)),n}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),n}(ka);Ha.prototype.isCubicBezierCurve3=!0;var Ga=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ze,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze;return O(this,n),(e=t.call(this)).type="LineCurve",e.v1=l,e.v2=q,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}},{key:"getPointAt",value:function(e,t){return this.getPoint(e,t)}},{key:"getTangent",value:function(e,t){var n=t||new Ze;return n.copy(this.v2).sub(this.v1).normalize(),n}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(ka);Ga.prototype.isLineCurve=!0;var ja=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At;return O(this,n),(e=t.call(this)).type="LineCurve3",e.isLineCurve3=!0,e.v1=l,e.v2=q,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}},{key:"getPointAt",value:function(e,t){return this.getPoint(e,t)}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(ka),Va=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ze,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ze;return O(this,n),(e=t.call(this)).type="QuadraticBezierCurve",e.v0=l,e.v1=q,e.v2=r,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,n=t,l=this.v0,q=this.v1,r=this.v2;return n.set(Na(e,l.x,q.x,r.x),Na(e,l.y,q.y,r.y)),n}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(ka);Va.prototype.isQuadraticBezierCurve=!0;var Wa=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new At;return O(this,n),(e=t.call(this)).type="QuadraticBezierCurve3",e.v0=l,e.v1=q,e.v2=r,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At,n=t,l=this.v0,q=this.v1,r=this.v2;return n.set(Na(e,l.x,q.x,r.x),Na(e,l.y,q.y,r.y),Na(e,l.z,q.z,r.z)),n}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(ka);Wa.prototype.isQuadraticBezierCurve3=!0;var Qa=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return O(this,n),(e=t.call(this)).type="SplineCurve",e.points=l,e}return N(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze,n=t,l=this.points,q=(l.length-1)*e,r=Math.floor(q),i=q-r,a=l[0===r?r:r-1],o=l[r],s=l[r>l.length-2?l.length-1:r+1],u=l[r>l.length-3?l.length-1:r+2];return n.set(Ba(i,a.x,o.x,s.x,u.x),Ba(i,a.y,o.y,s.y,u.y)),n}},{key:"copy",value:function(e){C(k(n.prototype),"copy",this).call(this,e),this.points=[];for(var t=0,l=e.points.length;t<l;t++){var q=e.points[t];this.points.push(q.clone())}return this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);e.points=[];for(var t=0,l=this.points.length;t<l;t++){var q=this.points[t];e.points.push(q.toArray())}return e}},{key:"fromJSON",value:function(e){C(k(n.prototype),"fromJSON",this).call(this,e),this.points=[];for(var t=0,l=e.points.length;t<l;t++){var q=e.points[t];this.points.push((new Ze).fromArray(q))}return this}}]),n}(ka);Qa.prototype.isSplineCurve=!0;var Ya=Object.freeze({__proto__:null,ArcCurve:Ca,CatmullRomCurve3:Oa,CubicBezierCurve:Fa,CubicBezierCurve3:Ha,EllipseCurve:Ta,LineCurve:Ga,LineCurve3:ja,QuadraticBezierCurve:Va,QuadraticBezierCurve3:Wa,SplineCurve:Qa}),Xa=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="CurvePath",e.curves=[],e.autoClose=!1,e}return N(n,[{key:"add",value:function(e){this.curves.push(e)}},{key:"closePath",value:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ga(t,e))}},{key:"getPoint",value:function(e,t){for(var n=e*this.getLength(),l=this.getCurveLengths(),q=0;q<l.length;){if(l[q]>=n){var r=l[q]-n,i=this.curves[q],a=i.getLength(),o=0===a?0:1-r/a;return i.getPointAt(o,t)}q++}return null}},{key:"getLength",value:function(){var e=this.getCurveLengths();return e[e.length-1]}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}},{key:"getCurveLengths",value:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,l=this.curves.length;n<l;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40,t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}},{key:"getPoints",value:function(){for(var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,n=[],l=0,q=this.curves;l<q.length;l++)for(var r=q[l],i=r&&r.isEllipseCurve?2*t:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,a=r.getPoints(i),o=0;o<a.length;o++){var s=a[o];e&&e.equals(s)||(n.push(s),e=s)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}},{key:"copy",value:function(e){C(k(n.prototype),"copy",this).call(this,e),this.curves=[];for(var t=0,l=e.curves.length;t<l;t++){var q=e.curves[t];this.curves.push(q.clone())}return this.autoClose=e.autoClose,this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,l=this.curves.length;t<l;t++){var q=this.curves[t];e.curves.push(q.toJSON())}return e}},{key:"fromJSON",value:function(e){C(k(n.prototype),"fromJSON",this).call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,l=e.curves.length;t<l;t++){var q=e.curves[t];this.curves.push((new Ya[q.type]).fromJSON(q))}return this}}]),n}(ka),Za=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="Path",l.currentPoint=new Ze,e&&l.setFromPoints(e),l}return N(n,[{key:"setFromPoints",value:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}},{key:"moveTo",value:function(e,t){return this.currentPoint.set(e,t),this}},{key:"lineTo",value:function(e,t){var n=new Ga(this.currentPoint.clone(),new Ze(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}},{key:"quadraticCurveTo",value:function(e,t,n,l){var q=new Va(this.currentPoint.clone(),new Ze(e,t),new Ze(n,l));return this.curves.push(q),this.currentPoint.set(n,l),this}},{key:"bezierCurveTo",value:function(e,t,n,l,q,r){var i=new Fa(this.currentPoint.clone(),new Ze(e,t),new Ze(n,l),new Ze(q,r));return this.curves.push(i),this.currentPoint.set(q,r),this}},{key:"splineThru",value:function(e){var t=[this.currentPoint.clone()].concat(e),n=new Qa(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}},{key:"arc",value:function(e,t,n,l,q,r){var i=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+i,t+a,n,l,q,r),this}},{key:"absarc",value:function(e,t,n,l,q,r){return this.absellipse(e,t,n,n,l,q,r),this}},{key:"ellipse",value:function(e,t,n,l,q,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absellipse(e+o,t+s,n,l,q,r,i,a),this}},{key:"absellipse",value:function(e,t,n,l,q,r,i,a){var o=new Ta(e,t,n,l,q,r,i,a);if(this.curves.length>0){var s=o.getPoint(0);s.equals(this.currentPoint)||this.lineTo(s.x,s.y)}this.curves.push(o);var u=o.getPoint(1);return this.currentPoint.copy(u),this}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.currentPoint.copy(e.currentPoint),this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.currentPoint=this.currentPoint.toArray(),e}},{key:"fromJSON",value:function(e){return C(k(n.prototype),"fromJSON",this).call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}]),n}(Xa),Ja=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this,e)).uuid=He(),l.type="Shape",l.holes=[],l}return N(n,[{key:"getPointsHoles",value:function(e){for(var t=[],n=0,l=this.holes.length;n<l;n++)t[n]=this.holes[n].getPoints(e);return t}},{key:"extractPoints",value:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}},{key:"copy",value:function(e){C(k(n.prototype),"copy",this).call(this,e),this.holes=[];for(var t=0,l=e.holes.length;t<l;t++){var q=e.holes[t];this.holes.push(q.clone())}return this}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,l=this.holes.length;t<l;t++){var q=this.holes[t];e.holes.push(q.toJSON())}return e}},{key:"fromJSON",value:function(e){C(k(n.prototype),"fromJSON",this).call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,l=e.holes.length;t<l;t++){var q=e.holes[t];this.holes.push((new Za).fromJSON(q))}return this}}]),n}(Za),Ka=function(e,t){var n,l,q,r,i,a,o,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,u=t&&t.length,A=u?t[0]*s:e.length,c=$a(e,0,A,s,!0),m=[];if(!c||c.next===c.prev)return m;if(u&&(c=io(e,t,c,s)),e.length>80*s){n=q=e[0],l=r=e[1];for(var h=s;h<A;h+=s)(i=e[h])<n&&(n=i),(a=e[h+1])<l&&(l=a),i>q&&(q=i),a>r&&(r=a);o=0!==(o=Math.max(q-n,r-l))?1/o:0}return to(c,m,s,n,l,o),m};function $a(e,t,n,l,q){var r,i;if(q===function(e,t,n,l){for(var q=0,r=t,i=n-l;r<n;r+=l)q+=(e[i]-e[r])*(e[r+1]+e[i+1]),i=r;return q}(e,t,n,l)>0)for(r=t;r<n;r+=l)i=yo(r,e[r],e[r+1],i);else for(r=n-l;r>=t;r-=l)i=yo(r,e[r],e[r+1],i);return i&&fo(i,i.next)&&(bo(i),i=i.next),i}function eo(e,t){if(!e)return e;t||(t=e);var n,l=e;do{if(n=!1,l.steiner||!fo(l,l.next)&&0!==ho(l.prev,l,l.next))l=l.next;else{if(bo(l),(l=t=l.prev)===l.next)break;n=!0}}while(n||l!==t);return t}function to(e,t,n,l,q,r,i){if(e){!i&&r&&function(e,t,n,l){var q=e;do{null===q.z&&(q.z=uo(q.x,q.y,t,n,l)),q.prevZ=q.prev,q.nextZ=q.next,q=q.next}while(q!==e);q.prevZ.nextZ=null,q.prevZ=null,function(e){var t,n,l,q,r,i,a,o,s=1;do{for(n=e,e=null,r=null,i=0;n;){for(i++,l=n,a=0,t=0;t<s&&(a++,l=l.nextZ);t++);for(o=s;a>0||o>0&&l;)0!==a&&(0===o||!l||n.z<=l.z)?(q=n,n=n.nextZ,a--):(q=l,l=l.nextZ,o--),r?r.nextZ=q:e=q,q.prevZ=r,r=q;n=l}r.nextZ=null,s*=2}while(i>1)}(q)}(e,l,q,r);for(var a,o,s=e;e.prev!==e.next;)if(a=e.prev,o=e.next,r?lo(e,l,q,r):no(e))t.push(a.i/n),t.push(e.i/n),t.push(o.i/n),bo(e),e=o.next,s=o.next;else if((e=o)===s){i?1===i?to(e=qo(eo(e),t,n),t,n,l,q,r,2):2===i&&ro(e,t,n,l,q,r):to(eo(e),t,n,l,q,r,1);break}}}function no(e){var t=e.prev,n=e,l=e.next;if(ho(t,n,l)>=0)return!1;for(var q=e.next.next;q!==e.prev;){if(co(t.x,t.y,n.x,n.y,l.x,l.y,q.x,q.y)&&ho(q.prev,q,q.next)>=0)return!1;q=q.next}return!0}function lo(e,t,n,l){var q=e.prev,r=e,i=e.next;if(ho(q,r,i)>=0)return!1;for(var a=q.x<r.x?q.x<i.x?q.x:i.x:r.x<i.x?r.x:i.x,o=q.y<r.y?q.y<i.y?q.y:i.y:r.y<i.y?r.y:i.y,s=q.x>r.x?q.x>i.x?q.x:i.x:r.x>i.x?r.x:i.x,u=q.y>r.y?q.y>i.y?q.y:i.y:r.y>i.y?r.y:i.y,A=uo(a,o,t,n,l),c=uo(s,u,t,n,l),m=e.prevZ,h=e.nextZ;m&&m.z>=A&&h&&h.z<=c;){if(m!==e.prev&&m!==e.next&&co(q.x,q.y,r.x,r.y,i.x,i.y,m.x,m.y)&&ho(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,h!==e.prev&&h!==e.next&&co(q.x,q.y,r.x,r.y,i.x,i.y,h.x,h.y)&&ho(h.prev,h,h.next)>=0)return!1;h=h.nextZ}for(;m&&m.z>=A;){if(m!==e.prev&&m!==e.next&&co(q.x,q.y,r.x,r.y,i.x,i.y,m.x,m.y)&&ho(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;h&&h.z<=c;){if(h!==e.prev&&h!==e.next&&co(q.x,q.y,r.x,r.y,i.x,i.y,h.x,h.y)&&ho(h.prev,h,h.next)>=0)return!1;h=h.nextZ}return!0}function qo(e,t,n){var l=e;do{var q=l.prev,r=l.next.next;!fo(q,r)&&po(q,l,l.next,r)&&go(q,r)&&go(r,q)&&(t.push(q.i/n),t.push(l.i/n),t.push(r.i/n),bo(l),bo(l.next),l=e=r),l=l.next}while(l!==e);return eo(l)}function ro(e,t,n,l,q,r){var i=e;do{for(var a=i.next.next;a!==i.prev;){if(i.i!==a.i&&mo(i,a)){var o=_o(i,a);return i=eo(i,i.next),o=eo(o,o.next),to(i,t,n,l,q,r),void to(o,t,n,l,q,r)}a=a.next}i=i.next}while(i!==e)}function io(e,t,n,l){var q,r,i,a=[];for(q=0,r=t.length;q<r;q++)(i=$a(e,t[q]*l,q<r-1?t[q+1]*l:e.length,l,!1))===i.next&&(i.steiner=!0),a.push(Ao(i));for(a.sort(ao),q=0;q<a.length;q++)oo(a[q],n),n=eo(n,n.next);return n}function ao(e,t){return e.x-t.x}function oo(e,t){if(t=function(e,t){var n,l=t,q=e.x,r=e.y,i=-1/0;do{if(r<=l.y&&r>=l.next.y&&l.next.y!==l.y){var a=l.x+(r-l.y)*(l.next.x-l.x)/(l.next.y-l.y);if(a<=q&&a>i){if(i=a,a===q){if(r===l.y)return l;if(r===l.next.y)return l.next}n=l.x<l.next.x?l:l.next}}l=l.next}while(l!==t);if(!n)return null;if(q===i)return n;var o,s=n,u=n.x,A=n.y,c=1/0;l=n;do{q>=l.x&&l.x>=u&&q!==l.x&&co(r<A?q:i,r,u,A,r<A?i:q,r,l.x,l.y)&&(o=Math.abs(r-l.y)/(q-l.x),go(l,e)&&(o<c||o===c&&(l.x>n.x||l.x===n.x&&so(n,l)))&&(n=l,c=o)),l=l.next}while(l!==s);return n}(e,t),t){var n=_o(t,e);eo(t,t.next),eo(n,n.next)}}function so(e,t){return ho(e.prev,e,t.prev)<0&&ho(t.next,e,e.next)<0}function uo(e,t,n,l,q){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*q)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-l)*q)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Ao(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function co(e,t,n,l,q,r,i,a){return(q-i)*(t-a)-(e-i)*(r-a)>=0&&(e-i)*(l-a)-(n-i)*(t-a)>=0&&(n-i)*(r-a)-(q-i)*(l-a)>=0}function mo(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&po(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(go(e,t)&&go(t,e)&&function(e,t){var n=e,l=!1,q=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!==n.next.y>r&&n.next.y!==n.y&&q<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(l=!l),n=n.next}while(n!==e);return l}(e,t)&&(ho(e.prev,e,t.prev)||ho(e,t.prev,t))||fo(e,t)&&ho(e.prev,e,e.next)>0&&ho(t.prev,t,t.next)>0)}function ho(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function fo(e,t){return e.x===t.x&&e.y===t.y}function po(e,t,n,l){var q=vo(ho(e,t,n)),r=vo(ho(e,t,l)),i=vo(ho(n,l,e)),a=vo(ho(n,l,t));return q!==r&&i!==a||(!(0!==q||!xo(e,n,t))||(!(0!==r||!xo(e,l,t))||(!(0!==i||!xo(n,e,l))||!(0!==a||!xo(n,t,l)))))}function xo(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function vo(e){return e>0?1:e<0?-1:0}function go(e,t){return ho(e.prev,e,e.next)<0?ho(e,t,e.next)>=0&&ho(e,e.prev,t)>=0:ho(e,t,e.prev)<0||ho(e,e.next,t)<0}function _o(e,t){var n=new wo(e.i,e.x,e.y),l=new wo(t.i,t.x,t.y),q=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=q,q.prev=n,l.next=n,n.prev=l,r.next=l,l.prev=r,l}function yo(e,t,n,l){var q=new wo(e,t,n);return l?(q.next=l.next,q.prev=l,l.next.prev=q,l.next=q):(q.prev=q,q.next=q),q}function bo(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function wo(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var Mo=function(){function e(){O(this,e)}return N(e,null,[{key:"area",value:function(e){for(var t=e.length,n=0,l=t-1,q=0;q<t;l=q++)n+=e[l].x*e[q].y-e[q].x*e[l].y;return.5*n}},{key:"isClockWise",value:function(t){return e.area(t)<0}},{key:"triangulateShape",value:function(e,t){var n=[],l=[],q=[];So(e),Eo(n,e);var r=e.length;t.forEach(So);for(var i=0;i<t.length;i++)l.push(r),r+=t[i].length,Eo(n,t[i]);for(var a=Ka(n,l),o=0;o<a.length;o+=3)q.push(a.slice(o,o+3));return q}}]),e}();function So(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Eo(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}var zo=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ja([new Ze(.5,.5),new Ze(-.5,.5),new Ze(-.5,-.5),new Ze(.5,-.5)]),q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};O(this,n),(e=t.call(this)).type="ExtrudeGeometry",e.parameters={shapes:l,options:q},l=Array.isArray(l)?l:[l];for(var r=E(e),i=[],a=[],o=0,s=l.length;o<s;o++){var u=l[o];A(u)}function A(e){var t=[],n=void 0!==q.curveSegments?q.curveSegments:12,l=void 0!==q.steps?q.steps:1,o=void 0!==q.depth?q.depth:1,s=void 0===q.bevelEnabled||q.bevelEnabled,u=void 0!==q.bevelThickness?q.bevelThickness:.2,A=void 0!==q.bevelSize?q.bevelSize:u-.1,c=void 0!==q.bevelOffset?q.bevelOffset:0,m=void 0!==q.bevelSegments?q.bevelSegments:3,h=q.extrudePath,f=void 0!==q.UVGenerator?q.UVGenerator:ko;void 0!==q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),o=q.amount);var d,p,x,v,g,_=!1;h&&(d=h.getSpacedPoints(l),_=!0,s=!1,p=h.computeFrenetFrames(l,!1),x=new At,v=new At,g=new At),s||(m=0,u=0,A=0,c=0);var y=e.extractPoints(n),b=y.shape,w=y.holes;if(!Mo.isClockWise(b)){b=b.reverse();for(var M=0,S=w.length;M<S;M++){var E=w[M];Mo.isClockWise(E)&&(w[M]=E.reverse())}}for(var z=Mo.triangulateShape(b,w),k=b,T=0,C=w.length;T<C;T++){var L=w[T];b=b.concat(L)}function P(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}var R=b.length,D=z.length;function I(e,t,n){var l,q,r,i=e.x-t.x,a=e.y-t.y,o=n.x-e.x,s=n.y-e.y,u=i*i+a*a,A=i*s-a*o;if(Math.abs(A)>Number.EPSILON){var c=Math.sqrt(u),m=Math.sqrt(o*o+s*s),h=t.x-a/c,f=t.y+i/c,d=((n.x-s/m-h)*s-(n.y+o/m-f)*o)/(i*s-a*o),p=(l=h+i*d-e.x)*l+(q=f+a*d-e.y)*q;if(p<=2)return new Ze(l,q);r=Math.sqrt(p/2)}else{var x=!1;i>Number.EPSILON?o>Number.EPSILON&&(x=!0):i<-Number.EPSILON?o<-Number.EPSILON&&(x=!0):Math.sign(a)===Math.sign(s)&&(x=!0),x?(l=-a,q=i,r=Math.sqrt(u)):(l=i,q=a,r=Math.sqrt(u/2))}return new Ze(l/r,q/r)}for(var O=[],B=0,N=k.length,U=N-1,F=B+1;B<N;B++,U++,F++)U===N&&(U=0),F===N&&(F=0),O[B]=I(k[B],k[U],k[F]);for(var H,G=[],j=O.concat(),V=0,W=w.length;V<W;V++){var Q=w[V];H=[];for(var Y=0,X=Q.length,Z=X-1,J=Y+1;Y<X;Y++,Z++,J++)Z===X&&(Z=0),J===X&&(J=0),H[Y]=I(Q[Y],Q[Z],Q[J]);G.push(H),j=j.concat(H)}for(var K=0;K<m;K++){for(var $=K/m,ee=u*Math.cos($*Math.PI/2),te=A*Math.sin($*Math.PI/2)+c,ne=0,le=k.length;ne<le;ne++){var qe=P(k[ne],O[ne],te);Ce(qe.x,qe.y,-ee)}for(var re=0,ie=w.length;re<ie;re++){var ae=w[re];H=G[re];for(var oe=0,se=ae.length;oe<se;oe++){var ue=P(ae[oe],H[oe],te);Ce(ue.x,ue.y,-ee)}}}for(var Ae=A+c,ce=0;ce<R;ce++){var me=s?P(b[ce],j[ce],Ae):b[ce];_?(v.copy(p.normals[0]).multiplyScalar(me.x),x.copy(p.binormals[0]).multiplyScalar(me.y),g.copy(d[0]).add(v).add(x),Ce(g.x,g.y,g.z)):Ce(me.x,me.y,0)}for(var he=1;he<=l;he++)for(var fe=0;fe<R;fe++){var de=s?P(b[fe],j[fe],Ae):b[fe];_?(v.copy(p.normals[he]).multiplyScalar(de.x),x.copy(p.binormals[he]).multiplyScalar(de.y),g.copy(d[he]).add(v).add(x),Ce(g.x,g.y,g.z)):Ce(de.x,de.y,o/l*he)}for(var pe=m-1;pe>=0;pe--){for(var xe=pe/m,ve=u*Math.cos(xe*Math.PI/2),ge=A*Math.sin(xe*Math.PI/2)+c,_e=0,ye=k.length;_e<ye;_e++){var be=P(k[_e],O[_e],ge);Ce(be.x,be.y,o+ve)}for(var we=0,Me=w.length;we<Me;we++){var Se=w[we];H=G[we];for(var Ee=0,ze=Se.length;Ee<ze;Ee++){var ke=P(Se[Ee],H[Ee],ge);_?Ce(ke.x,ke.y+d[l-1].y,d[l-1].x+ve):Ce(ke.x,ke.y,o+ve)}}}function Te(e,t){for(var n=e.length;--n>=0;){var q=n,r=n-1;r<0&&(r=e.length-1);for(var i=0,a=l+2*m;i<a;i++){var o=R*i,s=R*(i+1);Pe(t+q+o,t+r+o,t+r+s,t+q+s)}}}function Ce(e,n,l){t.push(e),t.push(n),t.push(l)}function Le(e,t,n){Re(e),Re(t),Re(n);var l=i.length/3,q=f.generateTopUV(r,i,l-3,l-2,l-1);De(q[0]),De(q[1]),De(q[2])}function Pe(e,t,n,l){Re(e),Re(t),Re(l),Re(t),Re(n),Re(l);var q=i.length/3,a=f.generateSideWallUV(r,i,q-6,q-3,q-2,q-1);De(a[0]),De(a[1]),De(a[3]),De(a[1]),De(a[2]),De(a[3])}function Re(e){i.push(t[3*e+0]),i.push(t[3*e+1]),i.push(t[3*e+2])}function De(e){a.push(e.x),a.push(e.y)}!function(){var e=i.length/3;if(s){for(var t=0,n=R*t,q=0;q<D;q++){var a=z[q];Le(a[2]+n,a[1]+n,a[0]+n)}n=R*(t=l+2*m);for(var o=0;o<D;o++){var u=z[o];Le(u[0]+n,u[1]+n,u[2]+n)}}else{for(var A=0;A<D;A++){var c=z[A];Le(c[2],c[1],c[0])}for(var h=0;h<D;h++){var f=z[h];Le(f[0]+R*l,f[1]+R*l,f[2]+R*l)}}r.addGroup(e,i.length/3-e,0)}(),function(){var e=i.length/3,t=0;Te(k,t),t+=k.length;for(var n=0,l=w.length;n<l;n++){var q=w[n];Te(q,t),t+=q.length}r.addGroup(e,i.length/3-e,1)}()}return e.setAttribute("position",new Hn(i,3)),e.setAttribute("uv",new Hn(a,2)),e.computeVertexNormals(),e}return N(n,[{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(var l=0,q=e.length;l<q;l++){var r=e[l];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}}],[{key:"fromJSON",value:function(e,t){for(var l=[],q=0,r=e.shapes.length;q<r;q++){var i=t[e.shapes[q]];l.push(i)}var a=e.options.extrudePath;return void 0!==a&&(e.options.extrudePath=(new Ya[a.type]).fromJSON(a)),new n(l,e.options)}}]),n}(Zn),ko={generateTopUV:function(e,t,n,l,q){var r=t[3*n],i=t[3*n+1],a=t[3*l],o=t[3*l+1],s=t[3*q],u=t[3*q+1];return[new Ze(r,i),new Ze(a,o),new Ze(s,u)]},generateSideWallUV:function(e,t,n,l,q,r){var i=t[3*n],a=t[3*n+1],o=t[3*n+2],s=t[3*l],u=t[3*l+1],A=t[3*l+2],c=t[3*q],m=t[3*q+1],h=t[3*q+2],f=t[3*r],d=t[3*r+1],p=t[3*r+2];return Math.abs(a-u)<Math.abs(i-s)?[new Ze(i,1-o),new Ze(s,1-A),new Ze(c,1-h),new Ze(f,1-p)]:[new Ze(a,1-o),new Ze(u,1-A),new Ze(m,1-h),new Ze(d,1-p)]}};var To=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ja([new Ze(0,.5),new Ze(-.5,-.5),new Ze(.5,-.5)]),q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12;O(this,n),(e=t.call(this)).type="ShapeGeometry",e.parameters={shapes:l,curveSegments:q};var r=[],i=[],a=[],o=[],s=0,u=0;if(!1===Array.isArray(l))c(l);else for(var A=0;A<l.length;A++)c(l[A]),e.addGroup(s,u,A),s+=u,u=0;function c(e){var t=i.length/3,n=e.extractPoints(q),l=n.shape,s=n.holes;!1===Mo.isClockWise(l)&&(l=l.reverse());for(var A=0,c=s.length;A<c;A++){var m=s[A];!0===Mo.isClockWise(m)&&(s[A]=m.reverse())}for(var h=Mo.triangulateShape(l,s),f=0,d=s.length;f<d;f++){var p=s[f];l=l.concat(p)}for(var x=0,v=l.length;x<v;x++){var g=l[x];i.push(g.x,g.y,0),a.push(0,0,1),o.push(g.x,g.y)}for(var _=0,y=h.length;_<y;_++){var b=h[_],w=b[0]+t,M=b[1]+t,S=b[2]+t;r.push(w,M,S),u+=3}}return e.setIndex(r),e.setAttribute("position",new Hn(i,3)),e.setAttribute("normal",new Hn(a,3)),e.setAttribute("uv",new Hn(o,2)),e}return N(n,[{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,l=e.length;n<l;n++){var q=e[n];t.shapes.push(q.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}],[{key:"fromJSON",value:function(e,t){for(var l=[],q=0,r=e.shapes.length;q<r;q++){var i=t[e.shapes[q]];l.push(i)}return new n(l,e.curveSegments)}}]),n}(Zn);var Co=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;O(this,n),(e=t.call(this)).type="SphereGeometry",e.parameters={radius:l,widthSegments:q,heightSegments:r,phiStart:i,phiLength:a,thetaStart:o,thetaLength:s},q=Math.max(3,Math.floor(q)),r=Math.max(2,Math.floor(r));for(var u=Math.min(o+s,Math.PI),A=0,c=[],m=new At,h=new At,f=[],d=[],p=[],x=[],v=0;v<=r;v++){var g=[],_=v/r,y=0;0==v&&0==o?y=.5/q:v==r&&u==Math.PI&&(y=-.5/q);for(var b=0;b<=q;b++){var w=b/q;m.x=-l*Math.cos(i+w*a)*Math.sin(o+_*s),m.y=l*Math.cos(o+_*s),m.z=l*Math.sin(i+w*a)*Math.sin(o+_*s),d.push(m.x,m.y,m.z),h.copy(m).normalize(),p.push(h.x,h.y,h.z),x.push(w+y,1-_),g.push(A++)}c.push(g)}for(var M=0;M<r;M++)for(var S=0;S<q;S++){var E=c[M][S+1],z=c[M][S],k=c[M+1][S],T=c[M+1][S+1];(0!==M||o>0)&&f.push(E,z,T),(M!==r-1||u<Math.PI)&&f.push(z,k,T)}return e.setIndex(f),e.setAttribute("position",new Hn(d,3)),e.setAttribute("normal",new Hn(p,3)),e.setAttribute("uv",new Hn(x,2)),e}return N(n,null,[{key:"fromJSON",value:function(e){return new n(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}]),n}(Zn),Lo=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Wa(new At(-1,-1,0),new At(-1,1,0),new At(1,1,0)),q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];O(this,n),(e=t.call(this)).type="TubeGeometry",e.parameters={path:l,tubularSegments:q,radius:r,radialSegments:i,closed:a};var o=l.computeFrenetFrames(q,a);e.tangents=o.tangents,e.normals=o.normals,e.binormals=o.binormals;var s=new At,u=new At,A=new Ze,c=new At,m=[],h=[],f=[],d=[];function p(){for(var e=0;e<q;e++)x(e);x(!1===a?q:0),g(),v()}function x(e){c=l.getPointAt(e/q,c);for(var t=o.normals[e],n=o.binormals[e],a=0;a<=i;a++){var A=a/i*Math.PI*2,f=Math.sin(A),d=-Math.cos(A);u.x=d*t.x+f*n.x,u.y=d*t.y+f*n.y,u.z=d*t.z+f*n.z,u.normalize(),h.push(u.x,u.y,u.z),s.x=c.x+r*u.x,s.y=c.y+r*u.y,s.z=c.z+r*u.z,m.push(s.x,s.y,s.z)}}function v(){for(var e=1;e<=q;e++)for(var t=1;t<=i;t++){var n=(i+1)*(e-1)+(t-1),l=(i+1)*e+(t-1),r=(i+1)*e+t,a=(i+1)*(e-1)+t;d.push(n,l,a),d.push(l,r,a)}}function g(){for(var e=0;e<=q;e++)for(var t=0;t<=i;t++)A.x=e/q,A.y=t/i,f.push(A.x,A.y)}return p(),e.setIndex(d),e.setAttribute("position",new Hn(m,3)),e.setAttribute("normal",new Hn(h,3)),e.setAttribute("uv",new Hn(f,2)),e}return N(n,[{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this);return e.path=this.parameters.path.toJSON(),e}}],[{key:"fromJSON",value:function(e){return new n((new Ya[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}]),n}(Zn),Po=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(O(this,n),(e=t.call(this)).type="WireframeGeometry",e.parameters={geometry:l},null!==l){var q=[],r=new Set,i=new At,a=new At;if(null!==l.index){var o=l.attributes.position,s=l.index,u=l.groups;0===u.length&&(u=[{start:0,count:s.count,materialIndex:0}]);for(var A=0,c=u.length;A<c;++A)for(var m=u[A],h=m.start,f=m.count,d=h,p=h+f;d<p;d+=3)for(var x=0;x<3;x++){var v=s.getX(d+x),g=s.getX(d+(x+1)%3);i.fromBufferAttribute(o,v),a.fromBufferAttribute(o,g),!0===Ro(i,a,r)&&(q.push(i.x,i.y,i.z),q.push(a.x,a.y,a.z))}}else for(var _=l.attributes.position,y=0,b=_.count/3;y<b;y++)for(var w=0;w<3;w++){var M=3*y+w,S=3*y+(w+1)%3;i.fromBufferAttribute(_,M),a.fromBufferAttribute(_,S),!0===Ro(i,a,r)&&(q.push(i.x,i.y,i.z),q.push(a.x,a.y,a.z))}e.setAttribute("position",new Hn(q,3))}return e}return N(n)}(Zn);function Ro(e,t,n){var l="".concat(e.x,",").concat(e.y,",").concat(e.z,"-").concat(t.x,",").concat(t.y,",").concat(t.z),q="".concat(t.x,",").concat(t.y,",").concat(t.z,"-").concat(e.x,",").concat(e.y,",").concat(e.z);return!0!==n.has(l)&&!0!==n.has(q)&&(n.add(l,q),!0)}var Do=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="ShadowMaterial",l.color=new Rn(0),l.transparent=!0,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this}}]),n}(En);Do.prototype.isShadowMaterial=!0;var Io=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).defines={STANDARD:""},l.type="MeshStandardMaterial",l.color=new Rn(16777215),l.roughness=1,l.metalness=0,l.map=null,l.lightMap=null,l.lightMapIntensity=1,l.aoMap=null,l.aoMapIntensity=1,l.emissive=new Rn(0),l.emissiveIntensity=1,l.emissiveMap=null,l.bumpMap=null,l.bumpScale=1,l.normalMap=null,l.normalMapType=0,l.normalScale=new Ze(1,1),l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.roughnessMap=null,l.metalnessMap=null,l.alphaMap=null,l.envMap=null,l.envMapIntensity=1,l.refractionRatio=.98,l.wireframe=!1,l.wireframeLinewidth=1,l.wireframeLinecap="round",l.wireframeLinejoin="round",l.flatShading=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}]),n}(En);Io.prototype.isMeshStandardMaterial=!0;var Oo=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).defines={STANDARD:"",PHYSICAL:""},l.type="MeshPhysicalMaterial",l.clearcoatMap=null,l.clearcoatRoughness=0,l.clearcoatRoughnessMap=null,l.clearcoatNormalScale=new Ze(1,1),l.clearcoatNormalMap=null,l.ior=1.5,Object.defineProperty(E(l),"reflectivity",{get:function(){return Ge(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),l.sheenColor=new Rn(0),l.sheenColorMap=null,l.sheenRoughness=1,l.sheenRoughnessMap=null,l.transmissionMap=null,l.thickness=0,l.thicknessMap=null,l.attenuationDistance=0,l.attenuationColor=new Rn(1,1,1),l.specularIntensity=1,l.specularIntensityMap=null,l.specularColor=new Rn(1,1,1),l.specularColorMap=null,l._sheen=0,l._clearcoat=0,l._transmission=0,l.setValues(e),l}return N(n,[{key:"sheen",get:function(){return this._sheen},set:function(e){this._sheen>0!==e>0&&this.version++,this._sheen=e}},{key:"clearcoat",get:function(){return this._clearcoat},set:function(e){this._clearcoat>0!==e>0&&this.version++,this._clearcoat=e}},{key:"transmission",get:function(){return this._transmission},set:function(e){this._transmission>0!==e>0&&this.version++,this._transmission=e}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}]),n}(Io);Oo.prototype.isMeshPhysicalMaterial=!0;var Bo=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshPhongMaterial",l.color=new Rn(16777215),l.specular=new Rn(1118481),l.shininess=30,l.map=null,l.lightMap=null,l.lightMapIntensity=1,l.aoMap=null,l.aoMapIntensity=1,l.emissive=new Rn(0),l.emissiveIntensity=1,l.emissiveMap=null,l.bumpMap=null,l.bumpScale=1,l.normalMap=null,l.normalMapType=0,l.normalScale=new Ze(1,1),l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.specularMap=null,l.alphaMap=null,l.envMap=null,l.combine=0,l.reflectivity=1,l.refractionRatio=.98,l.wireframe=!1,l.wireframeLinewidth=1,l.wireframeLinecap="round",l.wireframeLinejoin="round",l.flatShading=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}]),n}(En);Bo.prototype.isMeshPhongMaterial=!0;var No=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).defines={TOON:""},l.type="MeshToonMaterial",l.color=new Rn(16777215),l.map=null,l.gradientMap=null,l.lightMap=null,l.lightMapIntensity=1,l.aoMap=null,l.aoMapIntensity=1,l.emissive=new Rn(0),l.emissiveIntensity=1,l.emissiveMap=null,l.bumpMap=null,l.bumpScale=1,l.normalMap=null,l.normalMapType=0,l.normalScale=new Ze(1,1),l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.alphaMap=null,l.wireframe=!1,l.wireframeLinewidth=1,l.wireframeLinecap="round",l.wireframeLinejoin="round",l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(En);No.prototype.isMeshToonMaterial=!0;var Uo=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshNormalMaterial",l.bumpMap=null,l.bumpScale=1,l.normalMap=null,l.normalMapType=0,l.normalScale=new Ze(1,1),l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.wireframe=!1,l.wireframeLinewidth=1,l.fog=!1,l.flatShading=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}]),n}(En);Uo.prototype.isMeshNormalMaterial=!0;var Fo=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="MeshLambertMaterial",l.color=new Rn(16777215),l.map=null,l.lightMap=null,l.lightMapIntensity=1,l.aoMap=null,l.aoMapIntensity=1,l.emissive=new Rn(0),l.emissiveIntensity=1,l.emissiveMap=null,l.specularMap=null,l.alphaMap=null,l.envMap=null,l.combine=0,l.reflectivity=1,l.refractionRatio=.98,l.wireframe=!1,l.wireframeLinewidth=1,l.wireframeLinecap="round",l.wireframeLinejoin="round",l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(En);Fo.prototype.isMeshLambertMaterial=!0;var Ho=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).defines={MATCAP:""},l.type="MeshMatcapMaterial",l.color=new Rn(16777215),l.matcap=null,l.map=null,l.bumpMap=null,l.bumpScale=1,l.normalMap=null,l.normalMapType=0,l.normalScale=new Ze(1,1),l.displacementMap=null,l.displacementScale=1,l.displacementBias=0,l.alphaMap=null,l.flatShading=!1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}]),n}(En);Ho.prototype.isMeshMatcapMaterial=!0;var Go=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="LineDashedMaterial",l.scale=1,l.dashSize=3,l.gapSize=1,l.setValues(e),l}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}]),n}(oa);Go.prototype.isLineDashedMaterial=!0;var jo={arraySlice:function(e,t,n){return jo.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"===typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,n=new Array(t),l=0;l!==t;++l)n[l]=l;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){for(var l=e.length,q=new e.constructor(l),r=0,i=0;i!==l;++r)for(var a=n[r]*t,o=0;o!==t;++o)q[i++]=e[a+o];return q},flattenJSON:function(e,t,n,l){for(var q=1,r=e[0];void 0!==r&&void 0===r[l];)r=e[q++];if(void 0!==r){var i=r[l];if(void 0!==i)if(Array.isArray(i))do{void 0!==(i=r[l])&&(t.push(r.time),n.push.apply(n,i)),r=e[q++]}while(void 0!==r);else if(void 0!==i.toArray)do{void 0!==(i=r[l])&&(t.push(r.time),i.toArray(n,n.length)),r=e[q++]}while(void 0!==r);else do{void 0!==(i=r[l])&&(t.push(r.time),n.push(i)),r=e[q++]}while(void 0!==r)}},subclip:function(e,t,n,l){var q=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30,r=e.clone();r.name=t;for(var i=[],a=0;a<r.tracks.length;++a){for(var o=r.tracks[a],s=o.getValueSize(),u=[],A=[],c=0;c<o.times.length;++c){var m=o.times[c]*q;if(!(m<n||m>=l)){u.push(o.times[c]);for(var h=0;h<s;++h)A.push(o.values[c*s+h])}}0!==u.length&&(o.times=jo.convertArray(u,o.times.constructor),o.values=jo.convertArray(A,o.values.constructor),i.push(o))}r.tracks=i;for(var f=1/0,d=0;d<r.tracks.length;++d)f>r.tracks[d].times[0]&&(f=r.tracks[d].times[0]);for(var p=0;p<r.tracks.length;++p)r.tracks[p].shift(-1*f);return r.resetDuration(),r},makeClipAdditive:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:30;l<=0&&(l=30);for(var q=n.tracks.length,r=t/l,i=function(t){var l=n.tracks[t],q=l.ValueTypeName;if("bool"===q||"string"===q)return"continue";var i=e.tracks.find((function(e){return e.name===l.name&&e.ValueTypeName===q}));if(void 0===i)return"continue";var a=0,o=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=o/3);var s=0,u=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(s=u/3);var A=l.times.length-1,c=void 0;if(r<=l.times[0]){var m=a,h=o-a;c=jo.arraySlice(l.values,m,h)}else if(r>=l.times[A]){var f=A*o+a,d=f+o-a;c=jo.arraySlice(l.values,f,d)}else{var p=l.createInterpolant(),x=a,v=o-a;p.evaluate(r),c=jo.arraySlice(p.resultBuffer,x,v)}"quaternion"===q&&(new ut).fromArray(c).normalize().conjugate().toArray(c);for(var g=i.times.length,_=0;_<g;++_){var y=_*u+s;if("quaternion"===q)ut.multiplyQuaternionsFlat(i.values,y,c,0,i.values,y);else for(var b=u-2*s,w=0;w<b;++w)i.values[y+w]-=c[w]}},a=0;a<q;++a)i(a);return e.blendMode=Ee,e}},Vo=function(){function e(t,n,l,q){O(this,e),this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==q?q:new n.constructor(l),this.sampleValues=n,this.valueSize=l,this.settings=null,this.DefaultSettings_={}}return N(e,[{key:"evaluate",value:function(e){var t=this.parameterPositions,n=this._cachedIndex,l=t[n],q=t[n-1];e:{t:{var r;n:{l:if(!(e<l)){for(var i=n+2;;){if(void 0===l){if(e<q)break l;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,q)}if(n===i)break;if(q=l,e<(l=t[++n]))break t}r=t.length;break n}if(e>=q)break e;var a=t[1];e<a&&(n=2,q=a);for(var o=n-2;;){if(void 0===q)return this._cachedIndex=0,this.beforeStart_(0,e,l);if(n===o)break;if(l=q,e>=(q=t[--n-1]))break t}r=n,n=0}for(;n<r;){var s=n+r>>>1;e<t[s]?r=s:n=s+1}if(l=t[n],void 0===(q=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,l);if(void 0===l)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,q,e)}this._cachedIndex=n,this.intervalChanged_(n,q,l)}return this.interpolate_(n,q,e,l)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var t=this.resultBuffer,n=this.sampleValues,l=this.valueSize,q=e*l,r=0;r!==l;++r)t[r]=n[q+r];return t}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}();Vo.prototype.beforeStart_=Vo.prototype.copySampleValue_,Vo.prototype.afterEnd_=Vo.prototype.copySampleValue_;var Wo=function(e){R(n,e);var t=I(n);function n(e,l,q,r){var i;return O(this,n),(i=t.call(this,e,l,q,r))._weightPrev=-0,i._offsetPrev=-0,i._weightNext=-0,i._offsetNext=-0,i.DefaultSettings_={endingStart:be,endingEnd:be},i}return N(n,[{key:"intervalChanged_",value:function(e,t,n){var l=this.parameterPositions,q=e-2,r=e+1,i=l[q],a=l[r];if(void 0===i)switch(this.getSettings_().endingStart){case we:q=e,i=2*t-n;break;case Me:i=t+l[q=l.length-2]-l[q+1];break;default:q=e,i=n}if(void 0===a)switch(this.getSettings_().endingEnd){case we:r=e,a=2*n-t;break;case Me:r=1,a=n+l[1]-l[0];break;default:r=e-1,a=t}var o=.5*(n-t),s=this.valueSize;this._weightPrev=o/(t-i),this._weightNext=o/(a-n),this._offsetPrev=q*s,this._offsetNext=r*s}},{key:"interpolate_",value:function(e,t,n,l){for(var q=this.resultBuffer,r=this.sampleValues,i=this.valueSize,a=e*i,o=a-i,s=this._offsetPrev,u=this._offsetNext,A=this._weightPrev,c=this._weightNext,m=(n-t)/(l-t),h=m*m,f=h*m,d=-A*f+2*A*h-A*m,p=(1+A)*f+(-1.5-2*A)*h+(-.5+A)*m+1,x=(-1-c)*f+(1.5+c)*h+.5*m,v=c*f-c*h,g=0;g!==i;++g)q[g]=d*r[s+g]+p*r[o+g]+x*r[a+g]+v*r[u+g];return q}}]),n}(Vo),Qo=function(e){R(n,e);var t=I(n);function n(e,l,q,r){return O(this,n),t.call(this,e,l,q,r)}return N(n,[{key:"interpolate_",value:function(e,t,n,l){for(var q=this.resultBuffer,r=this.sampleValues,i=this.valueSize,a=e*i,o=a-i,s=(n-t)/(l-t),u=1-s,A=0;A!==i;++A)q[A]=r[o+A]*u+r[a+A]*s;return q}}]),n}(Vo),Yo=function(e){R(n,e);var t=I(n);function n(e,l,q,r){return O(this,n),t.call(this,e,l,q,r)}return N(n,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),n}(Vo),Xo=function(){function e(t,n,l,q){if(O(this,e),void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===n||0===n.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=jo.convertArray(n,this.TimeBufferType),this.values=jo.convertArray(l,this.ValueBufferType),this.setInterpolation(q||this.DefaultInterpolation)}return N(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new Yo(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new Qo(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new Wo(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var t;switch(e){case ge:t=this.InterpolantFactoryMethodDiscrete;break;case _e:t=this.InterpolantFactoryMethodLinear;break;case ye:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ge;case this.InterpolantFactoryMethodLinear:return _e;case this.InterpolantFactoryMethodSmooth:return ye}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var t=this.times,n=0,l=t.length;n!==l;++n)t[n]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var t=this.times,n=0,l=t.length;n!==l;++n)t[n]*=e;return this}},{key:"trim",value:function(e,t){for(var n=this.times,l=n.length,q=0,r=l-1;q!==l&&n[q]<e;)++q;for(;-1!==r&&n[r]>t;)--r;if(++r,0!==q||r!==l){q>=r&&(q=(r=Math.max(r,1))-1);var i=this.getValueSize();this.times=jo.arraySlice(n,q,r),this.values=jo.arraySlice(this.values,q*i,r*i)}return this}},{key:"validate",value:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,l=this.values,q=n.length;0===q&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var r=null,i=0;i!==q;i++){var a=n[i];if("number"===typeof a&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,i,a),e=!1;break}if(null!==r&&r>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,i,a,r),e=!1;break}r=a}if(void 0!==l&&jo.isTypedArray(l))for(var o=0,s=l.length;o!==s;++o){var u=l[o];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,u),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=jo.arraySlice(this.times),t=jo.arraySlice(this.values),n=this.getValueSize(),l=this.getInterpolation()===ye,q=e.length-1,r=1,i=1;i<q;++i){var a=!1,o=e[i];if(o!==e[i+1]&&(1!==i||o!==e[0]))if(l)a=!0;else for(var s=i*n,u=s-n,A=s+n,c=0;c!==n;++c){var m=t[s+c];if(m!==t[u+c]||m!==t[A+c]){a=!0;break}}if(a){if(i!==r){e[r]=e[i];for(var h=i*n,f=r*n,d=0;d!==n;++d)t[f+d]=t[h+d]}++r}}if(q>0){e[r]=e[q];for(var p=q*n,x=r*n,v=0;v!==n;++v)t[x+v]=t[p+v];++r}return r!==e.length?(this.times=jo.arraySlice(e,0,r),this.values=jo.arraySlice(t,0,r*n)):(this.times=e,this.values=t),this}},{key:"clone",value:function(){var e=jo.arraySlice(this.times,0),t=jo.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}],[{key:"toJSON",value:function(e){var t,n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:jo.convertArray(e.times,Array),values:jo.convertArray(e.values,Array)};var l=e.getInterpolation();l!==e.DefaultInterpolation&&(t.interpolation=l)}return t.type=e.ValueTypeName,t}}]),e}();Xo.prototype.TimeBufferType=Float32Array,Xo.prototype.ValueBufferType=Float32Array,Xo.prototype.DefaultInterpolation=_e;var Zo=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(Xo);Zo.prototype.ValueTypeName="bool",Zo.prototype.ValueBufferType=Array,Zo.prototype.DefaultInterpolation=ge,Zo.prototype.InterpolantFactoryMethodLinear=void 0,Zo.prototype.InterpolantFactoryMethodSmooth=void 0;var Jo=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(Xo);Jo.prototype.ValueTypeName="color";var Ko=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(Xo);Ko.prototype.ValueTypeName="number";var $o=function(e){R(n,e);var t=I(n);function n(e,l,q,r){return O(this,n),t.call(this,e,l,q,r)}return N(n,[{key:"interpolate_",value:function(e,t,n,l){for(var q=this.resultBuffer,r=this.sampleValues,i=this.valueSize,a=(n-t)/(l-t),o=e*i,s=o+i;o!==s;o+=4)ut.slerpFlat(q,0,r,o-i,r,o,a);return q}}]),n}(Vo),es=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new $o(this.times,this.values,this.getValueSize(),e)}}]),n}(Xo);es.prototype.ValueTypeName="quaternion",es.prototype.DefaultInterpolation=_e,es.prototype.InterpolantFactoryMethodSmooth=void 0;var ts=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(Xo);ts.prototype.ValueTypeName="string",ts.prototype.ValueBufferType=Array,ts.prototype.DefaultInterpolation=ge,ts.prototype.InterpolantFactoryMethodLinear=void 0,ts.prototype.InterpolantFactoryMethodSmooth=void 0;var ns=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.apply(this,arguments)}return N(n)}(Xo);ns.prototype.ValueTypeName="vector";var ls=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,l=arguments.length>2?arguments[2]:void 0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Se;O(this,e),this.name=t,this.tracks=l,this.duration=n,this.blendMode=q,this.uuid=He(),this.duration<0&&this.resetDuration()}return N(e,[{key:"resetDuration",value:function(){for(var e=0,t=0,n=this.tracks.length;t!==n;++t){var l=this.tracks[t];e=Math.max(e,l.times[l.times.length-1])}return this.duration=e,this}},{key:"trim",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}},{key:"validate",value:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}},{key:"optimize",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},{key:"clone",value:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}},{key:"toJSON",value:function(){return this.constructor.toJSON(this)}}],[{key:"parse",value:function(e){for(var t=[],n=e.tracks,l=1/(e.fps||1),q=0,r=n.length;q!==r;++q)t.push(qs(n[q]).scale(l));var i=new this(e.name,e.duration,t,e.blendMode);return i.uuid=e.uuid,i}},{key:"toJSON",value:function(e){for(var t=[],n=e.tracks,l={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode},q=0,r=n.length;q!==r;++q)t.push(Xo.toJSON(n[q]));return l}},{key:"CreateFromMorphTargetSequence",value:function(e,t,n,l){for(var q=t.length,r=[],i=0;i<q;i++){var a=[],o=[];a.push((i+q-1)%q,i,(i+1)%q),o.push(0,1,0);var s=jo.getKeyframeOrder(a);a=jo.sortedArray(a,1,s),o=jo.sortedArray(o,1,s),l||0!==a[0]||(a.push(q),o.push(o[0])),r.push(new Ko(".morphTargetInfluences["+t[i].name+"]",a,o).scale(1/n))}return new this(e,-1,r)}},{key:"findByName",value:function(e,t){var n=e;if(!Array.isArray(e)){var l=e;n=l.geometry&&l.geometry.animations||l.animations}for(var q=0;q<n.length;q++)if(n[q].name===t)return n[q];return null}},{key:"CreateClipsFromMorphTargetSequences",value:function(e,t,n){for(var l={},q=/^([\w-]*?)([\d]+)$/,r=0,i=e.length;r<i;r++){var a=e[r],o=a.name.match(q);if(o&&o.length>1){var s=o[1],u=l[s];u||(l[s]=u=[]),u.push(a)}}var A=[];for(var c in l)A.push(this.CreateFromMorphTargetSequence(c,l[c],t,n));return A}},{key:"parseAnimation",value:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(e,t,n,l,q){if(0!==n.length){var r=[],i=[];jo.flattenJSON(n,r,i,l),0!==r.length&&q.push(new e(t,r,i))}},l=[],q=e.name||"default",r=e.fps||30,i=e.blendMode,a=e.length||-1,o=e.hierarchy||[],s=0;s<o.length;s++){var u=o[s].keys;if(u&&0!==u.length)if(u[0].morphTargets){var A={},c=void 0;for(c=0;c<u.length;c++)if(u[c].morphTargets)for(var m=0;m<u[c].morphTargets.length;m++)A[u[c].morphTargets[m]]=-1;for(var h in A){for(var f=[],d=[],p=0;p!==u[c].morphTargets.length;++p){var x=u[c];f.push(x.time),d.push(x.morphTarget===h?1:0)}l.push(new Ko(".morphTargetInfluence["+h+"]",f,d))}a=A.length*(r||1)}else{var v=".bones["+t[s].name+"]";n(ns,v+".position",u,"pos",l),n(es,v+".quaternion",u,"rot",l),n(ns,v+".scale",u,"scl",l)}}return 0===l.length?null:new this(q,a,l,i)}}]),e}();function qs(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ko;case"vector":case"vector2":case"vector3":case"vector4":return ns;case"color":return Jo;case"quaternion":return es;case"bool":case"boolean":return Zo;case"string":return ts}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var n=[],l=[];jo.flattenJSON(e.keys,n,l,"value"),e.times=n,e.values=l}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}var rs={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},is=N((function e(t,n,l){O(this,e);var q=this,r=!1,i=0,a=0,o=void 0,s=[];this.onStart=void 0,this.onLoad=t,this.onProgress=n,this.onError=l,this.itemStart=function(e){a++,!1===r&&void 0!==q.onStart&&q.onStart(e,i,a),r=!0},this.itemEnd=function(e){i++,void 0!==q.onProgress&&q.onProgress(e,i,a),i===a&&(r=!1,void 0!==q.onLoad&&q.onLoad())},this.itemError=function(e){void 0!==q.onError&&q.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return s.push(e,t),this},this.removeHandler=function(e){var t=s.indexOf(e);return-1!==t&&s.splice(t,2),this},this.getHandler=function(e){for(var t=0,n=s.length;t<n;t+=2){var l=s[t],q=s[t+1];if(l.global&&(l.lastIndex=0),l.test(e))return q}return null}})),as=new is,os=function(){function e(t){O(this,e),this.manager=void 0!==t?t:as,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}return N(e,[{key:"load",value:function(){}},{key:"loadAsync",value:function(e,t){var n=this;return new Promise((function(l,q){n.load(e,l,t,q)}))}},{key:"parse",value:function(){}},{key:"setCrossOrigin",value:function(e){return this.crossOrigin=e,this}},{key:"setWithCredentials",value:function(e){return this.withCredentials=e,this}},{key:"setPath",value:function(e){return this.path=e,this}},{key:"setResourcePath",value:function(e){return this.resourcePath=e,this}},{key:"setRequestHeader",value:function(e){return this.requestHeader=e,this}}]),e}(),ss={},us=function(e){R(n,e);var t=I(n);function n(e){return O(this,n),t.call(this,e)}return N(n,[{key:"load",value:function(e,t,n,l){var q=this;void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var r=rs.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout((function(){t&&t(r),q.manager.itemEnd(e)}),0),r;if(void 0===ss[e]){ss[e]=[],ss[e].push({onLoad:t,onProgress:n,onError:l});var i=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(i).then((function(t){if(200===t.status||0===t.status){0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received.");var n=ss[e],l=t.body.getReader(),q=t.headers.get("Content-Length"),r=q?parseInt(q):0,i=0!==r,a=0;return new ReadableStream({start:function(e){!function t(){l.read().then((function(l){var q=l.done,o=l.value;if(q)e.close();else{a+=o.byteLength;for(var s=new ProgressEvent("progress",{lengthComputable:i,loaded:a,total:r}),u=0,A=n.length;u<A;u++){var c=n[u];c.onProgress&&c.onProgress(s)}e.enqueue(o),t()}}))}()}})}throw Error('fetch for "'.concat(t.url,'" responded with ').concat(t.status,": ").concat(t.statusText))})).then((function(e){var t=new Response(e);switch(q.responseType){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((function(e){return(new DOMParser).parseFromString(e,q.mimeType)}));case"json":return t.json();default:return t.text()}})).then((function(t){rs.add(e,t);var n=ss[e];delete ss[e];for(var l=0,r=n.length;l<r;l++){var i=n[l];i.onLoad&&i.onLoad(t)}q.manager.itemEnd(e)})).catch((function(t){var n=ss[e];delete ss[e];for(var l=0,r=n.length;l<r;l++){var i=n[l];i.onError&&i.onError(t)}q.manager.itemError(e),q.manager.itemEnd(e)})),this.manager.itemStart(e)}else ss[e].push({onLoad:t,onProgress:n,onError:l})}},{key:"setResponseType",value:function(e){return this.responseType=e,this}},{key:"setMimeType",value:function(e){return this.mimeType=e,this}}]),n}(os),As=function(e){R(n,e);var t=I(n);function n(e){return O(this,n),t.call(this,e)}return N(n,[{key:"load",value:function(e,t,n,l){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var q=this,r=rs.get(e);if(void 0!==r)return q.manager.itemStart(e),setTimeout((function(){t&&t(r),q.manager.itemEnd(e)}),0),r;var i=et("img");function a(){s(),rs.add(e,this),t&&t(this),q.manager.itemEnd(e)}function o(t){s(),l&&l(t),q.manager.itemError(e),q.manager.itemEnd(e)}function s(){i.removeEventListener("load",a,!1),i.removeEventListener("error",o,!1)}return i.addEventListener("load",a,!1),i.addEventListener("error",o,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),q.manager.itemStart(e),i.src=e,i}}]),n}(os),cs=function(e){R(n,e);var t=I(n);function n(e){return O(this,n),t.call(this,e)}return N(n,[{key:"load",value:function(e,t,n,l){var q=new Ml,r=new As(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);var i=0;function a(n){r.load(e[n],(function(e){q.images[n]=e,6===++i&&(q.needsUpdate=!0,t&&t(q))}),void 0,l)}for(var o=0;o<e.length;++o)a(o);return q}}]),n}(os),ms=function(e){R(n,e);var t=I(n);function n(e){return O(this,n),t.call(this,e)}return N(n,[{key:"load",value:function(e,t,n,l){var q=new qt,r=new As(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,(function(e){q.image=e,q.needsUpdate=!0,void 0!==t&&t(q)}),n,l),q}}]),n}(os),hs=function(e){R(n,e);var t=I(n);function n(e){var l,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return O(this,n),(l=t.call(this)).type="Light",l.color=new Rn(e),l.intensity=q,l}return N(n,[{key:"dispose",value:function(){}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}]),n}(hn);hs.prototype.isLight=!0;var fs=function(e){R(n,e);var t=I(n);function n(e,l,q){var r;return O(this,n),(r=t.call(this,e,q)).type="HemisphereLight",r.position.copy(hn.DefaultUp),r.updateMatrix(),r.groundColor=new Rn(l),r}return N(n,[{key:"copy",value:function(e){return hs.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}]),n}(hs);fs.prototype.isHemisphereLight=!0;var ds=new Ht,ps=new At,xs=new At,vs=function(){function e(t){O(this,e),this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ze(512,512),this.map=null,this.mapPass=null,this.matrix=new Ht,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Pl,this._frameExtents=new Ze(1,1),this._viewportCount=1,this._viewports=[new it(0,0,1,1)]}return N(e,[{key:"getViewportCount",value:function(){return this._viewportCount}},{key:"getFrustum",value:function(){return this._frustum}},{key:"updateMatrices",value:function(e){var t=this.camera,n=this.matrix;ps.setFromMatrixPosition(e.matrixWorld),t.position.copy(ps),xs.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(xs),t.updateMatrixWorld(),ds.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ds),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}},{key:"getViewport",value:function(e){return this._viewports[e]}},{key:"getFrameExtents",value:function(){return this._frameExtents}},{key:"dispose",value:function(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}},{key:"copy",value:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}]),e}(),gs=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this,new yl(50,1,.5,500))).focus=1,e}return N(n,[{key:"updateMatrices",value:function(e){var t=this.camera,l=2*Fe*e.angle*this.focus,q=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;l===t.fov&&q===t.aspect&&r===t.far||(t.fov=l,t.aspect=q,t.far=r,t.updateProjectionMatrix()),C(k(n.prototype),"updateMatrices",this).call(this,e)}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.focus=e.focus,this}}]),n}(vs);gs.prototype.isSpotLightShadow=!0;var _s=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.PI/3,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;return O(this,n),(q=t.call(this,e,l)).type="SpotLight",q.position.copy(hn.DefaultUp),q.updateMatrix(),q.target=new hn,q.distance=r,q.angle=i,q.penumbra=a,q.decay=o,q.shadow=new gs,q}return N(n,[{key:"power",get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),n}(hs);_s.prototype.isSpotLight=!0;var ys=new Ht,bs=new At,ws=new At,Ms=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this,new yl(90,1,.5,500)))._frameExtents=new Ze(4,2),e._viewportCount=6,e._viewports=[new it(2,1,1,1),new it(0,1,1,1),new it(3,1,1,1),new it(1,1,1,1),new it(3,0,1,1),new it(1,0,1,1)],e._cubeDirections=[new At(1,0,0),new At(-1,0,0),new At(0,0,1),new At(0,0,-1),new At(0,1,0),new At(0,-1,0)],e._cubeUps=[new At(0,1,0),new At(0,1,0),new At(0,1,0),new At(0,1,0),new At(0,0,1),new At(0,0,-1)],e}return N(n,[{key:"updateMatrices",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.camera,l=this.matrix,q=e.distance||n.far;q!==n.far&&(n.far=q,n.updateProjectionMatrix()),bs.setFromMatrixPosition(e.matrixWorld),n.position.copy(bs),ws.copy(n.position),ws.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(ws),n.updateMatrixWorld(),l.makeTranslation(-bs.x,-bs.y,-bs.z),ys.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ys)}}]),n}(vs);Ms.prototype.isPointLightShadow=!0;var Ss=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return O(this,n),(q=t.call(this,e,l)).type="PointLight",q.distance=r,q.decay=i,q.shadow=new Ms,q}return N(n,[{key:"power",get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}]),n}(hs);Ss.prototype.isPointLight=!0;var Es=function(e){R(n,e);var t=I(n);function n(){return O(this,n),t.call(this,new Wl(-5,5,5,-5,.5,500))}return N(n)}(vs);Es.prototype.isDirectionalLightShadow=!0;var zs=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this,e,l)).type="DirectionalLight",q.position.copy(hn.DefaultUp),q.updateMatrix(),q.target=new hn,q.shadow=new Es,q}return N(n,[{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),n}(hs);zs.prototype.isDirectionalLight=!0;var ks=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this,e,l)).type="AmbientLight",q}return N(n)}(hs);ks.prototype.isAmbientLight=!0;var Ts=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;return O(this,n),(q=t.call(this,e,l)).type="RectAreaLight",q.width=r,q.height=i,q}return N(n,[{key:"power",get:function(){return this.intensity*this.width*this.height*Math.PI},set:function(e){this.intensity=e/(this.width*this.height*Math.PI)}},{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.width=e.width,this.height=e.height,this}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}]),n}(hs);Ts.prototype.isRectAreaLight=!0;var Cs=function(){function e(){O(this,e),this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new At)}return N(e,[{key:"set",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}},{key:"zero",value:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}},{key:"getAt",value:function(e,t){var n=e.x,l=e.y,q=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*l),t.addScaledVector(r[2],.488603*q),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],n*l*1.092548),t.addScaledVector(r[5],l*q*1.092548),t.addScaledVector(r[6],.315392*(3*q*q-1)),t.addScaledVector(r[7],n*q*1.092548),t.addScaledVector(r[8],.546274*(n*n-l*l)),t}},{key:"getIrradianceAt",value:function(e,t){var n=e.x,l=e.y,q=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],1.023328*l),t.addScaledVector(r[2],1.023328*q),t.addScaledVector(r[3],1.023328*n),t.addScaledVector(r[4],.858086*n*l),t.addScaledVector(r[5],.858086*l*q),t.addScaledVector(r[6],.743125*q*q-.247708),t.addScaledVector(r[7],.858086*n*q),t.addScaledVector(r[8],.429043*(n*n-l*l)),t}},{key:"add",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}},{key:"addScaledSH",value:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}},{key:"scale",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}},{key:"lerp",value:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}},{key:"equals",value:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}},{key:"copy",value:function(e){return this.set(e.coefficients)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.coefficients,l=0;l<9;l++)n[l].fromArray(e,t+3*l);return this}},{key:"toArray",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.coefficients,l=0;l<9;l++)n[l].toArray(e,t+3*l);return e}}],[{key:"getBasisAt",value:function(e,t){var n=e.x,l=e.y,q=e.z;t[0]=.282095,t[1]=.488603*l,t[2]=.488603*q,t[3]=.488603*n,t[4]=1.092548*n*l,t[5]=1.092548*l*q,t[6]=.315392*(3*q*q-1),t[7]=1.092548*n*q,t[8]=.546274*(n*n-l*l)}}]),e}();Cs.prototype.isSphericalHarmonics3=!0;var Ls=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Cs,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return O(this,n),(e=t.call(this,void 0,q)).sh=l,e}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.sh.copy(e.sh),this}},{key:"fromJSON",value:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.object.sh=this.sh.toArray(),t}}]),n}(hs);Ls.prototype.isLightProbe=!0;var Ps=function(){function e(){O(this,e)}return N(e,null,[{key:"decodeText",value:function(e){if("undefined"!==typeof TextDecoder)return(new TextDecoder).decode(e);for(var t="",n=0,l=e.length;n<l;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(q){return t}}},{key:"extractUrlBase",value:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}},{key:"resolveURL",value:function(e,t){return"string"!==typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}]),e}(),Rs=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="InstancedBufferGeometry",e.instanceCount=1/0,e}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.instanceCount=e.instanceCount,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e=C(k(n.prototype),"toJSON",this).call(this,this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}]),n}(Zn);Rs.prototype.isInstancedBufferGeometry=!0;var Ds;(function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),l=t.call(this,e),"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),l.options={premultiplyAlpha:"none"},l}return N(n,[{key:"setOptions",value:function(e){return this.options=e,this}},{key:"load",value:function(e,t,n,l){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var q=this,r=rs.get(e);if(void 0!==r)return q.manager.itemStart(e),setTimeout((function(){t&&t(r),q.manager.itemEnd(e)}),0),r;var i={};i.credentials="anonymous"===this.crossOrigin?"same-origin":"include",i.headers=this.requestHeader,fetch(e,i).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(q.options,{colorSpaceConversion:"none"}))})).then((function(n){rs.add(e,n),t&&t(n),q.manager.itemEnd(e)})).catch((function(t){l&&l(t),q.manager.itemError(e),q.manager.itemEnd(e)})),q.manager.itemStart(e)}}]),n})(os).prototype.isImageBitmapLoader=!0;var Is=function(){return void 0===Ds&&(Ds=new(window.AudioContext||window.webkitAudioContext)),Ds},Os=function(e){R(n,e);var t=I(n);function n(e){return O(this,n),t.call(this,e)}return N(n,[{key:"load",value:function(e,t,n,l){var q=this,r=new us(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(function(n){try{var r=n.slice(0);Is().decodeAudioData(r,(function(e){t(e)}))}catch(i){l?l(i):console.error(i),q.manager.itemError(e)}}),n,l)}}]),n}(os),Bs=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;O(this,n),q=t.call(this,void 0,r);var i=(new Rn).set(e),a=(new Rn).set(l),o=new At(i.r,i.g,i.b),s=new At(a.r,a.g,a.b),u=Math.sqrt(Math.PI),A=u*Math.sqrt(.75);return q.sh.coefficients[0].copy(o).add(s).multiplyScalar(u),q.sh.coefficients[1].copy(o).sub(s).multiplyScalar(A),q}return N(n)}(Ls);Bs.prototype.isHemisphereLightProbe=!0;var Ns=function(e){R(n,e);var t=I(n);function n(e){var l,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;O(this,n),l=t.call(this,void 0,q);var r=(new Rn).set(e);return l.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI)),l}return N(n)}(Ls);Ns.prototype.isAmbientLightProbe=!0;var Us=function(){function e(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];O(this,e),this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}return N(e,[{key:"start",value:function(){this.startTime=Fs(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}},{key:"stop",value:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}},{key:"getElapsedTime",value:function(){return this.getDelta(),this.elapsedTime}},{key:"getDelta",value:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=Fs();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}]),e}();function Fs(){return("undefined"===typeof performance?Date:performance).now()}var Hs=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this)).type="Audio",l.listener=e,l.context=e.context,l.gain=l.context.createGain(),l.gain.connect(e.getInput()),l.autoplay=!1,l.buffer=null,l.detune=0,l.loop=!1,l.loopStart=0,l.loopEnd=0,l.offset=0,l.duration=void 0,l.playbackRate=1,l.isPlaying=!1,l.hasPlaybackControl=!0,l.source=null,l.sourceType="empty",l._startedAt=0,l._progress=0,l._connected=!1,l.filters=[],l}return N(n,[{key:"getOutput",value:function(){return this.gain}},{key:"setNodeSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}},{key:"setMediaElementSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}},{key:"setMediaStreamSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}},{key:"setBuffer",value:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}},{key:"pause",value:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"stop",value:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"connect",value:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}},{key:"disconnect",value:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}},{key:"getFilters",value:function(){return this.filters}},{key:"setFilters",value:function(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}},{key:"setDetune",value:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}},{key:"getDetune",value:function(){return this.detune}},{key:"getFilter",value:function(){return this.getFilters()[0]}},{key:"setFilter",value:function(e){return this.setFilters(e?[e]:[])}},{key:"setPlaybackRate",value:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"getPlaybackRate",value:function(){return this.playbackRate}},{key:"onEnded",value:function(){this.isPlaying=!1}},{key:"getLoop",value:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}},{key:"setLoop",value:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"setLoopStart",value:function(e){return this.loopStart=e,this}},{key:"setLoopEnd",value:function(e){return this.loopEnd=e,this}},{key:"getVolume",value:function(){return this.gain.gain.value}},{key:"setVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}]),n}(hn),Gs=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2048;O(this,e),this.analyser=t.context.createAnalyser(),this.analyser.fftSize=n,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}return N(e,[{key:"getFrequencyData",value:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},{key:"getAverageFrequency",value:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}]),e}(),js=function(){function e(t,n,l){var q,r,i;switch(O(this,e),this.binding=t,this.valueSize=l,n){case"quaternion":q=this._slerp,r=this._slerpAdditive,i=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*l),this._workIndex=5;break;case"string":case"bool":q=this._select,r=this._select,i=this._setAdditiveIdentityOther,this.buffer=new Array(5*l);break;default:q=this._lerp,r=this._lerpAdditive,i=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*l)}this._mixBufferRegion=q,this._mixBufferRegionAdditive=r,this._setIdentity=i,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}return N(e,[{key:"accumulate",value:function(e,t){var n=this.buffer,l=this.valueSize,q=e*l+l,r=this.cumulativeWeight;if(0===r){for(var i=0;i!==l;++i)n[q+i]=n[i];r=t}else{var a=t/(r+=t);this._mixBufferRegion(n,q,0,a,l)}this.cumulativeWeight=r}},{key:"accumulateAdditive",value:function(e){var t=this.buffer,n=this.valueSize,l=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,l,0,e,n),this.cumulativeWeightAdditive+=e}},{key:"apply",value:function(e){var t=this.valueSize,n=this.buffer,l=e*t+t,q=this.cumulativeWeight,r=this.cumulativeWeightAdditive,i=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,q<1){var a=t*this._origIndex;this._mixBufferRegion(n,l,a,1-q,t)}r>0&&this._mixBufferRegionAdditive(n,l,this._addIndex*t,1,t);for(var o=t,s=t+t;o!==s;++o)if(n[o]!==n[o+t]){i.setValue(n,l);break}}},{key:"saveOriginalState",value:function(){var e=this.binding,t=this.buffer,n=this.valueSize,l=n*this._origIndex;e.getValue(t,l);for(var q=n,r=l;q!==r;++q)t[q]=t[l+q%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}},{key:"restoreOriginalState",value:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}},{key:"_setAdditiveIdentityNumeric",value:function(){for(var e=this._addIndex*this.valueSize,t=e+this.valueSize,n=e;n<t;n++)this.buffer[n]=0}},{key:"_setAdditiveIdentityQuaternion",value:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}},{key:"_setAdditiveIdentityOther",value:function(){for(var e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize,n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}},{key:"_select",value:function(e,t,n,l,q){if(l>=.5)for(var r=0;r!==q;++r)e[t+r]=e[n+r]}},{key:"_slerp",value:function(e,t,n,l){ut.slerpFlat(e,t,e,t,e,n,l)}},{key:"_slerpAdditive",value:function(e,t,n,l,q){var r=this._workIndex*q;ut.multiplyQuaternionsFlat(e,r,e,t,e,n),ut.slerpFlat(e,t,e,t,e,r,l)}},{key:"_lerp",value:function(e,t,n,l,q){for(var r=1-l,i=0;i!==q;++i){var a=t+i;e[a]=e[a]*r+e[n+i]*l}}},{key:"_lerpAdditive",value:function(e,t,n,l,q){for(var r=0;r!==q;++r){var i=t+r;e[i]=e[i]+e[n+r]*l}}}]),e}(),Vs="\\[\\]\\.:\\/",Ws=new RegExp("[\\[\\]\\.:\\/]","g"),Qs="[^\\[\\]\\.:\\/]",Ys="[^"+Vs.replace("\\.","")+"]",Xs=/((?:WC+[\/:])*)/.source.replace("WC",Qs),Zs=/(WCOD+)?/.source.replace("WCOD",Ys),Js=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Qs),Ks=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Qs),$s=new RegExp("^"+Xs+Zs+Js+Ks+"$"),eu=["material","materials","bones"],tu=function(){function e(t,n,l){O(this,e);var q=l||nu.parseTrackName(n);this._targetGroup=t,this._bindings=t.subscribe_(n,q)}return N(e,[{key:"getValue",value:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,l=this._bindings[n];void 0!==l&&l.getValue(e,t)}},{key:"setValue",value:function(e,t){for(var n=this._bindings,l=this._targetGroup.nCachedObjects_,q=n.length;l!==q;++l)n[l].setValue(e,t)}},{key:"bind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}]),e}(),nu=function(){function e(t,n,l){O(this,e),this.path=n,this.parsedPath=l||e.parseTrackName(n),this.node=e.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return N(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,t){e[t]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,t){for(var n=this.resolvedProperty,l=0,q=n.length;l!==q;++l)e[t++]=n[l]}},{key:"_getValue_arrayElement",value:function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,t){this.resolvedProperty.toArray(e,t)}},{key:"_setValue_direct",value:function(e,t){this.targetObject[this.propertyName]=e[t]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,t){for(var n=this.resolvedProperty,l=0,q=n.length;l!==q;++l)n[l]=e[t++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,l=0,q=n.length;l!==q;++l)n[l]=e[t++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,l=0,q=n.length;l!==q;++l)n[l]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,t){this.resolvedProperty.fromArray(e,t)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,t){this.bind(),this.getValue(e,t)}},{key:"_setValue_unbound",value:function(e,t){this.bind(),this.setValue(e,t)}},{key:"bind",value:function(){var t=this.node,n=this.parsedPath,l=n.objectName,q=n.propertyName,r=n.propertyIndex;if(t||(t=e.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(l){var i=n.objectIndex;switch(l){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var a=0;a<t.length;a++)if(t[a].name===i){i=a;break}break;default:if(void 0===t[l])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[l]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}var o=t[q];if(void 0!==o){var s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);var u=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===q){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=q;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][s]}else{var A=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+A+"."+q+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(t,n,l){return t&&t.isAnimationObjectGroup?new e.Composite(t,n,l):new e(t,n,l)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(Ws,"")}},{key:"parseTrackName",value:function(e){var t=$s.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},l=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==l&&-1!==l){var q=n.nodeName.substring(l+1);-1!==eu.indexOf(q)&&(n.nodeName=n.nodeName.substring(0,l),n.objectName=q)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}},{key:"findNode",value:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){var l=function e(n){for(var l=0;l<n.length;l++){var q=n[l];if(q.name===t||q.uuid===t)return q;var r=e(q.children);if(r)return r}return null}(e.children);if(l)return l}return null}}]),e}();nu.Composite=tu,nu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},nu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},nu.prototype.GetterByBindingType=[nu.prototype._getValue_direct,nu.prototype._getValue_array,nu.prototype._getValue_arrayElement,nu.prototype._getValue_toArray],nu.prototype.SetterByBindingTypeAndVersioning=[[nu.prototype._setValue_direct,nu.prototype._setValue_direct_setNeedsUpdate,nu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[nu.prototype._setValue_array,nu.prototype._setValue_array_setNeedsUpdate,nu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[nu.prototype._setValue_arrayElement,nu.prototype._setValue_arrayElement_setNeedsUpdate,nu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[nu.prototype._setValue_fromArray,nu.prototype._setValue_fromArray_setNeedsUpdate,nu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var lu=function(){function e(){O(this,e),this.uuid=He(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,l=arguments.length;n!==l;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var q=this;this.stats={objects:{get total(){return q._objects.length},get inUse(){return this.total-q.nCachedObjects_}},get bindingsPerObject(){return q._bindings.length}}}return N(e,[{key:"add",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._paths,l=this._parsedPaths,q=this._bindings,r=q.length,i=void 0,a=e.length,o=this.nCachedObjects_,s=0,u=arguments.length;s!==u;++s){var A=arguments[s],c=A.uuid,m=t[c];if(void 0===m){m=a++,t[c]=m,e.push(A);for(var h=0,f=r;h!==f;++h)q[h].push(new nu(A,n[h],l[h]))}else if(m<o){i=e[m];var d=--o,p=e[d];t[p.uuid]=m,e[m]=p,t[c]=d,e[d]=A;for(var x=0,v=r;x!==v;++x){var g=q[x],_=g[d],y=g[m];g[m]=_,void 0===y&&(y=new nu(A,n[x],l[x])),g[d]=y}}else e[m]!==i&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=o}},{key:"remove",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._bindings,l=n.length,q=this.nCachedObjects_,r=0,i=arguments.length;r!==i;++r){var a=arguments[r],o=a.uuid,s=t[o];if(void 0!==s&&s>=q){var u=q++,A=e[u];t[A.uuid]=s,e[s]=A,t[o]=u,e[u]=a;for(var c=0,m=l;c!==m;++c){var h=n[c],f=h[u],d=h[s];h[s]=f,h[u]=d}}}this.nCachedObjects_=q}},{key:"uncache",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._bindings,l=n.length,q=this.nCachedObjects_,r=e.length,i=0,a=arguments.length;i!==a;++i){var o=arguments[i],s=o.uuid,u=t[s];if(void 0!==u)if(delete t[s],u<q){var A=--q,c=e[A],m=--r,h=e[m];t[c.uuid]=u,e[u]=c,t[h.uuid]=A,e[A]=h,e.pop();for(var f=0,d=l;f!==d;++f){var p=n[f],x=p[A],v=p[m];p[u]=x,p[A]=v,p.pop()}}else{var g=--r,_=e[g];g>0&&(t[_.uuid]=u),e[u]=_,e.pop();for(var y=0,b=l;y!==b;++y){var w=n[y];w[u]=w[g],w.pop()}}}this.nCachedObjects_=q}},{key:"subscribe_",value:function(e,t){var n=this._bindingsIndicesByPath,l=n[e],q=this._bindings;if(void 0!==l)return q[l];var r=this._paths,i=this._parsedPaths,a=this._objects,o=a.length,s=this.nCachedObjects_,u=new Array(o);l=q.length,n[e]=l,r.push(e),i.push(t),q.push(u);for(var A=s,c=a.length;A!==c;++A){var m=a[A];u[A]=new nu(m,e,t)}return u}},{key:"unsubscribe_",value:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var l=this._paths,q=this._parsedPaths,r=this._bindings,i=r.length-1,a=r[i];t[e[i]]=n,r[n]=a,r.pop(),q[n]=q[i],q.pop(),l[n]=l[i],l.pop()}}}]),e}();lu.prototype.isAnimationObjectGroup=!0;var qu=function(){function e(t,n){var l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n.blendMode;O(this,e),this._mixer=t,this._clip=n,this._localRoot=l,this.blendMode=q;for(var r=n.tracks,i=r.length,a=new Array(i),o={endingStart:be,endingEnd:be},s=0;s!==i;++s){var u=r[s].createInterpolant(null);a[s]=u,u.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(i),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}return N(e,[{key:"play",value:function(){return this._mixer._activateAction(this),this}},{key:"stop",value:function(){return this._mixer._deactivateAction(this),this.reset()}},{key:"reset",value:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}},{key:"isRunning",value:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}},{key:"isScheduled",value:function(){return this._mixer._isActiveAction(this)}},{key:"startAt",value:function(e){return this._startTime=e,this}},{key:"setLoop",value:function(e,t){return this.loop=e,this.repetitions=t,this}},{key:"setEffectiveWeight",value:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}},{key:"getEffectiveWeight",value:function(){return this._effectiveWeight}},{key:"fadeIn",value:function(e){return this._scheduleFading(e,0,1)}},{key:"fadeOut",value:function(e){return this._scheduleFading(e,1,0)}},{key:"crossFadeFrom",value:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var l=this._clip.duration,q=e._clip.duration,r=q/l,i=l/q;e.warp(1,r,t),this.warp(i,1,t)}return this}},{key:"crossFadeTo",value:function(e,t,n){return e.crossFadeFrom(this,t,n)}},{key:"stopFading",value:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"setEffectiveTimeScale",value:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}},{key:"getEffectiveTimeScale",value:function(){return this._effectiveTimeScale}},{key:"setDuration",value:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}},{key:"syncWith",value:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}},{key:"halt",value:function(e){return this.warp(this._effectiveTimeScale,0,e)}},{key:"warp",value:function(e,t,n){var l=this._mixer,q=l.time,r=this.timeScale,i=this._timeScaleInterpolant;null===i&&(i=l._lendControlInterpolant(),this._timeScaleInterpolant=i);var a=i.parameterPositions,o=i.sampleValues;return a[0]=q,a[1]=q+n,o[0]=e/r,o[1]=t/r,this}},{key:"stopWarping",value:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"getMixer",value:function(){return this._mixer}},{key:"getClip",value:function(){return this._clip}},{key:"getRoot",value:function(){return this._localRoot||this._mixer._root}},{key:"_update",value:function(e,t,n,l){if(this.enabled){var q=this._startTime;if(null!==q){var r=(e-q)*n;if(r<0||0===n)return;this._startTime=null,t=n*r}t*=this._updateTimeScale(e);var i=this._updateTime(t),a=this._updateWeight(e);if(a>0){var o=this._interpolants,s=this._propertyBindings;if(this.blendMode===Ee)for(var u=0,A=o.length;u!==A;++u)o[u].evaluate(i),s[u].accumulateAdditive(a);else for(var c=0,m=o.length;c!==m;++c)o[c].evaluate(i),s[c].accumulate(l,a)}}else this._updateWeight(e)}},{key:"_updateWeight",value:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var l=n.evaluate(e)[0];t*=l,e>n.parameterPositions[1]&&(this.stopFading(),0===l&&(this.enabled=!1))}}return this._effectiveWeight=t,t}},{key:"_updateTimeScale",value:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}return this._effectiveTimeScale=t,t}},{key:"_updateTime",value:function(e){var t=this._clip.duration,n=this.loop,l=this.time+e,q=this._loopCount,r=2202===n;if(0===e)return-1===q?l:r&&1===(1&q)?t-l:l;if(2200===n){-1===q&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(l>=t)l=t;else{if(!(l<0)){this.time=l;break e}l=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=l,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===q&&(e>=0?(q=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),l>=t||l<0){var i=Math.floor(l/t);l-=t*i,q+=Math.abs(i);var a=this.repetitions-q;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,l=e>0?t:0,this.time=l,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){var o=e<0;this._setEndings(o,!o,r)}else this._setEndings(!1,!1,r);this._loopCount=q,this.time=l,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=l;if(r&&1===(1&q))return t-l}return l}},{key:"_setEndings",value:function(e,t,n){var l=this._interpolantSettings;n?(l.endingStart=we,l.endingEnd=we):(l.endingStart=e?this.zeroSlopeAtStart?we:be:Me,l.endingEnd=t?this.zeroSlopeAtEnd?we:be:Me)}},{key:"_scheduleFading",value:function(e,t,n){var l=this._mixer,q=l.time,r=this._weightInterpolant;null===r&&(r=l._lendControlInterpolant(),this._weightInterpolant=r);var i=r.parameterPositions,a=r.sampleValues;return i[0]=q,a[0]=t,i[1]=q+e,a[1]=n,this}}]),e}(),ru=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),(l=t.call(this))._root=e,l._initMemoryManager(),l._accuIndex=0,l.time=0,l.timeScale=1,l}return N(n,[{key:"_bindAction",value:function(e,t){var n=e._localRoot||this._root,l=e._clip.tracks,q=l.length,r=e._propertyBindings,i=e._interpolants,a=n.uuid,o=this._bindingsByRootAndName,s=o[a];void 0===s&&(s={},o[a]=s);for(var u=0;u!==q;++u){var A=l[u],c=A.name,m=s[c];if(void 0!==m)r[u]=m;else{if(void 0!==(m=r[u])){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,a,c));continue}var h=t&&t._propertyBindings[u].binding.parsedPath;++(m=new js(nu.create(n,c,h),A.ValueTypeName,A.getValueSize())).referenceCount,this._addInactiveBinding(m,a,c),r[u]=m}i[u].resultBuffer=m.buffer}}},{key:"_activateAction",value:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,l=this._actionsByClip[n];this._bindAction(e,l&&l.knownActions[0]),this._addInactiveAction(e,n,t)}for(var q=e._propertyBindings,r=0,i=q.length;r!==i;++r){var a=q[r];0===a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}},{key:"_deactivateAction",value:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,l=t.length;n!==l;++n){var q=t[n];0===--q.useCount&&(q.restoreOriginalState(),this._takeBackBinding(q))}this._takeBackAction(e)}}},{key:"_initMemoryManager",value:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}},{key:"_isActiveAction",value:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions}},{key:"_addInactiveAction",value:function(e,t,n){var l=this._actions,q=this._actionsByClip,r=q[t];if(void 0===r)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,q[t]=r;else{var i=r.knownActions;e._byClipCacheIndex=i.length,i.push(e)}e._cacheIndex=l.length,l.push(e),r.actionByRoot[n]=e}},{key:"_removeInactiveAction",value:function(e){var t=this._actions,n=t[t.length-1],l=e._cacheIndex;n._cacheIndex=l,t[l]=n,t.pop(),e._cacheIndex=null;var q=e._clip.uuid,r=this._actionsByClip,i=r[q],a=i.knownActions,o=a[a.length-1],s=e._byClipCacheIndex;o._byClipCacheIndex=s,a[s]=o,a.pop(),e._byClipCacheIndex=null,delete i.actionByRoot[(e._localRoot||this._root).uuid],0===a.length&&delete r[q],this._removeInactiveBindingsForAction(e)}},{key:"_removeInactiveBindingsForAction",value:function(e){for(var t=e._propertyBindings,n=0,l=t.length;n!==l;++n){var q=t[n];0===--q.referenceCount&&this._removeInactiveBinding(q)}}},{key:"_lendAction",value:function(e){var t=this._actions,n=e._cacheIndex,l=this._nActiveActions++,q=t[l];e._cacheIndex=l,t[l]=e,q._cacheIndex=n,t[n]=q}},{key:"_takeBackAction",value:function(e){var t=this._actions,n=e._cacheIndex,l=--this._nActiveActions,q=t[l];e._cacheIndex=l,t[l]=e,q._cacheIndex=n,t[n]=q}},{key:"_addInactiveBinding",value:function(e,t,n){var l=this._bindingsByRootAndName,q=this._bindings,r=l[t];void 0===r&&(r={},l[t]=r),r[n]=e,e._cacheIndex=q.length,q.push(e)}},{key:"_removeInactiveBinding",value:function(e){var t=this._bindings,n=e.binding,l=n.rootNode.uuid,q=n.path,r=this._bindingsByRootAndName,i=r[l],a=t[t.length-1],o=e._cacheIndex;a._cacheIndex=o,t[o]=a,t.pop(),delete i[q],0===Object.keys(i).length&&delete r[l]}},{key:"_lendBinding",value:function(e){var t=this._bindings,n=e._cacheIndex,l=this._nActiveBindings++,q=t[l];e._cacheIndex=l,t[l]=e,q._cacheIndex=n,t[n]=q}},{key:"_takeBackBinding",value:function(e){var t=this._bindings,n=e._cacheIndex,l=--this._nActiveBindings,q=t[l];e._cacheIndex=l,t[l]=e,q._cacheIndex=n,t[n]=q}},{key:"_lendControlInterpolant",value:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new Qo(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n}},{key:"_takeBackControlInterpolant",value:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,l=--this._nActiveControlInterpolants,q=t[l];e.__cacheIndex=l,t[l]=e,q.__cacheIndex=n,t[n]=q}},{key:"clipAction",value:function(e,t,n){var l=t||this._root,q=l.uuid,r="string"===typeof e?ls.findByName(l,e):e,i=null!==r?r.uuid:e,a=this._actionsByClip[i],o=null;if(void 0===n&&(n=null!==r?r.blendMode:Se),void 0!==a){var s=a.actionByRoot[q];if(void 0!==s&&s.blendMode===n)return s;o=a.knownActions[0],null===r&&(r=o._clip)}if(null===r)return null;var u=new qu(this,r,t,n);return this._bindAction(u,o),this._addInactiveAction(u,i,q),u}},{key:"existingAction",value:function(e,t){var n=t||this._root,l=n.uuid,q="string"===typeof e?ls.findByName(n,e):e,r=q?q.uuid:e,i=this._actionsByClip[r];return void 0!==i&&i.actionByRoot[l]||null}},{key:"stopAllAction",value:function(){for(var e=this._actions,t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}},{key:"update",value:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,l=this.time+=e,q=Math.sign(e),r=this._accuIndex^=1,i=0;i!==n;++i){t[i]._update(l,e,q,r)}for(var a=this._bindings,o=this._nActiveBindings,s=0;s!==o;++s)a[s].apply(r);return this}},{key:"setTime",value:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}},{key:"getRoot",value:function(){return this._root}},{key:"uncacheClip",value:function(e){var t=this._actions,n=e.uuid,l=this._actionsByClip,q=l[n];if(void 0!==q){for(var r=q.knownActions,i=0,a=r.length;i!==a;++i){var o=r[i];this._deactivateAction(o);var s=o._cacheIndex,u=t[t.length-1];o._cacheIndex=null,o._byClipCacheIndex=null,u._cacheIndex=s,t[s]=u,t.pop(),this._removeInactiveBindingsForAction(o)}delete l[n]}}},{key:"uncacheRoot",value:function(e){var t=e.uuid,n=this._actionsByClip;for(var l in n){var q=n[l].actionByRoot[t];void 0!==q&&(this._deactivateAction(q),this._removeInactiveAction(q))}var r=this._bindingsByRootAndName[t];if(void 0!==r)for(var i in r){var a=r[i];a.restoreOriginalState(),this._removeInactiveBinding(a)}}},{key:"uncacheAction",value:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}]),n}(Ie);ru.prototype._controlInterpolantsResultBuffer=new Float32Array(1);var iu=function(){function e(t){O(this,e),"string"===typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}return N(e,[{key:"clone",value:function(){return new e(void 0===this.value.clone?this.value:this.value.clone())}}]),e}(),au=function(e){R(n,e);var t=I(n);function n(e,l){var q,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return O(this,n),(q=t.call(this,e,l)).meshPerAttribute=r,q}return N(n,[{key:"copy",value:function(e){return C(k(n.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"clone",value:function(e){var t=C(k(n.prototype),"clone",this).call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t}},{key:"toJSON",value:function(e){var t=C(k(n.prototype),"toJSON",this).call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}]),n}(ki);au.prototype.isInstancedInterleavedBuffer=!0;var ou=function(){function e(t,n,l,q,r){O(this,e),this.buffer=t,this.type=n,this.itemSize=l,this.elementSize=q,this.count=r,this.version=0}return N(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setBuffer",value:function(e){return this.buffer=e,this}},{key:"setType",value:function(e,t){return this.type=e,this.elementSize=t,this}},{key:"setItemSize",value:function(e){return this.itemSize=e,this}},{key:"setCount",value:function(e){return this.count=e,this}}]),e}();ou.prototype.isGLBufferAttribute=!0;var su=function(){function e(t,n){var l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;O(this,e),this.ray=new Ft(t,n),this.near=l,this.far=q,this.camera=null,this.layers=new $t,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}return N(e,[{key:"set",value:function(e,t){this.ray.set(e,t)}},{key:"setFromCamera",value:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}},{key:"intersectObject",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return Au(e,this,n,t),n.sort(uu),n}},{key:"intersectObjects",value:function(e){for(var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],l=0,q=e.length;l<q;l++)Au(e[l],this,n,t);return n.sort(uu),n}}]),e}();function uu(e,t){return e.distance-t.distance}function Au(e,t,n,l){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===l)for(var q=e.children,r=0,i=q.length;r<i;r++)Au(q[r],t,n,!0)}var cu=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return O(this,e),this.radius=t,this.phi=n,this.theta=l,this}return N(e,[{key:"set",value:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"makeSafe",value:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ge(t/this.radius,-1,1))),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),mu=new Ze,hu=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ze(1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ze(-1/0,-1/0);O(this,e),this.min=t,this.max=n}return N(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=mu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return mu.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}();hu.prototype.isBox2=!0;var fu=new At,du=new At,pu=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new At,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new At;O(this,e),this.start=t,this.end=n}return N(e,[{key:"set",value:function(e,t){return this.start.copy(e),this.end.copy(t),this}},{key:"copy",value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:"getCenter",value:function(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(e){return e.subVectors(this.end,this.start)}},{key:"distanceSq",value:function(){return this.start.distanceToSquared(this.end)}},{key:"distance",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}},{key:"closestPointToPointParameter",value:function(e,t){fu.subVectors(e,this.start),du.subVectors(this.end,this.start);var n=du.dot(du),l=du.dot(fu)/n;return t&&(l=Ge(l,0,1)),l}},{key:"closestPointToPoint",value:function(e,t,n){var l=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(l).add(this.start)}},{key:"applyMatrix4",value:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}},{key:"equals",value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),xu=new At,vu=new Ht,gu=new Ht,_u=function(e){R(n,e);var t=I(n);function n(e){var l;O(this,n);for(var q=yu(e),r=new Zn,i=[],a=[],o=new Rn(0,0,1),s=new Rn(0,1,0),u=0;u<q.length;u++){var A=q[u];A.parent&&A.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),a.push(o.r,o.g,o.b),a.push(s.r,s.g,s.b))}r.setAttribute("position",new Hn(i,3)),r.setAttribute("color",new Hn(a,3));var c=new oa({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});return(l=t.call(this,r,c)).type="SkeletonHelper",l.isSkeletonHelper=!0,l.root=e,l.bones=q,l.matrix=e.matrixWorld,l.matrixAutoUpdate=!1,l}return N(n,[{key:"updateMatrixWorld",value:function(e){var t=this.bones,l=this.geometry,q=l.getAttribute("position");gu.copy(this.root.matrixWorld).invert();for(var r=0,i=0;r<t.length;r++){var a=t[r];a.parent&&a.parent.isBone&&(vu.multiplyMatrices(gu,a.matrixWorld),xu.setFromMatrixPosition(vu),q.setXYZ(i,xu.x,xu.y,xu.z),vu.multiplyMatrices(gu,a.parent.matrixWorld),xu.setFromMatrixPosition(vu),q.setXYZ(i+1,xu.x,xu.y,xu.z),i+=2)}l.getAttribute("position").needsUpdate=!0,C(k(n.prototype),"updateMatrixWorld",this).call(this,e)}}]),n}(pa);function yu(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,yu(e.children[n]));return t}var bu=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4473924,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8947848;O(this,n),r=new Rn(r),i=new Rn(i);for(var a=q/2,o=l/q,s=l/2,u=[],A=[],c=0,m=0,h=-s;c<=q;c++,h+=o){u.push(-s,0,h,s,0,h),u.push(h,0,-s,h,0,s);var f=c===a?r:i;f.toArray(A,m),m+=3,f.toArray(A,m),m+=3,f.toArray(A,m),m+=3,f.toArray(A,m),m+=3}var d=new Zn;d.setAttribute("position",new Hn(u,3)),d.setAttribute("color",new Hn(A,3));var p=new oa({vertexColors:!0,toneMapped:!1});return(e=t.call(this,d,p)).type="GridHelper",e}return N(n)}(pa);var wu=function(){function e(){O(this,e),this.type="ShapePath",this.color=new Rn,this.subPaths=[],this.currentPath=null}return N(e,[{key:"moveTo",value:function(e,t){return this.currentPath=new Za,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}},{key:"lineTo",value:function(e,t){return this.currentPath.lineTo(e,t),this}},{key:"quadraticCurveTo",value:function(e,t,n,l){return this.currentPath.quadraticCurveTo(e,t,n,l),this}},{key:"bezierCurveTo",value:function(e,t,n,l,q,r){return this.currentPath.bezierCurveTo(e,t,n,l,q,r),this}},{key:"splineThru",value:function(e){return this.currentPath.splineThru(e),this}},{key:"toShapes",value:function(e,t){function n(e){for(var t=[],n=0,l=e.length;n<l;n++){var q=e[n],r=new Ja;r.curves=q.curves,t.push(r)}return t}function l(e,t){for(var n=t.length,l=!1,q=n-1,r=0;r<n;q=r++){var i=t[q],a=t[r],o=a.x-i.x,s=a.y-i.y;if(Math.abs(s)>Number.EPSILON){if(s<0&&(i=t[r],o=-o,a=t[q],s=-s),e.y<i.y||e.y>a.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{var u=s*(e.x-i.x)-o*(e.y-i.y);if(0===u)return!0;if(u<0)continue;l=!l}}else{if(e.y!==i.y)continue;if(a.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=a.x)return!0}}return l}var q,r,i,a=Mo.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return n(o);var s=[];if(1===o.length)return r=o[0],(i=new Ja).curves=r.curves,s.push(i),s;var u=!a(o[0].getPoints());u=e?!u:u;var A,c,m=[],h=[],f=[],d=0;h[d]=void 0,f[d]=[];for(var p=0,x=o.length;p<x;p++)q=a(A=(r=o[p]).getPoints()),(q=e?!q:q)?(!u&&h[d]&&d++,h[d]={s:new Ja,p:A},h[d].s.curves=r.curves,u&&d++,f[d]=[]):f[d].push({h:r,p:A[0]});if(!h[0])return n(o);if(h.length>1){for(var v=!1,g=[],_=0,y=h.length;_<y;_++)m[_]=[];for(var b=0,w=h.length;b<w;b++)for(var M=f[b],S=0;S<M.length;S++){for(var E=M[S],z=!0,k=0;k<h.length;k++)l(E.p,h[k].p)&&(b!==k&&g.push({froms:b,tos:k,hole:S}),z?(z=!1,m[k].push(E)):v=!0);z&&m[b].push(E)}g.length>0&&(v||(f=m))}for(var T=0,C=h.length;T<C;T++){i=h[T].s,s.push(i);for(var L=0,P=(c=f[T]).length;L<P;L++)i.holes.push(c[L].h)}return s}}]),e}(),Mu=new Float32Array(1);new Int32Array(Mu.buffer);ka.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ka.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Za.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},bu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},_u.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},os.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ps.extractUrlBase(e)},os.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},hu.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},hu.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hu.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},hu.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},ht.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},ht.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ht.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ht.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},ht.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Pt.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Pl.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},pu.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Je.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Je.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Je.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Je.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Je.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Je.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Ht.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Ht.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Ht.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new At).setFromMatrixColumn(this,3)},Ht.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Ht.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Ht.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ht.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ht.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Ht.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Ht.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ht.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Ht.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Ht.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Ht.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Ht.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Ht.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Ht.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Ht.prototype.makeFrustum=function(e,t,n,l,q,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,l,n,q,r)},Ht.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Tl.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},ut.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},ut.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Ft.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Ft.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Ft.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Mn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Mn.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},Mn.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},Mn.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},Mn.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},Mn.barycoordFromPoint=function(e,t,n,l,q){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Mn.getBarycoord(e,t,n,l,q)},Mn.normal=function(e,t,n,l){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Mn.getNormal(e,t,n,l)},Ja.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Ja.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new zo(this,e)},Ja.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new To(this,e)},Ze.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ze.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Ze.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},At.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},At.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},At.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},At.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},At.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},At.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},At.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},At.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},At.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},it.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},it.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},hn.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},hn.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},hn.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},hn.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},hn.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(hn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),hl.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(hl.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),$i.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},yl.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(hs.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Bn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Re},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Re)}}}),Bn.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Re:Pe),this},Bn.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Bn.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Zn.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},Zn.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Bn(arguments[1],arguments[2])))},Zn.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},Zn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Zn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Zn.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},Zn.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Zn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),ki.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?Re:Pe),this},ki.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},zo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},zo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},zo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},zi.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},iu.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(En.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Rn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(gl.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),wi.prototype.clearTarget=function(e,t,n,l){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,l)},wi.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},wi.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},wi.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},wi.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},wi.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},wi.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},wi.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},wi.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},wi.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},wi.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},wi.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},wi.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},wi.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},wi.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},wi.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},wi.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},wi.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},wi.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},wi.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},wi.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},wi.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},wi.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},wi.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},wi.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(wi.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?ke:ze}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(ci.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(at.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Hs.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new Os).load(e,(function(e){t.setBuffer(e)})),this},Gs.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},wl.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},wl.prototype.clear=function(e,t,n,l){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,l)},nt.crossOrigin=void 0,nt.loadTexture=function(e,t,n,l){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var q=new ms;q.setCrossOrigin(this.crossOrigin);var r=q.load(e,n,void 0,l);return t&&(r.mapping=t),r},nt.loadTextureCube=function(e,t,n,l){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var q=new cs;q.setCrossOrigin(this.crossOrigin);var r=q.load(e,n,void 0,l);return t&&(r.mapping=t),r},nt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},nt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:G}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=G);var Su=n(494),Eu=n.n(Su);function zu(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return ku(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ku(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ku(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}var Tu=function e(t,n){var l=n.default,q=void 0===l?null:l,r=n.triggerUpdate,i=void 0===r||r,a=n.onChange,o=void 0===a?function(e,t){}:a;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.defaultVal=q,this.triggerUpdate=i,this.onChange=o};function Cu(e){var t=e.stateInit,n=void 0===t?function(){return{}}:t,l=e.props,q=void 0===l?{}:l,r=e.methods,i=void 0===r?{}:r,a=e.aliases,o=void 0===a?{}:a,s=e.init,u=void 0===s?function(){}:s,A=e.update,c=void 0===A?function(){}:A,m=Object.keys(q).map((function(e){return new Tu(e,q[e])}));return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},n instanceof Function?n(e):n,{initialised:!1}),l={};function q(t){return r(t,e),a(),q}var r=function(e,n){u.call(q,e,t,n),t.initialised=!0},a=Eu()((function(){t.initialised&&(c.call(q,t,l),l={})}),1);return m.forEach((function(e){q[e.name]=function(e){var n=e.name,r=e.triggerUpdate,i=void 0!==r&&r,o=e.onChange,s=void 0===o?function(e,t){}:o,u=e.defaultVal,A=void 0===u?null:u;return function(e){var r=t[n];if(!arguments.length)return r;var o=void 0===e?A:e;return t[n]=o,s.call(q,o,t,r),!l.hasOwnProperty(n)&&(l[n]=r),i&&a(),q}}(e)})),Object.keys(i).forEach((function(e){q[e]=function(){for(var n,l=arguments.length,r=new Array(l),a=0;a<l;a++)r[a]=arguments[a];return(n=i[e]).call.apply(n,[q,t].concat(r))}})),Object.entries(o).forEach((function(e){var t=zu(e,2),n=t[0],l=t[1];return q[n]=q[l]})),q.resetProps=function(){return m.forEach((function(e){q[e.name](e.defaultVal)})),q},q.resetProps(),t._rerender=a,q}}var Lu,Pu={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return.5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){return 0===e?0:1===e?1:-Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)},Out:function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin(5*(e-.1)*Math.PI)+1},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)+1}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(e){return 1-Pu.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*Pu.Bounce.In(2*e):.5*Pu.Bounce.Out(2*e-1)+.5}}};Lu="undefined"===typeof self&&"undefined"!==typeof process&&process.hrtime?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:"undefined"!==typeof self&&void 0!==self.performance&&void 0!==self.performance.now?self.performance.now.bind(self.performance):void 0!==Date.now?Date.now:function(){return(new Date).getTime()};var Ru=Lu,Du=function(){function e(){this._tweens={},this._tweensAddedDuringUpdate={}}return e.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map((function(t){return e._tweens[t]}))},e.prototype.removeAll=function(){this._tweens={}},e.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},e.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},e.prototype.update=function(e,t){void 0===e&&(e=Ru()),void 0===t&&(t=!1);var n=Object.keys(this._tweens);if(0===n.length)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var l=0;l<n.length;l++){var q=this._tweens[n[l]],r=!t;q&&!1===q.update(e,r)&&!t&&delete this._tweens[n[l]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},e}(),Iu={Linear:function(e,t){var n=e.length-1,l=n*t,q=Math.floor(l),r=Iu.Utils.Linear;return t<0?r(e[0],e[1],l):t>1?r(e[n],e[n-1],n-l):r(e[q],e[q+1>n?n:q+1],l-q)},Bezier:function(e,t){for(var n=0,l=e.length-1,q=Math.pow,r=Iu.Utils.Bernstein,i=0;i<=l;i++)n+=q(1-t,l-i)*q(t,i)*e[i]*r(l,i);return n},CatmullRom:function(e,t){var n=e.length-1,l=n*t,q=Math.floor(l),r=Iu.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(q=Math.floor(l=n*(1+t))),r(e[(q-1+n)%n],e[q],e[(q+1)%n],e[(q+2)%n],l-q)):t<0?e[0]-(r(e[0],e[0],e[1],e[1],-l)-e[0]):t>1?e[n]-(r(e[n],e[n],e[n-1],e[n-1],l-n)-e[n]):r(e[q?q-1:0],e[q],e[n<q+1?n:q+1],e[n<q+2?n:q+2],l-q)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=Iu.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:function(){var e=[1];return function(t){var n=1;if(e[t])return e[t];for(var l=t;l>1;l--)n*=l;return e[t]=n,n}}(),CatmullRom:function(e,t,n,l,q){var r=.5*(n-e),i=.5*(l-t),a=q*q;return(2*t-2*n+r+i)*(q*a)+(-3*t+3*n-2*r-i)*a+r*q+t}}},Ou=function(){function e(){}return e.nextId=function(){return e._nextId++},e._nextId=0,e}(),Bu=new Du,Nu=function(){function e(e,t){void 0===t&&(t=Bu),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Pu.Linear.None,this._interpolationFunction=Iu.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._id=Ou.nextId(),this._isChainStopped=!1,this._goToEnd=!1}return e.prototype.getId=function(){return this._id},e.prototype.isPlaying=function(){return this._isPlaying},e.prototype.isPaused=function(){return this._isPaused},e.prototype.to=function(e,t){return this._valuesEnd=Object.create(e),void 0!==t&&(this._duration=t),this},e.prototype.duration=function(e){return this._duration=e,this},e.prototype.start=function(e){if(this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed)for(var t in this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(t),this._valuesStart[t]=this._valuesStartRepeat[t];return this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=void 0!==e?"string"===typeof e?Ru()+parseFloat(e):e:Ru(),this._startTime+=this._delayTime,this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat),this},e.prototype._setupProperties=function(e,t,n,l){for(var q in n){var r=e[q],i=Array.isArray(r),a=i?"array":typeof r,o=!i&&Array.isArray(n[q]);if("undefined"!==a&&"function"!==a){if(o){var s=n[q];if(0===s.length)continue;s=s.map(this._handleRelativeValue.bind(this,r)),n[q]=[r].concat(s)}if("object"!==a&&!i||!r||o)"undefined"===typeof t[q]&&(t[q]=r),i||(t[q]*=1),l[q]=o?n[q].slice().reverse():t[q]||0;else{for(var u in t[q]=i?[]:{},r)t[q][u]=r[u];l[q]=i?[]:{},this._setupProperties(r,t[q],n[q],l[q])}}}},e.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},e.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},e.prototype.pause=function(e){return void 0===e&&(e=Ru()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this)),this},e.prototype.resume=function(e){return void 0===e&&(e=Ru()),this._isPaused&&this._isPlaying?(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this):this},e.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},e.prototype.group=function(e){return this._group=e,this},e.prototype.delay=function(e){return this._delayTime=e,this},e.prototype.repeat=function(e){return this._initialRepeat=e,this._repeat=e,this},e.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},e.prototype.yoyo=function(e){return this._yoyo=e,this},e.prototype.easing=function(e){return this._easingFunction=e,this},e.prototype.interpolation=function(e){return this._interpolationFunction=e,this},e.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},e.prototype.onStart=function(e){return this._onStartCallback=e,this},e.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},e.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},e.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},e.prototype.onStop=function(e){return this._onStopCallback=e,this},e.prototype.update=function(e,t){if(void 0===e&&(e=Ru()),void 0===t&&(t=!0),this._isPaused)return!0;var n,l,q=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>q)return!1;t&&this.start(e)}if(this._goToEnd=!1,e<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),l=(e-this._startTime)/this._duration,l=0===this._duration||l>1?1:l;var r=this._easingFunction(l);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,r),this._onUpdateCallback&&this._onUpdateCallback(this._object,l),1===l){if(this._repeat>0){for(n in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat)this._yoyo||"string"!==typeof this._valuesEnd[n]||(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),void 0!==this._repeatDelayTime?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),!0}this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var i=0,a=this._chainedTweens.length;i<a;i++)this._chainedTweens[i].start(this._startTime+this._duration);return this._isPlaying=!1,!1}return!0},e.prototype._updateProperties=function(e,t,n,l){for(var q in n)if(void 0!==t[q]){var r=t[q]||0,i=n[q],a=Array.isArray(e[q]),o=Array.isArray(i);!a&&o?e[q]=this._interpolationFunction(i,l):"object"===typeof i&&i?this._updateProperties(e[q],r,i,l):"number"===typeof(i=this._handleRelativeValue(r,i))&&(e[q]=r+(i-r)*l)}},e.prototype._handleRelativeValue=function(e,t){return"string"!==typeof t?t:"+"===t.charAt(0)||"-"===t.charAt(0)?e+parseFloat(t):parseFloat(t)},e.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];this._valuesStartRepeat[e]="string"===typeof n?this._valuesStartRepeat[e]+parseFloat(n):this._valuesEnd[e],this._valuesEnd[e]=t},e}(),Uu=Ou.nextId,Fu=Bu,Hu=Fu.getAll.bind(Fu),Gu=Fu.removeAll.bind(Fu),ju=Fu.add.bind(Fu),Vu=Fu.remove.bind(Fu),Wu=Fu.update.bind(Fu),Qu={Easing:Pu,Group:Du,Interpolation:Iu,now:Ru,Sequence:Ou,nextId:Uu,Tween:Nu,VERSION:"18.6.4",getAll:Hu,removeAll:Gu,add:ju,remove:Vu,update:Wu},Yu=n(89),Xu=n.n(Yu),Zu=function(){function e(){O(this,e),this._partials=new Float64Array(32),this._n=0}return N(e,[{key:"add",value:function(e){for(var t=this._partials,n=0,l=0;l<this._n&&l<32;l++){var q=t[l],r=e+q,i=Math.abs(e)<Math.abs(q)?e-(r-q):q-(r-e);i&&(t[n++]=i),e=r}return t[n]=e,this._n=n+1,this}},{key:"valueOf",value:function(){var e,t,n,l=this._partials,q=this._n,r=0;if(q>0){for(r=l[--q];q>0&&(e=r,!(n=(t=l[--q])-((r=e+t)-e))););q>0&&(n<0&&l[q-1]<0||n>0&&l[q-1]>0)&&(t=2*n)==(e=r+t)-r&&(r=e)}return r}}]),e}();var Ju=1e-6,Ku=Math.PI,$u=Ku/2,eA=Ku/4,tA=2*Ku,nA=180/Ku,lA=Ku/180,qA=Math.abs,rA=(Math.atan,Math.atan2),iA=Math.cos,aA=Math.ceil,oA=(Math.exp,Math.floor,Math.hypot,Math.log,Math.pow,Math.sin),sA=Math.sign||function(e){return e>0?1:e<0?-1:0},uA=Math.sqrt;Math.tan;function AA(e){return e>1?$u:e<-1?-$u:Math.asin(e)}function cA(e){return(e=oA(e/2))*e}function mA(){}function hA(e,t){e&&gA.hasOwnProperty(e.type)&&gA[e.type](e,t)}var fA,dA,pA,xA,vA={Feature:function(e,t){hA(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,l=-1,q=n.length;++l<q;)hA(n[l].geometry,t)}},gA={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)e=n[l],t.point(e[0],e[1],e[2])},LineString:function(e,t){_A(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)_A(n[l],t,0)},Polygon:function(e,t){yA(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)yA(n[l],t)},GeometryCollection:function(e,t){for(var n=e.geometries,l=-1,q=n.length;++l<q;)hA(n[l],t)}};function _A(e,t,n){var l,q=-1,r=e.length-n;for(t.lineStart();++q<r;)l=e[q],t.point(l[0],l[1],l[2]);t.lineEnd()}function yA(e,t){var n=-1,l=e.length;for(t.polygonStart();++n<l;)_A(e[n],t,1);t.polygonEnd()}function bA(e,t){e&&vA.hasOwnProperty(e.type)?vA[e.type](e,t):hA(e,t)}var wA={sphere:mA,point:mA,lineStart:function(){wA.point=SA,wA.lineEnd=MA},lineEnd:mA,polygonStart:mA,polygonEnd:mA};function MA(){wA.point=wA.lineEnd=mA}function SA(e,t){dA=e*=lA,pA=oA(t*=lA),xA=iA(t),wA.point=EA}function EA(e,t){e*=lA;var n=oA(t*=lA),l=iA(t),q=qA(e-dA),r=iA(q),i=l*oA(q),a=xA*n-pA*l*r,o=pA*n+xA*l*r;fA.add(rA(uA(i*i+a*a),o)),dA=e,pA=n,xA=l}var zA=[null,null],kA={type:"LineString",coordinates:zA};function TA(e,t){return zA[0]=e,zA[1]=t,function(e){return fA=new Zu,bA(e,wA),+fA}(kA)}function CA(e,t){var n=e[0]*lA,l=e[1]*lA,q=t[0]*lA,r=t[1]*lA,i=iA(l),a=oA(l),o=iA(r),s=oA(r),u=i*iA(n),A=i*oA(n),c=o*iA(q),m=o*oA(q),h=2*AA(uA(cA(r-l)+i*o*cA(q-n))),f=oA(h),d=h?function(e){var t=oA(e*=h)/f,n=oA(h-e)/f,l=n*u+t*c,q=n*A+t*m,r=n*a+t*s;return[rA(q,l)*nA,rA(r,uA(l*l+q*q))*nA]}:function(){return[n*nA,l*nA]};return d.distance=h,d}function LA(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function PA(e){return PA=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},PA(e)}function RA(e,t){return RA=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},RA(e,t)}function DA(e,t){if(t&&("object"===typeof t||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function IA(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,l=PA(e);if(t){var q=PA(this).constructor;n=Reflect.construct(l,arguments,q)}else n=l.apply(this,arguments);return DA(this,n)}}function OA(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||BA(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function BA(e,t){if(e){if("string"===typeof e)return NA(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?NA(e,t):void 0}}function NA(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}var UA=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],l=null;return e.forEach((function(e){if(l){var q=180*TA(e,l)/Math.PI;if(q>t)for(var r=CA(l,e),i=1/Math.ceil(q/t),a=i;a<1;)n.push(r(a)),a+=i}n.push(l=e)})),n},FA="undefined"!==typeof window&&window.THREE?window.THREE:{BufferGeometry:Zn,Float32BufferAttribute:Hn},HA=(new FA.BufferGeometry).setAttribute?"setAttribute":"addAttribute",GA=function(e){!function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&RA(e,t)}(n,e);var t=IA(n);function n(e){var l,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5;LA(this,n),(l=t.call(this)).type="GeoJsonGeometry",l.parameters={geoJson:e,radius:q,resolution:r};var i=({Point:u,MultiPoint:A,LineString:c,MultiLineString:m,Polygon:h,MultiPolygon:f}[e.type]||function(){return[]})(e.coordinates,q),a=[],o=[],s=0;function u(e,t){return[{vertices:WA(e[1],e[0],t),indices:[]}]}function A(e,t){var n={vertices:[],indices:[]};return e.map((function(e){return u(e,t)})).forEach((function(e){var t=OA(e,1)[0];jA(n,t)})),[n]}function c(e,t){for(var n=UA(e,r).map((function(e){var n=OA(e,2),l=n[0];return WA(n[1],l,t)})),l=Xu().flatten([n]).vertices,q=Math.round(l.length/3),i=[],a=1;a<q;a++)i.push(a-1,a);return[{vertices:l,indices:i}]}function m(e,t){var n={vertices:[],indices:[]};return e.map((function(e){return c(e,t)})).forEach((function(e){var t=OA(e,1)[0];jA(n,t)})),[n]}function h(e,t){for(var n=e.map((function(e){return UA(e,r).map((function(e){var n=OA(e,2),l=n[0];return WA(n[1],l,t)}))})),l=Xu().flatten(n),q=l.vertices,i=l.holes,a=i[0]||1/0,o=q.slice(0,3*a),s=q.slice(3*a),u=new Set(i),A=Math.round(q.length/3),c=[],m=[],h=1;h<A;h++)u.has(h)||(h<a?c.push(h-1,h):m.push(h-1-a,h-a));var f=[{indices:c,vertices:o}];return i.length&&f.push({indices:m,vertices:s}),f}function f(e,t){var n={vertices:[],indices:[]},l={vertices:[],indices:[]};e.map((function(e){return h(e,t)})).forEach((function(e){var t=OA(e,2),q=t[0],r=t[1];jA(n,q),r&&jA(l,r)}));var q=[n];return l.vertices.length&&q.push(l),q}return i.forEach((function(e){var t=a.length;jA({indices:a,vertices:o},e),l.addGroup(t,a.length-t,s++)})),a.length&&l.setIndex(a),o.length&&l[HA]("position",new FA.Float32BufferAttribute(o,3)),l}return n}(FA.BufferGeometry);function jA(e,t){var n=Math.round(e.vertices.length/3);VA(e.vertices,t.vertices),VA(e.indices,t.indices.map((function(e){return e+n})))}function VA(e,t){var n,l=function(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=BA(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var l=0,q=function(){};return{s:q,n:function(){return l>=e.length?{done:!0}:{done:!1,value:e[l++]}},e:function(e){throw e},f:q}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){a=!0,r=e},f:function(){try{i||null==n.return||n.return()}finally{if(a)throw r}}}}(t);try{for(l.s();!(n=l.n()).done;){var q=n.value;e.push(q)}}catch(r){l.e(r)}finally{l.f()}}function WA(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=(90-e)*Math.PI/180,q=(90-t)*Math.PI/180;return[n*Math.sin(l)*Math.cos(q),n*Math.cos(l),n*Math.sin(l)*Math.sin(q)]}function QA(e,t,n){e=+e,t=+t,n=(q=arguments.length)<2?(t=e,e=0,1):q<3?1:+n;for(var l=-1,q=0|Math.max(0,Math.ceil((t-e)/n)),r=new Array(q);++l<q;)r[l]=e+l*n;return r}function YA(e,t,n){var l=QA(e,t-Ju,n).concat(t);return function(e){return l.map((function(t){return[e,t]}))}}function XA(e,t,n){var l=QA(e,t-Ju,n).concat(t);return function(e){return l.map((function(t){return[t,e]}))}}function ZA(){return function(){var e,t,n,l,q,r,i,a,o,s,u,A,c=10,m=c,h=90,f=360,d=2.5;function p(){return{type:"MultiLineString",coordinates:x()}}function x(){return QA(aA(l/h)*h,n,h).map(u).concat(QA(aA(a/f)*f,i,f).map(A)).concat(QA(aA(t/c)*c,e,c).filter((function(e){return qA(e%h)>Ju})).map(o)).concat(QA(aA(r/m)*m,q,m).filter((function(e){return qA(e%f)>Ju})).map(s))}return p.lines=function(){return x().map((function(e){return{type:"LineString",coordinates:e}}))},p.outline=function(){return{type:"Polygon",coordinates:[u(l).concat(A(i).slice(1),u(n).reverse().slice(1),A(a).reverse().slice(1))]}},p.extent=function(e){return arguments.length?p.extentMajor(e).extentMinor(e):p.extentMinor()},p.extentMajor=function(e){return arguments.length?(l=+e[0][0],n=+e[1][0],a=+e[0][1],i=+e[1][1],l>n&&(e=l,l=n,n=e),a>i&&(e=a,a=i,i=e),p.precision(d)):[[l,a],[n,i]]},p.extentMinor=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],r=+n[0][1],q=+n[1][1],t>e&&(n=t,t=e,e=n),r>q&&(n=r,r=q,q=n),p.precision(d)):[[t,r],[e,q]]},p.step=function(e){return arguments.length?p.stepMajor(e).stepMinor(e):p.stepMinor()},p.stepMajor=function(e){return arguments.length?(h=+e[0],f=+e[1],p):[h,f]},p.stepMinor=function(e){return arguments.length?(c=+e[0],m=+e[1],p):[c,m]},p.precision=function(c){return arguments.length?(d=+c,o=YA(r,q,90),s=XA(t,e,d),u=YA(a,i,90),A=XA(l,n,d),p):d},p.extentMajor([[-180,-89.999999],[180,89.999999]]).extentMinor([[-180,-80.000001],[180,80.000001]])}()()}function JA(e){e.computeTangents(),console.warn("THREE.BufferGeometryUtils: .computeTangents() has been removed. Use BufferGeometry.computeTangents() instead.")}function KA(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=null!==e[0].index,l=new Set(Object.keys(e[0].attributes)),q=new Set(Object.keys(e[0].morphAttributes)),r={},i={},a=e[0].morphTargetsRelative,o=new Zn,s=0,u=0;u<e.length;++u){var A=e[u],c=0;if(n!==(null!==A.index))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(var m in A.attributes){if(!l.has(m))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+m+'" attribute exists among all geometries, or in none of them.'),null;void 0===r[m]&&(r[m]=[]),r[m].push(A.attributes[m]),c++}if(c!==l.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==A.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(var h in A.morphAttributes){if(!q.has(h))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===i[h]&&(i[h]=[]),i[h].push(A.morphAttributes[h])}if(o.userData.mergedUserData=o.userData.mergedUserData||[],o.userData.mergedUserData.push(A.userData),t){var f=void 0;if(n)f=A.index.count;else{if(void 0===A.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;f=A.attributes.position.count}o.addGroup(s,f,u),s+=f}}if(n){for(var d=0,p=[],x=0;x<e.length;++x){for(var v=e[x].index,g=0;g<v.count;++g)p.push(v.getX(g)+d);d+=e[x].attributes.position.count}o.setIndex(p)}for(var _ in r){var y=$A(r[_]);if(!y)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+_+" attribute."),null;o.setAttribute(_,y)}for(var b in i){var w=i[b][0].length;if(0===w)break;o.morphAttributes=o.morphAttributes||{},o.morphAttributes[b]=[];for(var M=0;M<w;++M){for(var S=[],E=0;E<i[b].length;++E)S.push(i[b][E][M]);var z=$A(S);if(!z)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+b+" morphAttribute."),null;o.morphAttributes[b].push(z)}}return o}function $A(e){for(var t,n,l,q=0,r=0;r<e.length;++r){var i=e[r];if(i.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===t&&(t=i.array.constructor),t!==i.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===n&&(n=i.itemSize),n!==i.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===l&&(l=i.normalized),l!==i.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;q+=i.array.length}for(var a=new t(q),o=0,s=0;s<e.length;++s)a.set(e[s].array,o),o+=e[s].array.length;return new Bn(a,n,l)}function ec(e){for(var t,n=0,l=0,q=0,r=e.length;q<r;++q){var i=e[q];if(void 0===t&&(t=i.array.constructor),t!==i.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;n+=i.array.length,l+=i.itemSize}for(var a=new ki(new t(n),l),o=0,s=[],u=["getX","getY","getZ","getW"],A=["setX","setY","setZ","setW"],c=0,m=e.length;c<m;c++){var h=e[c],f=h.itemSize,d=h.count,p=new Ci(a,f,o,h.normalized);s.push(p),o+=f;for(var x=0;x<d;x++)for(var v=0;v<f;v++)p[A[v]](x,h[u[v]](x))}return s}function tc(e){var t=0;for(var n in e.attributes){var l=e.getAttribute(n);t+=l.count*l.itemSize*l.array.BYTES_PER_ELEMENT}var q=e.getIndex();return t+=q?q.count*q.itemSize*q.array.BYTES_PER_ELEMENT:0}function nc(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e-4;t=Math.max(t,Number.EPSILON);for(var n={},l=e.getIndex(),q=e.getAttribute("position"),r=l?l.count:q.count,i=0,a=Object.keys(e.attributes),o={},s={},u=[],A=["getX","getY","getZ","getW"],c=0,m=a.length;c<m;c++){var h=a[c];o[h]=[];var f=e.morphAttributes[h];f&&(s[h]=new Array(f.length).fill().map((function(){return[]})))}for(var d=Math.log10(1/t),p=Math.pow(10,d),x=0;x<r;x++){for(var v=l?l.getX(x):x,g="",_=0,y=a.length;_<y;_++)for(var b=a[_],w=e.getAttribute(b),M=w.itemSize,S=0;S<M;S++)g+="".concat(~~(w[A[S]](v)*p),",");if(g in n)u.push(n[g]);else{for(var E=0,z=a.length;E<z;E++)for(var k=a[E],T=e.getAttribute(k),C=e.morphAttributes[k],L=T.itemSize,P=o[k],R=s[k],D=0;D<L;D++){var I=A[D];if(P.push(T[I](v)),C)for(var O=0,B=C.length;O<B;O++)R[O].push(C[O][I](v))}n[g]=i,u.push(i),i++}}for(var N=e.clone(),U=0,F=a.length;U<F;U++){var H=a[U],G=e.getAttribute(H),j=new G.array.constructor(o[H]),V=new Bn(j,G.itemSize,G.normalized);if(N.setAttribute(H,V),H in s)for(var W=0;W<s[H].length;W++){var Q=e.morphAttributes[H][W],Y=new Q.array.constructor(s[H][W]),X=new Bn(Y,Q.itemSize,Q.normalized);N.morphAttributes[H][W]=X}}return N.setIndex(u),N}function lc(e,t){if(0===t)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(2===t||1===t){var n=e.getIndex();if(null===n){var l=[],q=e.getAttribute("position");if(void 0===q)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(var r=0;r<q.count;r++)l.push(r);e.setIndex(l),n=e.getIndex()}var i=n.count-2,a=[];if(2===t)for(var o=1;o<=i;o++)a.push(n.getX(0)),a.push(n.getX(o)),a.push(n.getX(o+1));else for(var s=0;s<i;s++)s%2===0?(a.push(n.getX(s)),a.push(n.getX(s+1)),a.push(n.getX(s+2))):(a.push(n.getX(s+2)),a.push(n.getX(s+1)),a.push(n.getX(s)));a.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");var u=e.clone();return u.setIndex(a),u.clearGroups(),u}return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e}function qc(e){if(!0!==e.geometry.isBufferGeometry)return console.error("THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry."),null;var t=new At,n=new At,l=new At,q=new At,r=new At,i=new At,a=new At,o=new At,s=new At;function u(e,u,A,c,m,h,f,d,p){t.fromBufferAttribute(A,h),n.fromBufferAttribute(A,f),l.fromBufferAttribute(A,d);var x=e.morphTargetInfluences;if(u.morphTargets&&c&&x){a.set(0,0,0),o.set(0,0,0),s.set(0,0,0);for(var v=0,g=c.length;v<g;v++){var _=x[v],y=c[v];0!==_&&(q.fromBufferAttribute(y,h),r.fromBufferAttribute(y,f),i.fromBufferAttribute(y,d),m?(a.addScaledVector(q,_),o.addScaledVector(r,_),s.addScaledVector(i,_)):(a.addScaledVector(q.sub(t),_),o.addScaledVector(r.sub(n),_),s.addScaledVector(i.sub(l),_)))}t.add(a),n.add(o),l.add(s)}e.isSkinnedMesh&&(e.boneTransform(h,t),e.boneTransform(f,n),e.boneTransform(d,l)),p[3*h+0]=t.x,p[3*h+1]=t.y,p[3*h+2]=t.z,p[3*f+0]=n.x,p[3*f+1]=n.y,p[3*f+2]=n.z,p[3*d+0]=l.x,p[3*d+1]=l.y,p[3*d+2]=l.z}var A,c,m,h,f,d,p,x,v,g=e.geometry,_=e.material,y=g.index,b=g.attributes.position,w=g.morphAttributes.position,M=g.morphTargetsRelative,S=g.attributes.normal,E=g.morphAttributes.position,z=g.groups,k=g.drawRange,T=new Float32Array(b.count*b.itemSize),C=new Float32Array(S.count*S.itemSize);if(null!==y)if(Array.isArray(_))for(h=0,d=z.length;h<d;h++)for(v=_[(x=z[h]).materialIndex],f=Math.max(x.start,k.start),p=Math.min(x.start+x.count,k.start+k.count);f<p;f+=3)u(e,v,b,w,M,A=y.getX(f),c=y.getX(f+1),m=y.getX(f+2),T),u(e,v,S,E,M,A,c,m,C);else for(h=Math.max(0,k.start),d=Math.min(y.count,k.start+k.count);h<d;h+=3)u(e,_,b,w,M,A=y.getX(h),c=y.getX(h+1),m=y.getX(h+2),T),u(e,_,S,E,M,A,c,m,C);else if(void 0!==b)if(Array.isArray(_))for(h=0,d=z.length;h<d;h++)for(v=_[(x=z[h]).materialIndex],f=Math.max(x.start,k.start),p=Math.min(x.start+x.count,k.start+k.count);f<p;f+=3)u(e,v,b,w,M,A=f,c=f+1,m=f+2,T),u(e,v,S,E,M,A,c,m,C);else for(h=Math.max(0,k.start),d=Math.min(b.count,k.start+k.count);h<d;h+=3)u(e,_,b,w,M,A=h,c=h+1,m=h+2,T),u(e,_,S,E,M,A,c,m,C);return{positionAttribute:b,normalAttribute:S,morphedPositionAttribute:new Hn(T,3),morphedNormalAttribute:new Hn(C,3)}}var rc=function(e){return e instanceof Function?e:"string"===typeof e?function(t){return t[e]}:function(t){return e}},ic=n(45),ac=n.n(ic);function oc(e,t){if(null==e)return{};var n,l,q=function(e,t){if(null==e)return{};var n,l,q={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(q[n]=e[n]);return q}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(q[n]=e[n])}return q}function sc(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||Ac(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function uc(e){return function(e){if(Array.isArray(e))return cc(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Ac(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ac(e,t){if(e){if("string"===typeof e)return cc(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?cc(e,t):void 0}}function cc(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}function mc(e){var t=function(e,t){if("object"!==typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var l=n.call(e,t||"default");if("object"!==typeof l)return l;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===typeof t?t:String(t)}var hc=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],l=arguments.length>3&&void 0!==arguments[3]&&arguments[3],q=(t instanceof Array?t.length?t:[void 0]:[t]).map((function(e){return{keyAccessor:e,isProp:!(e instanceof Function)}})),r=e.reduce((function(e,t){var l=e,r=t;return q.forEach((function(e,t){var i,a=e.keyAccessor;if(e.isProp){var o=r,s=o[a],u=oc(o,[a].map(mc));i=s,r=u}else i=a(r,t);t+1<q.length?(l.hasOwnProperty(i)||(l[i]={}),l=l[i]):n?(l.hasOwnProperty(i)||(l[i]=[]),l[i].push(r)):l[i]=r})),e}),{});n instanceof Function&&function e(t){var l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;l===q.length?Object.keys(t).forEach((function(e){return t[e]=n(t[e])})):Object.values(t).forEach((function(t){return e(t,l+1)}))}(r);var i=r;return l&&(i=[],function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];n.length===q.length?i.push({keys:n,vals:t}):Object.entries(t).forEach((function(t){var l=sc(t,2),q=l[0],r=l[1];return e(r,[].concat(uc(n),[q]))}))}(r),t instanceof Array&&0===t.length&&1===i.length&&(i[0].keys=[])),i};function fc(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function dc(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function pc(e,t){if(null==e)return{};var n,l,q=function(e,t){if(null==e)return{};var n,l,q={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(q[n]=e[n]);return q}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(q[n]=e[n])}return q}function xc(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||gc(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function vc(e){return function(e){if(Array.isArray(e))return _c(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||gc(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function gc(e,t){if(e){if("string"===typeof e)return _c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_c(e,t):void 0}}function _c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}function yc(e,t,n){var l=n.objBindAttr,q=void 0===l?"__obj":l,r=n.dataBindAttr,i=void 0===r?"__data":r,a=n.idAccessor,o=n.purge,s=void 0!==o&&o,u=function(e){return e.hasOwnProperty(i)},A=t.filter((function(e){return!u(e)})),c=t.filter(u).map((function(e){return e[i]})),m=s?{enter:e,exit:c,update:[]}:function(e,t,n){var l={enter:[],update:[],exit:[]};if(n){var q=hc(e,n,!1),r=hc(t,n,!1),i=Object.assign({},q,r);Object.entries(i).forEach((function(e){var t=xc(e,2),n=t[0],i=t[1],a=q.hasOwnProperty(n)?r.hasOwnProperty(n)?"update":"exit":"enter";l[a].push("update"===a?[q[n],r[n]]:i)}))}else{var a=new Set(e),o=new Set(t);new Set([].concat(vc(a),vc(o))).forEach((function(e){var t=a.has(e)?o.has(e)?"update":"exit":"enter";l[t].push("update"===t?[e,e]:e)}))}return l}(c,e,a);return m.update=m.update.map((function(e){var t=xc(e,2),n=t[0],l=t[1];return n!==l&&(l[q]=n[q],l[q][i]=l),l})),m.exit=m.exit.concat(A.map((function(e){return dc({},q,e)}))),m}var bc=function(e,t,n,l,q){var r=q.createObj,i=void 0===r?function(e){return{}}:r,a=q.updateObj,o=void 0===a?function(e,t){}:a,s=q.exitObj,u=void 0===s?function(e){}:s,A=q.objBindAttr,c=void 0===A?"__obj":A,m=q.dataBindAttr,h=void 0===m?"__data":m,f=pc(q,["createObj","updateObj","exitObj","objBindAttr","dataBindAttr"]),d=yc(e,t,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?fc(Object(n),!0).forEach((function(t){dc(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):fc(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({objBindAttr:c,dataBindAttr:h},f)),p=d.enter,x=d.update;d.exit.forEach((function(e){var t=e[c];delete e[c],u(t),l(t)}));var v=function(e){var t=[];return e.forEach((function(e){var n=i(e);n&&(n[h]=e,e[c]=n,t.push(n))})),t}(p);!function(e){e.forEach((function(e){var t=e[c];t&&(t[h]=e,o(t,e))}))}([].concat(vc(p),vc(x))),v.forEach(n)},wc=n(253),Mc=n.n(wc),Sc=Math.sqrt(50),Ec=Math.sqrt(10),zc=Math.sqrt(2);function kc(e,t,n){var l=(t-e)/Math.max(0,n),q=Math.floor(Math.log(l)/Math.LN10),r=l/Math.pow(10,q);return q>=0?(r>=Sc?10:r>=Ec?5:r>=zc?2:1)*Math.pow(10,q):-Math.pow(10,-q)/(r>=Sc?10:r>=Ec?5:r>=zc?2:1)}function Tc(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function Cc(e){var t=e,n=e;function l(e,t,l,q){for(null==l&&(l=0),null==q&&(q=e.length);l<q;){var r=l+q>>>1;n(e[r],t)<0?l=r+1:q=r}return l}return 1===e.length&&(t=function(t,n){return e(t)-n},n=function(e){return function(t,n){return Tc(e(t),n)}}(e)),{left:l,center:function(e,n,q,r){null==q&&(q=0),null==r&&(r=e.length);var i=l(e,n,q,r-1);return i>q&&t(e[i-1],n)>-t(e[i],n)?i-1:i},right:function(e,t,l,q){for(null==l&&(l=0),null==q&&(q=e.length);l<q;){var r=l+q>>>1;n(e[r],t)>0?q=r:l=r+1}return l}}}var Lc=Cc(Tc),Pc=Lc.right,Rc=(Lc.left,Cc((function(e){return null===e?NaN:+e})).center,Pc);function Dc(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function Ic(e,t){var n=Object.create(e.prototype);for(var l in t)n[l]=t[l];return n}function Oc(){}var Bc=.7,Nc=1/Bc,Uc="\\s*([+-]?\\d+)\\s*",Fc="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Hc="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Gc=/^#([0-9a-f]{3,8})$/,jc=new RegExp("^rgb\\("+[Uc,Uc,Uc]+"\\)$"),Vc=new RegExp("^rgb\\("+[Hc,Hc,Hc]+"\\)$"),Wc=new RegExp("^rgba\\("+[Uc,Uc,Uc,Fc]+"\\)$"),Qc=new RegExp("^rgba\\("+[Hc,Hc,Hc,Fc]+"\\)$"),Yc=new RegExp("^hsl\\("+[Fc,Hc,Hc]+"\\)$"),Xc=new RegExp("^hsla\\("+[Fc,Hc,Hc,Fc]+"\\)$"),Zc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Jc(){return this.rgb().formatHex()}function Kc(){return this.rgb().formatRgb()}function $c(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=Gc.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?em(t):3===n?new qm(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?tm(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?tm(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=jc.exec(e))?new qm(t[1],t[2],t[3],1):(t=Vc.exec(e))?new qm(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Wc.exec(e))?tm(t[1],t[2],t[3],t[4]):(t=Qc.exec(e))?tm(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=Yc.exec(e))?om(t[1],t[2]/100,t[3]/100,1):(t=Xc.exec(e))?om(t[1],t[2]/100,t[3]/100,t[4]):Zc.hasOwnProperty(e)?em(Zc[e]):"transparent"===e?new qm(NaN,NaN,NaN,0):null}function em(e){return new qm(e>>16&255,e>>8&255,255&e,1)}function tm(e,t,n,l){return l<=0&&(e=t=n=NaN),new qm(e,t,n,l)}function nm(e){return e instanceof Oc||(e=$c(e)),e?new qm((e=e.rgb()).r,e.g,e.b,e.opacity):new qm}function lm(e,t,n,l){return 1===arguments.length?nm(e):new qm(e,t,n,null==l?1:l)}function qm(e,t,n,l){this.r=+e,this.g=+t,this.b=+n,this.opacity=+l}function rm(){return"#"+am(this.r)+am(this.g)+am(this.b)}function im(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function am(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function om(e,t,n,l){return l<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new um(e,t,n,l)}function sm(e){if(e instanceof um)return new um(e.h,e.s,e.l,e.opacity);if(e instanceof Oc||(e=$c(e)),!e)return new um;if(e instanceof um)return e;var t=(e=e.rgb()).r/255,n=e.g/255,l=e.b/255,q=Math.min(t,n,l),r=Math.max(t,n,l),i=NaN,a=r-q,o=(r+q)/2;return a?(i=t===r?(n-l)/a+6*(n<l):n===r?(l-t)/a+2:(t-n)/a+4,a/=o<.5?r+q:2-r-q,i*=60):a=o>0&&o<1?0:i,new um(i,a,o,e.opacity)}function um(e,t,n,l){this.h=+e,this.s=+t,this.l=+n,this.opacity=+l}function Am(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function cm(e,t,n,l,q){var r=e*e,i=r*e;return((1-3*e+3*r-i)*t+(4-6*r+3*i)*n+(1+3*e+3*r-3*i)*l+i*q)/6}Dc(Oc,$c,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:Jc,formatHex:Jc,formatHsl:function(){return sm(this).formatHsl()},formatRgb:Kc,toString:Kc}),Dc(qm,lm,Ic(Oc,{brighter:function(e){return e=null==e?Nc:Math.pow(Nc,e),new qm(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?Bc:Math.pow(Bc,e),new qm(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:rm,formatHex:rm,formatRgb:im,toString:im})),Dc(um,(function(e,t,n,l){return 1===arguments.length?sm(e):new um(e,t,n,null==l?1:l)}),Ic(Oc,{brighter:function(e){return e=null==e?Nc:Math.pow(Nc,e),new um(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Bc:Math.pow(Bc,e),new um(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,l=n+(n<.5?n:1-n)*t,q=2*n-l;return new qm(Am(e>=240?e-240:e+120,q,l),Am(e,q,l),Am(e<120?e+240:e-120,q,l),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));var mm=function(e){return function(){return e}};function hm(e,t){return function(n){return e+n*t}}function fm(e){return 1===(e=+e)?dm:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(l){return Math.pow(e+l*t,n)}}(t,n,e):mm(isNaN(t)?n:t)}}function dm(e,t){var n=t-e;return n?hm(e,n):mm(isNaN(e)?t:e)}var pm=function e(t){var n=fm(t);function l(e,t){var l=n((e=lm(e)).r,(t=lm(t)).r),q=n(e.g,t.g),r=n(e.b,t.b),i=dm(e.opacity,t.opacity);return function(t){return e.r=l(t),e.g=q(t),e.b=r(t),e.opacity=i(t),e+""}}return l.gamma=e,l}(1);function xm(e){return function(t){var n,l,q=t.length,r=new Array(q),i=new Array(q),a=new Array(q);for(n=0;n<q;++n)l=lm(t[n]),r[n]=l.r||0,i[n]=l.g||0,a[n]=l.b||0;return r=e(r),i=e(i),a=e(a),l.opacity=1,function(e){return l.r=r(e),l.g=i(e),l.b=a(e),l+""}}}xm((function(e){var t=e.length-1;return function(n){var l=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),q=e[l],r=e[l+1],i=l>0?e[l-1]:2*q-r,a=l<t-1?e[l+2]:2*r-q;return cm((n-l/t)*t,i,q,r,a)}})),xm((function(e){var t=e.length;return function(n){var l=Math.floor(((n%=1)<0?++n:n)*t),q=e[(l+t-1)%t],r=e[l%t],i=e[(l+1)%t],a=e[(l+2)%t];return cm((n-l/t)*t,q,r,i,a)}}));function vm(e,t){t||(t=[]);var n,l=e?Math.min(t.length,e.length):0,q=t.slice();return function(r){for(n=0;n<l;++n)q[n]=e[n]*(1-r)+t[n]*r;return q}}function gm(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function _m(e,t){return(gm(t)?vm:ym)(e,t)}function ym(e,t){var n,l=t?t.length:0,q=e?Math.min(l,e.length):0,r=new Array(q),i=new Array(l);for(n=0;n<q;++n)r[n]=km(e[n],t[n]);for(;n<l;++n)i[n]=t[n];return function(e){for(n=0;n<q;++n)i[n]=r[n](e);return i}}function bm(e,t){var n=new Date;return e=+e,t=+t,function(l){return n.setTime(e*(1-l)+t*l),n}}function wm(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function Mm(e,t){var n,l={},q={};for(n in null!==e&&"object"===typeof e||(e={}),null!==t&&"object"===typeof t||(t={}),t)n in e?l[n]=km(e[n],t[n]):q[n]=t[n];return function(e){for(n in l)q[n]=l[n](e);return q}}var Sm=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Em=new RegExp(Sm.source,"g");function zm(e,t){var n,l,q,r=Sm.lastIndex=Em.lastIndex=0,i=-1,a=[],o=[];for(e+="",t+="";(n=Sm.exec(e))&&(l=Em.exec(t));)(q=l.index)>r&&(q=t.slice(r,q),a[i]?a[i]+=q:a[++i]=q),(n=n[0])===(l=l[0])?a[i]?a[i]+=l:a[++i]=l:(a[++i]=null,o.push({i:i,x:wm(n,l)})),r=Em.lastIndex;return r<t.length&&(q=t.slice(r),a[i]?a[i]+=q:a[++i]=q),a.length<2?o[0]?function(e){return function(t){return e(t)+""}}(o[0].x):function(e){return function(){return e}}(t):(t=o.length,function(e){for(var n,l=0;l<t;++l)a[(n=o[l]).i]=n.x(e);return a.join("")})}function km(e,t){var n,l=typeof t;return null==t||"boolean"===l?mm(t):("number"===l?wm:"string"===l?(n=$c(t))?(t=n,pm):zm:t instanceof $c?pm:t instanceof Date?bm:gm(t)?vm:Array.isArray(t)?ym:"function"!==typeof t.valueOf&&"function"!==typeof t.toString||isNaN(t)?Mm:wm)(e,t)}function Tm(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function Cm(e){return+e}var Lm=[0,1];function Pm(e){return e}function Rm(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:(n=isNaN(t)?NaN:.5,function(){return n});var n}function Dm(e,t,n){var l=e[0],q=e[1],r=t[0],i=t[1];return q<l?(l=Rm(q,l),r=n(i,r)):(l=Rm(l,q),r=n(r,i)),function(e){return r(l(e))}}function Im(e,t,n){var l=Math.min(e.length,t.length)-1,q=new Array(l),r=new Array(l),i=-1;for(e[l]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<l;)q[i]=Rm(e[i],e[i+1]),r[i]=n(t[i],t[i+1]);return function(t){var n=Rc(e,t,1,l)-1;return r[n](q[n](t))}}function Om(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function Bm(){var e,t,n,l,q,r,i=Lm,a=Lm,o=km,s=Pm;function u(){var e=Math.min(i.length,a.length);return s!==Pm&&(s=function(e,t){var n;return e>t&&(n=e,e=t,t=n),function(n){return Math.max(e,Math.min(t,n))}}(i[0],i[e-1])),l=e>2?Im:Dm,q=r=null,A}function A(t){return null==t||isNaN(t=+t)?n:(q||(q=l(i.map(e),a,o)))(e(s(t)))}return A.invert=function(n){return s(t((r||(r=l(a,i.map(e),wm)))(n)))},A.domain=function(e){return arguments.length?(i=Array.from(e,Cm),u()):i.slice()},A.range=function(e){return arguments.length?(a=Array.from(e),u()):a.slice()},A.rangeRound=function(e){return a=Array.from(e),o=Tm,u()},A.clamp=function(e){return arguments.length?(s=!!e||Pm,u()):s!==Pm},A.interpolate=function(e){return arguments.length?(o=e,u()):o},A.unknown=function(e){return arguments.length?(n=e,A):n},function(n,l){return e=n,t=l,u()}}function Nm(){return Bm()(Pm,Pm)}function Um(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}var Fm,Hm=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Gm(e){if(!(t=Hm.exec(e)))throw new Error("invalid format: "+e);var t;return new jm({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function jm(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function Vm(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,l=e.slice(0,n);return[l.length>1?l[0]+l.slice(2):l,+e.slice(n+1)]}function Wm(e){return(e=Vm(Math.abs(e)))?e[1]:NaN}function Qm(e,t){var n=Vm(e,t);if(!n)return e+"";var l=n[0],q=n[1];return q<0?"0."+new Array(-q).join("0")+l:l.length>q+1?l.slice(0,q+1)+"."+l.slice(q+1):l+new Array(q-l.length+2).join("0")}Gm.prototype=jm.prototype,jm.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ym={"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return Qm(100*e,t)},r:Qm,s:function(e,t){var n=Vm(e,t);if(!n)return e+"";var l=n[0],q=n[1],r=q-(Fm=3*Math.max(-8,Math.min(8,Math.floor(q/3))))+1,i=l.length;return r===i?l:r>i?l+new Array(r-i+1).join("0"):r>0?l.slice(0,r)+"."+l.slice(r):"0."+new Array(1-r).join("0")+Vm(e,Math.max(0,t+r-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}};function Xm(e){return e}var Zm,Jm,Km,$m=Array.prototype.map,eh=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"];function th(e){var t,n,l=void 0===e.grouping||void 0===e.thousands?Xm:(t=$m.call(e.grouping,Number),n=e.thousands+"",function(e,l){for(var q=e.length,r=[],i=0,a=t[0],o=0;q>0&&a>0&&(o+a+1>l&&(a=Math.max(1,l-o)),r.push(e.substring(q-=a,q+a)),!((o+=a+1)>l));)a=t[i=(i+1)%t.length];return r.reverse().join(n)}),q=void 0===e.currency?"":e.currency[0]+"",r=void 0===e.currency?"":e.currency[1]+"",i=void 0===e.decimal?".":e.decimal+"",a=void 0===e.numerals?Xm:function(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}($m.call(e.numerals,String)),o=void 0===e.percent?"%":e.percent+"",s=void 0===e.minus?"\u2212":e.minus+"",u=void 0===e.nan?"NaN":e.nan+"";function A(e){var t=(e=Gm(e)).fill,n=e.align,A=e.sign,c=e.symbol,m=e.zero,h=e.width,f=e.comma,d=e.precision,p=e.trim,x=e.type;"n"===x?(f=!0,x="g"):Ym[x]||(void 0===d&&(d=12),p=!0,x="g"),(m||"0"===t&&"="===n)&&(m=!0,t="0",n="=");var v="$"===c?q:"#"===c&&/[boxX]/.test(x)?"0"+x.toLowerCase():"",g="$"===c?r:/[%p]/.test(x)?o:"",_=Ym[x],y=/[defgprs%]/.test(x);function b(e){var q,r,o,c=v,b=g;if("c"===x)b=_(e)+b,e="";else{var w=(e=+e)<0||1/e<0;if(e=isNaN(e)?u:_(Math.abs(e),d),p&&(e=function(e){e:for(var t,n=e.length,l=1,q=-1;l<n;++l)switch(e[l]){case".":q=t=l;break;case"0":0===q&&(q=l),t=l;break;default:if(!+e[l])break e;q>0&&(q=0)}return q>0?e.slice(0,q)+e.slice(t+1):e}(e)),w&&0===+e&&"+"!==A&&(w=!1),c=(w?"("===A?A:s:"-"===A||"("===A?"":A)+c,b=("s"===x?eh[8+Fm/3]:"")+b+(w&&"("===A?")":""),y)for(q=-1,r=e.length;++q<r;)if(48>(o=e.charCodeAt(q))||o>57){b=(46===o?i+e.slice(q+1):e.slice(q))+b,e=e.slice(0,q);break}}f&&!m&&(e=l(e,1/0));var M=c.length+e.length+b.length,S=M<h?new Array(h-M+1).join(t):"";switch(f&&m&&(e=l(S+e,S.length?h-b.length:1/0),S=""),n){case"<":e=c+e+b+S;break;case"=":e=c+S+e+b;break;case"^":e=S.slice(0,M=S.length>>1)+c+e+b+S.slice(M);break;default:e=S+c+e+b}return a(e)}return d=void 0===d?6:/[gprs]/.test(x)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),b.toString=function(){return e+""},b}return{format:A,formatPrefix:function(e,t){var n=A(((e=Gm(e)).type="f",e)),l=3*Math.max(-8,Math.min(8,Math.floor(Wm(t)/3))),q=Math.pow(10,-l),r=eh[8+l/3];return function(e){return n(q*e)+r}}}}function nh(e,t,n,l){var q,r=function(e,t,n){var l=Math.abs(t-e)/Math.max(0,n),q=Math.pow(10,Math.floor(Math.log(l)/Math.LN10)),r=l/q;return r>=Sc?q*=10:r>=Ec?q*=5:r>=zc&&(q*=2),t<e?-q:q}(e,t,n);switch((l=Gm(null==l?",f":l)).type){case"s":var i=Math.max(Math.abs(e),Math.abs(t));return null!=l.precision||isNaN(q=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Wm(t)/3)))-Wm(Math.abs(e)))}(r,i))||(l.precision=q),Km(l,i);case"":case"e":case"g":case"p":case"r":null!=l.precision||isNaN(q=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Wm(t)-Wm(e))+1}(r,Math.max(Math.abs(e),Math.abs(t))))||(l.precision=q-("e"===l.type));break;case"f":case"%":null!=l.precision||isNaN(q=function(e){return Math.max(0,-Wm(Math.abs(e)))}(r))||(l.precision=q-2*("%"===l.type))}return Jm(l)}function lh(e){var t=e.domain;return e.ticks=function(e){var n=t();return function(e,t,n){var l,q,r,i,a=-1;if(n=+n,(e=+e)===(t=+t)&&n>0)return[e];if((l=t<e)&&(q=e,e=t,t=q),0===(i=kc(e,t,n))||!isFinite(i))return[];if(i>0){var o=Math.round(e/i),s=Math.round(t/i);for(o*i<e&&++o,s*i>t&&--s,r=new Array(q=s-o+1);++a<q;)r[a]=(o+a)*i}else{i=-i;var u=Math.round(e*i),A=Math.round(t*i);for(u/i<e&&++u,A/i>t&&--A,r=new Array(q=A-u+1);++a<q;)r[a]=(u+a)/i}return l&&r.reverse(),r}(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var l=t();return nh(l[0],l[l.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var l,q,r=t(),i=0,a=r.length-1,o=r[i],s=r[a],u=10;for(s<o&&(q=o,o=s,s=q,q=i,i=a,a=q);u-- >0;){if((q=kc(o,s,n))===l)return r[i]=o,r[a]=s,t(r);if(q>0)o=Math.floor(o/q)*q,s=Math.ceil(s/q)*q;else{if(!(q<0))break;o=Math.ceil(o*q)/q,s=Math.floor(s*q)/q}l=q}return e},e}function qh(){var e=Nm();return e.copy=function(){return Om(e,qh())},Um.apply(e,arguments),lh(e)}Zm=th({thousands:",",grouping:[3],currency:["$",""]}),Jm=Zm.format,Km=Zm.formatPrefix;var rh=H().mark(ih);function ih(e){var t,n,l;return H().wrap((function(q){for(;;)switch(q.prev=q.next){case 0:t=b(e),q.prev=1,t.s();case 3:if((n=t.n()).done){q.next=8;break}return l=n.value,q.delegateYield(l,"t0",6);case 6:q.next=3;break;case 8:q.next=13;break;case 10:q.prev=10,q.t1=q.catch(1),t.e(q.t1);case 13:return q.prev=13,t.f(),q.finish(13);case 16:case"end":return q.stop()}}),rh,null,[[1,10,13,16]])}function ah(e){return Array.from(ih(e))}function oh(e,t){var n=0,l=0;if(void 0===t){var q,r=b(e);try{for(r.s();!(q=r.n()).done;){var i=q.value;null!=i&&(i=+i)>=i&&(++n,l+=i)}}catch(A){r.e(A)}finally{r.f()}}else{var a,o=-1,s=b(e);try{for(s.s();!(a=s.n()).done;){var u=a.value;null!=(u=t(u,++o,e))&&(u=+u)>=u&&(++n,l+=u)}}catch(A){s.e(A)}finally{s.f()}}if(n)return l/n}var sh=134217729;function uh(e,t,n,l,q){var r,i,a,o,s=t[0],u=l[0],A=0,c=0;u>s===u>-s?(r=s,s=t[++A]):(r=u,u=l[++c]);var m=0;if(A<e&&c<n)for(u>s===u>-s?(a=r-((i=s+r)-s),s=t[++A]):(a=r-((i=u+r)-u),u=l[++c]),r=i,0!==a&&(q[m++]=a);A<e&&c<n;)u>s===u>-s?(a=r-((i=r+s)-(o=i-r))+(s-o),s=t[++A]):(a=r-((i=r+u)-(o=i-r))+(u-o),u=l[++c]),r=i,0!==a&&(q[m++]=a);for(;A<e;)a=r-((i=r+s)-(o=i-r))+(s-o),s=t[++A],r=i,0!==a&&(q[m++]=a);for(;c<n;)a=r-((i=r+u)-(o=i-r))+(u-o),u=l[++c],r=i,0!==a&&(q[m++]=a);return 0===r&&0!==m||(q[m++]=r),m}function Ah(e){return new Float64Array(e)}var ch=Ah(4),mh=Ah(8),hh=Ah(12),fh=Ah(16),dh=Ah(4);function ph(e,t,n,l,q,r){var i=(t-r)*(n-q),a=(e-q)*(l-r),o=i-a;if(0===i||0===a||i>0!==a>0)return o;var s=Math.abs(i+a);return Math.abs(o)>=33306690738754716e-32*s?o:-function(e,t,n,l,q,r,i){var a,o,s,u,A,c,m,h,f,d,p,x,v,g,_,y,b,w,M=e-q,S=n-q,E=t-r,z=l-r;A=(_=(h=M-(m=(c=sh*M)-(c-M)))*(d=z-(f=(c=sh*z)-(c-z)))-((g=M*z)-m*f-h*f-m*d))-(p=_-(b=(h=E-(m=(c=sh*E)-(c-E)))*(d=S-(f=(c=sh*S)-(c-S)))-((y=E*S)-m*f-h*f-m*d))),ch[0]=_-(p+A)+(A-b),A=(v=g-((x=g+p)-(A=x-g))+(p-A))-(p=v-y),ch[1]=v-(p+A)+(A-y),A=(w=x+p)-x,ch[2]=x-(w-A)+(p-A),ch[3]=w;var k=function(e,t){for(var n=t[0],l=1;l<e;l++)n+=t[l];return n}(4,ch),T=22204460492503146e-32*i;if(k>=T||-k>=T)return k;if(a=e-(M+(A=e-M))+(A-q),s=n-(S+(A=n-S))+(A-q),o=t-(E+(A=t-E))+(A-r),u=l-(z+(A=l-z))+(A-r),0===a&&0===o&&0===s&&0===u)return k;if(T=11093356479670487e-47*i+33306690738754706e-32*Math.abs(k),(k+=M*u+z*a-(E*s+S*o))>=T||-k>=T)return k;A=(_=(h=a-(m=(c=sh*a)-(c-a)))*(d=z-(f=(c=sh*z)-(c-z)))-((g=a*z)-m*f-h*f-m*d))-(p=_-(b=(h=o-(m=(c=sh*o)-(c-o)))*(d=S-(f=(c=sh*S)-(c-S)))-((y=o*S)-m*f-h*f-m*d))),dh[0]=_-(p+A)+(A-b),A=(v=g-((x=g+p)-(A=x-g))+(p-A))-(p=v-y),dh[1]=v-(p+A)+(A-y),A=(w=x+p)-x,dh[2]=x-(w-A)+(p-A),dh[3]=w;var C=uh(4,ch,4,dh,mh);A=(_=(h=M-(m=(c=sh*M)-(c-M)))*(d=u-(f=(c=sh*u)-(c-u)))-((g=M*u)-m*f-h*f-m*d))-(p=_-(b=(h=E-(m=(c=sh*E)-(c-E)))*(d=s-(f=(c=sh*s)-(c-s)))-((y=E*s)-m*f-h*f-m*d))),dh[0]=_-(p+A)+(A-b),A=(v=g-((x=g+p)-(A=x-g))+(p-A))-(p=v-y),dh[1]=v-(p+A)+(A-y),A=(w=x+p)-x,dh[2]=x-(w-A)+(p-A),dh[3]=w;var L=uh(C,mh,4,dh,hh);A=(_=(h=a-(m=(c=sh*a)-(c-a)))*(d=u-(f=(c=sh*u)-(c-u)))-((g=a*u)-m*f-h*f-m*d))-(p=_-(b=(h=o-(m=(c=sh*o)-(c-o)))*(d=s-(f=(c=sh*s)-(c-s)))-((y=o*s)-m*f-h*f-m*d))),dh[0]=_-(p+A)+(A-b),A=(v=g-((x=g+p)-(A=x-g))+(p-A))-(p=v-y),dh[1]=v-(p+A)+(A-y),A=(w=x+p)-x,dh[2]=x-(w-A)+(p-A),dh[3]=w;var P=uh(L,hh,4,dh,fh);return fh[P-1]}(e,t,n,l,q,r,s)}Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(8),Ah(8),Ah(8),Ah(4),Ah(8),Ah(8),Ah(8),Ah(12),Ah(192),Ah(192);Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(8),Ah(8),Ah(8),Ah(8),Ah(8),Ah(8),Ah(8),Ah(8),Ah(8),Ah(4),Ah(4),Ah(4),Ah(8),Ah(16),Ah(16),Ah(16),Ah(32),Ah(32),Ah(48),Ah(64),Ah(1152),Ah(1152);Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(4),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(24),Ah(1152),Ah(1152),Ah(1152),Ah(1152),Ah(1152),Ah(2304),Ah(2304),Ah(3456),Ah(5760),Ah(8),Ah(8),Ah(8),Ah(16),Ah(24),Ah(48),Ah(48),Ah(96),Ah(192),Ah(384),Ah(384),Ah(384),Ah(768);Ah(96),Ah(96),Ah(96),Ah(1152);var xh=Math.pow(2,-52),vh=new Uint32Array(512),gh=function(){function e(t){O(this,e);var n=t.length>>1;if(n>0&&"number"!==typeof t[0])throw new Error("Expected coords to contain numbers.");this.coords=t;var l=Math.max(2*n-5,0);this._triangles=new Uint32Array(3*l),this._halfedges=new Int32Array(3*l),this._hashSize=Math.ceil(Math.sqrt(n)),this._hullPrev=new Uint32Array(n),this._hullNext=new Uint32Array(n),this._hullTri=new Uint32Array(n),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(n),this._dists=new Float64Array(n),this.update()}return N(e,[{key:"update",value:function(){for(var e=this.coords,t=this._hullPrev,n=this._hullNext,l=this._hullTri,q=this._hullHash,r=e.length>>1,i=1/0,a=1/0,o=-1/0,s=-1/0,u=0;u<r;u++){var A=e[2*u],c=e[2*u+1];A<i&&(i=A),c<a&&(a=c),A>o&&(o=A),c>s&&(s=c),this._ids[u]=u}for(var m,h,f,d=(i+o)/2,p=(a+s)/2,x=1/0,v=0;v<r;v++){var g=_h(d,p,e[2*v],e[2*v+1]);g<x&&(m=v,x=g)}var _=e[2*m],y=e[2*m+1];x=1/0;for(var b=0;b<r;b++)if(b!==m){var w=_h(_,y,e[2*b],e[2*b+1]);w<x&&w>0&&(h=b,x=w)}for(var M=e[2*h],S=e[2*h+1],E=1/0,z=0;z<r;z++)if(z!==m&&z!==h){var k=bh(_,y,M,S,e[2*z],e[2*z+1]);k<E&&(f=z,E=k)}var T=e[2*f],C=e[2*f+1];if(E===1/0){for(var L=0;L<r;L++)this._dists[L]=e[2*L]-e[0]||e[2*L+1]-e[1];wh(this._ids,this._dists,0,r-1);for(var P=new Uint32Array(r),R=0,D=0,I=-1/0;D<r;D++){var O=this._ids[D];this._dists[O]>I&&(P[R++]=O,I=this._dists[O])}return this.hull=P.subarray(0,R),this.triangles=new Uint32Array(0),void(this.halfedges=new Uint32Array(0))}if(ph(_,y,M,S,T,C)<0){var B=h,N=M,U=S;h=f,M=T,S=C,f=B,T=N,C=U}var F=function(e,t,n,l,q,r){var i=n-e,a=l-t,o=q-e,s=r-t,u=i*i+a*a,A=o*o+s*s,c=.5/(i*s-a*o);return{x:e+(s*u-a*A)*c,y:t+(i*A-o*u)*c}}(_,y,M,S,T,C);this._cx=F.x,this._cy=F.y;for(var H=0;H<r;H++)this._dists[H]=_h(e[2*H],e[2*H+1],F.x,F.y);wh(this._ids,this._dists,0,r-1),this._hullStart=m;var G=3;n[m]=t[f]=h,n[h]=t[m]=f,n[f]=t[h]=m,l[m]=0,l[h]=1,l[f]=2,q.fill(-1),q[this._hashKey(_,y)]=m,q[this._hashKey(M,S)]=h,q[this._hashKey(T,C)]=f,this.trianglesLen=0,this._addTriangle(m,h,f,-1,-1,-1);for(var j,V,W=0;W<this._ids.length;W++){var Q=this._ids[W],Y=e[2*Q],X=e[2*Q+1];if(!(W>0&&Math.abs(Y-j)<=xh&&Math.abs(X-V)<=xh)&&(j=Y,V=X,Q!==m&&Q!==h&&Q!==f)){for(var Z=0,J=0,K=this._hashKey(Y,X);J<this._hashSize&&(-1===(Z=q[(K+J)%this._hashSize])||Z===n[Z]);J++);for(var $=Z=t[Z],ee=void 0;ee=n[$],ph(Y,X,e[2*$],e[2*$+1],e[2*ee],e[2*ee+1])>=0;)if(($=ee)===Z){$=-1;break}if(-1!==$){var te=this._addTriangle($,Q,n[$],-1,-1,l[$]);l[Q]=this._legalize(te+2),l[$]=te,G++;for(var ne=n[$];ee=n[ne],ph(Y,X,e[2*ne],e[2*ne+1],e[2*ee],e[2*ee+1])<0;)te=this._addTriangle(ne,Q,ee,l[Q],-1,l[ne]),l[Q]=this._legalize(te+2),n[ne]=ne,G--,ne=ee;if($===Z)for(;ph(Y,X,e[2*(ee=t[$])],e[2*ee+1],e[2*$],e[2*$+1])<0;)te=this._addTriangle(ee,Q,$,-1,l[$],l[ee]),this._legalize(te+2),l[ee]=te,n[$]=$,G--,$=ee;this._hullStart=t[Q]=$,n[$]=t[ne]=Q,n[Q]=ne,q[this._hashKey(Y,X)]=Q,q[this._hashKey(e[2*$],e[2*$+1])]=$}}}this.hull=new Uint32Array(G);for(var le=0,qe=this._hullStart;le<G;le++)this.hull[le]=qe,qe=n[qe];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}},{key:"_hashKey",value:function(e,t){return Math.floor(function(e,t){var n=e/(Math.abs(e)+Math.abs(t));return(t>0?3-n:1+n)/4}(e-this._cx,t-this._cy)*this._hashSize)%this._hashSize}},{key:"_legalize",value:function(e){for(var t=this._triangles,n=this._halfedges,l=this.coords,q=0,r=0;;){var i=n[e],a=e-e%3;if(r=a+(e+2)%3,-1!==i){var o=i-i%3,s=a+(e+1)%3,u=o+(i+2)%3,A=t[r],c=t[e],m=t[s],h=t[u];if(yh(l[2*A],l[2*A+1],l[2*c],l[2*c+1],l[2*m],l[2*m+1],l[2*h],l[2*h+1])){t[e]=h,t[i]=A;var f=n[u];if(-1===f){var d=this._hullStart;do{if(this._hullTri[d]===u){this._hullTri[d]=e;break}d=this._hullPrev[d]}while(d!==this._hullStart)}this._link(e,f),this._link(i,n[r]),this._link(r,u);var p=o+(i+1)%3;q<vh.length&&(vh[q++]=p)}else{if(0===q)break;e=vh[--q]}}else{if(0===q)break;e=vh[--q]}}return r}},{key:"_link",value:function(e,t){this._halfedges[e]=t,-1!==t&&(this._halfedges[t]=e)}},{key:"_addTriangle",value:function(e,t,n,l,q,r){var i=this.trianglesLen;return this._triangles[i]=e,this._triangles[i+1]=t,this._triangles[i+2]=n,this._link(i,l),this._link(i+1,q),this._link(i+2,r),this.trianglesLen+=3,i}}],[{key:"from",value:function(t){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Sh,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Eh,q=t.length,r=new Float64Array(2*q),i=0;i<q;i++){var a=t[i];r[2*i]=n(a),r[2*i+1]=l(a)}return new e(r)}}]),e}();function _h(e,t,n,l){var q=e-n,r=t-l;return q*q+r*r}function yh(e,t,n,l,q,r,i,a){var o=e-i,s=t-a,u=n-i,A=l-a,c=q-i,m=r-a,h=u*u+A*A,f=c*c+m*m;return o*(A*f-h*m)-s*(u*f-h*c)+(o*o+s*s)*(u*m-A*c)<0}function bh(e,t,n,l,q,r){var i=n-e,a=l-t,o=q-e,s=r-t,u=i*i+a*a,A=o*o+s*s,c=.5/(i*s-a*o),m=(s*u-a*A)*c,h=(i*A-o*u)*c;return m*m+h*h}function wh(e,t,n,l){if(l-n<=20)for(var q=n+1;q<=l;q++){for(var r=e[q],i=t[r],a=q-1;a>=n&&t[e[a]]>i;)e[a+1]=e[a--];e[a+1]=r}else{var o=n+1,s=l;Mh(e,n+l>>1,o),t[e[n]]>t[e[l]]&&Mh(e,n,l),t[e[o]]>t[e[l]]&&Mh(e,o,l),t[e[n]]>t[e[o]]&&Mh(e,n,o);for(var u=e[o],A=t[u];;){do{o++}while(t[e[o]]<A);do{s--}while(t[e[s]]>A);if(s<o)break;Mh(e,o,s)}e[n+1]=e[s],e[s]=u,l-o+1>=s-n?(wh(e,t,o,l),wh(e,t,n,s-1)):(wh(e,t,n,s-1),wh(e,t,o,l))}}function Mh(e,t,n){var l=e[t];e[t]=e[n],e[n]=l}function Sh(e){return e[0]}function Eh(e){return e[1]}function zh(e,t,n){if(void 0===n&&(n={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var l,q=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}(e),r="Feature"===(l=t).type?l.geometry:l,i=r.type,a=t.bbox,o=r.coordinates;if(a&&!1===function(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}(q,a))return!1;"Polygon"===i&&(o=[o]);for(var s=!1,u=0;u<o.length&&!s;u++)if(kh(q,o[u][0],n.ignoreBoundary)){for(var A=!1,c=1;c<o[u].length&&!A;)kh(q,o[u][c],!n.ignoreBoundary)&&(A=!0),c++;A||(s=!0)}return s}function kh(e,t,n){var l=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var q=0,r=t.length-1;q<t.length;r=q++){var i=t[q][0],a=t[q][1],o=t[r][0],s=t[r][1];if(e[1]*(i-o)+a*(o-e[0])+s*(e[0]-i)===0&&(i-e[0])*(o-e[0])<=0&&(a-e[1])*(s-e[1])<=0)return!n;a>e[1]!==s>e[1]&&e[0]<(o-i)*(e[1]-a)/(s-a)+i&&(l=!l)}return l}var Th,Ch,Lh,Ph,Rh,Dh,Ih,Oh,Bh,Nh,Uh,Fh,Hh,Gh,jh,Vh,Wh=new Zu,Qh=new Zu,Yh={point:mA,lineStart:mA,lineEnd:mA,polygonStart:function(){Wh=new Zu,Yh.lineStart=Xh,Yh.lineEnd=Zh},polygonEnd:function(){var e=+Wh;Qh.add(e<0?tA+e:e),this.lineStart=this.lineEnd=this.point=mA},sphere:function(){Qh.add(tA)}};function Xh(){Yh.point=Jh}function Zh(){Kh(Th,Ch)}function Jh(e,t){Yh.point=Kh,Th=e,Ch=t,Lh=e*=lA,Ph=iA(t=(t*=lA)/2+eA),Rh=oA(t)}function Kh(e,t){var n=(e*=lA)-Lh,l=n>=0?1:-1,q=l*n,r=iA(t=(t*=lA)/2+eA),i=oA(t),a=Rh*i,o=Ph*r+a*iA(q),s=a*l*oA(q);Wh.add(rA(s,o)),Lh=e,Ph=r,Rh=i}function $h(e){var t=e[0],n=e[1],l=iA(n);return[l*iA(t),l*oA(t),oA(n)]}function ef(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function tf(e){var t=uA(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}var nf={point:lf,lineStart:rf,lineEnd:af,polygonStart:function(){nf.point=of,nf.lineStart=sf,nf.lineEnd=uf,Gh=new Zu,Yh.polygonStart()},polygonEnd:function(){Yh.polygonEnd(),nf.point=lf,nf.lineStart=rf,nf.lineEnd=af,Wh<0?(Dh=-(Oh=180),Ih=-(Bh=90)):Gh>Ju?Bh=90:Gh<-Ju&&(Ih=-90),Vh[0]=Dh,Vh[1]=Oh},sphere:function(){Dh=-(Oh=180),Ih=-(Bh=90)}};function lf(e,t){jh.push(Vh=[Dh=e,Oh=e]),t<Ih&&(Ih=t),t>Bh&&(Bh=t)}function qf(e,t){var n=$h([e*lA,t*lA]);if(Hh){var l=ef(Hh,n),q=ef([l[1],-l[0],0],l);tf(q),q=function(e){return[rA(e[1],e[0]),AA(e[2])]}(q);var r,i=e-Nh,a=i>0?1:-1,o=q[0]*nA*a,s=qA(i)>180;s^(a*Nh<o&&o<a*e)?(r=q[1]*nA)>Bh&&(Bh=r):s^(a*Nh<(o=(o+360)%360-180)&&o<a*e)?(r=-q[1]*nA)<Ih&&(Ih=r):(t<Ih&&(Ih=t),t>Bh&&(Bh=t)),s?e<Nh?Af(Dh,e)>Af(Dh,Oh)&&(Oh=e):Af(e,Oh)>Af(Dh,Oh)&&(Dh=e):Oh>=Dh?(e<Dh&&(Dh=e),e>Oh&&(Oh=e)):e>Nh?Af(Dh,e)>Af(Dh,Oh)&&(Oh=e):Af(e,Oh)>Af(Dh,Oh)&&(Dh=e)}else jh.push(Vh=[Dh=e,Oh=e]);t<Ih&&(Ih=t),t>Bh&&(Bh=t),Hh=n,Nh=e}function rf(){nf.point=qf}function af(){Vh[0]=Dh,Vh[1]=Oh,nf.point=lf,Hh=null}function of(e,t){if(Hh){var n=e-Nh;Gh.add(qA(n)>180?n+(n>0?360:-360):n)}else Uh=e,Fh=t;Yh.point(e,t),qf(e,t)}function sf(){Yh.lineStart()}function uf(){of(Uh,Fh),Yh.lineEnd(),qA(Gh)>Ju&&(Dh=-(Oh=180)),Vh[0]=Dh,Vh[1]=Oh,Hh=null}function Af(e,t){return(t-=e)<0?t+360:t}function cf(e,t){return e[0]-t[0]}function mf(e,t){return e[0]<=e[1]?e[0]<=t&&t<=e[1]:t<e[0]||e[1]<t}function hf(e){var t,n,l,q,r,i,a;if(Bh=Oh=-(Dh=Ih=1/0),jh=[],bA(e,nf),n=jh.length){for(jh.sort(cf),t=1,r=[l=jh[0]];t<n;++t)mf(l,(q=jh[t])[0])||mf(l,q[1])?(Af(l[0],q[1])>Af(l[0],l[1])&&(l[1]=q[1]),Af(q[0],l[1])>Af(l[0],l[1])&&(l[0]=q[0])):r.push(l=q);for(i=-1/0,t=0,l=r[n=r.length-1];t<=n;l=q,++t)q=r[t],(a=Af(l[1],q[0]))>i&&(i=a,Dh=q[0],Oh=l[1])}return jh=Vh=null,Dh===1/0||Ih===1/0?[[NaN,NaN],[NaN,NaN]]:[[Dh,Ih],[Oh,Bh]]}function ff(e){return qA(e[0])<=Ku?e[0]:sA(e[0])*((qA(e[0])+Ku)%tA-Ku)}var df={Feature:function(e,t){return xf(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,l=-1,q=n.length;++l<q;)if(xf(n[l].geometry,t))return!0;return!1}},pf={Sphere:function(){return!0},Point:function(e,t){return vf(e.coordinates,t)},MultiPoint:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)if(vf(n[l],t))return!0;return!1},LineString:function(e,t){return gf(e.coordinates,t)},MultiLineString:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)if(gf(n[l],t))return!0;return!1},Polygon:function(e,t){return _f(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)if(_f(n[l],t))return!0;return!1},GeometryCollection:function(e,t){for(var n=e.geometries,l=-1,q=n.length;++l<q;)if(xf(n[l],t))return!0;return!1}};function xf(e,t){return!(!e||!pf.hasOwnProperty(e.type))&&pf[e.type](e,t)}function vf(e,t){return 0===TA(e,t)}function gf(e,t){for(var n,l,q,r=0,i=e.length;r<i;r++){if(0===(l=TA(e[r],t)))return!0;if(r>0&&(q=TA(e[r],e[r-1]))>0&&n<=q&&l<=q&&(n+l-q)*(1-Math.pow((n-l)/q,2))<1e-12*q)return!0;n=l}return!1}function _f(e,t){return!!function(e,t){var n=ff(t),l=t[1],q=oA(l),r=[oA(n),-iA(n),0],i=0,a=0,o=new Zu;1===q?l=$u+Ju:-1===q&&(l=-$u-Ju);for(var s=0,u=e.length;s<u;++s)if(c=(A=e[s]).length)for(var A,c,m=A[c-1],h=ff(m),f=m[1]/2+eA,d=oA(f),p=iA(f),x=0;x<c;++x,h=g,d=y,p=b,m=v){var v=A[x],g=ff(v),_=v[1]/2+eA,y=oA(_),b=iA(_),w=g-h,M=w>=0?1:-1,S=M*w,E=S>Ku,z=d*y;if(o.add(rA(z*M*oA(S),p*b+z*iA(S))),i+=E?w+M*tA:w,E^h>=n^g>=n){var k=ef($h(m),$h(v));tf(k);var T=ef(r,k);tf(T);var C=(E^w>=0?-1:1)*AA(T[2]);(l>C||l===C&&(k[0]||k[1]))&&(a+=E^w>=0?1:-1)}}return(i<-Ju||i<Ju&&o<-1e-12)^1&a}(e.map(yf),bf(t))}function yf(e){return(e=e.map(bf)).pop(),e}function bf(e){return[e[0]*lA,e[1]*lA]}function wf(e,t){return(e&&df.hasOwnProperty(e.type)?df[e.type]:xf)(e,t)}var Mf=Math.pow(2,-52),Sf=new Uint32Array(512),Ef=function(){function e(t){O(this,e);var n=t.length>>1;if(n>0&&"number"!==typeof t[0])throw new Error("Expected coords to contain numbers.");this.coords=t;var l=Math.max(2*n-5,0);this._triangles=new Uint32Array(3*l),this._halfedges=new Int32Array(3*l),this._hashSize=Math.ceil(Math.sqrt(n)),this._hullPrev=new Uint32Array(n),this._hullNext=new Uint32Array(n),this._hullTri=new Uint32Array(n),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(n),this._dists=new Float64Array(n),this.update()}return N(e,[{key:"update",value:function(){for(var e=this.coords,t=this._hullPrev,n=this._hullNext,l=this._hullTri,q=this._hullHash,r=e.length>>1,i=1/0,a=1/0,o=-1/0,s=-1/0,u=0;u<r;u++){var A=e[2*u],c=e[2*u+1];A<i&&(i=A),c<a&&(a=c),A>o&&(o=A),c>s&&(s=c),this._ids[u]=u}for(var m,h,f,d=(i+o)/2,p=(a+s)/2,x=1/0,v=0;v<r;v++){var g=zf(d,p,e[2*v],e[2*v+1]);g<x&&(m=v,x=g)}var _=e[2*m],y=e[2*m+1];x=1/0;for(var b=0;b<r;b++)if(b!==m){var w=zf(_,y,e[2*b],e[2*b+1]);w<x&&w>0&&(h=b,x=w)}for(var M=e[2*h],S=e[2*h+1],E=1/0,z=0;z<r;z++)if(z!==m&&z!==h){var k=Lf(_,y,M,S,e[2*z],e[2*z+1]);k<E&&(f=z,E=k)}var T=e[2*f],C=e[2*f+1];if(E===1/0){for(var L=0;L<r;L++)this._dists[L]=e[2*L]-e[0]||e[2*L+1]-e[1];Pf(this._ids,this._dists,0,r-1);for(var P=new Uint32Array(r),R=0,D=0,I=-1/0;D<r;D++){var O=this._ids[D];this._dists[O]>I&&(P[R++]=O,I=this._dists[O])}return this.hull=P.subarray(0,R),this.triangles=new Uint32Array(0),void(this.halfedges=new Uint32Array(0))}if(Tf(_,y,M,S,T,C)){var B=h,N=M,U=S;h=f,M=T,S=C,f=B,T=N,C=U}var F=function(e,t,n,l,q,r){var i=n-e,a=l-t,o=q-e,s=r-t,u=i*i+a*a,A=o*o+s*s,c=.5/(i*s-a*o);return{x:e+(s*u-a*A)*c,y:t+(i*A-o*u)*c}}(_,y,M,S,T,C);this._cx=F.x,this._cy=F.y;for(var H=0;H<r;H++)this._dists[H]=zf(e[2*H],e[2*H+1],F.x,F.y);Pf(this._ids,this._dists,0,r-1),this._hullStart=m;var G=3;n[m]=t[f]=h,n[h]=t[m]=f,n[f]=t[h]=m,l[m]=0,l[h]=1,l[f]=2,q.fill(-1),q[this._hashKey(_,y)]=m,q[this._hashKey(M,S)]=h,q[this._hashKey(T,C)]=f,this.trianglesLen=0,this._addTriangle(m,h,f,-1,-1,-1);for(var j,V,W=0;W<this._ids.length;W++){var Q=this._ids[W],Y=e[2*Q],X=e[2*Q+1];if(!(W>0&&Math.abs(Y-j)<=Mf&&Math.abs(X-V)<=Mf)&&(j=Y,V=X,Q!==m&&Q!==h&&Q!==f)){for(var Z=0,J=0,K=this._hashKey(Y,X);J<this._hashSize&&(-1===(Z=q[(K+J)%this._hashSize])||Z===n[Z]);J++);for(var $=Z=t[Z],ee=void 0;ee=n[$],!Tf(Y,X,e[2*$],e[2*$+1],e[2*ee],e[2*ee+1]);)if(($=ee)===Z){$=-1;break}if(-1!==$){var te=this._addTriangle($,Q,n[$],-1,-1,l[$]);l[Q]=this._legalize(te+2),l[$]=te,G++;for(var ne=n[$];ee=n[ne],Tf(Y,X,e[2*ne],e[2*ne+1],e[2*ee],e[2*ee+1]);)te=this._addTriangle(ne,Q,ee,l[Q],-1,l[ne]),l[Q]=this._legalize(te+2),n[ne]=ne,G--,ne=ee;if($===Z)for(;Tf(Y,X,e[2*(ee=t[$])],e[2*ee+1],e[2*$],e[2*$+1]);)te=this._addTriangle(ee,Q,$,-1,l[$],l[ee]),this._legalize(te+2),l[ee]=te,n[$]=$,G--,$=ee;this._hullStart=t[Q]=$,n[$]=t[ne]=Q,n[Q]=ne,q[this._hashKey(Y,X)]=Q,q[this._hashKey(e[2*$],e[2*$+1])]=$}}}this.hull=new Uint32Array(G);for(var le=0,qe=this._hullStart;le<G;le++)this.hull[le]=qe,qe=n[qe];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}},{key:"_hashKey",value:function(e,t){return Math.floor(function(e,t){var n=e/(Math.abs(e)+Math.abs(t));return(t>0?3-n:1+n)/4}(e-this._cx,t-this._cy)*this._hashSize)%this._hashSize}},{key:"_legalize",value:function(e){for(var t=this._triangles,n=this._halfedges,l=this.coords,q=0,r=0;;){var i=n[e],a=e-e%3;if(r=a+(e+2)%3,-1!==i){var o=i-i%3,s=a+(e+1)%3,u=o+(i+2)%3,A=t[r],c=t[e],m=t[s],h=t[u];if(Cf(l[2*A],l[2*A+1],l[2*c],l[2*c+1],l[2*m],l[2*m+1],l[2*h],l[2*h+1])){t[e]=h,t[i]=A;var f=n[u];if(-1===f){var d=this._hullStart;do{if(this._hullTri[d]===u){this._hullTri[d]=e;break}d=this._hullPrev[d]}while(d!==this._hullStart)}this._link(e,f),this._link(i,n[r]),this._link(r,u);var p=o+(i+1)%3;q<Sf.length&&(Sf[q++]=p)}else{if(0===q)break;e=Sf[--q]}}else{if(0===q)break;e=Sf[--q]}}return r}},{key:"_link",value:function(e,t){this._halfedges[e]=t,-1!==t&&(this._halfedges[t]=e)}},{key:"_addTriangle",value:function(e,t,n,l,q,r){var i=this.trianglesLen;return this._triangles[i]=e,this._triangles[i+1]=t,this._triangles[i+2]=n,this._link(i,l),this._link(i+1,q),this._link(i+2,r),this.trianglesLen+=3,i}}],[{key:"from",value:function(t){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Df,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:If,q=t.length,r=new Float64Array(2*q),i=0;i<q;i++){var a=t[i];r[2*i]=n(a),r[2*i+1]=l(a)}return new e(r)}}]),e}();function zf(e,t,n,l){var q=e-n,r=t-l;return q*q+r*r}function kf(e,t,n,l,q,r){var i=(l-t)*(q-e),a=(n-e)*(r-t);return Math.abs(i-a)>=33306690738754716e-32*Math.abs(i+a)?i-a:0}function Tf(e,t,n,l,q,r){return(kf(q,r,e,t,n,l)||kf(e,t,n,l,q,r)||kf(n,l,q,r,e,t))<0}function Cf(e,t,n,l,q,r,i,a){var o=e-i,s=t-a,u=n-i,A=l-a,c=q-i,m=r-a,h=u*u+A*A,f=c*c+m*m;return o*(A*f-h*m)-s*(u*f-h*c)+(o*o+s*s)*(u*m-A*c)<0}function Lf(e,t,n,l,q,r){var i=n-e,a=l-t,o=q-e,s=r-t,u=i*i+a*a,A=o*o+s*s,c=.5/(i*s-a*o),m=(s*u-a*A)*c,h=(i*A-o*u)*c;return m*m+h*h}function Pf(e,t,n,l){if(l-n<=20)for(var q=n+1;q<=l;q++){for(var r=e[q],i=t[r],a=q-1;a>=n&&t[e[a]]>i;)e[a+1]=e[a--];e[a+1]=r}else{var o=n+1,s=l;Rf(e,n+l>>1,o),t[e[n]]>t[e[l]]&&Rf(e,n,l),t[e[o]]>t[e[l]]&&Rf(e,o,l),t[e[n]]>t[e[o]]&&Rf(e,n,o);for(var u=e[o],A=t[u];;){do{o++}while(t[e[o]]<A);do{s--}while(t[e[s]]>A);if(s<o)break;Rf(e,o,s)}e[n+1]=e[s],e[s]=u,l-o+1>=s-n?(Pf(e,t,o,l),Pf(e,t,n,s-1)):(Pf(e,t,n,s-1),Pf(e,t,o,l))}}function Rf(e,t,n){var l=e[t];e[t]=e[n],e[n]=l}function Df(e){return e[0]}function If(e){return e[1]}var Of=1e-6,Bf=function(){function e(){O(this,e),this._x0=this._y0=this._x1=this._y1=null,this._=""}return N(e,[{key:"moveTo",value:function(e,t){this._+="M".concat(this._x0=this._x1=+e,",").concat(this._y0=this._y1=+t)}},{key:"closePath",value:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}},{key:"lineTo",value:function(e,t){this._+="L".concat(this._x1=+e,",").concat(this._y1=+t)}},{key:"arc",value:function(e,t,n){var l=(e=+e)+(n=+n),q=t=+t;if(n<0)throw new Error("negative radius");null===this._x1?this._+="M".concat(l,",").concat(q):(Math.abs(this._x1-l)>Of||Math.abs(this._y1-q)>Of)&&(this._+="L"+l+","+q),n&&(this._+="A".concat(n,",").concat(n,",0,1,1,").concat(e-n,",").concat(t,"A").concat(n,",").concat(n,",0,1,1,").concat(this._x1=l,",").concat(this._y1=q))}},{key:"rect",value:function(e,t,n,l){this._+="M".concat(this._x0=this._x1=+e,",").concat(this._y0=this._y1=+t,"h").concat(+n,"v").concat(+l,"h").concat(-n,"Z")}},{key:"value",value:function(){return this._||null}}]),e}(),Nf=function(){function e(){O(this,e),this._=[]}return N(e,[{key:"moveTo",value:function(e,t){this._.push([e,t])}},{key:"closePath",value:function(){this._.push(this._[0].slice())}},{key:"lineTo",value:function(e,t){this._.push([e,t])}},{key:"value",value:function(){return this._.length?this._:null}}]),e}(),Uf=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0,0,960,500],l=M(n,4),q=l[0],r=l[1],i=l[2],a=l[3];if(O(this,e),!((i=+i)>=(q=+q))||!((a=+a)>=(r=+r)))throw new Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(2*t.points.length),this.vectors=new Float64Array(2*t.points.length),this.xmax=i,this.xmin=q,this.ymax=a,this.ymin=r,this._init()}return N(e,[{key:"update",value:function(){return this.delaunay.update(),this._init(),this}},{key:"_init",value:function(){for(var e,t,n=this.delaunay,l=n.points,q=n.hull,r=n.triangles,i=this.vectors,a=this.circumcenters=this._circumcenters.subarray(0,r.length/3*2),o=0,s=0,u=r.length;o<u;o+=3,s+=2){var A=2*r[o],c=2*r[o+1],m=2*r[o+2],h=l[A],f=l[A+1],d=l[c],p=l[c+1],x=l[m],v=l[m+1],g=d-h,_=p-f,y=x-h,b=v-f,w=g*g+_*_,M=y*y+b*b,S=2*(g*b-_*y);if(S)if(Math.abs(S)<1e-8)e=(h+x)/2,t=(f+v)/2;else{var E=1/S;e=h+(b*w-_*M)*E,t=f+(g*M-y*w)*E}else e=(h+x)/2-1e8*b,t=(f+v)/2+1e8*y;a[s]=e,a[s+1]=t}var z,k,T,C=q[q.length-1],L=4*C,P=l[2*C],R=l[2*C+1];i.fill(0);for(var D=0;D<q.length;++D)z=L,k=P,T=R,L=4*(C=q[D]),P=l[2*C],R=l[2*C+1],i[z+2]=i[L]=T-R,i[z+3]=i[L+1]=P-k}},{key:"render",value:function(e){var t=null==e?e=new Bf:void 0,n=this.delaunay,l=n.halfedges,q=n.inedges,r=n.hull,i=this.circumcenters,a=this.vectors;if(r.length<=1)return null;for(var o=0,s=l.length;o<s;++o){var u=l[o];if(!(u<o)){var A=2*Math.floor(o/3),c=2*Math.floor(u/3),m=i[A],h=i[A+1],f=i[c],d=i[c+1];this._renderSegment(m,h,f,d,e)}}for(var p,x=r[r.length-1],v=0;v<r.length;++v){p=x,x=r[v];var g=2*Math.floor(q[x]/3),_=i[g],y=i[g+1],b=4*p,w=this._project(_,y,a[b+2],a[b+3]);w&&this._renderSegment(_,y,w[0],w[1],e)}return t&&t.value()}},{key:"renderBounds",value:function(e){var t=null==e?e=new Bf:void 0;return e.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),t&&t.value()}},{key:"renderCell",value:function(e,t){var n=null==t?t=new Bf:void 0,l=this._clip(e);if(null!==l&&l.length){t.moveTo(l[0],l[1]);for(var q=l.length;l[0]===l[q-2]&&l[1]===l[q-1]&&q>1;)q-=2;for(var r=2;r<q;r+=2)l[r]===l[r-2]&&l[r+1]===l[r-1]||t.lineTo(l[r],l[r+1]);return t.closePath(),n&&n.value()}}},{key:"cellPolygons",value:H().mark((function e(){var t,n,l,q;return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=this.delaunay.points,n=0,l=t.length/2;case 2:if(!(n<l)){e.next=11;break}if(!(q=this.cellPolygon(n))){e.next=8;break}return q.index=n,e.next=8,q;case 8:++n,e.next=2;break;case 11:case"end":return e.stop()}}),e,this)}))},{key:"cellPolygon",value:function(e){var t=new Nf;return this.renderCell(e,t),t.value()}},{key:"_renderSegment",value:function(e,t,n,l,q){var r,i=this._regioncode(e,t),a=this._regioncode(n,l);0===i&&0===a?(q.moveTo(e,t),q.lineTo(n,l)):(r=this._clipSegment(e,t,n,l,i,a))&&(q.moveTo(r[0],r[1]),q.lineTo(r[2],r[3]))}},{key:"contains",value:function(e,t,n){return(t=+t)===t&&(n=+n)===n&&this.delaunay._step(e,t,n)===e}},{key:"neighbors",value:H().mark((function e(t){var n,l,q,r,i,a,o,s,u;return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(n=this._clip(t))){e.next=33;break}l=b(this.delaunay.neighbors(t)),e.prev=3,l.s();case 5:if((q=l.n()).done){e.next=25;break}if(r=q.value,!(i=this._clip(r))){e.next=23;break}a=0,o=n.length;case 10:if(!(a<o)){e.next=23;break}s=0,u=i.length;case 12:if(!(s<u)){e.next=20;break}if(n[a]!=i[s]||n[a+1]!=i[s+1]||n[(a+2)%o]!=i[(s+u-2)%u]||n[(a+3)%o]!=i[(s+u-1)%u]){e.next=17;break}return e.next=16,r;case 16:return e.abrupt("break",23);case 17:s+=2,e.next=12;break;case 20:a+=2,e.next=10;break;case 23:e.next=5;break;case 25:e.next=30;break;case 27:e.prev=27,e.t0=e.catch(3),l.e(e.t0);case 30:return e.prev=30,l.f(),e.finish(30);case 33:case"end":return e.stop()}}),e,this,[[3,27,30,33]])}))},{key:"_cell",value:function(e){var t=this.circumcenters,n=this.delaunay,l=n.inedges,q=n.halfedges,r=n.triangles,i=l[e];if(-1===i)return null;var a=[],o=i;do{var s=Math.floor(o/3);if(a.push(t[2*s],t[2*s+1]),r[o=o%3===2?o-2:o+1]!==e)break;o=q[o]}while(o!==i&&-1!==o);return a}},{key:"_clip",value:function(e){if(0===e&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];var t=this._cell(e);if(null===t)return null;var n=this.vectors,l=4*e;return n[l]||n[l+1]?this._clipInfinite(e,t,n[l],n[l+1],n[l+2],n[l+3]):this._clipFinite(e,t)}},{key:"_clipFinite",value:function(e,t){for(var n,l,q,r,i,a=t.length,o=null,s=t[a-2],u=t[a-1],A=this._regioncode(s,u),c=0;c<a;c+=2)if(n=s,l=u,s=t[c],u=t[c+1],q=A,A=this._regioncode(s,u),0===q&&0===A)r=i,i=0,o?o.push(s,u):o=[s,u];else{var m=void 0,h=void 0,f=void 0,d=void 0,p=void 0;if(0===q){if(null===(m=this._clipSegment(n,l,s,u,q,A)))continue;var x=M(m,4);h=x[0],f=x[1],d=x[2],p=x[3]}else{if(null===(m=this._clipSegment(s,u,n,l,A,q)))continue;var v=M(m,4);d=v[0],p=v[1],h=v[2],f=v[3],r=i,i=this._edgecode(h,f),r&&i&&this._edge(e,r,i,o,o.length),o?o.push(h,f):o=[h,f]}r=i,i=this._edgecode(d,p),r&&i&&this._edge(e,r,i,o,o.length),o?o.push(d,p):o=[d,p]}if(o)r=i,i=this._edgecode(o[0],o[1]),r&&i&&this._edge(e,r,i,o,o.length);else if(this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return o}},{key:"_clipSegment",value:function(e,t,n,l,q,r){for(;;){if(0===q&&0===r)return[e,t,n,l];if(q&r)return null;var i=void 0,a=void 0,o=q||r;8&o?(i=e+(n-e)*(this.ymax-t)/(l-t),a=this.ymax):4&o?(i=e+(n-e)*(this.ymin-t)/(l-t),a=this.ymin):2&o?(a=t+(l-t)*(this.xmax-e)/(n-e),i=this.xmax):(a=t+(l-t)*(this.xmin-e)/(n-e),i=this.xmin),q?(e=i,t=a,q=this._regioncode(e,t)):(n=i,l=a,r=this._regioncode(n,l))}}},{key:"_clipInfinite",value:function(e,t,n,l,q,r){var i,a=Array.from(t);if((i=this._project(a[0],a[1],n,l))&&a.unshift(i[0],i[1]),(i=this._project(a[a.length-2],a[a.length-1],q,r))&&a.push(i[0],i[1]),a=this._clipFinite(e,a))for(var o,s=0,u=a.length,A=this._edgecode(a[u-2],a[u-1]);s<u;s+=2)o=A,A=this._edgecode(a[s],a[s+1]),o&&A&&(s=this._edge(e,o,A,a,s),u=a.length);else this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(a=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return a}},{key:"_edge",value:function(e,t,n,l,q){for(;t!==n;){var r=void 0,i=void 0;switch(t){case 5:t=4;continue;case 4:t=6,r=this.xmax,i=this.ymin;break;case 6:t=2;continue;case 2:t=10,r=this.xmax,i=this.ymax;break;case 10:t=8;continue;case 8:t=9,r=this.xmin,i=this.ymax;break;case 9:t=1;continue;case 1:t=5,r=this.xmin,i=this.ymin}l[q]===r&&l[q+1]===i||!this.contains(e,r,i)||(l.splice(q,0,r,i),q+=2)}if(l.length>4)for(var a=0;a<l.length;a+=2){var o=(a+2)%l.length,s=(a+4)%l.length;(l[a]===l[o]&&l[o]===l[s]||l[a+1]===l[o+1]&&l[o+1]===l[s+1])&&(l.splice(o,2),a-=2)}return q}},{key:"_project",value:function(e,t,n,l){var q,r,i,a=1/0;if(l<0){if(t<=this.ymin)return null;(q=(this.ymin-t)/l)<a&&(i=this.ymin,r=e+(a=q)*n)}else if(l>0){if(t>=this.ymax)return null;(q=(this.ymax-t)/l)<a&&(i=this.ymax,r=e+(a=q)*n)}if(n>0){if(e>=this.xmax)return null;(q=(this.xmax-e)/n)<a&&(r=this.xmax,i=t+(a=q)*l)}else if(n<0){if(e<=this.xmin)return null;(q=(this.xmin-e)/n)<a&&(r=this.xmin,i=t+(a=q)*l)}return[r,i]}},{key:"_edgecode",value:function(e,t){return(e===this.xmin?1:e===this.xmax?2:0)|(t===this.ymin?4:t===this.ymax?8:0)}},{key:"_regioncode",value:function(e,t){return(e<this.xmin?1:e>this.xmax?2:0)|(t<this.ymin?4:t>this.ymax?8:0)}}]),e}(),Ff=H().mark(Xf),Hf=2*Math.PI,Gf=Math.pow;function jf(e){return e[0]}function Vf(e){return e[1]}function Wf(e,t,n){return[e+Math.sin(e+t)*n,t+Math.cos(e-t)*n]}var Qf=function(){function e(t){O(this,e),this._delaunator=new Ef(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}return N(e,[{key:"update",value:function(){return this._delaunator.update(),this._init(),this}},{key:"_init",value:function(){var e=this._delaunator,t=this.points;if(e.hull&&e.hull.length>2&&function(e){for(var t=e.triangles,n=e.coords,l=0;l<t.length;l+=3){var q=2*t[l],r=2*t[l+1],i=2*t[l+2];if((n[i]-n[q])*(n[r+1]-n[q+1])-(n[r]-n[q])*(n[i+1]-n[q+1])>1e-10)return!1}return!0}(e)){this.collinear=Int32Array.from({length:t.length/2},(function(e,t){return t})).sort((function(e,n){return t[2*e]-t[2*n]||t[2*e+1]-t[2*n+1]}));for(var n=this.collinear[0],l=this.collinear[this.collinear.length-1],q=[t[2*n],t[2*n+1],t[2*l],t[2*l+1]],r=1e-8*Math.hypot(q[3]-q[1],q[2]-q[0]),i=0,a=t.length/2;i<a;++i){var o=Wf(t[2*i],t[2*i+1],r);t[2*i]=o[0],t[2*i+1]=o[1]}this._delaunator=new Ef(t)}else delete this.collinear;for(var s=this.halfedges=this._delaunator.halfedges,u=this.hull=this._delaunator.hull,A=this.triangles=this._delaunator.triangles,c=this.inedges.fill(-1),m=this._hullIndex.fill(-1),h=0,f=s.length;h<f;++h){var d=A[h%3===2?h-2:h+1];-1!==s[h]&&-1!==c[d]||(c[d]=h)}for(var p=0,x=u.length;p<x;++p)m[u[p]]=p;u.length<=2&&u.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=u[0],this.triangles[1]=u[1],this.triangles[2]=u[1],c[u[0]]=1,2===u.length&&(c[u[1]]=0))}},{key:"voronoi",value:function(e){return new Uf(this,e)}},{key:"neighbors",value:H().mark((function e(t){var n,l,q,r,i,a,o,s,u,A,c;return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=this.inedges,l=this.hull,q=this._hullIndex,r=this.halfedges,i=this.triangles,!(a=this.collinear)){e.next=10;break}if(!((o=a.indexOf(t))>0)){e.next=6;break}return e.next=6,a[o-1];case 6:if(!(o<a.length-1)){e.next=9;break}return e.next=9,a[o+1];case 9:return e.abrupt("return");case 10:if(-1!==(s=n[t])){e.next=13;break}return e.abrupt("return");case 13:u=s,A=-1;case 14:return e.next=16,A=i[u];case 16:if(i[u=u%3===2?u-2:u+1]===t){e.next=19;break}return e.abrupt("return");case 19:if(-1!==(u=r[u])){e.next=26;break}if((c=l[(q[t]+1)%l.length])===A){e.next=25;break}return e.next=25,c;case 25:return e.abrupt("return");case 26:if(u!==s){e.next=14;break}case 27:case"end":return e.stop()}}),e,this)}))},{key:"find",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if((e=+e)!==e||(t=+t)!==t)return-1;for(var l,q=n;(l=this._step(n,e,t))>=0&&l!==n&&l!==q;)n=l;return l}},{key:"_step",value:function(e,t,n){var l=this.inedges,q=this.hull,r=this._hullIndex,i=this.halfedges,a=this.triangles,o=this.points;if(-1===l[e]||!o.length)return(e+1)%(o.length>>1);var s=e,u=Gf(t-o[2*e],2)+Gf(n-o[2*e+1],2),A=l[e],c=A;do{var m=a[c],h=Gf(t-o[2*m],2)+Gf(n-o[2*m+1],2);if(h<u&&(u=h,s=m),a[c=c%3===2?c-2:c+1]!==e)break;if(-1===(c=i[c])){if((c=q[(r[e]+1)%q.length])!==m&&Gf(t-o[2*c],2)+Gf(n-o[2*c+1],2)<u)return c;break}}while(c!==A);return s}},{key:"render",value:function(e){for(var t=null==e?e=new Bf:void 0,n=this.points,l=this.halfedges,q=this.triangles,r=0,i=l.length;r<i;++r){var a=l[r];if(!(a<r)){var o=2*q[r],s=2*q[a];e.moveTo(n[o],n[o+1]),e.lineTo(n[s],n[s+1])}}return this.renderHull(e),t&&t.value()}},{key:"renderPoints",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,n=null==e?e=new Bf:void 0,l=this.points,q=0,r=l.length;q<r;q+=2){var i=l[q],a=l[q+1];e.moveTo(i+t,a),e.arc(i,a,t,0,Hf)}return n&&n.value()}},{key:"renderHull",value:function(e){var t=null==e?e=new Bf:void 0,n=this.hull,l=this.points,q=2*n[0],r=n.length;e.moveTo(l[q],l[q+1]);for(var i=1;i<r;++i){var a=2*n[i];e.lineTo(l[a],l[a+1])}return e.closePath(),t&&t.value()}},{key:"hullPolygon",value:function(){var e=new Nf;return this.renderHull(e),e.value()}},{key:"renderTriangle",value:function(e,t){var n=null==t?t=new Bf:void 0,l=this.points,q=this.triangles,r=2*q[e*=3],i=2*q[e+1],a=2*q[e+2];return t.moveTo(l[r],l[r+1]),t.lineTo(l[i],l[i+1]),t.lineTo(l[a],l[a+1]),t.closePath(),n&&n.value()}},{key:"trianglePolygons",value:H().mark((function e(){var t,n,l;return H().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=this.triangles,n=0,l=t.length/3;case 2:if(!(n<l)){e.next=8;break}return e.next=5,this.trianglePolygon(n);case 5:++n,e.next=2;break;case 8:case"end":return e.stop()}}),e,this)}))},{key:"trianglePolygon",value:function(e){var t=new Nf;return this.renderTriangle(e,t),t.value()}}],[{key:"from",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:jf,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Vf,q=arguments.length>3?arguments[3]:void 0;return new e("length"in t?Yf(t,n,l,q):Float64Array.from(Xf(t,n,l,q)))}}]),e}();function Yf(e,t,n,l){for(var q=e.length,r=new Float64Array(2*q),i=0;i<q;++i){var a=e[i];r[2*i]=t.call(l,a,i,e),r[2*i+1]=n.call(l,a,i,e)}return r}function Xf(e,t,n,l){var q,r,i,a;return H().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:q=0,r=b(e),o.prev=2,r.s();case 4:if((i=r.n()).done){o.next=13;break}return a=i.value,o.next=8,t.call(l,a,q,e);case 8:return o.next=10,n.call(l,a,q,e);case 10:++q;case 11:o.next=4;break;case 13:o.next=18;break;case 15:o.prev=15,o.t0=o.catch(2),r.e(o.t0);case 18:return o.prev=18,r.f(),o.finish(18);case 21:case"end":return o.stop()}}),Ff,null,[[2,15,18,21]])}function Zf(e,t){function n(n,l){return n=e(n,l),t(n[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,l){return(n=t.invert(n,l))&&e.invert(n[0],n[1])}),n}var Jf=1e-6,Kf=Math.PI,$f=Kf/2,ed=Kf/4,td=2*Kf,nd=180/Kf,ld=Kf/180,qd=Math.abs,rd=Math.atan,id=Math.atan2,ad=Math.cos,od=(Math.ceil,Math.exp,Math.floor,Math.log,Math.pow,Math.sin),sd=Math.sign||function(e){return e>0?1:e<0?-1:0},ud=Math.sqrt;Math.tan;function Ad(e){return e>1?$f:e<-1?-$f:Math.asin(e)}function cd(e,t){return[qd(e)>Kf?e+Math.round(-e/td)*td:e,t]}function md(e,t,n){return(e%=td)?t||n?Zf(fd(e),dd(t,n)):fd(e):t||n?dd(t,n):cd}function hd(e){return function(t,n){return[(t+=e)>Kf?t-td:t<-Kf?t+td:t,n]}}function fd(e){var t=hd(e);return t.invert=hd(-e),t}function dd(e,t){var n=ad(e),l=od(e),q=ad(t),r=od(t);function i(e,t){var i=ad(t),a=ad(e)*i,o=od(e)*i,s=od(t),u=s*n+a*l;return[id(o*q-u*r,a*n-s*l),Ad(u*q+o*r)]}return i.invert=function(e,t){var i=ad(t),a=ad(e)*i,o=od(e)*i,s=od(t),u=s*q-o*r;return[id(o*q+s*r,a*n+u*l),Ad(u*n-a*l)]},i}function pd(){}function xd(){var e,t=[];return{point:function(t,n,l){e.push([t,n,l])},lineStart:function(){t.push(e=[])},lineEnd:pd,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}function vd(e,t){return qd(e[0]-t[0])<Jf&&qd(e[1]-t[1])<Jf}function gd(e,t,n,l){this.x=e,this.z=t,this.o=n,this.e=l,this.v=!1,this.n=this.p=null}function _d(e,t,n,l,q){var r,i,a=[],o=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n,l=e[0],i=e[t];if(vd(l,i)){if(!l[2]&&!i[2]){for(q.lineStart(),r=0;r<t;++r)q.point((l=e[r])[0],l[1]);return void q.lineEnd()}i[0]+=2e-6}a.push(n=new gd(l,e,null,!0)),o.push(n.o=new gd(l,null,n,!1)),a.push(n=new gd(i,e,null,!1)),o.push(n.o=new gd(i,null,n,!0))}})),a.length){for(o.sort(t),yd(a),yd(o),r=0,i=o.length;r<i;++r)o[r].e=n=!n;for(var s,u,A=a[0];;){for(var c=A,m=!0;c.v;)if((c=c.n)===A)return;s=c.z,q.lineStart();do{if(c.v=c.o.v=!0,c.e){if(m)for(r=0,i=s.length;r<i;++r)q.point((u=s[r])[0],u[1]);else l(c.x,c.n.x,1,q);c=c.n}else{if(m)for(s=c.p.z,r=s.length-1;r>=0;--r)q.point((u=s[r])[0],u[1]);else l(c.x,c.p.x,-1,q);c=c.p}s=(c=c.o).z,m=!m}while(!c.v);q.lineEnd()}}}function yd(e){if(t=e.length){for(var t,n,l=0,q=e[0];++l<t;)q.n=n=e[l],n.p=q,q=n;q.n=n=e[0],n.p=q}}function bd(){return new wd}function wd(){this.reset()}cd.invert=cd,wd.prototype={constructor:wd,reset:function(){this.s=this.t=0},add:function(e){Sd(Md,e,this.t),Sd(this,Md.s,this.s),this.s?this.t+=Md.t:this.s=Md.t},valueOf:function(){return this.s}};var Md=new wd;function Sd(e,t,n){var l=e.s=t+n,q=l-t,r=l-q;e.t=t-r+(n-q)}function Ed(e){return[id(e[1],e[0]),Ad(e[2])]}function zd(e){var t=e[0],n=e[1],l=ad(n);return[l*ad(t),l*od(t),od(n)]}function kd(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Td(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Cd(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function Ld(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function Pd(e){var t=ud(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}var Rd=bd();function Dd(e){return qd(e[0])<=Kf?e[0]:sd(e[0])*((qd(e[0])+Kf)%td-Kf)}function Id(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}var Od=function(e){var t;return 1===e.length&&(t=e,e=function(e,n){return Id(t(e),n)}),{left:function(t,n,l,q){for(null==l&&(l=0),null==q&&(q=t.length);l<q;){var r=l+q>>>1;e(t[r],n)<0?l=r+1:q=r}return l},right:function(t,n,l,q){for(null==l&&(l=0),null==q&&(q=t.length);l<q;){var r=l+q>>>1;e(t[r],n)>0?q=r:l=r+1}return l}}}(Id),Bd=(Od.right,Od.left,Array.prototype);Bd.slice,Bd.map,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);function Nd(e){for(var t,n,l,q=e.length,r=-1,i=0;++r<q;)i+=e[r].length;for(n=new Array(i);--q>=0;)for(t=(l=e[q]).length;--t>=0;)n[--i]=l[t];return n}function Ud(e,t,n,l){return function(q){var r,i,a,o=t(q),s=xd(),u=t(s),A=!1,c={point:m,lineStart:f,lineEnd:d,polygonStart:function(){c.point=p,c.lineStart=x,c.lineEnd=v,i=[],r=[]},polygonEnd:function(){c.point=m,c.lineStart=f,c.lineEnd=d,i=Nd(i);var e=function(e,t){var n=Dd(t),l=t[1],q=od(l),r=[od(n),-ad(n),0],i=0,a=0;Rd.reset(),1===q?l=$f+Jf:-1===q&&(l=-$f-Jf);for(var o=0,s=e.length;o<s;++o)if(A=(u=e[o]).length)for(var u,A,c=u[A-1],m=Dd(c),h=c[1]/2+ed,f=od(h),d=ad(h),p=0;p<A;++p,m=v,f=_,d=y,c=x){var x=u[p],v=Dd(x),g=x[1]/2+ed,_=od(g),y=ad(g),b=v-m,w=b>=0?1:-1,M=w*b,S=M>Kf,E=f*_;if(Rd.add(id(E*w*od(M),d*y+E*ad(M))),i+=S?b+w*td:b,S^m>=n^v>=n){var z=Td(zd(c),zd(x));Pd(z);var k=Td(r,z);Pd(k);var T=(S^b>=0?-1:1)*Ad(k[2]);(l>T||l===T&&(z[0]||z[1]))&&(a+=S^b>=0?1:-1)}}return(i<-1e-6||i<Jf&&Rd<-1e-6)^1&a}(r,l);i.length?(A||(q.polygonStart(),A=!0),_d(i,Hd,e,n,q)):e&&(A||(q.polygonStart(),A=!0),q.lineStart(),n(null,null,1,q),q.lineEnd()),A&&(q.polygonEnd(),A=!1),i=r=null},sphere:function(){q.polygonStart(),q.lineStart(),n(null,null,1,q),q.lineEnd(),q.polygonEnd()}};function m(t,n){e(t,n)&&q.point(t,n)}function h(e,t){o.point(e,t)}function f(){c.point=h,o.lineStart()}function d(){c.point=m,o.lineEnd()}function p(e,t){a.push([e,t]),u.point(e,t)}function x(){u.lineStart(),a=[]}function v(){p(a[0][0],a[0][1]),u.lineEnd();var e,t,n,l,o=u.clean(),c=s.result(),m=c.length;if(a.pop(),r.push(a),a=null,m)if(1&o){if((t=(n=c[0]).length-1)>0){for(A||(q.polygonStart(),A=!0),q.lineStart(),e=0;e<t;++e)q.point((l=n[e])[0],l[1]);q.lineEnd()}}else m>1&&2&o&&c.push(c.pop().concat(c.shift())),i.push(c.filter(Fd))}return c}}function Fd(e){return e.length>1}function Hd(e,t){return((e=e.x)[0]<0?e[1]-$f-Jf:$f-e[1])-((t=t.x)[0]<0?t[1]-$f-Jf:$f-t[1])}var Gd=Ud((function(){return!0}),(function(e){var t,n=NaN,l=NaN,q=NaN;return{lineStart:function(){e.lineStart(),t=1},point:function(r,i){var a=r>0?Kf:-Kf,o=qd(r-n);qd(o-Kf)<Jf?(e.point(n,l=(l+i)/2>0?$f:-$f),e.point(q,l),e.lineEnd(),e.lineStart(),e.point(a,l),e.point(r,l),t=0):q!==a&&o>=Kf&&(qd(n-q)<Jf&&(n-=q*Jf),qd(r-a)<Jf&&(r-=a*Jf),l=function(e,t,n,l){var q,r,i=od(e-n);return qd(i)>Jf?rd((od(t)*(r=ad(l))*od(n)-od(l)*(q=ad(t))*od(e))/(q*r*i)):(t+l)/2}(n,l,r,i),e.point(q,l),e.lineEnd(),e.lineStart(),e.point(a,l),t=0),e.point(n=r,l=i),q=a},lineEnd:function(){e.lineEnd(),n=l=NaN},clean:function(){return 2-t}}}),(function(e,t,n,l){var q;if(null==e)q=n*$f,l.point(-Kf,q),l.point(0,q),l.point(Kf,q),l.point(Kf,0),l.point(Kf,-q),l.point(0,-q),l.point(-Kf,-q),l.point(-Kf,0),l.point(-Kf,q);else if(qd(e[0]-t[0])>Jf){var r=e[0]<t[0]?Kf:-Kf;q=n*r/2,l.point(-r,q),l.point(0,q),l.point(r,q)}else l.point(t[0],t[1])}),[-Kf,-$f]);function jd(e,t,n,l,q,r){if(n){var i=ad(t),a=od(t),o=l*n;null==q?(q=t+l*td,r=t-o/2):(q=Vd(i,q),r=Vd(i,r),(l>0?q<r:q>r)&&(q+=l*td));for(var s,u=q;l>0?u>r:u<r;u-=o)s=Ed([i,-a*ad(u),-a*od(u)]),e.point(s[0],s[1])}}function Vd(e,t){(t=zd(t))[0]-=e,Pd(t);var n,l=(n=-t[1])>1?0:n<-1?Kf:Math.acos(n);return((-t[2]<0?-l:l)+td-Jf)%td}function Wd(e){var t=ad(e),n=6*ld,l=t>0,q=qd(t)>Jf;function r(e,n){return ad(e)*ad(n)>t}function i(e,n,l){var q=[1,0,0],r=Td(zd(e),zd(n)),i=kd(r,r),a=r[0],o=i-a*a;if(!o)return!l&&e;var s=t*i/o,u=-t*a/o,A=Td(q,r),c=Ld(q,s);Cd(c,Ld(r,u));var m=A,h=kd(c,m),f=kd(m,m),d=h*h-f*(kd(c,c)-1);if(!(d<0)){var p=ud(d),x=Ld(m,(-h-p)/f);if(Cd(x,c),x=Ed(x),!l)return x;var v,g=e[0],_=n[0],y=e[1],b=n[1];_<g&&(v=g,g=_,_=v);var w=_-g,M=qd(w-Kf)<Jf;if(!M&&b<y&&(v=y,y=b,b=v),M||w<Jf?M?y+b>0^x[1]<(qd(x[0]-g)<Jf?y:b):y<=x[1]&&x[1]<=b:w>Kf^(g<=x[0]&&x[0]<=_)){var S=Ld(m,(-h+p)/f);return Cd(S,c),[x,Ed(S)]}}}function a(t,n){var q=l?e:Kf-e,r=0;return t<-q?r|=1:t>q&&(r|=2),n<-q?r|=4:n>q&&(r|=8),r}return Ud(r,(function(e){var t,n,o,s,u;return{lineStart:function(){s=o=!1,u=1},point:function(A,c){var m,h=[A,c],f=r(A,c),d=l?f?0:a(A,c):f?a(A+(A<0?Kf:-Kf),c):0;if(!t&&(s=o=f)&&e.lineStart(),f!==o&&(!(m=i(t,h))||vd(t,m)||vd(h,m))&&(h[2]=1),f!==o)u=0,f?(e.lineStart(),m=i(h,t),e.point(m[0],m[1])):(m=i(t,h),e.point(m[0],m[1],2),e.lineEnd()),t=m;else if(q&&t&&l^f){var p;d&n||!(p=i(h,t,!0))||(u=0,l?(e.lineStart(),e.point(p[0][0],p[0][1]),e.point(p[1][0],p[1][1]),e.lineEnd()):(e.point(p[1][0],p[1][1]),e.lineEnd(),e.lineStart(),e.point(p[0][0],p[0][1],3)))}!f||t&&vd(t,h)||e.point(h[0],h[1]),t=h,o=f,n=d},lineEnd:function(){o&&e.lineEnd(),t=null},clean:function(){return u|(s&&o)<<1}}}),(function(t,l,q,r){jd(r,e,n,q,t,l)}),l?[0,-e]:[-Kf,e-Kf])}var Qd=1e9,Yd=-Qd;function Xd(e,t,n,l){function q(q,r){return e<=q&&q<=n&&t<=r&&r<=l}function r(q,r,a,s){var u=0,A=0;if(null==q||(u=i(q,a))!==(A=i(r,a))||o(q,r)<0^a>0)do{s.point(0===u||3===u?e:n,u>1?l:t)}while((u=(u+a+4)%4)!==A);else s.point(r[0],r[1])}function i(l,q){return qd(l[0]-e)<Jf?q>0?0:3:qd(l[0]-n)<Jf?q>0?2:1:qd(l[1]-t)<Jf?q>0?1:0:q>0?3:2}function a(e,t){return o(e.x,t.x)}function o(e,t){var n=i(e,1),l=i(t,1);return n!==l?n-l:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(i){var o,s,u,A,c,m,h,f,d,p,x,v=i,g=xd(),_={point:y,lineStart:function(){_.point=b,s&&s.push(u=[]);p=!0,d=!1,h=f=NaN},lineEnd:function(){o&&(b(A,c),m&&d&&g.rejoin(),o.push(g.result()));_.point=y,d&&v.lineEnd()},polygonStart:function(){v=g,o=[],s=[],x=!0},polygonEnd:function(){var t=function(){for(var t=0,n=0,q=s.length;n<q;++n)for(var r,i,a=s[n],o=1,u=a.length,A=a[0],c=A[0],m=A[1];o<u;++o)r=c,i=m,c=(A=a[o])[0],m=A[1],i<=l?m>l&&(c-r)*(l-i)>(m-i)*(e-r)&&++t:m<=l&&(c-r)*(l-i)<(m-i)*(e-r)&&--t;return t}(),n=x&&t,q=(o=Nd(o)).length;(n||q)&&(i.polygonStart(),n&&(i.lineStart(),r(null,null,1,i),i.lineEnd()),q&&_d(o,a,t,r,i),i.polygonEnd());v=i,o=s=u=null}};function y(e,t){q(e,t)&&v.point(e,t)}function b(r,i){var a=q(r,i);if(s&&u.push([r,i]),p)A=r,c=i,m=a,p=!1,a&&(v.lineStart(),v.point(r,i));else if(a&&d)v.point(r,i);else{var o=[h=Math.max(Yd,Math.min(Qd,h)),f=Math.max(Yd,Math.min(Qd,f))],g=[r=Math.max(Yd,Math.min(Qd,r)),i=Math.max(Yd,Math.min(Qd,i))];!function(e,t,n,l,q,r){var i,a=e[0],o=e[1],s=0,u=1,A=t[0]-a,c=t[1]-o;if(i=n-a,A||!(i>0)){if(i/=A,A<0){if(i<s)return;i<u&&(u=i)}else if(A>0){if(i>u)return;i>s&&(s=i)}if(i=q-a,A||!(i<0)){if(i/=A,A<0){if(i>u)return;i>s&&(s=i)}else if(A>0){if(i<s)return;i<u&&(u=i)}if(i=l-o,c||!(i>0)){if(i/=c,c<0){if(i<s)return;i<u&&(u=i)}else if(c>0){if(i>u)return;i>s&&(s=i)}if(i=r-o,c||!(i<0)){if(i/=c,c<0){if(i>u)return;i>s&&(s=i)}else if(c>0){if(i<s)return;i<u&&(u=i)}return s>0&&(e[0]=a+s*A,e[1]=o+s*c),u<1&&(t[0]=a+u*A,t[1]=o+u*c),!0}}}}}(o,g,e,t,n,l)?a&&(v.lineStart(),v.point(r,i),x=!1):(d||(v.lineStart(),v.point(o[0],o[1])),v.point(g[0],g[1]),a||v.lineEnd(),x=!1)}h=r,f=i,d=a}return _}}function Zd(e){return e}function Jd(e){return function(t){var n=new Kd;for(var l in e)n[l]=e[l];return n.stream=t,n}}function Kd(){}function $d(e,t){e&&tp.hasOwnProperty(e.type)&&tp[e.type](e,t)}Kd.prototype={constructor:Kd,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var ep={Feature:function(e,t){$d(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,l=-1,q=n.length;++l<q;)$d(n[l].geometry,t)}},tp={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)e=n[l],t.point(e[0],e[1],e[2])},LineString:function(e,t){np(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)np(n[l],t,0)},Polygon:function(e,t){lp(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,l=-1,q=n.length;++l<q;)lp(n[l],t)},GeometryCollection:function(e,t){for(var n=e.geometries,l=-1,q=n.length;++l<q;)$d(n[l],t)}};function np(e,t,n){var l,q=-1,r=e.length-n;for(t.lineStart();++q<r;)l=e[q],t.point(l[0],l[1],l[2]);t.lineEnd()}function lp(e,t){var n=-1,l=e.length;for(t.polygonStart();++n<l;)np(e[n],t,1);t.polygonEnd()}function qp(e,t){e&&ep.hasOwnProperty(e.type)?ep[e.type](e,t):$d(e,t)}var rp=1/0,ip=rp,ap=-rp,op=ap,sp={point:function(e,t){e<rp&&(rp=e);e>ap&&(ap=e);t<ip&&(ip=t);t>op&&(op=t)},lineStart:pd,lineEnd:pd,polygonStart:pd,polygonEnd:pd,result:function(){var e=[[rp,ip],[ap,op]];return ap=op=-(ip=rp=1/0),e}};var up=sp;function Ap(e,t,n){var l=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=l&&e.clipExtent(null),qp(n,e.stream(up)),t(up.result()),null!=l&&e.clipExtent(l),e}function cp(e,t,n){return Ap(e,(function(n){var l=t[1][0]-t[0][0],q=t[1][1]-t[0][1],r=Math.min(l/(n[1][0]-n[0][0]),q/(n[1][1]-n[0][1])),i=+t[0][0]+(l-r*(n[1][0]+n[0][0]))/2,a=+t[0][1]+(q-r*(n[1][1]+n[0][1]))/2;e.scale(150*r).translate([i,a])}),n)}var mp=ad(30*ld);function hp(e,t){return+t?function(e,t){function n(l,q,r,i,a,o,s,u,A,c,m,h,f,d){var p=s-l,x=u-q,v=p*p+x*x;if(v>4*t&&f--){var g=i+c,_=a+m,y=o+h,b=ud(g*g+_*_+y*y),w=Ad(y/=b),M=qd(qd(y)-1)<Jf||qd(r-A)<Jf?(r+A)/2:id(_,g),S=e(M,w),E=S[0],z=S[1],k=E-l,T=z-q,C=x*k-p*T;(C*C/v>t||qd((p*k+x*T)/v-.5)>.3||i*c+a*m+o*h<mp)&&(n(l,q,r,i,a,o,E,z,M,g/=b,_/=b,y,f,d),d.point(E,z),n(E,z,M,g,_,y,s,u,A,c,m,h,f,d))}}return function(t){var l,q,r,i,a,o,s,u,A,c,m,h,f={point:d,lineStart:p,lineEnd:v,polygonStart:function(){t.polygonStart(),f.lineStart=g},polygonEnd:function(){t.polygonEnd(),f.lineStart=p}};function d(n,l){n=e(n,l),t.point(n[0],n[1])}function p(){u=NaN,f.point=x,t.lineStart()}function x(l,q){var r=zd([l,q]),i=e(l,q);n(u,A,s,c,m,h,u=i[0],A=i[1],s=l,c=r[0],m=r[1],h=r[2],16,t),t.point(u,A)}function v(){f.point=d,t.lineEnd()}function g(){p(),f.point=_,f.lineEnd=y}function _(e,t){x(l=e,t),q=u,r=A,i=c,a=m,o=h,f.point=x}function y(){n(u,A,s,c,m,h,q,r,l,i,a,o,16,t),f.lineEnd=v,v()}return f}}(e,t):function(e){return Jd({point:function(t,n){t=e(t,n),this.stream.point(t[0],t[1])}})}(e)}var fp=Jd({point:function(e,t){this.stream.point(e*ld,t*ld)}});function dp(e,t,n,l,q){function r(r,i){return[t+e*(r*=l),n-e*(i*=q)]}return r.invert=function(r,i){return[(r-t)/e*l,(n-i)/e*q]},r}function pp(e,t,n,l,q,r){var i=ad(r),a=od(r),o=i*e,s=a*e,u=i/e,A=a/e,c=(a*n-i*t)/e,m=(a*t+i*n)/e;function h(e,r){return[o*(e*=l)-s*(r*=q)+t,n-s*e-o*r]}return h.invert=function(e,t){return[l*(u*e-A*t+c),q*(m-A*e-u*t)]},h}function xp(e){return function(e){var t,n,l,q,r,i,a,o,s,u,A=150,c=480,m=250,h=0,f=0,d=0,p=0,x=0,v=0,g=1,_=1,y=null,b=Gd,w=null,M=Zd,S=.5;function E(e){return o(e[0]*ld,e[1]*ld)}function z(e){return(e=o.invert(e[0],e[1]))&&[e[0]*nd,e[1]*nd]}function k(){var e=pp(A,0,0,g,_,v).apply(null,t(h,f)),l=(v?pp:dp)(A,c-e[0],m-e[1],g,_,v);return n=md(d,p,x),a=Zf(t,l),o=Zf(n,a),i=hp(a,S),T()}function T(){return s=u=null,E}return E.stream=function(e){return s&&u===e?s:s=fp(function(e){return Jd({point:function(t,n){var l=e(t,n);return this.stream.point(l[0],l[1])}})}(n)(b(i(M(u=e)))))},E.preclip=function(e){return arguments.length?(b=e,y=void 0,T()):b},E.postclip=function(e){return arguments.length?(M=e,w=l=q=r=null,T()):M},E.clipAngle=function(e){return arguments.length?(b=+e?Wd(y=e*ld):(y=null,Gd),T()):y*nd},E.clipExtent=function(e){return arguments.length?(M=null==e?(w=l=q=r=null,Zd):Xd(w=+e[0][0],l=+e[0][1],q=+e[1][0],r=+e[1][1]),T()):null==w?null:[[w,l],[q,r]]},E.scale=function(e){return arguments.length?(A=+e,k()):A},E.translate=function(e){return arguments.length?(c=+e[0],m=+e[1],k()):[c,m]},E.center=function(e){return arguments.length?(h=e[0]%360*ld,f=e[1]%360*ld,k()):[h*nd,f*nd]},E.rotate=function(e){return arguments.length?(d=e[0]%360*ld,p=e[1]%360*ld,x=e.length>2?e[2]%360*ld:0,k()):[d*nd,p*nd,x*nd]},E.angle=function(e){return arguments.length?(v=e%360*ld,k()):v*nd},E.reflectX=function(e){return arguments.length?(g=e?-1:1,k()):g<0},E.reflectY=function(e){return arguments.length?(_=e?-1:1,k()):_<0},E.precision=function(e){return arguments.length?(i=hp(a,S=e*e),T()):ud(S)},E.fitExtent=function(e,t){return cp(E,e,t)},E.fitSize=function(e,t){return function(e,t,n){return cp(e,[[0,0],t],n)}(E,e,t)},E.fitWidth=function(e,t){return function(e,t,n){return Ap(e,(function(n){var l=+t,q=l/(n[1][0]-n[0][0]),r=(l-q*(n[1][0]+n[0][0]))/2,i=-q*n[0][1];e.scale(150*q).translate([r,i])}),n)}(E,e,t)},E.fitHeight=function(e,t){return function(e,t,n){return Ap(e,(function(n){var l=+t,q=l/(n[1][1]-n[0][1]),r=-q*n[0][0],i=(l-q*(n[1][1]+n[0][1]))/2;e.scale(150*q).translate([r,i])}),n)}(E,e,t)},function(){return t=e.apply(this,arguments),E.invert=t.invert&&z,k()}}((function(){return e}))()}function vp(e,t){var n=ad(t),l=1+ad(e)*n;return[n*od(e)/l,od(t)/l]}function gp(){return xp(vp).scale(250).clipAngle(142)}function _p(e,t){var n,l;if(void 0===t){var q,r=b(e);try{for(r.s();!(q=r.n()).done;){var i=q.value;null!=i&&(void 0===n?i>=i&&(n=l=i):(n>i&&(n=i),l<i&&(l=i)))}}catch(A){r.e(A)}finally{r.f()}}else{var a,o=-1,s=b(e);try{for(s.s();!(a=s.n()).done;){var u=a.value;null!=(u=t(u,++o,e))&&(void 0===n?u>=u&&(n=l=u):(n>u&&(n=u),l<u&&(l=u)))}}catch(A){s.e(A)}finally{s.f()}}return[n,l]}vp.invert=function(e){return function(t,n){var l=ud(t*t+n*n),q=e(l),r=od(q),i=ad(q);return[id(t*r,l*i),Ad(l&&n*r/l)]}}((function(e){return 2*rd(e)}));var yp,bp,wp,Mp,Sp,Ep,zp,kp,Tp,Cp,Lp,Pp,Rp,Dp,Ip,Op,Bp=Math.PI,Np=Bp/2,Up=180/Bp,Fp=Bp/180,Hp=(Math.abs,Math.atan,Math.atan2),Gp=Math.cos,jp=(Math.ceil,Math.exp,Math.floor,Math.log,Math.max),Vp=Math.min,Wp=(Math.pow,Math.sin),Qp=Math.sign||function(e){return e>0?1:e<0?-1:0},Yp=Math.sqrt;Math.tan;function Xp(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function Zp(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function Jp(e,t){return[e[0]+t[0],e[1]+t[1],e[2]+t[2]]}function Kp(e){var t=Yp(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]}function $p(e){return[Hp(e[1],e[0])*Up,(t=jp(-1,Vp(1,e[2])),(t>1?Np:t<-1?-Np:Math.asin(t))*Up)];var t}function ex(e){var t=e[0]*Fp,n=e[1]*Fp,l=Gp(n);return[l*Gp(t),l*Wp(t),Wp(n)]}function tx(e){return Xp((e=e.map((function(e){return ex(e)})))[0],Zp(e[2],e[1]))}function nx(e){var t=function(e){if(e.length<2)return{};var t=0;for(;isNaN(e[t][0]+e[t][1])&&t++<e.length;);var n=function(e){function t(t){return(t=e(t[0]*ld,t[1]*ld))[0]*=nd,t[1]*=nd,t}return e=md(e[0]*ld,e[1]*ld,e.length>2?e[2]*ld:0),t.invert=function(t){return(t=e.invert(t[0]*ld,t[1]*ld))[0]*=nd,t[1]*=nd,t},t}(e[t]),l=gp().translate([0,0]).scale(1).rotate(n.invert([180,0]));e=e.map(l);for(var q=[],r=1,i=0,a=e.length;i<a;i++){var o=Math.pow(e[i][0],2)+Math.pow(e[i][1],2);!isFinite(o)||o>1e32?q.push(i):o>r&&(r=o)}var s=1e6*Yp(r);q.forEach((function(t){return e[t]=[s,0]})),e.push([0,s]),e.push([-s,0]),e.push([0,-s]);var u=Qf.from(e);u.projection=l;for(var A=u.triangles,c=u.halfedges,m=u.inedges,h=[],f=0,d=c.length;f<d;f++)if(c[f]<0){var p=f%3==2?f-2:f+1,x=f%3==0?f+2:f-1,v=c[p],g=c[x];c[v]=g,c[g]=v,c[p]=c[x]=-1,A[f]=A[p]=A[x]=t,m[A[v]]=v%3==0?v+2:v-1,m[A[g]]=g%3==0?g+2:g-1,h.push(Math.min(f,p,x)),f+=2-f%3}else A[f]>e.length-3-1&&(A[f]=t);return u}(e),n=function(e){var t=e.triangles;if(!t)return[];for(var n=[],l=0,q=t.length/3;l<q;l++){var r=t[3*l],i=t[3*l+1],a=t[3*l+2];r!==i&&i!==a&&n.push([r,a,i])}return n}(t),l=function(e,t){var n={};return 2===t.length?[[0,1]]:(e.forEach((function(e){if(e[0]!==e[1]&&!(tx(e.map((function(e){return t[e]})))<0))for(var l,q=0;q<3;q++)l=(q+1)%3,n[_p([e[q],e[l]]).join("-")]=!0})),Object.keys(n).map((function(e){return e.split("-").map(Number)})))}(n,e),q=function(e,t){var n=[];e.forEach((function(e,t){for(var l=0;l<3;l++){var q=e[l],r=e[(l+1)%3];e[(l+2)%3];n[q]=n[q]||[],n[q].push(r)}})),0===e.length&&(2===t?(n[0]=[1],n[1]=[0]):1===t&&(n[0]=[]));return n}(n,e.length),r=function(e,t){function n(e,t){var n=e[0]-t[0],l=e[1]-t[1],q=e[2]-t[2];return n*n+l*l+q*q}return function(l,q,r){void 0===r&&(r=0);var i,a,o=r,s=ex([l,q]);do{i=r,r=null,a=n(s,ex(t[i])),e[i].forEach((function(e){var l=n(s,ex(t[e]));if(l<a)return a=l,r=e,void(o=e)}))}while(null!==r);return o}}(q,e),i=function(e,t){return e.map((function(e){var n=e.map((function(e){return t[e]})).map(ex);return $p(Kp(Jp(Jp(Zp(n[1],n[0]),Zp(n[2],n[1])),Zp(n[0],n[2]))))}))}(n,e),a=function(e,t,n){var l=[],q=e.slice();if(0===t.length){if(n.length<2)return{polygons:l,centers:q};if(2===n.length){var r=ex(n[0]),i=ex(n[1]),a=Kp(Jp(r,i)),o=Kp(Zp(r,i)),s=Zp(a,o),u=[a,Zp(a,s),Zp(Zp(a,s),s),Zp(Zp(Zp(a,s),s),s)].map($p).map(c);return l.push(u),l.push(u.slice().reverse()),{polygons:l,centers:q}}}t.forEach((function(e,t){for(var n=0;n<3;n++){var q=e[n],r=e[(n+1)%3],i=e[(n+2)%3];l[q]=l[q]||[],l[q].push([r,i,t,[q,r,i]])}}));var A=l.map((function(e){for(var t=[e[0][2]],l=e[0][1],r=1;r<e.length;r++)for(var i=0;i<e.length;i++)if(e[i][0]==l){l=e[i][1],t.push(e[i][2]);break}if(t.length>2)return t;if(2==t.length){var a=lx(n[e[0][3][0]],n[e[0][3][1]],q[t[0]]),o=lx(n[e[0][3][2]],n[e[0][3][0]],q[t[0]]),s=c(a),u=c(o);return[t[0],u,t[1],s]}}));function c(e){var n=-1;return q.slice(t.length,1/0).forEach((function(l,q){l[0]===e[0]&&l[1]===e[1]&&(n=q+t.length)})),n<0&&(n=q.length,q.push(e)),n}return{polygons:A,centers:q}}(i,n,e),o=a.polygons,s=a.centers,u=function(e){var t=[];return e.forEach((function(e){if(e){var n,l=e[e.length-1],q=b(e);try{for(q.s();!(n=q.n()).done;){var r=n.value;r>l&&t.push([l,r]),l=r}}catch(i){q.e(i)}finally{q.f()}}})),t}(o),A=function(e,t){var n={},l=[];e.map((function(e){if(!(tx(e.map((function(e){return t[e>t.length?0:e]})))<0))for(var l=0;l<3;l++){var q=[e[l],e[(l+1)%3]],r="".concat(q[1],"-").concat(q[0]);n[r]?delete n[r]:n[q.join("-")]=!0}}));var q,r={};if(Object.keys(n).forEach((function(e){e=e.split("-").map(Number),r[e[0]]=e[1],q=e[0]})),void 0===q)return l;var i=q;do{l.push(i);var a=r[i];r[i]=-1,i=a}while(i>-1&&i!==q);return l}(n,e),c=function(e,t){return function(n){var l={},q={};return e.forEach((function(e,t){var r=e.join("-");l[r]=n[t],q[r]=!0})),t.forEach((function(e){for(var t=0,n=-1,r=0;r<3;r++){var i=_p([e[r],e[(r+1)%3]]).join("-");l[i]>t&&(t=l[i],n=i)}q[n]=!1})),e.map((function(e){return q[e.join("-")]}))}}(l,n);return{delaunay:t,edges:l,triangles:n,centers:s,neighbors:q,polygons:o,mesh:u,hull:A,urquhart:c,find:r}}function lx(e,t,n){e=ex(e),t=ex(t),n=ex(n);var l=Qp(Xp(Zp(t,e),n));return $p(Kp(Jp(e,t)).map((function(e){return l*e})))}function qx(e){return function(e){if(Array.isArray(e))return _(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||y(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var rx={sphere:pd,point:ix,lineStart:ox,lineEnd:Ax,polygonStart:function(){rx.lineStart=cx,rx.lineEnd=mx},polygonEnd:function(){rx.lineStart=ox,rx.lineEnd=Ax}};function ix(e,t){e*=ld;var n=ad(t*=ld);ax(n*ad(e),n*od(e),od(t))}function ax(e,t,n){++yp,wp+=(e-wp)/yp,Mp+=(t-Mp)/yp,Sp+=(n-Sp)/yp}function ox(){rx.point=sx}function sx(e,t){e*=ld;var n=ad(t*=ld);Dp=n*ad(e),Ip=n*od(e),Op=od(t),rx.point=ux,ax(Dp,Ip,Op)}function ux(e,t){e*=ld;var n=ad(t*=ld),l=n*ad(e),q=n*od(e),r=od(t),i=id(ud((i=Ip*r-Op*q)*i+(i=Op*l-Dp*r)*i+(i=Dp*q-Ip*l)*i),Dp*l+Ip*q+Op*r);bp+=i,Ep+=i*(Dp+(Dp=l)),zp+=i*(Ip+(Ip=q)),kp+=i*(Op+(Op=r)),ax(Dp,Ip,Op)}function Ax(){rx.point=ix}function cx(){rx.point=hx}function mx(){fx(Pp,Rp),rx.point=ix}function hx(e,t){Pp=e,Rp=t,e*=ld,t*=ld,rx.point=fx;var n=ad(t);Dp=n*ad(e),Ip=n*od(e),Op=od(t),ax(Dp,Ip,Op)}function fx(e,t){e*=ld;var n=ad(t*=ld),l=n*ad(e),q=n*od(e),r=od(t),i=Ip*r-Op*q,a=Op*l-Dp*r,o=Dp*q-Ip*l,s=ud(i*i+a*a+o*o),u=Ad(s),A=s&&-u/s;Tp+=A*i,Cp+=A*a,Lp+=A*o,bp+=u,Ep+=u*(Dp+(Dp=l)),zp+=u*(Ip+(Ip=q)),kp+=u*(Op+(Op=r)),ax(Dp,Ip,Op)}function dx(e){yp=bp=wp=Mp=Sp=Ep=zp=kp=Tp=Cp=Lp=0,qp(e,rx);var t=Tp,n=Cp,l=Lp,q=t*t+n*n+l*l;return q<1e-12&&(t=Ep,n=zp,l=kp,bp<Jf&&(t=wp,n=Mp,l=Sp),(q=t*t+n*n+l*l)<1e-12)?[NaN,NaN]:[id(n,t)*nd,Ad(l/ud(q))*nd]}var px,xx,vx,gx=bd(),_x={sphere:pd,point:pd,lineStart:function(){_x.point=bx,_x.lineEnd=yx},lineEnd:pd,polygonStart:pd,polygonEnd:pd};function yx(){_x.point=_x.lineEnd=pd}function bx(e,t){px=e*=ld,xx=od(t*=ld),vx=ad(t),_x.point=wx}function wx(e,t){e*=ld;var n=od(t*=ld),l=ad(t),q=qd(e-px),r=ad(q),i=l*od(q),a=vx*n-xx*l*r,o=xx*n+vx*l*r;gx.add(id(ud(i*i+a*a),o)),px=e,xx=n,vx=l}var Mx=[null,null],Sx={type:"LineString",coordinates:Mx};function Ex(e,t){return Mx[0]=e,Mx[1]=t,function(e){return gx.reset(),qp(e,_x),+gx}(Sx)}function zx(e){var t=function e(t){if(e.delaunay=null,"object"===typeof(e._data=t)&&"FeatureCollection"===e._data.type&&(e._data=e._data.features),"object"===typeof e._data){var n=e._data.map((function(t){return[e._vx(t),e._vy(t),t]})).filter((function(e){return isFinite(e[0]+e[1])}));e.points=n.map((function(e){return[e[0],e[1]]})),e.valid=n.map((function(e){return e[2]})),e.delaunay=nx(e.points)}return e};return t._vx=function(e){return"object"==typeof e&&"type"in e?dx(e)[0]:0 in e?e[0]:void 0},t._vy=function(e){return"object"==typeof e&&"type"in e?dx(e)[1]:1 in e?e[1]:void 0},t.x=function(e){return e?(t._vx=e,t):t._vx},t.y=function(e){return e?(t._vy=e,t):t._vy},t.polygons=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;var n={type:"FeatureCollection",features:[]};return 0===t.valid.length||(t.delaunay.polygons.forEach((function(e,l){return n.features.push({type:"Feature",geometry:e?{type:"Polygon",coordinates:[[].concat(qx(e),[e[0]]).map((function(e){return t.delaunay.centers[e]}))]}:null,properties:{site:t.valid[l],sitecoordinates:t.points[l],neighbours:t.delaunay.neighbors[l]}})})),1===t.valid.length&&n.features.push({type:"Feature",geometry:{type:"Sphere"},properties:{site:t.valid[0],sitecoordinates:t.points[0],neighbours:[]}})),n},t.triangles=function(e){return void 0!==e&&t(e),!!t.delaunay&&{type:"FeatureCollection",features:t.delaunay.triangles.map((function(e,n){return e=e.map((function(e){return t.points[e]})),e.center=t.delaunay.centers[n],e})).filter((function(e){return tx(e)>0})).map((function(e){return{type:"Feature",properties:{circumcenter:e.center},geometry:{type:"Polygon",coordinates:[[].concat(qx(e),[e[0]])]}}}))}},t.links=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;var n=t.delaunay.edges.map((function(e){return Ex(t.points[e[0]],t.points[e[1]])})),l=t.delaunay.urquhart(n);return{type:"FeatureCollection",features:t.delaunay.edges.map((function(e,q){return{type:"Feature",properties:{source:t.valid[e[0]],target:t.valid[e[1]],length:n[q],urquhart:!!l[q]},geometry:{type:"LineString",coordinates:[t.points[e[0]],t.points[e[1]]]}}}))}},t.mesh=function(e){return void 0!==e&&t(e),!!t.delaunay&&{type:"MultiLineString",coordinates:t.delaunay.edges.map((function(e){return[t.points[e[0]],t.points[e[1]]]}))}},t.cellMesh=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;var n,l=t.delaunay,q=l.centers,r=[],i=b(l.polygons);try{for(i.s();!(n=i.n()).done;){var a=n.value;if(a)for(var o=a.length,s=a[o-1],u=a[0],A=0;A<o;s=u,u=a[++A])u>s&&r.push([q[s],q[u]])}}catch(c){i.e(c)}finally{i.f()}return{type:"MultiLineString",coordinates:r}},t._found=void 0,t.find=function(e,n,l){if(t._found=t.delaunay.find(e,n,t._found),!l||Ex([e,n],t.points[t._found])<l)return t._found},t.hull=function(e){void 0!==e&&t(e);var n=t.delaunay.hull,l=t.points;return 0===n.length?null:{type:"Polygon",coordinates:[[].concat(qx(n.map((function(e){return l[e]}))),[l[n[0]]])]}},e?t(e):t}function kx(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}var Tx=function(e){var t;return 1===e.length&&(t=e,e=function(e,n){return kx(t(e),n)}),{left:function(t,n,l,q){for(null==l&&(l=0),null==q&&(q=t.length);l<q;){var r=l+q>>>1;e(t[r],n)<0?l=r+1:q=r}return l},right:function(t,n,l,q){for(null==l&&(l=0),null==q&&(q=t.length);l<q;){var r=l+q>>>1;e(t[r],n)>0?q=r:l=r+1}return l}}}(kx),Cx=(Tx.right,Tx.left,Array.prototype);Cx.slice,Cx.map,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var Lx="$";function Px(){}function Rx(e,t){var n=new Px;if(e instanceof Px)e.each((function(e,t){n.set(t,e)}));else if(Array.isArray(e)){var l,q=-1,r=e.length;if(null==t)for(;++q<r;)n.set(q,e[q]);else for(;++q<r;)n.set(t(l=e[q],q,e),l)}else if(e)for(var i in e)n.set(i,e[i]);return n}function Dx(){}Px.prototype=Rx.prototype={constructor:Px,has:function(e){return Lx+e in this},get:function(e){return this[Lx+e]},set:function(e,t){return this[Lx+e]=t,this},remove:function(e){var t=Lx+e;return t in this&&delete this[t]},clear:function(){for(var e in this)e[0]===Lx&&delete this[e]},keys:function(){var e=[];for(var t in this)t[0]===Lx&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)t[0]===Lx&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)t[0]===Lx&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)t[0]===Lx&&++e;return e},empty:function(){for(var e in this)if(e[0]===Lx)return!1;return!0},each:function(e){for(var t in this)t[0]===Lx&&e(this[t],t.slice(1),this)}};var Ix=Rx.prototype;function Ox(e,t){var n=new Dx;if(e instanceof Dx)e.each((function(e){n.add(e)}));else if(e){var l=-1,q=e.length;if(null==t)for(;++l<q;)n.add(e[l]);else for(;++l<q;)n.add(t(e[l],l,e))}return n}Dx.prototype=Ox.prototype={constructor:Dx,has:Ix.has,add:function(e){return this[Lx+(e+="")]=e,this},remove:Ix.remove,clear:Ix.clear,values:Ix.keys,size:Ix.size,empty:Ix.empty,each:Ix.each};var Bx=Array.prototype;Bx.map,Bx.slice;function Nx(e){return e.match(/.{6}/g).map((function(e){return"#"+e}))}Nx("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Nx("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),Nx("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),Nx("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");function Ux(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function Fx(e,t){var n=Object.create(e.prototype);for(var l in t)n[l]=t[l];return n}function Hx(){}var Gx=.7,jx=1/Gx,Vx="\\s*([+-]?\\d+)\\s*",Wx="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Qx="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Yx=/^#([0-9a-f]{3,8})$/,Xx=new RegExp("^rgb\\("+[Vx,Vx,Vx]+"\\)$"),Zx=new RegExp("^rgb\\("+[Qx,Qx,Qx]+"\\)$"),Jx=new RegExp("^rgba\\("+[Vx,Vx,Vx,Wx]+"\\)$"),Kx=new RegExp("^rgba\\("+[Qx,Qx,Qx,Wx]+"\\)$"),$x=new RegExp("^hsl\\("+[Wx,Qx,Qx]+"\\)$"),ev=new RegExp("^hsla\\("+[Wx,Qx,Qx,Wx]+"\\)$"),tv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function nv(){return this.rgb().formatHex()}function lv(){return this.rgb().formatRgb()}function qv(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=Yx.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?rv(t):3===n?new ov(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?iv(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?iv(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=Xx.exec(e))?new ov(t[1],t[2],t[3],1):(t=Zx.exec(e))?new ov(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Jx.exec(e))?iv(t[1],t[2],t[3],t[4]):(t=Kx.exec(e))?iv(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=$x.exec(e))?cv(t[1],t[2]/100,t[3]/100,1):(t=ev.exec(e))?cv(t[1],t[2]/100,t[3]/100,t[4]):tv.hasOwnProperty(e)?rv(tv[e]):"transparent"===e?new ov(NaN,NaN,NaN,0):null}function rv(e){return new ov(e>>16&255,e>>8&255,255&e,1)}function iv(e,t,n,l){return l<=0&&(e=t=n=NaN),new ov(e,t,n,l)}function av(e){return e instanceof Hx||(e=qv(e)),e?new ov((e=e.rgb()).r,e.g,e.b,e.opacity):new ov}function ov(e,t,n,l){this.r=+e,this.g=+t,this.b=+n,this.opacity=+l}function sv(){return"#"+Av(this.r)+Av(this.g)+Av(this.b)}function uv(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function Av(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function cv(e,t,n,l){return l<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new hv(e,t,n,l)}function mv(e){if(e instanceof hv)return new hv(e.h,e.s,e.l,e.opacity);if(e instanceof Hx||(e=qv(e)),!e)return new hv;if(e instanceof hv)return e;var t=(e=e.rgb()).r/255,n=e.g/255,l=e.b/255,q=Math.min(t,n,l),r=Math.max(t,n,l),i=NaN,a=r-q,o=(r+q)/2;return a?(i=t===r?(n-l)/a+6*(n<l):n===r?(l-t)/a+2:(t-n)/a+4,a/=o<.5?r+q:2-r-q,i*=60):a=o>0&&o<1?0:i,new hv(i,a,o,e.opacity)}function hv(e,t,n,l){this.h=+e,this.s=+t,this.l=+n,this.opacity=+l}function fv(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}Ux(Hx,qv,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:nv,formatHex:nv,formatHsl:function(){return mv(this).formatHsl()},formatRgb:lv,toString:lv}),Ux(ov,(function(e,t,n,l){return 1===arguments.length?av(e):new ov(e,t,n,null==l?1:l)}),Fx(Hx,{brighter:function(e){return e=null==e?jx:Math.pow(jx,e),new ov(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?Gx:Math.pow(Gx,e),new ov(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:sv,formatHex:sv,formatRgb:uv,toString:uv})),Ux(hv,(function(e,t,n,l){return 1===arguments.length?mv(e):new hv(e,t,n,null==l?1:l)}),Fx(Hx,{brighter:function(e){return e=null==e?jx:Math.pow(jx,e),new hv(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Gx:Math.pow(Gx,e),new hv(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,l=n+(n<.5?n:1-n)*t,q=2*n-l;return new ov(fv(e>=240?e-240:e+120,q,l),fv(e,q,l),fv(e<120?e+240:e-120,q,l),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));var dv=Math.PI/180,pv=180/Math.PI,xv=-.14861,vv=1.78277,gv=-.29227,_v=-.90649,yv=1.97294,bv=-1.7884503806,wv=3.5172982438,Mv=-.6557636667999999;function Sv(e){if(e instanceof zv)return new zv(e.h,e.s,e.l,e.opacity);e instanceof ov||(e=av(e));var t=e.r/255,n=e.g/255,l=e.b/255,q=(Mv*l+bv*t-wv*n)/(Mv+bv-wv),r=l-q,i=(yv*(n-q)-gv*r)/_v,a=Math.sqrt(i*i+r*r)/(yv*q*(1-q)),o=a?Math.atan2(i,r)*pv-120:NaN;return new zv(o<0?o+360:o,a,q,e.opacity)}function Ev(e,t,n,l){return 1===arguments.length?Sv(e):new zv(e,t,n,null==l?1:l)}function zv(e,t,n,l){this.h=+e,this.s=+t,this.l=+n,this.opacity=+l}function kv(e){return function(){return e}}function Tv(e,t){return function(n){return e+n*t}}function Cv(e,t){var n=t-e;return n?Tv(e,n):kv(isNaN(e)?t:e)}function Lv(e){return function t(n){function l(t,l){var q=e((t=Ev(t)).h,(l=Ev(l)).h),r=Cv(t.s,l.s),i=Cv(t.l,l.l),a=Cv(t.opacity,l.opacity);return function(e){return t.h=q(e),t.s=r(e),t.l=i(Math.pow(e,n)),t.opacity=a(e),t+""}}return n=+n,l.gamma=t,l}(1)}Ux(zv,Ev,Fx(Hx,{brighter:function(e){return e=null==e?jx:Math.pow(jx,e),new zv(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Gx:Math.pow(Gx,e),new zv(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*dv,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),l=Math.cos(e),q=Math.sin(e);return new ov(255*(t+n*(xv*l+vv*q)),255*(t+n*(gv*l+_v*q)),255*(t+n*(yv*l)),this.opacity)}}));Lv((function(e,t){var n=t-e;return n?Tv(e,n>180||n<-180?n-360*Math.round(n/360):n):kv(isNaN(e)?t:e)}));var Pv=Lv(Cv);Pv(Ev(300,.5,0),Ev(-240,.5,1)),Pv(Ev(-100,.75,.35),Ev(80,1.5,.8)),Pv(Ev(260,.75,.35),Ev(80,1.5,.8)),Ev();function Rv(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}Rv(Nx("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Rv(Nx("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Rv(Nx("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Rv(Nx("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function Dv(e){return Dv=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Dv(e)}function Iv(e,t){return Iv=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Iv(e,t)}function Ov(e,t){if(t&&("object"===typeof t||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Bv(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,l=Dv(e);if(t){var q=Dv(this).constructor;n=Reflect.construct(l,arguments,q)}else n=l.apply(this,arguments);return Ov(this,n)}}function Nv(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||Fv(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Uv(e){return function(e){if(Array.isArray(e))return Hv(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Fv(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Fv(e,t){if(e){if("string"===typeof e)return Hv(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Hv(e,t):void 0}}function Hv(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}function Gv(e,t){return e.map((function(e){var n,l=[];return e.forEach((function(e){if(n){var q=180*TA(e,n)/Math.PI;if(q>t)for(var r=CA(n,e),i=1/Math.ceil(q/t),a=i;a<1;)l.push(r(a)),a+=i}l.push(n=e)})),l}))}function jv(e,t){var n={type:"Polygon",coordinates:e},l=Nv(hf(n),2),q=Nv(l[0],2),r=q[0],i=q[1],a=Nv(l[1],2),o=a[0],s=a[1];if(Math.min(Math.abs(o-r),Math.abs(s-i))<t)return[];var u=r>o||s>=89||i<=-89;return function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.minLng,l=t.maxLng,q=t.minLat,r=t.maxLat,i=Math.round(Math.pow(360/e,2)/Math.PI),a=(1+Math.sqrt(5))/2,o=function(e){return e/a*360%360-180},s=function(e){return Math.acos(2*e/i-1)/Math.PI*180-90},u=function(e){return i*(Math.cos((e+90)*Math.PI/180)+1)/2},A=[void 0!==r?Math.ceil(u(r)):0,void 0!==q?Math.floor(u(q)):i-1],c=void 0===n&&void 0===l?function(){return!0}:void 0===n?function(e){return e<=l}:void 0===l?function(e){return e>=n}:l>=n?function(e){return e>=n&&e<=l}:function(e){return e>=n||e<=l},m=[],h=A[0];h<=A[1];h++){var f=o(h);c(f)&&m.push([f,s(h)])}return m}(t,{minLng:r,maxLng:o,minLat:i,maxLat:s}).filter((function(e){return Vv(e,n,u)}))}function Vv(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?wf(t,e):zh(e,t)}var Wv=window.THREE?window.THREE:{BufferGeometry:Zn,Float32BufferAttribute:Hn},Qv=(new Wv.BufferGeometry).setAttribute?"setAttribute":"addAttribute",Yv=function(e){!function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Iv(e,t)}(n,e);var t=Bv(n);function n(e,l,q,r,i,a,o){var s;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),(s=t.call(this)).type="ConicPolygonBufferGeometry",s.parameters={polygonGeoJson:e,startHeight:l,endHeight:q,closedBottom:r,closedTop:i,includeSides:a,curvatureResolution:o},l=l||0,q=q||1,r=void 0===r||r,i=void 0===i||i,a=void 0===a||a;var u=function(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).resolution,n=void 0===t?1/0:t,l=Gv(e,n),q=ah(l),r=jv(e,n),i=[].concat(Uv(q),Uv(r)),a={type:"Polygon",coordinates:e},o=Nv(hf(a),2),s=Nv(o[0],2),u=s[0],A=s[1],c=Nv(o[1],2),m=c[0],h=c[1],f=u>m||h>=89||A<=-89,d=[];if(f){var p=zx(i).triangles(),x=new Map(i.map((function(e,t){var n=Nv(e,2),l=n[0],q=n[1];return["".concat(l,"-").concat(q),t]})));p.features.forEach((function(e){var t,n=e.geometry.coordinates[0].slice(0,3).reverse(),l=[];if(n.forEach((function(e){var t=Nv(e,2),n=t[0],q=t[1],r="".concat(n,"-").concat(q);x.has(r)&&l.push(x.get(r))})),3===l.length){if(l.some((function(e){return e<q.length}))&&!Vv(e.properties.circumcenter,a,f))return;(t=d).push.apply(t,l)}}))}else if(r.length)!function(){for(var e=gh.from(i),t=function(t,n){var l,r=[2,1,0].map((function(n){return e.triangles[t+n]})),o=r.map((function(e){return i[e]}));if(r.some((function(e){return e<q.length}))&&!Vv([0,1].map((function(e){return oh(o,(function(t){return t[e]}))})),a,f))return"continue";(l=d).push.apply(l,Uv(r))},n=0,l=e.triangles.length;n<l;n+=3)t(n)}();else{var v=Xu().flatten(l),g=v.vertices,_=v.holes,y=void 0===_?[]:_;d=Xu()(g,y,2)}return{contour:l,triangles:{points:i,indices:d}}}(e,{resolution:o=o||5}),A=u.contour,c=u.triangles,m=[],h=[],f=0,d=function(e){var t=Math.round(m.length/3),n=h.length;m=m.concat(e.vertices),h=h.concat(t?e.indices.map((function(e){return e+t})):e.indices),s.addGroup(n,h.length-n,f++)};function p(e,t){var n=e.map((function(e){return e.map((function(e){var n=Nv(e,2),l=n[0];return function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=(90-e)*Math.PI/180,q=(90-t)*Math.PI/180;return[n*Math.sin(l)*Math.cos(q),n*Math.cos(l),n*Math.sin(l)*Math.sin(q)]}(n[1],l,t)}))}));return Xu().flatten(n)}function x(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return{indices:t?c.indices:c.indices.slice().reverse(),vertices:p([c.points],e).vertices}}return a&&d(function(){for(var e=p(A,l),t=e.vertices,n=e.holes,r=p(A,q).vertices,i=ah([r,t]),a=Math.round(r.length/3),o=new Set(n),s=0,u=[],c=0;c<a;c++){var m=c+1;if(m===a)m=s;else if(o.has(m)){var h=m;m=s,s=h}u.push(c,c+a,m+a),u.push(m+a,m,c)}return{indices:u,vertices:i}}()),r&&d(x(l,!1)),i&&d(x(q,!0)),s.setIndex(h),s[Qv]("position",new Wv.Float32BufferAttribute(m,3)),s.computeVertexNormals(),s}return n}(Wv.BufferGeometry);var Xv=function(e){var t,n="undefined"!==typeof(e=e||{})?e:{},l={};for(t in n)n.hasOwnProperty(t)&&(l[t]=n[t]);var q,r=[],i="";document.currentScript&&(i=document.currentScript.src),i=0!==i.indexOf("blob:")?i.substr(0,i.lastIndexOf("/")+1):"",q=function(e,t,n){var l=new XMLHttpRequest;l.open("GET",e,!0),l.responseType="arraybuffer",l.onload=function(){if(200==l.status||0==l.status&&l.response)t(l.response);else{var q=X(e);q?t(q.buffer):n()}},l.onerror=n,l.send(null)};var a=n.print||console.log.bind(console),o=n.printErr||console.warn.bind(console);for(t in l)l.hasOwnProperty(t)&&(n[t]=l[t]);l=null,n.arguments&&(r=n.arguments);var s=0,u=function(){return s};var A=!1;function c(e){var t,l=n["_"+e];return t="Cannot call unknown function "+e+", make sure it is exported",l||oe("Assertion failed: "+t),l}function m(e,t,n,l,q){var r={string:function(e){var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,l){if(!(l>0))return 0;for(var q=n,r=n+l-1,i=0;i<e.length;++i){var a=e.charCodeAt(i);if(a>=55296&&a<=57343)a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i);if(a<=127){if(n>=r)break;t[n++]=a}else if(a<=2047){if(n+1>=r)break;t[n++]=192|a>>6,t[n++]=128|63&a}else if(a<=65535){if(n+2>=r)break;t[n++]=224|a>>12,t[n++]=128|a>>6&63,t[n++]=128|63&a}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63,t[n++]=128|a>>6&63,t[n++]=128|63&a}}t[n]=0})(e,x,t,n)})(e,t=ee(n),n)}return t},array:function(e){var t=ee(e.length);return function(e,t){p.set(e,t)}(e,t),t}};var i=c(e),a=[],o=0;if(l)for(var s=0;s<l.length;s++){var u=r[n[s]];u?(0===o&&(o=ne()),a[s]=u(l[s])):a[s]=l[s]}var A=i.apply(null,a);return A=function(e){return"string"===t?f(e):"boolean"===t?Boolean(e):e}(A),0!==o&&te(o),A}var h="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;function f(e,t){return e?function(e,t,n){for(var l=t+n,q=t;e[q]&&!(q>=l);)++q;if(q-t>16&&e.subarray&&h)return h.decode(e.subarray(t,q));for(var r="";t<q;){var i=e[t++];if(128&i){var a=63&e[t++];if(192!=(224&i)){var o=63&e[t++];if((i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])<65536)r+=String.fromCharCode(i);else{var s=i-65536;r+=String.fromCharCode(55296|s>>10,56320|1023&s)}}else r+=String.fromCharCode((31&i)<<6|a)}else r+=String.fromCharCode(i)}return r}(x,e,t):""}var d,p,x,v,g,_,y;"undefined"!==typeof TextDecoder&&new TextDecoder("utf-16le");function b(e,t){return e%t>0&&(e+=t-e%t),e}function w(e){d=e,n.HEAP8=p=new Int8Array(e),n.HEAP16=v=new Int16Array(e),n.HEAP32=g=new Int32Array(e),n.HEAPU8=x=new Uint8Array(e),n.HEAPU16=new Uint16Array(e),n.HEAPU32=new Uint32Array(e),n.HEAPF32=_=new Float32Array(e),n.HEAPF64=y=new Float64Array(e)}var M=n.TOTAL_MEMORY||33554432;function S(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var l=t.func;"number"===typeof l?void 0===t.arg?n.dynCall_v(l):n.dynCall_vi(l,t.arg):l(void 0===t.arg?null:t.arg)}else t()}}M=(d=n.buffer?n.buffer:new ArrayBuffer(M)).byteLength,w(d),g[6004]=5266928;var E=[],z=[],k=[],T=[];var C=Math.abs,L=Math.ceil,P=Math.floor,R=Math.min,D=0,I=null,O=null;n.preloadedImages={},n.preloadedAudios={};var B,N,U=null,F="data:application/octet-stream;base64,";function H(e){return String.prototype.startsWith?e.startsWith(F):0===e.indexOf(F)}U="data:application/octet-stream;base64,";function G(e){return e}function j(e){return e.replace(/\b__Z[\w\d_]+/g,(function(e){return e===e?e:e+" ["+e+"]"}))}function V(){var e=new Error;if(!e.stack){try{throw new Error(0)}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}function W(){return p.length}function Q(e){try{var t=new ArrayBuffer(e);if(t.byteLength!=e)return;return new Int8Array(t).set(p),$(t),w(t),1}catch(n){}}var Y="function"===typeof atob?atob:function(e){var t,n,l,q,r,i,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",s=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{t=a.indexOf(e.charAt(s++))<<2|(q=a.indexOf(e.charAt(s++)))>>4,n=(15&q)<<4|(r=a.indexOf(e.charAt(s++)))>>2,l=(3&r)<<6|(i=a.indexOf(e.charAt(s++))),o+=String.fromCharCode(t),64!==r&&(o+=String.fromCharCode(n)),64!==i&&(o+=String.fromCharCode(l))}while(s<e.length);return o};function X(e){if(H(e))return function(e){try{for(var t=Y(e),n=new Uint8Array(t.length),l=0;l<t.length;++l)n[l]=t.charCodeAt(l);return n}catch(q){throw new Error("Converting base64 string to bytes failed.")}}(e.slice(F.length))}var Z,J={a:oe,b:function(e){s=e},c:u,d:function(e,t,n,l){oe("Assertion failed: "+f(e)+", at: "+[t?f(t):"unknown filename",n,l?f(l):"unknown function"])},e:function(e){return n.___errno_location&&(g[n.___errno_location()>>2]=e),e},f:W,g:function(e,t,n){x.set(x.subarray(t,t+n),e)},h:function(e){var t=W(),n=16777216,l=2130706432;if(e>l)return!1;for(var q=Math.max(t,16777216);q<e;)q=q<=536870912?b(2*q,n):Math.min(b((3*q+2147483648)/4,n),l);return!!Q(q)},i:function(e){oe("OOM")},j:G,k:j,l:Q,m:V,n:function(){var e=V();return n.extraStackTrace&&(e+="\n"+n.extraStackTrace()),j(e)},o:24032,p:24016},K=function(e,t,n){var l=new e.Int8Array(n),q=new e.Int32Array(n),r=(new e.Uint8Array(n),new e.Float32Array(n),new e.Float64Array(n)),i=0|t.p,a=e.Math.floor,o=e.Math.abs,s=e.Math.sqrt,u=e.Math.pow,A=e.Math.cos,c=e.Math.sin,m=e.Math.tan,h=e.Math.acos,f=e.Math.asin,d=e.Math.atan,p=e.Math.atan2,x=e.Math.ceil,v=e.Math.imul,g=e.Math.min,_=e.Math.clz32,y=t.b,b=t.c,w=t.d,M=t.e,S=t.f,E=t.g,z=t.h,k=t.i,T=24048;function C(e,t,n,l){var q,r;0|L(e|=0,t|=0,n|=0,l|=0,0)&&(kt(0|l,0,(r=1+(0|v(3*n|0,n+1|0))|0)<<3|0),(q=0|vt(r,4))&&(P(e,t,n,l,q,r,0),xt(q)))}function L(e,t,n,l,r){e|=0,t|=0,n|=0,r|=0;var i,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0;if(i=T,T=T+16|0,h=i,q[(a=l|=0)>>2]=e,q[a+4>>2]=t,(a=0!=(0|r))&&(q[r>>2]=0),0|Re(e,t))return T=i,0|(h=1);q[h>>2]=0;e:do{if((0|n)>=1)if(a)for(A=0,c=1,m=1,o=0,a=e;;){if(!(o|A)){if(0==(0|(a=0|R(a,t,4,h)))&0==(0|(t=0|b()))){a=2;break e}if(0|Re(a,t)){a=1;break e}}if(0==(0|(a=0|R(a,t,0|q[16+(A<<2)>>2],h)))&0==(0|(t=0|b()))){a=2;break e}if(q[(e=l+(m<<3)|0)>>2]=a,q[e+4>>2]=t,q[r+(m<<2)>>2]=c,e=(0|(o=o+1|0))==(0|c),u=6==(0|(s=A+1|0)),0|Re(a,t)){a=1;break e}if((0|(c=c+(u&e&1)|0))>(0|n)){a=0;break}A=e?u?0:s:A,m=m+1|0,o=e?0:o}else for(A=0,c=1,m=1,o=0,a=e;;){if(!(o|A)){if(0==(0|(a=0|R(a,t,4,h)))&0==(0|(t=0|b()))){a=2;break e}if(0|Re(a,t)){a=1;break e}}if(0==(0|(a=0|R(a,t,0|q[16+(A<<2)>>2],h)))&0==(0|(t=0|b()))){a=2;break e}if(q[(e=l+(m<<3)|0)>>2]=a,q[e+4>>2]=t,e=(0|(o=o+1|0))==(0|c),u=6==(0|(s=A+1|0)),0|Re(a,t)){a=1;break e}if((0|(c=c+(u&e&1)|0))>(0|n)){a=0;break}A=e?u?0:s:A,m=m+1|0,o=e?0:o}else a=0}while(0);return T=i,0|(h=a)}function P(e,t,n,l,r,i,a){n|=0,l|=0,r|=0,i|=0,a|=0;var o,s,u=0,A=0,c=0,m=0,h=0;if(s=T,T=T+16|0,o=s,0==(0|(e|=0))&0==(0|(t|=0)))T=s;else{if(u=0|bt(0|e,0|t,0|i,((0|i)<0)<<31>>31|0),b(),!(0==(0|(h=0|q[(m=A=l+(u<<3)|0)>>2]))&0==(0|(m=0|q[m+4>>2]))|(c=(0|h)==(0|e)&(0|m)==(0|t))))do{c=(0|(m=0|q[(h=A=l+((u=(u+1|0)%(0|i)|0)<<3)|0)>>2]))==(0|e)&(0|(h=0|q[h+4>>2]))==(0|t)}while(!(0==(0|m)&0==(0|h)|c));u=r+(u<<2)|0,c&&(0|q[u>>2])<=(0|a)||(q[(h=A)>>2]=e,q[h+4>>2]=t,q[u>>2]=a,(0|a)>=(0|n)||(h=a+1|0,q[o>>2]=0,P(m=0|R(e,t,2,o),0|b(),n,l,r,i,h),q[o>>2]=0,P(m=0|R(e,t,3,o),0|b(),n,l,r,i,h),q[o>>2]=0,P(m=0|R(e,t,1,o),0|b(),n,l,r,i,h),q[o>>2]=0,P(m=0|R(e,t,5,o),0|b(),n,l,r,i,h),q[o>>2]=0,P(m=0|R(e,t,4,o),0|b(),n,l,r,i,h),q[o>>2]=0,P(m=0|R(e,t,6,o),0|b(),n,l,r,i,h))),T=s}}function R(e,t,n,l){e|=0,t|=0,n|=0;var r,i,a=0,o=0,s=0,u=0,A=0,c=0,m=0;if((0|q[(l|=0)>>2])>0){a=0;do{n=0|oe(n),a=a+1|0}while((0|a)<(0|q[l>>2]))}r=0|wt(0|e,0|t,45),b(),i=127&r,o=0|De(e,t),a=0|wt(0|e,0|t,52),b(),a&=15;e:do{if(a)for(;;){if(c=0|wt(0|e,0|t,0|(A=3*(15-a|0)|0)),b(),c&=7,m=0==(0|Ue(a)),a=a+-1|0,u=0|Mt(7,0,0|A),t&=~(0|b()),e=(A=0|Mt(0|q[(m?464:48)+(28*c|0)+(n<<2)>>2],0,0|A))|e&~u,t|=0|b(),!(n=0|q[(m?672:256)+(28*c|0)+(n<<2)>>2])){n=0;break e}if(!a){s=6;break}}else s=6}while(0);6==(0|s)&&(e|=c=0|Mt(0|(m=0|q[880+(28*i|0)+(n<<2)>>2]),0,45),t=0|b()|-1040385&t,n=0|q[4304+(28*i|0)+(n<<2)>>2],127==(127&m|0)&&(m=0|Mt(0|q[880+(28*i|0)+20>>2],0,45),t=0|b()|-1040385&t,n=0|q[4304+(28*i|0)+20>>2],e=0|Oe(m|e,t),t=0|b(),q[l>>2]=1+(0|q[l>>2]))),s=0|wt(0|e,0|t,45),b(),s&=127;e:do{if(0|I(s)){t:do{if(1==(0|De(e,t))){if((0|i)!=(0|s)){if(0|U(s,0|q[7728+(28*i|0)>>2])){e=0|Ne(e,t),o=1,t=0|b();break}e=0|Oe(e,t),o=1,t=0|b();break}switch(0|o){case 5:e=0|Ne(e,t),t=0|b(),q[l>>2]=5+(0|q[l>>2]),o=0;break t;case 3:e=0|Oe(e,t),t=0|b(),q[l>>2]=1+(0|q[l>>2]),o=0;break t;default:return m=0,y(0|(c=0)),0|m}}else o=0}while(0);if((0|n)>0){a=0;do{e=0|Ie(e,t),t=0|b(),a=a+1|0}while((0|a)!=(0|n))}if((0|i)!=(0|s)){if(!(0|O(s))){if(0!=(0|o)|5!=(0|De(e,t)))break;q[l>>2]=1+(0|q[l>>2]);break}switch(127&r){case 8:case 118:break e}3!=(0|De(e,t))&&(q[l>>2]=1+(0|q[l>>2]))}}else if((0|n)>0){a=0;do{e=0|Oe(e,t),t=0|b(),a=a+1|0}while((0|a)!=(0|n))}}while(0);return q[l>>2]=((0|q[l>>2])+n|0)%6|0,m=e,y(0|(c=t)),0|m}function D(e,t,n,l,i,a){t|=0,n|=0,l|=0,i|=0,a|=0;var o,s,u,A,c,m,h,f,d,p=0,x=0,v=0,g=0,_=0,y=0,w=0,M=0,S=0,E=0,z=0,k=0,C=0,L=0;if(d=T,T=T+48|0,m=d+32|0,h=d+16|0,f=d,(0|(p=0|q[(e|=0)>>2]))<=0)return T=d,0|(k=0);o=e+4|0,s=m+8|0,u=h+8|0,A=f+8|0,c=((0|t)<0)<<31>>31,z=0;e:for(;;){S=(x=0|q[o>>2])+(z<<4)|0,q[m>>2]=q[S>>2],q[m+4>>2]=q[S+4>>2],q[m+8>>2]=q[S+8>>2],q[m+12>>2]=q[S+12>>2],(0|z)==(p+-1|0)?(q[h>>2]=q[x>>2],q[h+4>>2]=q[x+4>>2],q[h+8>>2]=q[x+8>>2],q[h+12>>2]=q[x+12>>2]):(S=x+(z+1<<4)|0,q[h>>2]=q[S>>2],q[h+4>>2]=q[S+4>>2],q[h+8>>2]=q[S+8>>2],q[h+12>>2]=q[S+12>>2]),S=0|W(m,h,n);t:do{if((0|S)>0){E=+(0|S),M=0;n:for(;;){L=+(S-M|0),C=+(0|M),r[f>>3]=+r[m>>3]*L/E+ +r[h>>3]*C/E,r[A>>3]=+r[s>>3]*L/E+ +r[u>>3]*C/E,x=0|bt(0|(y=0|Fe(f,n)),0|(w=0|b()),0|t,0|c),b(),g=0|q[(v=p=a+(x<<3)|0)>>2],v=0|q[v+4>>2];l:do{if(0==(0|g)&0==(0|v))k=14;else for(_=0;;){if((0|_)>(0|t)){p=1;break l}if((0|g)==(0|y)&(0|v)==(0|w)){p=7;break l}if(0==(0|(g=0|q[(v=p=a+((x=(x+1|0)%(0|t)|0)<<3)|0)>>2]))&0==(0|(v=0|q[v+4>>2]))){k=14;break}_=_+1|0}}while(0);switch(14==(0|k)&&(k=0,0==(0|y)&0==(0|w)?p=7:(q[p>>2]=y,q[p+4>>2]=w,p=0|q[l>>2],q[(_=i+(p<<3)|0)>>2]=y,q[_+4>>2]=w,q[l>>2]=p+1,p=0)),7&p){case 7:case 0:break;default:break n}if((0|S)<=(0|(M=M+1|0))){k=8;break t}}if(0|p){p=-1,k=20;break e}}else k=8}while(0);if(8==(0|k)&&(k=0),(0|(z=z+1|0))>=(0|(p=0|q[e>>2]))){p=0,k=20;break}}return 20==(0|k)?(T=d,0|p):0}function I(e){return 0|q[7728+(28*(e|=0)|0)+16>>2]}function O(e){return 4==(0|(e|=0))|117==(0|e)|0}function B(e){return 0|q[11152+(216*(0|q[(e|=0)>>2])|0)+(72*(0|q[e+4>>2])|0)+(24*(0|q[e+8>>2])|0)+(q[e+12>>2]<<3)>>2]}function N(e){return 0|q[11152+(216*(0|q[(e|=0)>>2])|0)+(72*(0|q[e+4>>2])|0)+(24*(0|q[e+8>>2])|0)+(q[e+12>>2]<<3)+4>>2]}function U(e,t){return t|=0,(0|q[7728+(28*(e|=0)|0)+20>>2])==(0|t)?0|(t=1):0|(t=(0|q[7728+(28*e|0)+24>>2])==(0|t))}function F(e,t){return 0|q[880+(28*(e|=0)|0)+((t|=0)<<2)>>2]}function H(e,t){return t|=0,(0|q[880+(28*(e|=0)|0)>>2])==(0|t)?0|(t=0):(0|q[880+(28*e|0)+4>>2])==(0|t)?0|(t=1):(0|q[880+(28*e|0)+8>>2])==(0|t)?0|(t=2):(0|q[880+(28*e|0)+12>>2])==(0|t)?0|(t=3):(0|q[880+(28*e|0)+16>>2])==(0|t)?0|(t=4):(0|q[880+(28*e|0)+20>>2])==(0|t)?0|(t=5):0|((0|q[880+(28*e|0)+24>>2])==(0|t)?6:7)}function G(e){return+r[(e|=0)+16>>3]<+r[e+24>>3]|0}function j(e,t){e|=0;var n,l,q=0;return(q=+r[(t|=0)>>3])>=+r[e+8>>3]&&q<=+r[e>>3]?(n=+r[e+16>>3],q=+r[e+24>>3],t=(l=+r[t+8>>3])>=q,e=l<=n&1,n<q?t&&(e=1):t||(e=0),0|(t=0!=(0|e))):0|(t=0)}function V(e,t){e|=0,t|=0;var n,l,i,a,s,u,A=0,c=0;a=T,T=T+288|0,n=a+264|0,l=a+96|0,c=(A=i=a)+96|0;do{q[A>>2]=0,A=A+4|0}while((0|A)<(0|c));return We(t,i),je(c=0|q[(A=i)>>2],A=0|q[A+4>>2],n),Ve(c,A,l),s=+ze(n,l+8|0),r[n>>3]=+r[e>>3],r[(A=n+8|0)>>3]=+r[e+16>>3],r[l>>3]=+r[e+8>>3],r[(c=l+8|0)>>3]=+r[e+24>>3],u=+ze(n,l),c=~~+x(+u*u/+St(+ +o(+(+r[A>>3]-+r[c>>3])/(+r[n>>3]-+r[l>>3])),3)/(s*(2.59807621135*s)*.8)),T=a,0|(0==(0|c)?1:c)}function W(e,t,n){e|=0,t|=0,n|=0;var l,r,i,a,o,s=0,u=0;a=T,T=T+288|0,l=a+264|0,r=a+96|0,u=(s=i=a)+96|0;do{q[s>>2]=0,s=s+4|0}while((0|s)<(0|u));return We(n,i),je(s=0|q[(u=i)>>2],u=0|q[u+4>>2],l),Ve(s,u,r),o=+ze(l,r+8|0),u=~~+x(+ +ze(e,t)/(2*o)),T=a,0|(0==(0|u)?1:u)}function Q(e,t,n,l){t|=0,n|=0,l|=0,q[(e|=0)>>2]=t,q[e+4>>2]=n,q[e+8>>2]=l}function Y(e,t){e|=0;var n,l,i,a,s=0,u=0,A=0,c=0,m=0,h=0,f=0;q[(a=(t|=0)+8|0)>>2]=0,l=+r[e>>3],c=+o(+l),i=+r[e+8>>3],c+=.5*(m=+o(+i)/.8660254037844386),c-=+(0|(s=~~c)),m-=+(0|(e=~~m));do{if(c<.5){if(c<.3333333333333333){if(q[t>>2]=s,m<.5*(c+1)){q[t+4>>2]=e;break}e=e+1|0,q[t+4>>2]=e;break}if(e=(1&!(m<(f=1-c)))+e|0,q[t+4>>2]=e,f<=m&m<2*c){s=s+1|0,q[t>>2]=s;break}q[t>>2]=s;break}if(!(c<.6666666666666666)){if(s=s+1|0,q[t>>2]=s,m<.5*c){q[t+4>>2]=e;break}e=e+1|0,q[t+4>>2]=e;break}if(m<1-c){if(q[t+4>>2]=e,2*c-1<m){q[t>>2]=s;break}}else e=e+1|0,q[t+4>>2]=e;s=s+1|0,q[t>>2]=s}while(0);do{if(l<0){if(1&e){s=~~(+(0|s)-(2*(+((h=0|gt(0|s,((0|s)<0)<<31>>31|0,0|(h=(e+1|0)/2|0),((0|h)<0)<<31>>31|0))>>>0)+4294967296*+(0|b()))+1)),q[t>>2]=s;break}s=~~(+(0|s)-2*(+((h=0|gt(0|s,((0|s)<0)<<31>>31|0,0|(h=(0|e)/2|0),((0|h)<0)<<31>>31|0))>>>0)+4294967296*+(0|b()))),q[t>>2]=s;break}}while(0);h=t+4|0,i<0&&(s=s-((1|e<<1)/2|0)|0,q[t>>2]=s,e=0-e|0,q[h>>2]=e),u=e-s|0,(0|s)<0?(A=0-s|0,q[h>>2]=u,q[a>>2]=A,q[t>>2]=0,e=u,s=0):A=0,(0|e)<0&&(s=s-e|0,q[t>>2]=s,A=A-e|0,q[a>>2]=A,q[h>>2]=0,e=0),n=s-A|0,u=e-A|0,(0|A)<0&&(q[t>>2]=n,q[h>>2]=u,q[a>>2]=0,e=u,s=n,A=0),(0|(u=(0|A)<(0|(u=(0|e)<(0|s)?e:s))?A:u))<=0||(q[t>>2]=s-u,q[h>>2]=e-u,q[a>>2]=A-u)}function X(e){var t,n=0,l=0,r=0,i=0,a=0;n=0|q[(e|=0)>>2],l=0|q[(t=e+4|0)>>2],(0|n)<0&&(l=l-n|0,q[t>>2]=l,q[(a=e+8|0)>>2]=(0|q[a>>2])-n,q[e>>2]=0,n=0),(0|l)<0?(n=n-l|0,q[e>>2]=n,i=(0|q[(a=e+8|0)>>2])-l|0,q[a>>2]=i,q[t>>2]=0,l=0):(a=i=e+8|0,i=0|q[i>>2]),(0|i)<0&&(n=n-i|0,q[e>>2]=n,l=l-i|0,q[t>>2]=l,q[a>>2]=0,i=0),(0|(r=(0|i)<(0|(r=(0|l)<(0|n)?l:n))?i:r))<=0||(q[e>>2]=n-r,q[t>>2]=l-r,q[a>>2]=i-r)}function Z(e,t){t|=0;var n,l;l=0|q[(e|=0)+8>>2],n=+((0|q[e+4>>2])-l|0),r[t>>3]=+((0|q[e>>2])-l|0)-.5*n,r[t+8>>3]=.8660254037844386*n}function J(e,t,n){e|=0,t|=0,q[(n|=0)>>2]=(0|q[t>>2])+(0|q[e>>2]),q[n+4>>2]=(0|q[t+4>>2])+(0|q[e+4>>2]),q[n+8>>2]=(0|q[t+8>>2])+(0|q[e+8>>2])}function K(e,t,n){e|=0,t|=0,q[(n|=0)>>2]=(0|q[e>>2])-(0|q[t>>2]),q[n+4>>2]=(0|q[e+4>>2])-(0|q[t+4>>2]),q[n+8>>2]=(0|q[e+8>>2])-(0|q[t+8>>2])}function $(e,t){t|=0;var n,l=0;l=0|v(0|q[(e|=0)>>2],t),q[e>>2]=l,n=0|v(0|q[(l=e+4|0)>>2],t),q[l>>2]=n,t=0|v(0|q[(e=e+8|0)>>2],t),q[e>>2]=t}function ee(e){var t,n,l=0,r=0,i=0,a=0,o=0;o=(0|(n=0|q[(e|=0)>>2]))<0,e=(e=(r=(0|(a=((t=(0|(i=(0|q[e+4>>2])-(o?n:0)|0))<0)?0-i|0:0)+((0|q[e+8>>2])-(o?n:0))|0))<0)?0:a)-((i=(0|(r=(0|e)<(0|(r=(0|(l=(t?0:i)-(r?a:0)|0))<(0|(a=(o?0:n)-(t?i:0)-(r?a:0)|0))?l:a))?e:r))>0)?r:0)|0,l=l-(i?r:0)|0;e:do{switch(a-(i?r:0)|0){case 0:switch(0|l){case 0:return 0|(o=0==(0|e)?0:1==(0|e)?1:7);case 1:return 0|(o=0==(0|e)?2:1==(0|e)?3:7);default:break e}case 1:switch(0|l){case 0:return 0|(o=0==(0|e)?4:1==(0|e)?5:7);case 1:if(e)break e;return 0|(e=6);default:break e}}}while(0);return 0|(o=7)}function te(e){var t,n,l=0,r=0,i=0,a=0,o=0;r=0|q[(t=(e|=0)+8|0)>>2],i=0|dt(+((3*(l=(0|q[e>>2])-r|0)|0)-(r=(0|q[(n=e+4|0)>>2])-r|0)|0)/7),q[e>>2]=i,l=0|dt(+((r<<1)+l|0)/7),q[n>>2]=l,q[t>>2]=0,r=l-i|0,(0|i)<0?(o=0-i|0,q[n>>2]=r,q[t>>2]=o,q[e>>2]=0,l=r,i=0,r=o):r=0,(0|l)<0&&(i=i-l|0,q[e>>2]=i,r=r-l|0,q[t>>2]=r,q[n>>2]=0,l=0),o=i-r|0,a=l-r|0,(0|r)<0?(q[e>>2]=o,q[n>>2]=a,q[t>>2]=0,l=a,a=o,r=0):a=i,(0|(i=(0|r)<(0|(i=(0|l)<(0|a)?l:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=l-i,q[t>>2]=r-i)}function ne(e){var t,n,l=0,r=0,i=0,a=0,o=0;r=0|q[(t=(e|=0)+8|0)>>2],i=0|dt(+(((l=(0|q[e>>2])-r|0)<<1)+(r=(0|q[(n=e+4|0)>>2])-r|0)|0)/7),q[e>>2]=i,l=0|dt(+((3*r|0)-l|0)/7),q[n>>2]=l,q[t>>2]=0,r=l-i|0,(0|i)<0?(o=0-i|0,q[n>>2]=r,q[t>>2]=o,q[e>>2]=0,l=r,i=0,r=o):r=0,(0|l)<0&&(i=i-l|0,q[e>>2]=i,r=r-l|0,q[t>>2]=r,q[n>>2]=0,l=0),o=i-r|0,a=l-r|0,(0|r)<0?(q[e>>2]=o,q[n>>2]=a,q[t>>2]=0,l=a,a=o,r=0):a=i,(0|(i=(0|r)<(0|(i=(0|l)<(0|a)?l:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=l-i,q[t>>2]=r-i)}function le(e){var t,n,l,r=0,i=0,a=0,o=0;r=0|q[(e|=0)>>2],i=0|q[(n=e+4|0)>>2],a=0|q[(l=e+8|0)>>2],o=i+(3*r|0)|0,q[e>>2]=o,i=a+(3*i|0)|0,q[n>>2]=i,r=(3*a|0)+r|0,q[l>>2]=r,a=i-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=a,q[l>>2]=r,q[e>>2]=0,i=a,a=0):a=o,(0|i)<0&&(a=a-i|0,q[e>>2]=a,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=a-r|0,o=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=o,q[l>>2]=0,a=t,r=0):o=i,(0|(i=(0|r)<(0|(i=(0|o)<(0|a)?o:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=o-i,q[l>>2]=r-i)}function qe(e){var t,n,l,r=0,i=0,a=0,o=0;o=0|q[(e|=0)>>2],a=(3*(r=0|q[(n=e+4|0)>>2])|0)+o|0,o=(i=0|q[(l=e+8|0)>>2])+(3*o|0)|0,q[e>>2]=o,q[n>>2]=a,r=(3*i|0)+r|0,q[l>>2]=r,i=a-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=i,q[l>>2]=r,q[e>>2]=0,o=0):i=a,(0|i)<0&&(o=o-i|0,q[e>>2]=o,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=o-r|0,a=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=a,q[l>>2]=0,o=t,r=0):a=i,(0|(i=(0|r)<(0|(i=(0|a)<(0|o)?a:o))?r:i))<=0||(q[e>>2]=o-i,q[n>>2]=a-i,q[l>>2]=r-i)}function re(e,t){e|=0;var n,l,r,i=0,a=0,o=0;((t|=0)+-1|0)>>>0>=6||(o=(0|q[15472+(12*t|0)>>2])+(0|q[e>>2])|0,q[e>>2]=o,r=e+4|0,a=(0|q[15472+(12*t|0)+4>>2])+(0|q[r>>2])|0,q[r>>2]=a,l=e+8|0,t=(0|q[15472+(12*t|0)+8>>2])+(0|q[l>>2])|0,q[l>>2]=t,i=a-o|0,(0|o)<0?(t=t-o|0,q[r>>2]=i,q[l>>2]=t,q[e>>2]=0,a=0):(i=a,a=o),(0|i)<0&&(a=a-i|0,q[e>>2]=a,t=t-i|0,q[l>>2]=t,q[r>>2]=0,i=0),n=a-t|0,o=i-t|0,(0|t)<0?(q[e>>2]=n,q[r>>2]=o,q[l>>2]=0,a=n,t=0):o=i,(0|(i=(0|t)<(0|(i=(0|o)<(0|a)?o:a))?t:i))<=0||(q[e>>2]=a-i,q[r>>2]=o-i,q[l>>2]=t-i))}function ie(e){var t,n,l,r=0,i=0,a=0,o=0;o=0|q[(e|=0)>>2],a=(r=0|q[(n=e+4|0)>>2])+o|0,o=(i=0|q[(l=e+8|0)>>2])+o|0,q[e>>2]=o,q[n>>2]=a,r=i+r|0,q[l>>2]=r,i=a-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=i,q[l>>2]=r,q[e>>2]=0,a=0):(i=a,a=o),(0|i)<0&&(a=a-i|0,q[e>>2]=a,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=a-r|0,o=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=o,q[l>>2]=0,a=t,r=0):o=i,(0|(i=(0|r)<(0|(i=(0|o)<(0|a)?o:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=o-i,q[l>>2]=r-i)}function ae(e){var t,n,l,r=0,i=0,a=0,o=0;r=0|q[(e|=0)>>2],a=0|q[(n=e+4|0)>>2],i=0|q[(l=e+8|0)>>2],o=a+r|0,q[e>>2]=o,a=i+a|0,q[n>>2]=a,r=i+r|0,q[l>>2]=r,i=a-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=i,q[l>>2]=r,q[e>>2]=0,a=0):(i=a,a=o),(0|i)<0&&(a=a-i|0,q[e>>2]=a,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=a-r|0,o=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=o,q[l>>2]=0,a=t,r=0):o=i,(0|(i=(0|r)<(0|(i=(0|o)<(0|a)?o:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=o-i,q[l>>2]=r-i)}function oe(e){switch(0|(e|=0)){case 1:e=5;break;case 5:e=4;break;case 4:e=6;break;case 6:e=2;break;case 2:e=3;break;case 3:e=1}return 0|e}function se(e){switch(0|(e|=0)){case 1:e=3;break;case 3:e=2;break;case 2:e=6;break;case 6:e=4;break;case 4:e=5;break;case 5:e=1}return 0|e}function ue(e){var t,n,l,r=0,i=0,a=0,o=0;r=0|q[(e|=0)>>2],i=0|q[(n=e+4|0)>>2],a=0|q[(l=e+8|0)>>2],o=i+(r<<1)|0,q[e>>2]=o,i=a+(i<<1)|0,q[n>>2]=i,r=(a<<1)+r|0,q[l>>2]=r,a=i-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=a,q[l>>2]=r,q[e>>2]=0,i=a,a=0):a=o,(0|i)<0&&(a=a-i|0,q[e>>2]=a,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=a-r|0,o=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=o,q[l>>2]=0,a=t,r=0):o=i,(0|(i=(0|r)<(0|(i=(0|o)<(0|a)?o:a))?r:i))<=0||(q[e>>2]=a-i,q[n>>2]=o-i,q[l>>2]=r-i)}function Ae(e){var t,n,l,r=0,i=0,a=0,o=0;o=0|q[(e|=0)>>2],a=((r=0|q[(n=e+4|0)>>2])<<1)+o|0,o=(i=0|q[(l=e+8|0)>>2])+(o<<1)|0,q[e>>2]=o,q[n>>2]=a,r=(i<<1)+r|0,q[l>>2]=r,i=a-o|0,(0|o)<0?(r=r-o|0,q[n>>2]=i,q[l>>2]=r,q[e>>2]=0,o=0):i=a,(0|i)<0&&(o=o-i|0,q[e>>2]=o,r=r-i|0,q[l>>2]=r,q[n>>2]=0,i=0),t=o-r|0,a=i-r|0,(0|r)<0?(q[e>>2]=t,q[n>>2]=a,q[l>>2]=0,o=t,r=0):a=i,(0|(i=(0|r)<(0|(i=(0|a)<(0|o)?a:o))?r:i))<=0||(q[e>>2]=o-i,q[n>>2]=a-i,q[l>>2]=r-i)}function ce(e,t){t|=0;var n,l,r,i=0,a=0,o=0;return r=(0|(l=(0|q[(e|=0)>>2])-(0|q[t>>2])|0))<0,n=(0|(a=(0|q[e+4>>2])-(0|q[t+4>>2])-(r?l:0)|0))<0,t=(t=(e=(0|(o=(r?0-l|0:0)+(0|q[e+8>>2])-(0|q[t+8>>2])+(n?0-a|0:0)|0))<0)?0:o)-((a=(0|(e=(0|t)<(0|(e=(0|(i=(n?0:a)-(e?o:0)|0))<(0|(o=(r?0:l)-(n?a:0)-(e?o:0)|0))?i:o))?t:e))>0)?e:0)|0,i=i-(a?e:0)|0,0|((0|(e=(0|(e=o-(a?e:0)|0))>-1?e:0-e|0))>(0|(t=(0|(i=(0|i)>-1?i:0-i|0))>(0|(t=(0|t)>-1?t:0-t|0))?i:t))?e:t)}function me(e,t){t|=0;var n;n=0|q[(e|=0)+8>>2],q[t>>2]=(0|q[e>>2])-n,q[t+4>>2]=(0|q[e+4>>2])-n}function he(e,t){t|=0;var n,l,r,i=0,a=0,o=0;a=0|q[(e|=0)>>2],q[t>>2]=a,e=0|q[e+4>>2],q[(l=t+4|0)>>2]=e,q[(r=t+8|0)>>2]=0,i=e-a|0,(0|a)<0?(e=0-a|0,q[l>>2]=i,q[r>>2]=e,q[t>>2]=0,a=0):(i=e,e=0),(0|i)<0&&(a=a-i|0,q[t>>2]=a,e=e-i|0,q[r>>2]=e,q[l>>2]=0,i=0),n=a-e|0,o=i-e|0,(0|e)<0?(q[t>>2]=n,q[l>>2]=o,q[r>>2]=0,i=o,o=n,e=0):o=a,(0|(a=(0|e)<(0|(a=(0|i)<(0|o)?i:o))?e:a))<=0||(q[t>>2]=o-a,q[l>>2]=i-a,q[r>>2]=e-a)}function fe(e){var t,n,l,r;n=(r=0|q[(t=(e|=0)+8|0)>>2])-(0|q[e>>2])|0,q[e>>2]=n,e=(0|q[(l=e+4|0)>>2])-r|0,q[l>>2]=e,q[t>>2]=0-(e+n)}function de(e){var t,n,l=0,r=0,i=0,a=0,o=0;l=0-(r=0|q[(e|=0)>>2])|0,q[e>>2]=l,q[(t=e+8|0)>>2]=0,a=(i=0|q[(n=e+4|0)>>2])+r|0,(0|r)>0?(q[n>>2]=a,q[t>>2]=r,q[e>>2]=0,l=0,i=a):r=0,(0|i)<0?(o=l-i|0,q[e>>2]=o,r=r-i|0,q[t>>2]=r,q[n>>2]=0,a=o-r|0,l=0-r|0,(0|r)<0?(q[e>>2]=a,q[n>>2]=l,q[t>>2]=0,i=l,r=0):(i=0,a=o)):a=l,(0|(l=(0|r)<(0|(l=(0|i)<(0|a)?i:a))?r:l))<=0||(q[e>>2]=a-l,q[n>>2]=i-l,q[t>>2]=r-l)}function pe(e,t,n,l){t|=0,n|=0,l|=0;var i,a=0,o=0,s=0,u=0;if(i=T,T=T+32|0,function(e,t){t|=0;var n=0,l=0,q=0;n=+r[(e=e|0)>>3],l=+A(+n),n=+c(+n),r[t+16>>3]=n,n=+r[e+8>>3],q=l*+A(+n),r[t>>3]=q,n=l*+c(+n),r[t+8>>3]=n}(e|=0,o=i),q[n>>2]=0,a=+ot(15888,o),(s=+ot(15912,o))<a&&(q[n>>2]=1,a=s),(s=+ot(15936,o))<a&&(q[n>>2]=2,a=s),(s=+ot(15960,o))<a&&(q[n>>2]=3,a=s),(s=+ot(15984,o))<a&&(q[n>>2]=4,a=s),(s=+ot(16008,o))<a&&(q[n>>2]=5,a=s),(s=+ot(16032,o))<a&&(q[n>>2]=6,a=s),(s=+ot(16056,o))<a&&(q[n>>2]=7,a=s),(s=+ot(16080,o))<a&&(q[n>>2]=8,a=s),(s=+ot(16104,o))<a&&(q[n>>2]=9,a=s),(s=+ot(16128,o))<a&&(q[n>>2]=10,a=s),(s=+ot(16152,o))<a&&(q[n>>2]=11,a=s),(s=+ot(16176,o))<a&&(q[n>>2]=12,a=s),(s=+ot(16200,o))<a&&(q[n>>2]=13,a=s),(s=+ot(16224,o))<a&&(q[n>>2]=14,a=s),(s=+ot(16248,o))<a&&(q[n>>2]=15,a=s),(s=+ot(16272,o))<a&&(q[n>>2]=16,a=s),(s=+ot(16296,o))<a&&(q[n>>2]=17,a=s),(s=+ot(16320,o))<a&&(q[n>>2]=18,a=s),(s=+ot(16344,o))<a&&(q[n>>2]=19,a=s),(s=+h(+(1-.5*a)))<1e-16)return q[l>>2]=0,q[l+4>>2]=0,q[l+8>>2]=0,q[l+12>>2]=0,void(T=i);if(n=0|q[n>>2],a=+Se((a=+r[16368+(24*n|0)>>3])-+Se(+function(e,t){e|=0;var n=0,l=0,q=0,i=0,a=0;return i=+r[(t=t|0)>>3],l=+A(+i),q=+r[t+8>>3]-+r[e+8>>3],a=l*+c(+q),n=+r[e>>3],+ +p(+a,+(+c(+i)*+A(+n)-+A(+q)*(l*+c(+n))))}(15568+(n<<4)|0,e))),u=0|Ue(t)?+Se(a+-.3334731722518321):a,a=+m(+s)/.381966011250105,(0|t)>0){o=0;do{a*=2.6457513110645907,o=o+1|0}while((0|o)!=(0|t))}s=+A(+u)*a,r[l>>3]=s,u=+c(+u)*a,r[l+8>>3]=u,T=i}function xe(e,t,n,l,i){t|=0,n|=0,l|=0,i|=0;var a=0,u=0;if(a=+function(e){var t=0,n=0;return n=+r[(e=e|0)>>3],t=+r[e+8>>3],+ +s(+(n*n+t*t))}(e|=0),a<1e-16)return t=15568+(t<<4)|0,q[i>>2]=q[t>>2],q[i+4>>2]=q[t+4>>2],q[i+8>>2]=q[t+8>>2],void(q[i+12>>2]=q[t+12>>2]);if(u=+p(+ +r[e+8>>3],+ +r[e>>3]),(0|n)>0){e=0;do{a/=2.6457513110645907,e=e+1|0}while((0|e)!=(0|n))}l?(a/=3,n=0==(0|Ue(n)),a=+d(.381966011250105*(n?a:a/2.6457513110645907))):(a=+d(.381966011250105*a),0|Ue(n)&&(u=+Se(u+.3334731722518321))),function(e,t,n,l){e|=0,t=+t,l|=0;var i=0,a=0,s=0,u=0;if((n=+n)<1e-16)return q[l>>2]=q[e>>2],q[l+4>>2]=q[e+4>>2],q[l+8>>2]=q[e+8>>2],void(q[l+12>>2]=q[e+12>>2]);a=t<0?t+6.283185307179586:t,a=t>=6.283185307179586?a+-6.283185307179586:a;do{if(!(a<1e-16)){if(i=+o(+(a+-3.141592653589793))<1e-16,t=+r[e>>3],i){t-=n,r[l>>3]=t,i=l;break}if(s=+A(+n),n=+c(+n),t=s*+c(+t)+ +A(+a)*(n*+A(+t)),t=+f(+((t=t>1?1:t)<-1?-1:t)),r[l>>3]=t,+o(+(t+-1.5707963267948966))<1e-16)return r[l>>3]=1.5707963267948966,void(r[l+8>>3]=0);if(+o(+(t+1.5707963267948966))<1e-16)return r[l>>3]=-1.5707963267948966,void(r[l+8>>3]=0);if(u=+A(+t),a=n*+c(+a)/u,n=+r[e>>3],t=(s-+c(+t)*+c(+n))/+A(+n)/u,s=a>1?1:a,t=t>1?1:t,(t=+r[e+8>>3]+ +p(+(s<-1?-1:s),+(t<-1?-1:t)))>3.141592653589793)do{t+=-6.283185307179586}while(t>3.141592653589793);if(t<-3.141592653589793)do{t+=6.283185307179586}while(t<-3.141592653589793);return void(r[l+8>>3]=t)}t=+r[e>>3]+n,r[l>>3]=t,i=l}while(0);if(+o(+(t+-1.5707963267948966))<1e-16)return r[i>>3]=1.5707963267948966,void(r[l+8>>3]=0);if(+o(+(t+1.5707963267948966))<1e-16)return r[i>>3]=-1.5707963267948966,void(r[l+8>>3]=0);if((t=+r[e+8>>3])>3.141592653589793)do{t+=-6.283185307179586}while(t>3.141592653589793);if(t<-3.141592653589793)do{t+=6.283185307179586}while(t<-3.141592653589793);r[l+8>>3]=t}(15568+(t<<4)|0,+Se(+r[16368+(24*t|0)>>3]-u),a,i)}function ve(e,t,n){t|=0,n|=0;var l,r;l=T,T=T+16|0,Z((e|=0)+4|0,r=l),xe(r,0|q[e>>2],t,0,n),T=l}function ge(e,t,n,l,i){e|=0,t|=0,n|=0,l|=0,i|=0;var a,o,s,u,A,c,m,h,f,d,p,x,v,g,_,y,b,M,S,E,z,k,C=0,L=0,P=0,R=0,D=0,I=0;if(k=T,T=T+272|0,R=k+240|0,S=k,E=k+224|0,z=k+208|0,p=k+176|0,x=k+160|0,v=k+192|0,g=k+144|0,_=k+128|0,y=k+112|0,b=k+96|0,M=k+80|0,q[(C=k+256|0)>>2]=t,q[R>>2]=q[e>>2],q[R+4>>2]=q[e+4>>2],q[R+8>>2]=q[e+8>>2],q[R+12>>2]=q[e+12>>2],_e(R,C,S),q[i>>2]=0,(0|(R=l+n+(5==(0|l)&1)|0))<=(0|n))T=k;else{o=E+4|0,s=p+4|0,u=n+5|0,A=16848+((a=0|q[C>>2])<<2)|0,c=16928+(a<<2)|0,m=_+8|0,h=y+8|0,f=b+8|0,d=z+4|0,P=n;e:for(;;){L=S+(((0|P)%5|0)<<4)|0,q[z>>2]=q[L>>2],q[z+4>>2]=q[L+4>>2],q[z+8>>2]=q[L+8>>2],q[z+12>>2]=q[L+12>>2];do{}while(2==(0|ye(z,a,0,1)));if((0|P)>(0|n)&0!=(0|Ue(t))){if(q[p>>2]=q[z>>2],q[p+4>>2]=q[z+4>>2],q[p+8>>2]=q[z+8>>2],q[p+12>>2]=q[z+12>>2],Z(o,x),l=0|q[p>>2],C=0|q[17008+(80*l|0)+(q[E>>2]<<2)>>2],q[p>>2]=q[18608+(80*l|0)+(20*C|0)>>2],(0|(L=0|q[18608+(80*l|0)+(20*C|0)+16>>2]))>0){e=0;do{ie(s),e=e+1|0}while((0|e)<(0|L))}switch(L=18608+(80*l|0)+(20*C|0)+4|0,q[v>>2]=q[L>>2],q[v+4>>2]=q[L+4>>2],q[v+8>>2]=q[L+8>>2],$(v,3*(0|q[A>>2])|0),J(s,v,s),X(s),Z(s,g),D=+(0|q[c>>2]),r[_>>3]=3*D,r[m>>3]=0,I=-1.5*D,r[y>>3]=I,r[h>>3]=2.598076211353316*D,r[b>>3]=I,r[f>>3]=-2.598076211353316*D,0|q[17008+(80*(0|q[p>>2])|0)+(q[z>>2]<<2)>>2]){case 1:e=y,l=_;break;case 3:e=b,l=y;break;case 2:e=_,l=b;break;default:e=12;break e}it(x,g,l,e,M),xe(M,0|q[p>>2],a,1,i+8+(q[i>>2]<<4)|0),q[i>>2]=1+(0|q[i>>2])}if((0|P)<(0|u)&&(Z(d,p),xe(p,0|q[z>>2],a,1,i+8+(q[i>>2]<<4)|0),q[i>>2]=1+(0|q[i>>2])),q[E>>2]=q[z>>2],q[E+4>>2]=q[z+4>>2],q[E+8>>2]=q[z+8>>2],q[E+12>>2]=q[z+12>>2],(0|(P=P+1|0))>=(0|R)){e=3;break}}3!=(0|e)?12==(0|e)&&w(22474,22521,581,22531):T=k}}function _e(e,t,n){e|=0,t|=0,n|=0;var l,r=0,i=0,a=0,o=0,s=0;l=T,T=T+128|0,i=l,o=20208,s=(a=r=l+64|0)+60|0;do{q[a>>2]=q[o>>2],a=a+4|0,o=o+4|0}while((0|a)<(0|s));o=20272,s=(a=i)+60|0;do{q[a>>2]=q[o>>2],a=a+4|0,o=o+4|0}while((0|a)<(0|s));r=(s=0==(0|Ue(0|q[t>>2])))?r:i,ue(i=e+4|0),Ae(i),0|Ue(0|q[t>>2])&&(qe(i),q[t>>2]=1+(0|q[t>>2])),q[n>>2]=q[e>>2],J(i,r,t=n+4|0),X(t),q[n+16>>2]=q[e>>2],J(i,r+12|0,t=n+20|0),X(t),q[n+32>>2]=q[e>>2],J(i,r+24|0,t=n+36|0),X(t),q[n+48>>2]=q[e>>2],J(i,r+36|0,t=n+52|0),X(t),q[n+64>>2]=q[e>>2],J(i,r+48|0,n=n+68|0),X(n),T=l}function ye(e,t,n,l){n|=0,l|=0;var r,i,a,o,s,u,A=0,c=0,m=0,h=0,f=0;if(u=T,T=T+32|0,s=u+12|0,i=u,f=(e|=0)+4|0,h=0|q[16928+((t|=0)<<2)>>2],h=(o=0!=(0|l))?3*h|0:h,A=0|q[f>>2],r=0|q[(a=e+8|0)>>2],o){if((0|(A=r+A+(l=0|q[(c=e+12|0)>>2])|0))==(0|h))return T=u,0|(f=1);m=c}else A=r+A+(l=0|q[(m=e+12|0)>>2])|0;if((0|A)<=(0|h))return T=u,0|(f=0);do{if((0|l)>0){if(l=0|q[e>>2],(0|r)>0){c=18608+(80*l|0)+60|0,l=e;break}l=18608+(80*l|0)+40|0,n?(Q(s,h,0,0),K(f,s,i),ae(i),J(i,s,f),c=l,l=e):(c=l,l=e)}else c=18608+(80*(0|q[e>>2])|0)+20|0,l=e}while(0);if(q[l>>2]=q[c>>2],(0|q[(A=c+16|0)>>2])>0){l=0;do{ie(f),l=l+1|0}while((0|l)<(0|q[A>>2]))}return e=c+4|0,q[s>>2]=q[e>>2],q[s+4>>2]=q[e+4>>2],q[s+8>>2]=q[e+8>>2],t=0|q[16848+(t<<2)>>2],$(s,o?3*t|0:t),J(f,s,f),X(f),l=o&&((0|q[a>>2])+(0|q[f>>2])+(0|q[m>>2])|0)==(0|h)?1:2,T=u,0|(f=l)}function be(e,t){e|=0,t|=0;var n=0;do{n=0|ye(e,t,0,1)}while(2==(0|n));return 0|n}function we(e,t,n,l,i){e|=0,t|=0,n|=0,l|=0,i|=0;var a,o,s,u,A,c,m,h,f,d,p,x,v,g,_,y,b,M,S=0,E=0,z=0,k=0,C=0;if(M=T,T=T+240|0,g=M+208|0,_=M,y=M+192|0,b=M+176|0,f=M+160|0,d=M+144|0,p=M+128|0,x=M+112|0,v=M+96|0,q[(S=M+224|0)>>2]=t,q[g>>2]=q[e>>2],q[g+4>>2]=q[e+4>>2],q[g+8>>2]=q[e+8>>2],q[g+12>>2]=q[e+12>>2],Me(g,S,_),q[i>>2]=0,(0|(h=l+n+(6==(0|l)&1)|0))<=(0|n))T=M;else{o=n+6|0,s=16928+((a=0|q[S>>2])<<2)|0,u=d+8|0,A=p+8|0,c=x+8|0,m=y+4|0,E=0,z=n,l=-1;e:for(;;){if(e=_+((S=(0|z)%6|0)<<4)|0,q[y>>2]=q[e>>2],q[y+4>>2]=q[e+4>>2],q[y+8>>2]=q[e+8>>2],q[y+12>>2]=q[e+12>>2],e=E,E=0|ye(y,a,0,1),(0|z)>(0|n)&0!=(0|Ue(t))&&(1!=(0|e)&&(0|q[y>>2])!=(0|l))){switch(Z(_+(((S+5|0)%6|0)<<4)+4|0,b),Z(_+(S<<4)+4|0,f),k=+(0|q[s>>2]),r[d>>3]=3*k,r[u>>3]=0,C=-1.5*k,r[p>>3]=C,r[A>>3]=2.598076211353316*k,r[x>>3]=C,r[c>>3]=-2.598076211353316*k,S=0|q[g>>2],0|q[17008+(80*S|0)+(((0|l)==(0|S)?0|q[y>>2]:l)<<2)>>2]){case 1:e=p,l=d;break;case 3:e=x,l=p;break;case 2:e=d,l=x;break;default:e=8;break e}it(b,f,l,e,v),0|at(b,v)||0|at(f,v)||(xe(v,0|q[g>>2],a,1,i+8+(q[i>>2]<<4)|0),q[i>>2]=1+(0|q[i>>2]))}if((0|z)<(0|o)&&(Z(m,b),xe(b,0|q[y>>2],a,1,i+8+(q[i>>2]<<4)|0),q[i>>2]=1+(0|q[i>>2])),(0|(z=z+1|0))>=(0|h)){e=3;break}l=0|q[y>>2]}3!=(0|e)?8==(0|e)&&w(22557,22521,746,22602):T=M}}function Me(e,t,n){e|=0,t|=0,n|=0;var l,r=0,i=0,a=0,o=0,s=0;l=T,T=T+160|0,i=l,o=20336,s=(a=r=l+80|0)+72|0;do{q[a>>2]=q[o>>2],a=a+4|0,o=o+4|0}while((0|a)<(0|s));o=20416,s=(a=i)+72|0;do{q[a>>2]=q[o>>2],a=a+4|0,o=o+4|0}while((0|a)<(0|s));r=(s=0==(0|Ue(0|q[t>>2])))?r:i,ue(i=e+4|0),Ae(i),0|Ue(0|q[t>>2])&&(qe(i),q[t>>2]=1+(0|q[t>>2])),q[n>>2]=q[e>>2],J(i,r,t=n+4|0),X(t),q[n+16>>2]=q[e>>2],J(i,r+12|0,t=n+20|0),X(t),q[n+32>>2]=q[e>>2],J(i,r+24|0,t=n+36|0),X(t),q[n+48>>2]=q[e>>2],J(i,r+36|0,t=n+52|0),X(t),q[n+64>>2]=q[e>>2],J(i,r+48|0,t=n+68|0),X(t),q[n+80>>2]=q[e>>2],J(i,r+60|0,n=n+84|0),X(n),T=l}function Se(e){var t;return t=(e=+e)<0?e+6.283185307179586:e,+(e>=6.283185307179586?t+-6.283185307179586:t)}function Ee(e,t){return t|=0,+o(+(+r[(e|=0)>>3]-+r[t>>3]))<17453292519943298e-27?0|(t=+o(+(+r[e+8>>3]-+r[t+8>>3]))<17453292519943298e-27):0|(t=0)}function ze(e,t){e|=0;var n,l,q,i=0;return l=+r[(t|=0)>>3],n=+r[e>>3],i=(q=+c(.5*(l-n)))*q+(i=+c(.5*(+r[t+8>>3]-+r[e+8>>3])))*(+A(+l)*+A(+n)*i),2*+p(+ +s(+i),+ +s(+(1-i)))*6371.007180918475}function ke(e,t,n){e|=0,n|=0;var l,q,i,a,o=0,u=0,h=0,f=0,x=0,v=0;return v=+r[(t|=0)>>3],i=+r[e>>3],x=+c(.5*(v-i)),h=+r[t+8>>3],q=+r[e+8>>3],f=+c(.5*(h-q)),l=+A(+i),a=+A(+v),f=2*+p(+ +s(+(f=x*x+f*(a*l*f))),+ +s(+(1-f))),x=+r[n>>3],v=+c(.5*(x-v)),o=+r[n+8>>3],h=+c(.5*(o-h)),u=+A(+x),h=2*+p(+ +s(+(h=v*v+h*(a*u*h))),+ +s(+(1-h))),x=+c(.5*(i-x)),o=+c(.5*(q-o)),o=2*+p(+ +s(+(o=x*x+o*(l*u*o))),+ +s(+(1-o))),4*+d(+ +s(+ +m(.5*(u=.5*(f+h+o)))*+m(.5*(u-f))*+m(.5*(u-h))*+m(.5*(u-o))))}function Te(e,t){return t=0|wt(0|(e|=0),0|(t|=0),45),b(),127&t|0}function Ce(e,t){var n=0,l=0,q=0,r=0,i=0,a=0;if(!(!0&134217728==(-16777216&(t|=0)|0)))return 0|(t=0);if(i=0|wt(0|(e|=0),0|t,45),b(),(i&=127)>>>0>121)return 0|(t=0);n=0|wt(0|e,0|t,52),b(),n&=15;do{if(0|n){for(q=1,l=0;;){if(r=0|wt(0|e,0|t,3*(15-q|0)|0),b(),0!=(0|(r&=7))&(1^l)){if(1==(0|r)&0!=(0|I(i))){a=0,l=13;break}l=1}if(7==(0|r)){a=0,l=13;break}if(!(q>>>0<n>>>0)){l=9;break}q=q+1|0}if(9==(0|l)){if(15!=(0|n))break;return 0|(a=1)}if(13==(0|l))return 0|a}}while(0);for(;;){if(a=0|wt(0|e,0|t,3*(14-n|0)|0),b(),!(7==(7&a|0)&!0)){a=0,l=13;break}if(!(n>>>0<14)){a=1,l=13;break}n=n+1|0}return 13==(0|l)?0|a:0}function Le(e,t,n){n|=0;var l=0,q=0;if(l=0|wt(0|(e|=0),0|(t|=0),52),b(),(0|(l&=15))>=(0|n)){if((0|l)!=(0|n))if(n>>>0<=15){if(e|=q=0|Mt(0|n,0,52),t=0|b()|-15728641&t,(0|l)>(0|n))do{q=0|Mt(7,0,3*(14-n|0)|0),n=n+1|0,e|=q,t=0|b()|t}while((0|n)<(0|l))}else t=0,e=0}else t=0,e=0;return y(0|t),0|e}function Pe(e,t,n,l){n|=0,l|=0;var r,i=0,a=0,o=0,s=0,u=0,A=0;if(o=0|wt(0|(e|=0),0|(t|=0),52),b(),(0|n)<16&(0|(o&=15))<=(0|n)){if((0|o)==(0|n))return q[(n=l)>>2]=e,void(q[n+4>>2]=t);if(r=(0|(u=0|tt(7,n-o|0)))/7|0,s=0|wt(0|e,0|t,45),b(),0|I(127&s)){e:do{if(o)for(a=1;;){if(i=0|wt(0|e,0|t,3*(15-a|0)|0),b(),0|(i&=7))break e;if(!(a>>>0<o>>>0)){i=0;break}a=a+1|0}else i=0}while(0);a=0==(0|i)}else a=0;if(A=0|Mt(o+1|0,0,52),i=0|b()|-15728641&t,Pe(t=(A|e)&~(t=0|Mt(7,0,0|(s=3*(14-o|0)|0))),o=i&~(0|b()),n,l),i=l+(r<<3)|0,!a)return Pe((A=0|Mt(1,0,0|s))|t,0|b()|o,n,i),A=i+(r<<3)|0,Pe((u=0|Mt(2,0,0|s))|t,0|b()|o,n,A),A=A+(r<<3)|0,Pe((u=0|Mt(3,0,0|s))|t,0|b()|o,n,A),A=A+(r<<3)|0,Pe((u=0|Mt(4,0,0|s))|t,0|b()|o,n,A),A=A+(r<<3)|0,Pe((u=0|Mt(5,0,0|s))|t,0|b()|o,n,A),void Pe((u=0|Mt(6,0,0|s))|t,0|b()|o,n,A+(r<<3)|0);a=i+(r<<3)|0,(0|u)>6&&(kt(0|i,0,(A=(a>>>0>(u=i+8|0)>>>0?a:u)+-1+(0-i)|0)+8&-8|0),i=u+(A>>>3<<3)|0),Pe((A=0|Mt(2,0,0|s))|t,0|b()|o,n,i),A=i+(r<<3)|0,Pe((u=0|Mt(3,0,0|s))|t,0|b()|o,n,A),A=A+(r<<3)|0,Pe((u=0|Mt(4,0,0|s))|t,0|b()|o,n,A),A=A+(r<<3)|0,Pe((u=0|Mt(5,0,0|s))|t,0|b()|o,n,A),Pe((u=0|Mt(6,0,0|s))|t,0|b()|o,n,A+(r<<3)|0)}}function Re(e,t){var n=0,l=0,q=0;if(q=0|wt(0|(e|=0),0|(t|=0),45),b(),!(0|I(127&q)))return 0|(q=0);q=0|wt(0|e,0|t,52),b(),q&=15;e:do{if(q)for(l=1;;){if(n=0|wt(0|e,0|t,3*(15-l|0)|0),b(),0|(n&=7))break e;if(!(l>>>0<q>>>0)){n=0;break}l=l+1|0}else n=0}while(0);return 0|(q=0==(0|n)&1)}function De(e,t){var n=0,l=0,q=0;if(q=0|wt(0|(e|=0),0|(t|=0),52),b(),!(q&=15))return 0|(q=0);for(l=1;;){if(n=0|wt(0|e,0|t,3*(15-l|0)|0),b(),0|(n&=7)){l=5;break}if(!(l>>>0<q>>>0)){n=0,l=5;break}l=l+1|0}return 5==(0|l)?0|n:0}function Ie(e,t){var n=0,l=0,q=0,r=0,i=0,a=0,o=0;if(o=0|wt(0|(e|=0),0|(t|=0),52),b(),!(o&=15))return o=e,y(0|(a=t)),0|o;for(a=1,n=0;;){l=0|Mt(7,0,0|(r=3*(15-a|0)|0)),q=0|b(),i=0|wt(0|e,0|t,0|r),b(),e=(r=0|Mt(0|oe(7&i),0,0|r))|e&~l,t=(i=0|b())|t&~q;e:do{if(!n)if(0==(r&l|0)&0==(i&q|0))n=0;else if(l=0|wt(0|e,0|t,52),b(),l&=15){n=1;t:for(;;){switch(i=0|wt(0|e,0|t,3*(15-n|0)|0),b(),7&i){case 1:break t;case 0:break;default:n=1;break e}if(!(n>>>0<l>>>0)){n=1;break e}n=n+1|0}for(n=1;;){if(q=0|wt(0|e,0|t,0|(i=3*(15-n|0)|0)),b(),r=0|Mt(7,0,0|i),t&=~(0|b()),e=e&~r|(i=0|Mt(0|oe(7&q),0,0|i)),t=0|t|b(),!(n>>>0<l>>>0)){n=1;break}n=n+1|0}}else n=1}while(0);if(!(a>>>0<o>>>0))break;a=a+1|0}return y(0|t),0|e}function Oe(e,t){var n=0,l=0,q=0,r=0,i=0;if(l=0|wt(0|(e|=0),0|(t|=0),52),b(),!(l&=15))return l=e,y(0|(n=t)),0|l;for(n=1;i=0|wt(0|e,0|t,0|(r=3*(15-n|0)|0)),b(),q=0|Mt(7,0,0|r),t&=~(0|b()),e=(r=0|Mt(0|oe(7&i),0,0|r))|e&~q,t=0|b()|t,n>>>0<l>>>0;)n=n+1|0;return y(0|t),0|e}function Be(e,t){var n=0,l=0,q=0,r=0,i=0,a=0,o=0;if(o=0|wt(0|(e|=0),0|(t|=0),52),b(),!(o&=15))return o=e,y(0|(a=t)),0|o;for(a=1,n=0;;){l=0|Mt(7,0,0|(r=3*(15-a|0)|0)),q=0|b(),i=0|wt(0|e,0|t,0|r),b(),e=(r=0|Mt(0|se(7&i),0,0|r))|e&~l,t=(i=0|b())|t&~q;e:do{if(!n)if(0==(r&l|0)&0==(i&q|0))n=0;else if(l=0|wt(0|e,0|t,52),b(),l&=15){n=1;t:for(;;){switch(i=0|wt(0|e,0|t,3*(15-n|0)|0),b(),7&i){case 1:break t;case 0:break;default:n=1;break e}if(!(n>>>0<l>>>0)){n=1;break e}n=n+1|0}for(n=1;;){if(r=0|Mt(7,0,0|(q=3*(15-n|0)|0)),i=t&~(0|b()),t=0|wt(0|e,0|t,0|q),b(),e=e&~r|(t=0|Mt(0|se(7&t),0,0|q)),t=0|i|b(),!(n>>>0<l>>>0)){n=1;break}n=n+1|0}}else n=1}while(0);if(!(a>>>0<o>>>0))break;a=a+1|0}return y(0|t),0|e}function Ne(e,t){var n=0,l=0,q=0,r=0,i=0;if(l=0|wt(0|(e|=0),0|(t|=0),52),b(),!(l&=15))return l=e,y(0|(n=t)),0|l;for(n=1;r=0|Mt(7,0,0|(i=3*(15-n|0)|0)),q=t&~(0|b()),t=0|wt(0|e,0|t,0|i),b(),e=(t=0|Mt(0|se(7&t),0,0|i))|e&~r,t=0|b()|q,n>>>0<l>>>0;)n=n+1|0;return y(0|t),0|e}function Ue(e){return 0|(0|(e|=0))%2}function Fe(e,t){e|=0;var n,l;return l=T,T=T+16|0,n=l,(t|=0)>>>0<=15&&2146435072!=(2146435072&q[e+4>>2]|0)&&2146435072!=(2146435072&q[e+8+4>>2]|0)?(!function(e,t,n){var l,q;l=T,T=T+16|0,pe(e|=0,t|=0,n|=0,q=l),Y(q,n+4|0),T=l}(e,t,n),t=0|function(e,t){e|=0;var n,l=0,r=0,i=0,a=0,o=0,s=0,u=0,A=0;if(n=T,T=T+64|0,s=n+40|0,r=n+24|0,i=n+12|0,a=n,Mt(0|(t|=0),0,52),l=134225919|b(),!t)return(0|q[e+4>>2])>2||(0|q[e+8>>2])>2||(0|q[e+12>>2])>2?(s=0,y(0|(o=0)),T=n,0|s):(Mt(0|B(e),0,45),o=0|b()|l,s=-1,y(0|o),T=n,0|s);if(q[s>>2]=q[e>>2],q[s+4>>2]=q[e+4>>2],q[s+8>>2]=q[e+8>>2],q[s+12>>2]=q[e+12>>2],o=s+4|0,(0|t)>0)for(e=-1;q[r>>2]=q[o>>2],q[r+4>>2]=q[o+4>>2],q[r+8>>2]=q[o+8>>2],1&t?(te(o),q[i>>2]=q[o>>2],q[i+4>>2]=q[o+4>>2],q[i+8>>2]=q[o+8>>2],le(i)):(ne(o),q[i>>2]=q[o>>2],q[i+4>>2]=q[o+4>>2],q[i+8>>2]=q[o+8>>2],qe(i)),K(r,i,a),X(a),u=0|Mt(7,0,0|(A=3*(15-t|0)|0)),l&=~(0|b()),e=(A=0|Mt(0|ee(a),0,0|A))|e&~u,l=0|b()|l,(0|t)>1;)t=t+-1|0;else e=-1;e:do{if((0|q[o>>2])<=2&&(0|q[s+8>>2])<=2&&(0|q[s+12>>2])<=2){if(t=0|Mt(0|(r=0|B(s)),0,45),t|=e,e=0|b()|-1040385&l,a=0|N(s),!(0|I(r))){if((0|a)<=0)break;for(i=0;;){if(r=0|wt(0|t,0|e,52),b(),r&=15)for(l=1;s=0|wt(0|t,0|e,0|(A=3*(15-l|0)|0)),b(),u=0|Mt(7,0,0|A),e&=~(0|b()),t=t&~u|(A=0|Mt(0|oe(7&s),0,0|A)),e=0|e|b(),l>>>0<r>>>0;)l=l+1|0;if((0|(i=i+1|0))==(0|a))break e}}i=0|wt(0|t,0|e,52),b(),i&=15;t:do{if(i){l=1;n:for(;;){switch(A=0|wt(0|t,0|e,3*(15-l|0)|0),b(),7&A){case 1:break n;case 0:break;default:break t}if(!(l>>>0<i>>>0))break t;l=l+1|0}if(0|U(r,0|q[s>>2]))for(l=1;u=0|Mt(7,0,0|(s=3*(15-l|0)|0)),A=e&~(0|b()),e=0|wt(0|t,0|e,0|s),b(),t=t&~u|(e=0|Mt(0|se(7&e),0,0|s)),e=0|A|b(),l>>>0<i>>>0;)l=l+1|0;else for(l=1;s=0|wt(0|t,0|e,0|(A=3*(15-l|0)|0)),b(),u=0|Mt(7,0,0|A),e&=~(0|b()),t=t&~u|(A=0|Mt(0|oe(7&s),0,0|A)),e=0|e|b(),l>>>0<i>>>0;)l=l+1|0}}while(0);if((0|a)>0){l=0;do{t=0|Ie(t,e),e=0|b(),l=l+1|0}while((0|l)!=(0|a))}}else t=0,e=0}while(0);return A=t,y(0|(u=e)),T=n,0|A}(n,t),e=0|b()):(e=0,t=0),y(0|e),T=l,0|t}function He(e,t,n){var l,r=0,i=0,a=0;if(l=(n|=0)+4|0,i=0|wt(0|(e|=0),0|(t|=0),52),b(),i&=15,a=0|wt(0|e,0|t,45),b(),r=0==(0|i),0|I(127&a)){if(r)return 0|(a=1);r=1}else{if(r)return 0|(a=0);r=0==(0|q[l>>2])&&0==(0|q[n+8>>2])?0!=(0|q[n+12>>2])&1:1}for(n=1;1&n?le(l):qe(l),a=0|wt(0|e,0|t,3*(15-n|0)|0),b(),re(l,7&a),n>>>0<i>>>0;)n=n+1|0;return 0|r}function Ge(e,t,n){n|=0;var l,r,i=0,a=0,o=0,s=0,u=0,A=0;r=T,T=T+16|0,l=r,A=0|wt(0|(e|=0),0|(t|=0),45),b(),A&=127;e:do{if(0!=(0|I(A))&&(o=0|wt(0|e,0|t,52),b(),0!=(0|(o&=15)))){i=1;t:for(;;){switch(u=0|wt(0|e,0|t,3*(15-i|0)|0),b(),7&u){case 5:break t;case 0:break;default:i=t;break e}if(!(i>>>0<o>>>0)){i=t;break e}i=i+1|0}for(a=1,i=t;s=0|Mt(7,0,0|(t=3*(15-a|0)|0)),u=i&~(0|b()),i=0|wt(0|e,0|i,0|t),b(),e=e&~s|(i=0|Mt(0|se(7&i),0,0|t)),i=0|u|b(),a>>>0<o>>>0;)a=a+1|0}else i=t}while(0);if(u=7728+(28*A|0)|0,q[n>>2]=q[u>>2],q[n+4>>2]=q[u+4>>2],q[n+8>>2]=q[u+8>>2],q[n+12>>2]=q[u+12>>2],0|He(e,i,n)){if(s=n+4|0,q[l>>2]=q[s>>2],q[l+4>>2]=q[s+4>>2],q[l+8>>2]=q[s+8>>2],o=0|wt(0|e,0|i,52),b(),u=15&o,1&o?(qe(s),o=u+1|0):o=u,0|I(A)){e:do{if(u)for(t=1;;){if(a=0|wt(0|e,0|i,3*(15-t|0)|0),b(),0|(a&=7)){i=a;break e}if(!(t>>>0<u>>>0)){i=0;break}t=t+1|0}else i=0}while(0);i=4==(0|i)&1}else i=0;if(0|ye(n,o,i,0)){if(0|I(A))do{}while(0!=(0|ye(n,o,0,0)));(0|o)!=(0|u)&&ne(s)}else(0|o)!=(0|u)&&(q[s>>2]=q[l>>2],q[s+4>>2]=q[l+4>>2],q[s+8>>2]=q[l+8>>2]);T=r}else T=r}function je(e,t,n){n|=0;var l,q;l=T,T=T+16|0,Ge(e|=0,t|=0,q=l),t=0|wt(0|e,0|t,52),b(),ve(q,15&t,n),T=l}function Ve(e,t,n){n|=0;var l,q,r=0,i=0;q=T,T=T+16|0,Ge(e|=0,t|=0,l=q),r=0|wt(0|e,0|t,45),b(),r=0==(0|I(127&r)),i=0|wt(0|e,0|t,52),b(),i&=15;e:do{if(!r){if(0|i)for(r=1;;){if(!(0==((0|Mt(7,0,3*(15-r|0)|0))&e|0)&0==((0|b())&t|0)))break e;if(!(r>>>0<i>>>0))break;r=r+1|0}return ge(l,i,0,5,n),void(T=q)}}while(0);we(l,i,0,6,n),T=q}function We(e,t){t|=0;var n,l=0,r=0,i=0,a=0,o=0,s=0;if(Mt(0|(e|=0),0,52),n=134225919|b(),(0|e)<1){r=0,l=0;do{0|I(r)&&(Mt(0|r,0,45),o=0|n|b(),q[(e=t+(l<<3)|0)>>2]=-1,q[e+4>>2]=o,l=l+1|0),r=r+1|0}while(122!=(0|r))}else{o=0,l=0;do{if(0|I(o)){for(Mt(0|o,0,45),r=1,i=-1,a=0|n|b();i&=~(s=0|Mt(7,0,3*(15-r|0)|0)),a&=~(0|b()),(0|r)!=(0|e);)r=r+1|0;q[(s=t+(l<<3)|0)>>2]=i,q[s+4>>2]=a,l=l+1|0}o=o+1|0}while(122!=(0|o))}}function Qe(e,t,n,l){var r,i=0,a=0,o=0,s=0,u=0;if(r=T,T=T+64|0,o=r,(0|(e|=0))==(0|(n|=0))&(0|(t|=0))==(0|(l|=0))|!1|134217728!=(2013265920&t|0)|!1|134217728!=(2013265920&l|0))return T=r,0|(o=0);if(i=0|wt(0|e,0|t,52),b(),i&=15,a=0|wt(0|n,0|l,52),b(),(0|i)!=(15&a|0))return T=r,0|(o=0);if(a=i+-1|0,i>>>0>1&&(u=0|Le(e,t,a),s=0|b(),(0|u)==(0|(a=0|Le(n,l,a)))&(0|s)==(0|b()))){if(i=0|wt(0|e,0|t,0|(a=3*(15^i)|0)),b(),i&=7,a=0|wt(0|n,0|l,0|a),b(),0==(0|i)|0==(0|(a&=7)))return T=r,0|(u=1);if((0|q[21136+(i<<2)>>2])==(0|a))return T=r,0|(u=1);if((0|q[21168+(i<<2)>>2])==(0|a))return T=r,0|(u=1)}a=(i=o)+56|0;do{q[i>>2]=0,i=i+4|0}while((0|i)<(0|a));return C(e,t,1,o),i=(0|q[(u=o)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)||(0|q[(u=o+8|0)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)||(0|q[(u=o+16|0)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)||(0|q[(u=o+24|0)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)||(0|q[(u=o+32|0)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)||(0|q[(u=o+40|0)>>2])==(0|n)&&(0|q[u+4>>2])==(0|l)?1:1&((0|q[(i=o+48|0)>>2])==(0|n)?(0|q[i+4>>2])==(0|l):0),T=r,0|(u=i)}function Ye(e,t,n){n|=0;var l,r,i,a,o=0;if(i=T,T=T+16|0,r=i,o=0|wt(0|(e|=0),0|(t|=0),56),b(),t=0|function(e,t,n){n|=0;var l=0,r=0;if(l=0|Re(e=e|0,t=t|0),(n+-1|0)>>>0>5)return 0|(n=-1);if(1==(0|n)&(r=0!=(0|l)))return 0|(n=-1);return l=0|function(e,t){var n=0,l=0,r=0,i=0,a=0,o=0,s=0,u=0;if(u=T,T=T+32|0,i=u,Ge(e=e|0,t=t|0,r=u+16|0),a=0|Te(e,t),s=0|De(e,t),function(e,t){e=7728+(28*(e|=0)|0)|0,q[(t|=0)>>2]=q[e>>2],q[t+4>>2]=q[e+4>>2],q[t+8>>2]=q[e+8>>2],q[t+12>>2]=q[e+12>>2]}(a,i),t=0|function(e,t){e|=0;var n=0,l=0;if((t|=0)>>>0>20)return-1;do{if((0|q[11152+(216*t|0)>>2])!=(0|e))if((0|q[11152+(216*t|0)+8>>2])!=(0|e))if((0|q[11152+(216*t|0)+16>>2])!=(0|e))if((0|q[11152+(216*t|0)+24>>2])!=(0|e))if((0|q[11152+(216*t|0)+32>>2])!=(0|e))if((0|q[11152+(216*t|0)+40>>2])!=(0|e))if((0|q[11152+(216*t|0)+48>>2])!=(0|e))if((0|q[11152+(216*t|0)+56>>2])!=(0|e))if((0|q[11152+(216*t|0)+64>>2])!=(0|e))if((0|q[11152+(216*t|0)+72>>2])!=(0|e))if((0|q[11152+(216*t|0)+80>>2])!=(0|e))if((0|q[11152+(216*t|0)+88>>2])!=(0|e))if((0|q[11152+(216*t|0)+96>>2])!=(0|e))if((0|q[11152+(216*t|0)+104>>2])!=(0|e))if((0|q[11152+(216*t|0)+112>>2])!=(0|e))if((0|q[11152+(216*t|0)+120>>2])!=(0|e))if((0|q[11152+(216*t|0)+128>>2])!=(0|e)){if((0|q[11152+(216*t|0)+136>>2])!=(0|e)){if((0|q[11152+(216*t|0)+144>>2])==(0|e)){e=0,n=2,l=0;break}if((0|q[11152+(216*t|0)+152>>2])==(0|e)){e=0,n=2,l=1;break}if((0|q[11152+(216*t|0)+160>>2])==(0|e)){e=0,n=2,l=2;break}if((0|q[11152+(216*t|0)+168>>2])==(0|e)){e=1,n=2,l=0;break}if((0|q[11152+(216*t|0)+176>>2])==(0|e)){e=1,n=2,l=1;break}if((0|q[11152+(216*t|0)+184>>2])==(0|e)){e=1,n=2,l=2;break}if((0|q[11152+(216*t|0)+192>>2])==(0|e)){e=2,n=2,l=0;break}if((0|q[11152+(216*t|0)+200>>2])==(0|e)){e=2,n=2,l=1;break}if((0|q[11152+(216*t|0)+208>>2])==(0|e)){e=2,n=2,l=2;break}return-1}e=2,n=1,l=2}else e=2,n=1,l=1;else e=2,n=1,l=0;else e=1,n=1,l=2;else e=1,n=1,l=1;else e=1,n=1,l=0;else e=0,n=1,l=2;else e=0,n=1,l=1;else e=0,n=1,l=0;else e=2,n=0,l=2;else e=2,n=0,l=1;else e=2,n=0,l=0;else e=1,n=0,l=2;else e=1,n=0,l=1;else e=1,n=0,l=0;else e=0,n=0,l=2;else e=0,n=0,l=1;else e=0,n=0,l=0}while(0);return 0|q[11152+(216*t|0)+(72*n|0)+(24*e|0)+(l<<3)+4>>2]}(a,0|q[r>>2]),!(0|I(a)))return T=u,0|(s=t);switch(0|a){case 4:e=0,n=14;break;case 14:e=1,n=14;break;case 24:e=2,n=14;break;case 38:e=3,n=14;break;case 49:e=4,n=14;break;case 58:e=5,n=14;break;case 63:e=6,n=14;break;case 72:e=7,n=14;break;case 83:e=8,n=14;break;case 97:e=9,n=14;break;case 107:e=10,n=14;break;case 117:e=11,n=14;break;default:o=0,l=0}14==(0|n)&&(o=0|q[22096+(24*e|0)+8>>2],l=0|q[22096+(24*e|0)+16>>2]);(0|(e=0|q[r>>2]))!=(0|q[i>>2])&&(a=0|O(a))|(0|(e=0|q[r>>2]))==(0|l)&&(t=(t+1|0)%6|0);if(3==(0|s)&(0|e)==(0|l))return T=u,0|(s=(t+5|0)%6|0);if(!(5==(0|s)&(0|e)==(0|o)))return T=u,0|(s=t);return T=u,0|(s=(t+1|0)%6|0)}(e,t),r?0|(n=(5-l+(0|q[22384+(n<<2)>>2])|0)%5|0):0|(n=(6-l+(0|q[22416+(n<<2)>>2])|0)%6|0)}(l=(a=!0&268435456==(2013265920&t|0))?e:0,e=a?-2130706433&t|134217728:0,7&o),-1==(0|t))return q[n>>2]=0,void(T=i);Ge(l,e,r),o=0|wt(0|l,0|e,52),b(),o&=15,0|Re(l,e)?ge(r,o,t,2,n):we(r,o,t,2,n),T=i}function Xe(e){e|=0;var t,n,l=0;return(t=0|vt(1,12))||w(22691,22646,49,22704),0|(l=0|q[(n=e+4|0)>>2])?(q[(l=l+8|0)>>2]=t,q[n>>2]=t,0|t):(0|q[e>>2]&&w(22721,22646,61,22744),q[(l=e)>>2]=t,q[n>>2]=t,0|t)}function Ze(e,t){e|=0,t|=0;var n,l;return(l=0|pt(24))||w(22758,22646,78,22772),q[l>>2]=q[t>>2],q[l+4>>2]=q[t+4>>2],q[l+8>>2]=q[t+8>>2],q[l+12>>2]=q[t+12>>2],q[l+16>>2]=0,0|(n=0|q[(t=e+4|0)>>2])?(q[n+16>>2]=l,q[t>>2]=l,0|l):(0|q[e>>2]&&w(22787,22646,82,22772),q[e>>2]=l,q[t>>2]=l,0|l)}function Je(e){var t,n,l=0,i=0,a=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0,b=0,M=0,S=0,E=0,z=0,k=0,T=0,C=0,L=0,P=0,R=0,D=0,I=0;if(0|q[(s=(e|=0)+8|0)>>2])return 0|(I=1);if(!(a=0|q[e>>2]))return 0|(I=0);l=a,i=0;do{i=i+1|0,l=0|q[l+8>>2]}while(0!=(0|l));if(i>>>0<2)return 0|(I=0);(n=0|pt(i<<2))||w(22807,22646,317,22826),(t=0|pt(i<<5))||w(22848,22646,321,22826),q[e>>2]=0,q[(z=e+4|0)>>2]=0,q[s>>2]=0,i=0,R=0,E=0,d=0;e:for(;;){if(f=0|q[a>>2]){u=0,A=f;do{if(m=+r[A+8>>3],l=A,A=0|q[A+16>>2],c=+r[(s=(h=0==(0|A))?f:A)+8>>3],+o(+(m-c))>3.141592653589793){I=14;break}u+=(c-m)*(+r[l>>3]+ +r[s>>3])}while(!h);if(14==(0|I)){I=0,u=0,l=f;do{S=+r[l+8>>3],L=0|q[(P=l+16|0)>>2],M=+r[(L=0==(0|L)?f:L)+8>>3],u+=(+r[l>>3]+ +r[L>>3])*((M<0?M+6.283185307179586:M)-(S<0?S+6.283185307179586:S)),l=0|q[(0==(0|l)?a:P)>>2]}while(0!=(0|l))}u>0?(q[n+(R<<2)>>2]=a,R=R+1|0,s=E,l=d):I=19}else I=19;if(19==(0|I)){I=0;do{if(!i){if(d){s=z,A=d+8|0,l=a,i=e;break}if(0|q[e>>2]){I=27;break e}s=z,A=e,l=a,i=e;break}if(0|q[(l=i+8|0)>>2]){I=21;break e}if(!(i=0|vt(1,12))){I=23;break e}q[l>>2]=i,s=i+4|0,A=i,l=d}while(0);if(q[A>>2]=a,q[s>>2]=a,A=t+(E<<5)|0,h=0|q[a>>2]){for(r[(f=t+(E<<5)+8|0)>>3]=17976931348623157e292,r[(d=t+(E<<5)+24|0)>>3]=17976931348623157e292,r[A>>3]=-17976931348623157e292,r[(p=t+(E<<5)+16|0)>>3]=-17976931348623157e292,y=17976931348623157e292,b=-17976931348623157e292,s=0,x=h,m=17976931348623157e292,g=17976931348623157e292,_=-17976931348623157e292,c=-17976931348623157e292;u=+r[x>>3],S=+r[x+8>>3],x=0|q[x+16>>2],M=+r[((v=0==(0|x))?h:x)+8>>3],u<m&&(r[f>>3]=u,m=u),S<g&&(r[d>>3]=S,g=S),u>_?r[A>>3]=u:u=_,S>c&&(r[p>>3]=S,c=S),y=S>0&S<y?S:y,b=S<0&S>b?S:b,s|=+o(+(S-M))>3.141592653589793,!v;)_=u;s&&(r[p>>3]=b,r[d>>3]=y)}else q[A>>2]=0,q[A+4>>2]=0,q[A+8>>2]=0,q[A+12>>2]=0,q[A+16>>2]=0,q[A+20>>2]=0,q[A+24>>2]=0,q[A+28>>2]=0;s=E+1|0}if(a=0|q[(P=a+8|0)>>2],q[P>>2]=0,!a){I=45;break}E=s,d=l}if(21==(0|I))w(22624,22646,35,22658);else if(23==(0|I))w(22678,22646,37,22658);else if(27==(0|I))w(22721,22646,61,22744);else if(45==(0|I)){e:do{if((0|R)>0){for(P=0==(0|s),C=s<<2,L=0==(0|e),T=0,l=0;;){if(k=0|q[n+(T<<2)>>2],P)I=73;else{if(!(E=0|pt(C))){I=50;break}if(!(z=0|pt(C))){I=52;break}t:do{if(L)i=0;else{for(s=0,i=0,A=e;a=t+(s<<5)|0,0|Ke(0|q[A>>2],a,0|q[k>>2])?(q[E+(i<<2)>>2]=A,q[z+(i<<2)>>2]=a,v=i+1|0):v=i,A=0|q[A+8>>2];)s=s+1|0,i=v;if((0|v)>0)if(a=0|q[E>>2],1==(0|v))i=a;else for(p=0,x=-1,i=a,d=a;;){for(h=0|q[d>>2],a=0,A=0;f=(0|(s=0|q[q[E+(A<<2)>>2]>>2]))==(0|h)?a:a+(1&(0|Ke(s,0|q[z+(A<<2)>>2],0|q[h>>2])))|0,(0|(A=A+1|0))!=(0|v);)a=f;if(i=(s=(0|f)>(0|x))?d:i,(0|(a=p+1|0))==(0|v))break t;p=a,x=s?f:x,d=0|q[E+(a<<2)>>2]}else i=0}}while(0);if(xt(E),xt(z),i){if(a=0|q[(s=i+4|0)>>2])i=a+8|0;else if(0|q[i>>2]){I=70;break}q[i>>2]=k,q[s>>2]=k}else I=73}if(73==(0|I)){if(I=0,0|(l=0|q[k>>2]))do{z=l,l=0|q[l+16>>2],xt(z)}while(0!=(0|l));xt(k),l=2}if((0|(T=T+1|0))>=(0|R)){D=l;break e}}50==(0|I)?w(22863,22646,249,22882):52==(0|I)?w(22901,22646,252,22882):70==(0|I)&&w(22721,22646,61,22744)}else D=0}while(0);return xt(n),xt(t),0|(I=D)}return 0}function Ke(e,t,n){e|=0;var l,i=0,a=0,o=0,s=0,u=0,A=0,c=0;if(!(0|j(t|=0,n|=0)))return 0|(e=0);if(t=0|G(t),l=+r[n>>3],i=t&(i=+r[n+8>>3])<0?i+6.283185307179586:i,!(e=0|q[e>>2]))return 0|(e=0);if(t){t=0,n=e;e:for(;;){for(;s=+r[n>>3],A=+r[n+8>>3],c=0|q[(n=n+16|0)>>2],o=+r[(c=0==(0|c)?e:c)>>3],a=+r[c+8>>3],s>o?(u=s,s=A):(u=o,o=s,s=a,a=A),l<o|l>u;)if(!(n=0|q[n>>2])){n=22;break e}if(i=(s=s<0?s+6.283185307179586:s)==i|(A=a<0?a+6.283185307179586:a)==i?i+-2220446049250313e-31:i,((A+=(l-o)/(u-o)*(s-A))<0?A+6.283185307179586:A)>i&&(t^=1),!(n=0|q[n>>2])){n=22;break}}if(22==(0|n))return 0|t}else{t=0,n=e;e:for(;;){for(;s=+r[n>>3],A=+r[n+8>>3],c=0|q[(n=n+16|0)>>2],o=+r[(c=0==(0|c)?e:c)>>3],a=+r[c+8>>3],s>o?(u=s,s=A):(u=o,o=s,s=a,a=A),l<o|l>u;)if(!(n=0|q[n>>2])){n=22;break e}if(a+(l-o)/(u-o)*(s-a)>(i=s==i|a==i?i+-2220446049250313e-31:i)&&(t^=1),!(n=0|q[n>>2])){n=22;break}}if(22==(0|n))return 0|t}return 0}function $e(e,t,n,r,i){n|=0,r|=0,i|=0;var a,o,s,u,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0;if(u=T,T=T+32|0,g=u+16|0,s=u,A=0|wt(0|(e|=0),0|(t|=0),52),b(),A&=15,p=0|wt(0|n,0|r,52),b(),(0|A)!=(15&p|0))return T=u,0|(g=1);if(f=0|wt(0|e,0|t,45),b(),f&=127,d=0|wt(0|n,0|r,45),b(),p=(0|f)!=(0|(d&=127))){if(7==(0|(m=0|H(f,d))))return T=u,0|(g=2);7==(0|(h=0|H(d,f)))?w(22925,22949,151,22959):(x=m,c=h)}else x=0,c=0;a=0|I(f),o=0|I(d),q[g>>2]=0,q[g+4>>2]=0,q[g+8>>2]=0,q[g+12>>2]=0;do{if(x){if(m=(0|(d=0|q[4304+(28*f|0)+(x<<2)>>2]))>0,o)if(m){f=0,h=n,m=r;do{h=0|Be(h,m),m=0|b(),1==(0|(c=0|se(c)))&&(c=0|se(1)),f=f+1|0}while((0|f)!=(0|d));d=c,f=h,h=m}else d=c,f=n,h=r;else if(m){f=0,h=n,m=r;do{h=0|Ne(h,m),m=0|b(),c=0|se(c),f=f+1|0}while((0|f)!=(0|d));d=c,f=h,h=m}else d=c,f=n,h=r;if(He(f,h,g),p||w(22972,22949,181,22959),(m=0!=(0|a))&(c=0!=(0|o))&&w(22999,22949,182,22959),m){if(c=0|De(e,t),0|l[22032+(7*c|0)+x>>0]){A=3;break}f=h=0|q[21200+(28*c|0)+(x<<2)>>2],v=26}else if(c){if(c=0|De(f,h),0|l[22032+(7*c|0)+d>>0]){A=4;break}f=0,h=0|q[21200+(28*d|0)+(c<<2)>>2],v=26}else c=0;if(26==(0|v))if((0|h)<=-1&&w(23030,22949,212,22959),(0|f)<=-1&&w(23053,22949,213,22959),(0|h)>0){m=g+4|0,c=0;do{ae(m),c=c+1|0}while((0|c)!=(0|h));c=f}else c=f;if(q[s>>2]=0,q[s+4>>2]=0,q[s+8>>2]=0,re(s,x),0|A)for(;0|Ue(A)?le(s):qe(s),(0|A)>1;)A=A+-1|0;if((0|c)>0){A=0;do{ae(s),A=A+1|0}while((0|A)!=(0|c))}J(v=g+4|0,s,v),X(v),v=50}else if(He(n,r,g),0!=(0|a)&0!=(0|o))if((0|d)!=(0|f)&&w(23077,22949,243,22959),c=0|De(e,t),A=0|De(n,r),0|l[22032+(7*c|0)+A>>0])A=5;else if((0|(c=0|q[21200+(28*c|0)+(A<<2)>>2]))>0){m=g+4|0,A=0;do{ae(m),A=A+1|0}while((0|A)!=(0|c));v=50}else v=50;else v=50}while(0);return 50==(0|v)&&(A=g+4|0,q[i>>2]=q[A>>2],q[i+4>>2]=q[A+4>>2],q[i+8>>2]=q[A+8>>2],A=0),T=u,0|(g=A)}function et(e,t,n,l){n|=0,l|=0;var r,i,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0;if(i=T,T=T+48|0,s=i+36|0,u=i+24|0,A=i+12|0,c=i,o=0|wt(0|(e|=0),0|(t|=0),52),b(),o&=15,h=0|wt(0|e,0|t,45),b(),r=0|I(h&=127),Mt(0|o,0,52),p=134225919|b(),q[(d=l)>>2]=-1,q[d+4>>2]=p,!o)return(0|q[n>>2])>1||(0|q[n+4>>2])>1||(0|q[n+8>>2])>1||127==(0|(a=0|F(h,0|ee(n))))?(T=i,0|(p=1)):(f=0|Mt(0|a,0,45),d=0|b(),d=-1040385&q[(h=l)+4>>2]|d,q[(p=l)>>2]=q[h>>2]|f,q[p+4>>2]=d,T=i,0|(p=0));for(q[s>>2]=q[n>>2],q[s+4>>2]=q[n+4>>2],q[s+8>>2]=q[n+8>>2];q[u>>2]=q[s>>2],q[u+4>>2]=q[s+4>>2],q[u+8>>2]=q[s+8>>2],0|Ue(o)?(te(s),q[A>>2]=q[s>>2],q[A+4>>2]=q[s+4>>2],q[A+8>>2]=q[s+8>>2],le(A)):(ne(s),q[A>>2]=q[s>>2],q[A+4>>2]=q[s+4>>2],q[A+8>>2]=q[s+8>>2],qe(A)),K(u,A,c),X(c),x=0|q[(d=l)>>2],d=0|q[d+4>>2],n=0|Mt(7,0,0|(v=3*(15-o|0)|0)),d&=~(0|b()),v=0|Mt(0|ee(c),0,0|v),d=0|b()|d,q[(p=l)>>2]=v|x&~n,q[p+4>>2]=d,(0|o)>1;)o=o+-1|0;e:do{if((0|q[s>>2])<=1&&(0|q[s+4>>2])<=1&&(0|q[s+8>>2])<=1){c=127==(0|(u=0|F(h,o=0|ee(s))))?0:0|I(u);t:do{if(o){if(r){if(s=21408+(28*(0|De(e,t))|0)+(o<<2)|0,(0|(s=0|q[s>>2]))>0){n=0;do{o=0|oe(o),n=n+1|0}while((0|n)!=(0|s))}if(1==(0|o)){a=3;break e}127==(0|(n=0|F(h,o)))&&w(23104,22949,376,23134),0|I(n)?w(23147,22949,377,23134):(f=s,m=o,a=n)}else f=0,m=o,a=u;if((0|(A=0|q[4304+(28*h|0)+(m<<2)>>2]))<=-1&&w(23178,22949,384,23134),!c){if((0|f)<=-1&&w(23030,22949,417,23134),0|f){o=0,n=0|q[(s=l)>>2],s=0|q[s+4>>2];do{n=0|Oe(n,s),s=0|b(),q[(v=l)>>2]=n,q[v+4>>2]=s,o=o+1|0}while((0|o)<(0|f))}if((0|A)<=0){o=54;break}for(o=0,n=0|q[(s=l)>>2],s=0|q[s+4>>2];;)if(n=0|Oe(n,s),s=0|b(),q[(v=l)>>2]=n,q[v+4>>2]=s,(0|(o=o+1|0))==(0|A)){o=54;break t}}if(7==(0|(u=0|H(a,h)))&&w(22925,22949,393,23134),n=0|q[(o=l)>>2],o=0|q[o+4>>2],(0|A)>0){s=0;do{n=0|Oe(n,o),o=0|b(),q[(v=l)>>2]=n,q[v+4>>2]=o,s=s+1|0}while((0|s)!=(0|A))}if(n=0|De(n,o),v=0|O(a),(0|(n=0|q[(v?21824:21616)+(28*u|0)+(n<<2)>>2]))<=-1&&w(23030,22949,412,23134),n){o=0,s=0|q[(u=l)>>2],u=0|q[u+4>>2];do{s=0|Ie(s,u),u=0|b(),q[(v=l)>>2]=s,q[v+4>>2]=u,o=o+1|0}while((0|o)<(0|n));o=54}else o=54}else if(0!=(0|r)&0!=(0|c))if(o=21408+(28*(v=0|De(e,t))|0)+((0|De(0|q[(o=l)>>2],0|q[o+4>>2]))<<2)|0,(0|(o=0|q[o>>2]))<=-1&&w(23201,22949,433,23134),o){a=0,n=0|q[(s=l)>>2],s=0|q[s+4>>2];do{n=0|Oe(n,s),s=0|b(),q[(v=l)>>2]=n,q[v+4>>2]=s,a=a+1|0}while((0|a)<(0|o));a=u,o=54}else a=u,o=55;else a=u,o=54}while(0);if(54==(0|o)&&c&&(o=55),55==(0|o)&&1==(0|De(0|q[(v=l)>>2],0|q[v+4>>2]))){a=4;break}p=0|q[(v=l)>>2],v=-1040385&q[v+4>>2],x=0|Mt(0|a,0,45),v=0|v|b(),q[(a=l)>>2]=p|x,q[a+4>>2]=v,a=0}else a=2}while(0);return T=i,0|(v=a)}function tt(e,t){var n=0;if(!(t|=0))return 0|(n=1);n=e|=0,e=1;do{e=0|v(0==(1&t|0)?1:n,e),t>>=1,n=0|v(n,n)}while(0!=(0|t));return 0|e}function nt(e,t,n){e|=0;var l,i,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0;if(!(0|j(t|=0,n|=0)))return 0|(h=0);if(t=0|G(t),i=+r[n>>3],a=t&(a=+r[n+8>>3])<0?a+6.283185307179586:a,(0|(h=0|q[e>>2]))<=0)return 0|(h=0);if(l=0|q[e+4>>2],t){t=0,n=-1,e=0;e:for(;;){for(m=e;u=+r[l+(m<<4)>>3],c=+r[l+(m<<4)+8>>3],s=+r[l+((e=(n+2|0)%(0|h)|0)<<4)>>3],o=+r[l+(e<<4)+8>>3],u>s?(A=u,u=c):(A=s,s=u,u=o,o=c),i<s|i>A;){if(!((0|(n=m+1|0))<(0|h))){n=22;break e}e=m,m=n,n=e}if(a=(u=u<0?u+6.283185307179586:u)==a|(c=o<0?o+6.283185307179586:o)==a?a+-2220446049250313e-31:a,((c+=(i-s)/(A-s)*(u-c))<0?c+6.283185307179586:c)>a&&(t^=1),(0|(e=m+1|0))>=(0|h)){n=22;break}n=m}if(22==(0|n))return 0|t}else{t=0,n=-1,e=0;e:for(;;){for(m=e;u=+r[l+(m<<4)>>3],c=+r[l+(m<<4)+8>>3],s=+r[l+((e=(n+2|0)%(0|h)|0)<<4)>>3],o=+r[l+(e<<4)+8>>3],u>s?(A=u,u=c):(A=s,s=u,u=o,o=c),i<s|i>A;){if(!((0|(n=m+1|0))<(0|h))){n=22;break e}e=m,m=n,n=e}if(o+(i-s)/(A-s)*(u-o)>(a=u==a|o==a?a+-2220446049250313e-31:a)&&(t^=1),(0|(e=m+1|0))>=(0|h)){n=22;break}n=m}if(22==(0|n))return 0|t}return 0}function lt(e,t){t|=0;var n,l,i,a,s,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0;if(!(l=0|q[(e|=0)>>2]))return q[t>>2]=0,q[t+4>>2]=0,q[t+8>>2]=0,q[t+12>>2]=0,q[t+16>>2]=0,q[t+20>>2]=0,q[t+24>>2]=0,void(q[t+28>>2]=0);if(r[(i=t+8|0)>>3]=17976931348623157e292,r[(a=t+24|0)>>3]=17976931348623157e292,r[t>>3]=-17976931348623157e292,r[(s=t+16|0)>>3]=-17976931348623157e292,!((0|l)<=0)){for(n=0|q[e+4>>2],p=17976931348623157e292,x=-17976931348623157e292,v=0,e=-1,m=17976931348623157e292,h=17976931348623157e292,d=-17976931348623157e292,A=-17976931348623157e292,g=0;u=+r[n+(g<<4)>>3],f=+r[n+(g<<4)+8>>3],c=+r[n+(((0|(e=e+2|0))==(0|l)?0:e)<<4)+8>>3],u<m&&(r[i>>3]=u,m=u),f<h&&(r[a>>3]=f,h=f),u>d?r[t>>3]=u:u=d,f>A&&(r[s>>3]=f,A=f),p=f>0&f<p?f:p,x=f<0&f>x?f:x,v|=+o(+(f-c))>3.141592653589793,(0|(e=g+1|0))!=(0|l);)_=g,d=u,g=e,e=_;v&&(r[s>>3]=x,r[a>>3]=p)}}function qt(e,t){t|=0;var n,l=0,i=0,a=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0,b=0,w=0,M=0,S=0;if(x=0|q[(e|=0)>>2]){if(r[(v=t+8|0)>>3]=17976931348623157e292,r[(g=t+24|0)>>3]=17976931348623157e292,r[t>>3]=-17976931348623157e292,r[(_=t+16|0)>>3]=-17976931348623157e292,(0|x)>0){for(a=0|q[e+4>>2],d=17976931348623157e292,p=-17976931348623157e292,i=0,l=-1,c=17976931348623157e292,m=17976931348623157e292,f=-17976931348623157e292,u=-17976931348623157e292,y=0;s=+r[a+(y<<4)>>3],h=+r[a+(y<<4)+8>>3],A=+r[a+(((0|(M=l+2|0))==(0|x)?0:M)<<4)+8>>3],s<c&&(r[v>>3]=s,c=s),h<m&&(r[g>>3]=h,m=h),s>f?r[t>>3]=s:s=f,h>u&&(r[_>>3]=h,u=h),d=h>0&h<d?h:d,p=h<0&h>p?h:p,i|=+o(+(h-A))>3.141592653589793,(0|(l=y+1|0))!=(0|x);)M=y,f=s,y=l,l=M;i&&(r[_>>3]=p,r[g>>3]=d)}}else q[t>>2]=0,q[t+4>>2]=0,q[t+8>>2]=0,q[t+12>>2]=0,q[t+16>>2]=0,q[t+20>>2]=0,q[t+24>>2]=0,q[t+28>>2]=0;if(!((0|(l=0|q[(M=e+8|0)>>2]))<=0)){n=e+12|0,w=0;do{if(a=0|q[n>>2],i=w,g=t+((w=w+1|0)<<5)|0,_=0|q[a+(i<<3)>>2]){if(r[(y=t+(w<<5)+8|0)>>3]=17976931348623157e292,r[(e=t+(w<<5)+24|0)>>3]=17976931348623157e292,r[g>>3]=-17976931348623157e292,r[(b=t+(w<<5)+16|0)>>3]=-17976931348623157e292,(0|_)>0){for(x=0|q[a+(i<<3)+4>>2],d=17976931348623157e292,p=-17976931348623157e292,a=0,i=-1,v=0,c=17976931348623157e292,m=17976931348623157e292,h=-17976931348623157e292,u=-17976931348623157e292;s=+r[x+(v<<4)>>3],f=+r[x+(v<<4)+8>>3],A=+r[x+(((0|(i=i+2|0))==(0|_)?0:i)<<4)+8>>3],s<c&&(r[y>>3]=s,c=s),f<m&&(r[e>>3]=f,m=f),s>h?r[g>>3]=s:s=h,f>u&&(r[b>>3]=f,u=f),d=f>0&f<d?f:d,p=f<0&f>p?f:p,a|=+o(+(f-A))>3.141592653589793,(0|(i=v+1|0))!=(0|_);)S=v,v=i,h=s,i=S;a&&(r[b>>3]=p,r[e>>3]=d)}}else q[g>>2]=0,q[g+4>>2]=0,q[g+8>>2]=0,q[g+12>>2]=0,q[g+16>>2]=0,q[g+20>>2]=0,q[g+24>>2]=0,q[g+28>>2]=0,l=0|q[M>>2]}while((0|w)<(0|l))}}function rt(e,t,n){var l=0,r=0,i=0;if(!(0|nt(e|=0,t|=0,n|=0)))return 0|(r=0);if((0|q[(r=e+8|0)>>2])<=0)return 0|(r=1);for(l=e+12|0,e=0;;){if(i=e,e=e+1|0,0|nt((0|q[l>>2])+(i<<3)|0,t+(e<<5)|0,n)){e=0,l=6;break}if((0|e)>=(0|q[r>>2])){e=1,l=6;break}}return 6==(0|l)?0|e:0}function it(e,t,n,l,q){t|=0,n|=0,l|=0,q|=0;var i,a,o,s,u,A,c,m=0;s=+r[(e|=0)>>3],o=+r[t>>3]-s,a=+r[e+8>>3],i=+r[t+8>>3]-a,A=+r[n>>3],m=((m=+r[l>>3]-A)*(a-(c=+r[n+8>>3]))-(s-A)*(u=+r[l+8>>3]-c))/(o*u-i*m),r[q>>3]=s+o*m,r[q+8>>3]=a+i*m}function at(e,t){return t|=0,+r[(e|=0)>>3]!=+r[t>>3]?0|(t=0):0|(t=+r[e+8>>3]==+r[t+8>>3])}function ot(e,t){t|=0;var n,l,q;return+((q=+r[(e|=0)>>3]-+r[t>>3])*q+(l=+r[e+8>>3]-+r[t+8>>3])*l+(n=+r[e+16>>3]-+r[t+16>>3])*n)}function st(e,t,n){e|=0,n|=0;var l=0;(0|(t|=0))>0?(l=0|vt(t,4),q[e>>2]=l,l||w(23230,23253,40,23267)):q[e>>2]=0,q[e+4>>2]=t,q[e+8>>2]=0,q[e+12>>2]=n}function ut(e){var t,n,l,i=0,a=0,s=0,A=0;t=(e|=0)+4|0,n=e+12|0,l=e+8|0;e:for(;;){for(a=0|q[t>>2],i=0;;){if((0|i)>=(0|a))break e;if(s=0|q[e>>2],A=0|q[s+(i<<2)>>2])break;i=i+1|0}i=s+(~~(+o(+ +u(10,+ +(15-(0|q[n>>2])|0))*(+r[A>>3]+ +r[A+8>>3]))%+(0|a))>>>0<<2)|0,a=0|q[i>>2];t:do{if(0|a){if(s=A+32|0,(0|a)==(0|A))q[i>>2]=q[s>>2];else{if(!(i=0|q[(a=a+32|0)>>2]))break;for(;(0|i)!=(0|A);)if(!(i=0|q[(a=i+32|0)>>2]))break t;q[a>>2]=q[s>>2]}xt(A),q[l>>2]=(0|q[l>>2])-1}}while(0)}xt(0|q[e>>2])}function At(e){var t,n=0,l=0;for(t=0|q[(e|=0)+4>>2],l=0;;){if((0|l)>=(0|t)){n=0,l=4;break}if(n=0|q[(0|q[e>>2])+(l<<2)>>2]){l=4;break}l=l+1|0}return 4==(0|l)?0|n:0}function ct(e,t){t|=0;var n=0,l=0,i=0,a=0;if(n=~~(+o(+ +u(10,+ +(15-(0|q[(e|=0)+12>>2])|0))*(+r[t>>3]+ +r[t+8>>3]))%+(0|q[e+4>>2]))>>>0,n=(0|q[e>>2])+(n<<2)|0,!(l=0|q[n>>2]))return 0|(a=1);a=t+32|0;do{if((0|l)!=(0|t)){if(!(n=0|q[l+32>>2]))return 0|(a=1);for(i=n;;){if((0|i)==(0|t)){i=8;break}if(!(n=0|q[i+32>>2])){n=1,i=10;break}l=i,i=n}if(8==(0|i)){q[l+32>>2]=q[a>>2];break}if(10==(0|i))return 0|n}else q[n>>2]=q[a>>2]}while(0);return xt(t),q[(a=e+8|0)>>2]=(0|q[a>>2])-1,0|(a=0)}function mt(e,t,n){e|=0,t|=0,n|=0;var l,i=0,a=0,s=0;(l=0|pt(40))||w(23283,23253,98,23296),q[l>>2]=q[t>>2],q[l+4>>2]=q[t+4>>2],q[l+8>>2]=q[t+8>>2],q[l+12>>2]=q[t+12>>2],q[(a=l+16|0)>>2]=q[n>>2],q[a+4>>2]=q[n+4>>2],q[a+8>>2]=q[n+8>>2],q[a+12>>2]=q[n+12>>2],q[l+32>>2]=0,a=~~(+o(+ +u(10,+ +(15-(0|q[e+12>>2])|0))*(+r[t>>3]+ +r[t+8>>3]))%+(0|q[e+4>>2]))>>>0,a=(0|q[e>>2])+(a<<2)|0,i=0|q[a>>2];do{if(i){for(;!(0|Ee(i,t)&&0|Ee(i+16|0,n));)if(a=0|q[i+32>>2],!(0|q[(i=0==(0|a)?i:a)+32>>2])){s=10;break}if(10==(0|s)){q[i+32>>2]=l;break}return xt(l),0|(s=i)}q[a>>2]=l}while(0);return q[(s=e+8|0)>>2]=1+(0|q[s>>2]),0|(s=l)}function ht(e,t,n){t|=0,n|=0;var l=0,i=0;if(i=~~(+o(+ +u(10,+ +(15-(0|q[(e|=0)+12>>2])|0))*(+r[t>>3]+ +r[t+8>>3]))%+(0|q[e+4>>2]))>>>0,!(i=0|q[(0|q[e>>2])+(i<<2)>>2]))return 0|(n=0);if(!n){for(e=i;;){if(0|Ee(e,t)){l=10;break}if(!(e=0|q[e+32>>2])){e=0,l=10;break}}if(10==(0|l))return 0|e}for(e=i;;){if(0|Ee(e,t)&&0|Ee(e+16|0,n)){l=10;break}if(!(e=0|q[e+32>>2])){e=0,l=10;break}}return 10==(0|l)?0|e:0}function ft(e,t){t|=0;var n=0;if(n=~~(+o(+ +u(10,+ +(15-(0|q[(e|=0)+12>>2])|0))*(+r[t>>3]+ +r[t+8>>3]))%+(0|q[e+4>>2]))>>>0,!(e=0|q[(0|q[e>>2])+(n<<2)>>2]))return 0|(n=0);for(;;){if(0|Ee(e,t)){t=5;break}if(!(e=0|q[e+32>>2])){e=0,t=5;break}}return 5==(0|t)?0|e:0}function dt(e){return 0|~~+function(e){return+ +Tt(+(e=+e))}(e=+e)}function pt(e){e|=0;var t,n=0,l=0,r=0,i=0,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0;t=T,T=T+16|0,h=t;do{if(e>>>0<245){if(e=(A=e>>>0<11?16:e+11&-8)>>>3,3&(l=(m=0|q[5829])>>>e)|0)return r=0|q[(l=(e=23356+((n=(1&l^1)+e|0)<<1<<2)|0)+8|0)>>2],(0|(a=0|q[(i=r+8|0)>>2]))==(0|e)?q[5829]=m&~(1<<n):(q[a+12>>2]=e,q[l>>2]=a),y=n<<3,q[r+4>>2]=3|y,q[(y=r+y+4|0)>>2]=1|q[y>>2],T=t,0|(y=i);if(A>>>0>(c=0|q[5831])>>>0){if(0|l)return n=((n=l<<e&((n=2<<e)|0-n))&0-n)-1|0,a=0|q[(e=(n=23356+((r=((l=(n>>>=s=n>>>12&16)>>>5&8)|s|(a=(n>>>=l)>>>2&4)|(e=(n>>>=a)>>>1&2)|(r=(n>>>=e)>>>1&1))+(n>>>r)|0)<<1<<2)|0)+8|0)>>2],(0|(l=0|q[(s=a+8|0)>>2]))==(0|n)?(e=m&~(1<<r),q[5829]=e):(q[l+12>>2]=n,q[e>>2]=l,e=m),o=(y=r<<3)-A|0,q[a+4>>2]=3|A,q[(i=a+A|0)+4>>2]=1|o,q[a+y>>2]=o,0|c&&(r=0|q[5834],l=23356+((n=c>>>3)<<1<<2)|0,e&(n=1<<n)?n=0|q[(e=l+8|0)>>2]:(q[5829]=e|n,n=l,e=l+8|0),q[e>>2]=r,q[n+12>>2]=r,q[r+8>>2]=n,q[r+12>>2]=l),q[5831]=o,q[5834]=i,T=t,0|(y=s);if(a=0|q[5830]){for(l=(a&0-a)-1|0,l=u=0|q[23620+(((r=(l>>>=i=l>>>12&16)>>>5&8)|i|(o=(l>>>=r)>>>2&4)|(s=(l>>>=o)>>>1&2)|(u=(l>>>=s)>>>1&1))+(l>>>u)<<2)>>2],s=u,u=(-8&q[u+4>>2])-A|0;(e=0|q[l+16>>2])||(e=0|q[l+20>>2]);)l=e,s=(i=(o=(-8&q[e+4>>2])-A|0)>>>0<u>>>0)?e:s,u=i?o:u;if((o=s+A|0)>>>0>s>>>0){i=0|q[s+24>>2],n=0|q[s+12>>2];do{if((0|n)==(0|s)){if(!(n=0|q[(e=s+20|0)>>2])&&!(n=0|q[(e=s+16|0)>>2])){l=0;break}for(;;)if(l=0|q[(r=n+20|0)>>2])n=l,e=r;else{if(!(l=0|q[(r=n+16|0)>>2]))break;n=l,e=r}q[e>>2]=0,l=n}else l=0|q[s+8>>2],q[l+12>>2]=n,q[n+8>>2]=l,l=n}while(0);do{if(0|i){if(n=0|q[s+28>>2],(0|s)==(0|q[(e=23620+(n<<2)|0)>>2])){if(q[e>>2]=l,!l){q[5830]=a&~(1<<n);break}}else if(q[((0|q[(y=i+16|0)>>2])==(0|s)?y:i+20|0)>>2]=l,!l)break;q[l+24>>2]=i,0|(n=0|q[s+16>>2])&&(q[l+16>>2]=n,q[n+24>>2]=l),0|(n=0|q[s+20>>2])&&(q[l+20>>2]=n,q[n+24>>2]=l)}}while(0);return u>>>0<16?(y=u+A|0,q[s+4>>2]=3|y,q[(y=s+y+4|0)>>2]=1|q[y>>2]):(q[s+4>>2]=3|A,q[o+4>>2]=1|u,q[o+u>>2]=u,0|c&&(r=0|q[5834],l=23356+((n=c>>>3)<<1<<2)|0,(n=1<<n)&m?n=0|q[(e=l+8|0)>>2]:(q[5829]=n|m,n=l,e=l+8|0),q[e>>2]=r,q[n+12>>2]=r,q[r+8>>2]=n,q[r+12>>2]=l),q[5831]=u,q[5834]=o),T=t,0|(y=s+8|0)}m=A}else m=A}else m=A}else if(e>>>0<=4294967231)if(A=-8&(e=e+11|0),r=0|q[5830]){i=0-A|0,u=(e>>>=8)?A>>>0>16777215?31:A>>>((u=14-((s=((p=e<<(m=(e+1048320|0)>>>16&8))+520192|0)>>>16&4)|m|(u=((p<<=s)+245760|0)>>>16&2))+(p<<u>>>15)|0)+7|0)&1|u<<1:0,l=0|q[23620+(u<<2)>>2];e:do{if(l)for(e=0,s=A<<(31==(0|u)?0:25-(u>>>1)|0),a=0;;){if((o=(-8&q[l+4>>2])-A|0)>>>0<i>>>0){if(!o){e=l,i=0,p=65;break e}e=l,i=o}if(a=0==(0|(p=0|q[l+20>>2]))|(0|p)==(0|(l=0|q[l+16+(s>>>31<<2)>>2]))?a:p,!l){l=a,p=61;break}s<<=1}else l=0,e=0,p=61}while(0);if(61==(0|p)){if(0==(0|l)&0==(0|e)){if(!(e=((e=2<<u)|0-e)&r)){m=A;break}m=(e&0-e)-1|0,e=0,l=0|q[23620+(((a=(m>>>=o=m>>>12&16)>>>5&8)|o|(s=(m>>>=a)>>>2&4)|(u=(m>>>=s)>>>1&2)|(l=(m>>>=u)>>>1&1))+(m>>>l)<<2)>>2]}l?p=65:(s=e,o=i)}if(65==(0|p))for(a=l;;){if(i=(l=(m=(-8&q[a+4>>2])-A|0)>>>0<i>>>0)?m:i,e=l?a:e,(l=0|q[a+16>>2])||(l=0|q[a+20>>2]),!l){s=e,o=i;break}a=l}if(0!=(0|s)&&o>>>0<((0|q[5831])-A|0)>>>0&&(c=s+A|0)>>>0>s>>>0){a=0|q[s+24>>2],n=0|q[s+12>>2];do{if((0|n)==(0|s)){if(!(n=0|q[(e=s+20|0)>>2])&&!(n=0|q[(e=s+16|0)>>2])){n=0;break}for(;;)if(l=0|q[(i=n+20|0)>>2])n=l,e=i;else{if(!(l=0|q[(i=n+16|0)>>2]))break;n=l,e=i}q[e>>2]=0}else y=0|q[s+8>>2],q[y+12>>2]=n,q[n+8>>2]=y}while(0);do{if(a){if(e=0|q[s+28>>2],(0|s)==(0|q[(l=23620+(e<<2)|0)>>2])){if(q[l>>2]=n,!n){r&=~(1<<e),q[5830]=r;break}}else if(q[((0|q[(y=a+16|0)>>2])==(0|s)?y:a+20|0)>>2]=n,!n)break;q[n+24>>2]=a,0|(e=0|q[s+16>>2])&&(q[n+16>>2]=e,q[e+24>>2]=n),(e=0|q[s+20>>2])&&(q[n+20>>2]=e,q[e+24>>2]=n)}}while(0);e:do{if(o>>>0<16)y=o+A|0,q[s+4>>2]=3|y,q[(y=s+y+4|0)>>2]=1|q[y>>2];else{if(q[s+4>>2]=3|A,q[c+4>>2]=1|o,q[c+o>>2]=o,n=o>>>3,o>>>0<256){l=23356+(n<<1<<2)|0,(e=0|q[5829])&(n=1<<n)?n=0|q[(e=l+8|0)>>2]:(q[5829]=e|n,n=l,e=l+8|0),q[e>>2]=c,q[n+12>>2]=c,q[c+8>>2]=n,q[c+12>>2]=l;break}if(n=23620+((l=(n=o>>>8)?o>>>0>16777215?31:o>>>((l=14-((g=((y=n<<(_=(n+1048320|0)>>>16&8))+520192|0)>>>16&4)|_|(l=((y<<=g)+245760|0)>>>16&2))+(y<<l>>>15)|0)+7|0)&1|l<<1:0)<<2)|0,q[c+28>>2]=l,q[(e=c+16|0)+4>>2]=0,q[e>>2]=0,!(r&(e=1<<l))){q[5830]=r|e,q[n>>2]=c,q[c+24>>2]=n,q[c+12>>2]=c,q[c+8>>2]=c;break}n=0|q[n>>2];t:do{if((-8&q[n+4>>2]|0)!=(0|o)){for(r=o<<(31==(0|l)?0:25-(l>>>1)|0);e=0|q[(l=n+16+(r>>>31<<2)|0)>>2];){if((-8&q[e+4>>2]|0)==(0|o)){n=e;break t}r<<=1,n=e}q[l>>2]=c,q[c+24>>2]=n,q[c+12>>2]=c,q[c+8>>2]=c;break e}}while(0);y=0|q[(_=n+8|0)>>2],q[y+12>>2]=c,q[_>>2]=c,q[c+8>>2]=y,q[c+12>>2]=n,q[c+24>>2]=0}}while(0);return T=t,0|(y=s+8|0)}m=A}else m=A;else m=-1}while(0);if((l=0|q[5831])>>>0>=m>>>0)return n=l-m|0,e=0|q[5834],n>>>0>15?(y=e+m|0,q[5834]=y,q[5831]=n,q[y+4>>2]=1|n,q[e+l>>2]=n,q[e+4>>2]=3|m):(q[5831]=0,q[5834]=0,q[e+4>>2]=3|l,q[(y=e+l+4|0)>>2]=1|q[y>>2]),T=t,0|(y=e+8|0);if((o=0|q[5832])>>>0>m>>>0)return g=o-m|0,q[5832]=g,_=(y=0|q[5835])+m|0,q[5835]=_,q[_+4>>2]=1|g,q[y+4>>2]=3|m,T=t,0|(y=y+8|0);if(0|q[5947]?e=0|q[5949]:(q[5949]=4096,q[5948]=4096,q[5950]=-1,q[5951]=-1,q[5952]=0,q[5940]=0,q[5947]=-16&h^1431655768,e=4096),s=m+48|0,(A=(a=e+(u=m+47|0)|0)&(i=0-e|0))>>>0<=m>>>0)return T=t,0|(y=0);if(0|(e=0|q[5939])&&(h=(c=0|q[5937])+A|0)>>>0<=c>>>0|h>>>0>e>>>0)return T=t,0|(y=0);e:do{if(4&q[5940])n=0,p=143;else{l=0|q[5835];t:do{if(l){for(r=23764;!((h=0|q[r>>2])>>>0<=l>>>0&&(h+(0|q[r+4>>2])|0)>>>0>l>>>0);){if(!(e=0|q[r+8>>2])){p=128;break t}r=e}if((n=a-o&i)>>>0<2147483647)if((0|(e=0|Ct(0|n)))==((0|q[r>>2])+(0|q[r+4>>2])|0)){if(-1!=(0|e)){o=n,a=e,p=145;break e}}else r=e,p=136;else n=0}else p=128}while(0);do{if(128==(0|p))if(-1!=(0|(l=0|Ct(0)))&&(n=l,d=(n=(0==((d=(f=0|q[5948])+-1|0)&n|0)?0:(d+n&0-f)-n|0)+A|0)+(f=0|q[5937])|0,n>>>0>m>>>0&n>>>0<2147483647)){if(0|(h=0|q[5939])&&d>>>0<=f>>>0|d>>>0>h>>>0){n=0;break}if((0|(e=0|Ct(0|n)))==(0|l)){o=n,a=l,p=145;break e}r=e,p=136}else n=0}while(0);do{if(136==(0|p)){if(l=0-n|0,!(s>>>0>n>>>0&n>>>0<2147483647&-1!=(0|r))){if(-1==(0|r)){n=0;break}o=n,a=r,p=145;break e}if((e=u-n+(e=0|q[5949])&0-e)>>>0>=2147483647){o=n,a=r,p=145;break e}if(-1==(0|Ct(0|e))){Ct(0|l),n=0;break}o=e+n|0,a=r,p=145;break e}}while(0);q[5940]=4|q[5940],p=143}}while(0);if(143==(0|p)&&A>>>0<2147483647&&!(-1==(0|(g=0|Ct(0|A)))|1^(v=(x=(d=0|Ct(0))-g|0)>>>0>(m+40|0)>>>0)|g>>>0<d>>>0&-1!=(0|g)&-1!=(0|d)^1)&&(o=v?x:n,a=g,p=145),145==(0|p)){n=(0|q[5937])+o|0,q[5937]=n,n>>>0>(0|q[5938])>>>0&&(q[5938]=n),u=0|q[5835];e:do{if(u){for(n=23764;;){if((0|a)==((e=0|q[n>>2])+(l=0|q[n+4>>2])|0)){p=154;break}if(!(r=0|q[n+8>>2]))break;n=r}if(154==(0|p)&&(_=n+4|0,0==(8&q[n+12>>2]|0))&&a>>>0>u>>>0&e>>>0<=u>>>0){q[_>>2]=l+o,_=u+(g=0==(7&(g=u+8|0)|0)?0:0-g&7)|0,g=(y=(0|q[5832])+o|0)-g|0,q[5835]=_,q[5832]=g,q[_+4>>2]=1|g,q[u+y+4>>2]=40,q[5836]=q[5951];break}for(a>>>0<(0|q[5833])>>>0&&(q[5833]=a),l=a+o|0,n=23764;;){if((0|q[n>>2])==(0|l)){p=162;break}if(!(e=0|q[n+8>>2]))break;n=e}if(162==(0|p)&&0==(8&q[n+12>>2]|0)){q[n>>2]=a,q[(c=n+4|0)>>2]=(0|q[c>>2])+o,A=(c=a+(0==(7&(c=a+8|0)|0)?0:0-c&7)|0)+m|0,s=(n=l+(0==(7&(n=l+8|0)|0)?0:0-n&7)|0)-c-m|0,q[c+4>>2]=3|m;t:do{if((0|u)==(0|n))y=(0|q[5832])+s|0,q[5832]=y,q[5835]=A,q[A+4>>2]=1|y;else{if((0|q[5834])==(0|n)){y=(0|q[5831])+s|0,q[5831]=y,q[5834]=A,q[A+4>>2]=1|y,q[A+y>>2]=y;break}if(1==(3&(e=0|q[n+4>>2])|0)){o=-8&e,r=e>>>3;n:do{if(e>>>0<256){if(e=0|q[n+8>>2],(0|(l=0|q[n+12>>2]))==(0|e)){q[5829]=q[5829]&~(1<<r);break}q[e+12>>2]=l,q[l+8>>2]=e;break}a=0|q[n+24>>2],e=0|q[n+12>>2];do{if((0|e)==(0|n)){if(e=0|q[(r=(l=n+16|0)+4|0)>>2])l=r;else if(!(e=0|q[l>>2])){e=0;break}for(;;)if(r=0|q[(i=e+20|0)>>2])e=r,l=i;else{if(!(r=0|q[(i=e+16|0)>>2]))break;e=r,l=i}q[l>>2]=0}else y=0|q[n+8>>2],q[y+12>>2]=e,q[e+8>>2]=y}while(0);if(!a)break;r=23620+((l=0|q[n+28>>2])<<2)|0;do{if((0|q[r>>2])==(0|n)){if(q[r>>2]=e,0|e)break;q[5830]=q[5830]&~(1<<l);break n}if(q[((0|q[(y=a+16|0)>>2])==(0|n)?y:a+20|0)>>2]=e,!e)break n}while(0);if(q[e+24>>2]=a,0|(r=0|q[(l=n+16|0)>>2])&&(q[e+16>>2]=r,q[r+24>>2]=e),!(l=0|q[l+4>>2]))break;q[e+20>>2]=l,q[l+24>>2]=e}while(0);n=n+o|0,i=o+s|0}else i=s;if(q[(n=n+4|0)>>2]=-2&q[n>>2],q[A+4>>2]=1|i,q[A+i>>2]=i,n=i>>>3,i>>>0<256){l=23356+(n<<1<<2)|0,(e=0|q[5829])&(n=1<<n)?n=0|q[(e=l+8|0)>>2]:(q[5829]=e|n,n=l,e=l+8|0),q[e>>2]=A,q[n+12>>2]=A,q[A+8>>2]=n,q[A+12>>2]=l;break}n=i>>>8;do{if(n){if(i>>>0>16777215){r=31;break}r=i>>>((r=14-((g=((y=n<<(_=(n+1048320|0)>>>16&8))+520192|0)>>>16&4)|_|(r=((y<<=g)+245760|0)>>>16&2))+(y<<r>>>15)|0)+7|0)&1|r<<1}else r=0}while(0);if(n=23620+(r<<2)|0,q[A+28>>2]=r,q[(e=A+16|0)+4>>2]=0,q[e>>2]=0,!((e=0|q[5830])&(l=1<<r))){q[5830]=e|l,q[n>>2]=A,q[A+24>>2]=n,q[A+12>>2]=A,q[A+8>>2]=A;break}n=0|q[n>>2];n:do{if((-8&q[n+4>>2]|0)!=(0|i)){for(r=i<<(31==(0|r)?0:25-(r>>>1)|0);e=0|q[(l=n+16+(r>>>31<<2)|0)>>2];){if((-8&q[e+4>>2]|0)==(0|i)){n=e;break n}r<<=1,n=e}q[l>>2]=A,q[A+24>>2]=n,q[A+12>>2]=A,q[A+8>>2]=A;break t}}while(0);y=0|q[(_=n+8|0)>>2],q[y+12>>2]=A,q[_>>2]=A,q[A+8>>2]=y,q[A+12>>2]=n,q[A+24>>2]=0}}while(0);return T=t,0|(y=c+8|0)}for(n=23764;!((e=0|q[n>>2])>>>0<=u>>>0&&(y=e+(0|q[n+4>>2])|0)>>>0>u>>>0);)n=0|q[n+8>>2];n=(e=(e=(i=y+-47|0)+(0==(7&(e=i+8|0)|0)?0:0-e&7)|0)>>>0<(i=u+16|0)>>>0?u:e)+8|0,_=a+(g=0==(7&(g=a+8|0)|0)?0:0-g&7)|0,g=(l=o+-40|0)-g|0,q[5835]=_,q[5832]=g,q[_+4>>2]=1|g,q[a+l+4>>2]=40,q[5836]=q[5951],q[(l=e+4|0)>>2]=27,q[n>>2]=q[5941],q[n+4>>2]=q[5942],q[n+8>>2]=q[5943],q[n+12>>2]=q[5944],q[5941]=a,q[5942]=o,q[5944]=0,q[5943]=n,n=e+24|0;do{_=n,q[(n=n+4|0)>>2]=7}while((_+8|0)>>>0<y>>>0);if((0|e)!=(0|u)){if(a=e-u|0,q[l>>2]=-2&q[l>>2],q[u+4>>2]=1|a,q[e>>2]=a,n=a>>>3,a>>>0<256){l=23356+(n<<1<<2)|0,(e=0|q[5829])&(n=1<<n)?n=0|q[(e=l+8|0)>>2]:(q[5829]=e|n,n=l,e=l+8|0),q[e>>2]=u,q[n+12>>2]=u,q[u+8>>2]=n,q[u+12>>2]=l;break}if(l=23620+((r=(n=a>>>8)?a>>>0>16777215?31:a>>>((r=14-((g=((y=n<<(_=(n+1048320|0)>>>16&8))+520192|0)>>>16&4)|_|(r=((y<<=g)+245760|0)>>>16&2))+(y<<r>>>15)|0)+7|0)&1|r<<1:0)<<2)|0,q[u+28>>2]=r,q[u+20>>2]=0,q[i>>2]=0,!((n=0|q[5830])&(e=1<<r))){q[5830]=n|e,q[l>>2]=u,q[u+24>>2]=l,q[u+12>>2]=u,q[u+8>>2]=u;break}n=0|q[l>>2];t:do{if((-8&q[n+4>>2]|0)!=(0|a)){for(r=a<<(31==(0|r)?0:25-(r>>>1)|0);e=0|q[(l=n+16+(r>>>31<<2)|0)>>2];){if((-8&q[e+4>>2]|0)==(0|a)){n=e;break t}r<<=1,n=e}q[l>>2]=u,q[u+24>>2]=n,q[u+12>>2]=u,q[u+8>>2]=u;break e}}while(0);y=0|q[(_=n+8|0)>>2],q[y+12>>2]=u,q[_>>2]=u,q[u+8>>2]=y,q[u+12>>2]=n,q[u+24>>2]=0}}else 0==(0|(y=0|q[5833]))|a>>>0<y>>>0&&(q[5833]=a),q[5941]=a,q[5942]=o,q[5944]=0,q[5838]=q[5947],q[5837]=-1,q[5842]=23356,q[5841]=23356,q[5844]=23364,q[5843]=23364,q[5846]=23372,q[5845]=23372,q[5848]=23380,q[5847]=23380,q[5850]=23388,q[5849]=23388,q[5852]=23396,q[5851]=23396,q[5854]=23404,q[5853]=23404,q[5856]=23412,q[5855]=23412,q[5858]=23420,q[5857]=23420,q[5860]=23428,q[5859]=23428,q[5862]=23436,q[5861]=23436,q[5864]=23444,q[5863]=23444,q[5866]=23452,q[5865]=23452,q[5868]=23460,q[5867]=23460,q[5870]=23468,q[5869]=23468,q[5872]=23476,q[5871]=23476,q[5874]=23484,q[5873]=23484,q[5876]=23492,q[5875]=23492,q[5878]=23500,q[5877]=23500,q[5880]=23508,q[5879]=23508,q[5882]=23516,q[5881]=23516,q[5884]=23524,q[5883]=23524,q[5886]=23532,q[5885]=23532,q[5888]=23540,q[5887]=23540,q[5890]=23548,q[5889]=23548,q[5892]=23556,q[5891]=23556,q[5894]=23564,q[5893]=23564,q[5896]=23572,q[5895]=23572,q[5898]=23580,q[5897]=23580,q[5900]=23588,q[5899]=23588,q[5902]=23596,q[5901]=23596,q[5904]=23604,q[5903]=23604,_=a+(g=0==(7&(g=a+8|0)|0)?0:0-g&7)|0,g=(y=o+-40|0)-g|0,q[5835]=_,q[5832]=g,q[_+4>>2]=1|g,q[a+y+4>>2]=40,q[5836]=q[5951]}while(0);if((n=0|q[5832])>>>0>m>>>0)return g=n-m|0,q[5832]=g,_=(y=0|q[5835])+m|0,q[5835]=_,q[_+4>>2]=1|g,q[y+4>>2]=3|m,T=t,0|(y=y+8|0)}return q[(y=23312)>>2]=12,T=t,0|(y=0)}function xt(e){var t=0,n=0,l=0,r=0,i=0,a=0,o=0,s=0;if(e|=0){n=e+-8|0,r=0|q[5833],s=n+(t=-8&(e=0|q[e+-4>>2]))|0;do{if(1&e)o=n,a=n;else{if(l=0|q[n>>2],!(3&e))return;if(i=l+t|0,(a=n+(0-l)|0)>>>0<r>>>0)return;if((0|q[5834])==(0|a)){if(3!=(3&(t=0|q[(e=s+4|0)>>2])|0)){o=a,t=i;break}return q[5831]=i,q[e>>2]=-2&t,q[a+4>>2]=1|i,void(q[a+i>>2]=i)}if(n=l>>>3,l>>>0<256){if(e=0|q[a+8>>2],(0|(t=0|q[a+12>>2]))==(0|e)){q[5829]=q[5829]&~(1<<n),o=a,t=i;break}q[e+12>>2]=t,q[t+8>>2]=e,o=a,t=i;break}r=0|q[a+24>>2],e=0|q[a+12>>2];do{if((0|e)==(0|a)){if(e=0|q[(n=(t=a+16|0)+4|0)>>2])t=n;else if(!(e=0|q[t>>2])){e=0;break}for(;;)if(n=0|q[(l=e+20|0)>>2])e=n,t=l;else{if(!(n=0|q[(l=e+16|0)>>2]))break;e=n,t=l}q[t>>2]=0}else o=0|q[a+8>>2],q[o+12>>2]=e,q[e+8>>2]=o}while(0);if(r){if(t=0|q[a+28>>2],(0|q[(n=23620+(t<<2)|0)>>2])==(0|a)){if(q[n>>2]=e,!e){q[5830]=q[5830]&~(1<<t),o=a,t=i;break}}else if(q[((0|q[(o=r+16|0)>>2])==(0|a)?o:r+20|0)>>2]=e,!e){o=a,t=i;break}q[e+24>>2]=r,0|(n=0|q[(t=a+16|0)>>2])&&(q[e+16>>2]=n,q[n+24>>2]=e),(t=0|q[t+4>>2])?(q[e+20>>2]=t,q[t+24>>2]=e,o=a,t=i):(o=a,t=i)}else o=a,t=i}}while(0);if(!(a>>>0>=s>>>0)&&1&(l=0|q[(e=s+4|0)>>2])){if(2&l)q[e>>2]=-2&l,q[o+4>>2]=1|t,q[a+t>>2]=t,r=t;else{if((0|q[5835])==(0|s)){if(s=(0|q[5832])+t|0,q[5832]=s,q[5835]=o,q[o+4>>2]=1|s,(0|o)!=(0|q[5834]))return;return q[5834]=0,void(q[5831]=0)}if((0|q[5834])==(0|s))return s=(0|q[5831])+t|0,q[5831]=s,q[5834]=a,q[o+4>>2]=1|s,void(q[a+s>>2]=s);r=(-8&l)+t|0,n=l>>>3;do{if(l>>>0<256){if(t=0|q[s+8>>2],(0|(e=0|q[s+12>>2]))==(0|t)){q[5829]=q[5829]&~(1<<n);break}q[t+12>>2]=e,q[e+8>>2]=t;break}i=0|q[s+24>>2],e=0|q[s+12>>2];do{if((0|e)==(0|s)){if(e=0|q[(n=(t=s+16|0)+4|0)>>2])t=n;else if(!(e=0|q[t>>2])){n=0;break}for(;;)if(n=0|q[(l=e+20|0)>>2])e=n,t=l;else{if(!(n=0|q[(l=e+16|0)>>2]))break;e=n,t=l}q[t>>2]=0,n=e}else n=0|q[s+8>>2],q[n+12>>2]=e,q[e+8>>2]=n,n=e}while(0);if(0|i){if(e=0|q[s+28>>2],(0|q[(t=23620+(e<<2)|0)>>2])==(0|s)){if(q[t>>2]=n,!n){q[5830]=q[5830]&~(1<<e);break}}else if(q[((0|q[(l=i+16|0)>>2])==(0|s)?l:i+20|0)>>2]=n,!n)break;q[n+24>>2]=i,0|(t=0|q[(e=s+16|0)>>2])&&(q[n+16>>2]=t,q[t+24>>2]=n),0|(e=0|q[e+4>>2])&&(q[n+20>>2]=e,q[e+24>>2]=n)}}while(0);if(q[o+4>>2]=1|r,q[a+r>>2]=r,(0|o)==(0|q[5834]))return void(q[5831]=r)}if(e=r>>>3,r>>>0<256)return n=23356+(e<<1<<2)|0,(t=0|q[5829])&(e=1<<e)?e=0|q[(t=n+8|0)>>2]:(q[5829]=t|e,e=n,t=n+8|0),q[t>>2]=o,q[e+12>>2]=o,q[o+8>>2]=e,void(q[o+12>>2]=n);e=23620+((l=(e=r>>>8)?r>>>0>16777215?31:r>>>((l=14-((i=((s=e<<(a=(e+1048320|0)>>>16&8))+520192|0)>>>16&4)|a|(l=((s<<=i)+245760|0)>>>16&2))+(s<<l>>>15)|0)+7|0)&1|l<<1:0)<<2)|0,q[o+28>>2]=l,q[o+20>>2]=0,q[o+16>>2]=0,t=0|q[5830],n=1<<l;e:do{if(t&n){e=0|q[e>>2];t:do{if((-8&q[e+4>>2]|0)!=(0|r)){for(l=r<<(31==(0|l)?0:25-(l>>>1)|0);t=0|q[(n=e+16+(l>>>31<<2)|0)>>2];){if((-8&q[t+4>>2]|0)==(0|r)){e=t;break t}l<<=1,e=t}q[n>>2]=o,q[o+24>>2]=e,q[o+12>>2]=o,q[o+8>>2]=o;break e}}while(0);s=0|q[(a=e+8|0)>>2],q[s+12>>2]=o,q[a>>2]=o,q[o+8>>2]=s,q[o+12>>2]=e,q[o+24>>2]=0}else q[5830]=t|n,q[e>>2]=o,q[o+24>>2]=e,q[o+12>>2]=o,q[o+8>>2]=o}while(0);if(s=(0|q[5837])-1|0,q[5837]=s,!(0|s)){for(e=23772;e=0|q[e>>2];)e=e+8|0;q[5837]=-1}}}}function vt(e,t){t|=0;var n=0;return(e|=0)?(n=0|v(t,e),(t|e)>>>0>65535&&(n=(0|(n>>>0)/(e>>>0))==(0|t)?n:-1)):n=0,(e=0|pt(n))&&3&q[e+-4>>2]?(kt(0|e,0,0|n),0|e):0|e}function gt(e,t,n,l){return 0|(y(0|(l=(t|=0)-(l|=0)-((n|=0)>>>0>(e|=0)>>>0|0)>>>0)),e-n>>>0|0)}function _t(e){return 0|((e|=0)?31-(0|_(e^e-1))|0:32)}function yt(e,t,n,l,r){r|=0;var i=0,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0;if(A=e|=0,a=n|=0,o=m=l|=0,!(u=s=t|=0))return i=0!=(0|r),o?i?(q[r>>2]=0|e,q[r+4>>2]=0&t,r=0,0|(y(0|(m=0)),r)):(r=0,0|(y(0|(m=0)),r)):(i&&(q[r>>2]=(A>>>0)%(a>>>0),q[r+4>>2]=0),r=(A>>>0)/(a>>>0)>>>0,0|(y(0|(m=0)),r));i=0==(0|o);do{if(a){if(!i){if((i=(0|_(0|o))-(0|_(0|u))|0)>>>0<=31){a=c=i+1|0,e=A>>>(c>>>0)&(t=i-31>>31)|u<<(o=31-i|0),t&=u>>>(c>>>0),i=0,o=A<<o;break}return r?(q[r>>2]=0|e,q[r+4>>2]=s|0&t,r=0,0|(y(0|(m=0)),r)):(r=0,0|(y(0|(m=0)),r))}if((i=a-1|0)&a|0){a=o=33+(0|_(0|a))-(0|_(0|u))|0,e=(c=32-o|0)-1>>31&u>>>((h=o-32|0)>>>0)|(u<<c|A>>>(o>>>0))&(t=h>>31),t&=u>>>(o>>>0),i=A<<(f=64-o|0)&(s=c>>31),o=(u<<f|A>>>(h>>>0))&s|A<<c&o-33>>31;break}return 0|r&&(q[r>>2]=i&A,q[r+4>>2]=0),1==(0|a)?(f=0|e,0|(y(0|(h=s|0&t)),f)):(h=u>>>((f=0|_t(0|a))>>>0)|0,f=u<<32-f|A>>>(f>>>0)|0,0|(y(0|h),f))}if(i)return 0|r&&(q[r>>2]=(u>>>0)%(a>>>0),q[r+4>>2]=0),f=(u>>>0)/(a>>>0)>>>0,0|(y(0|(h=0)),f);if(!A)return 0|r&&(q[r>>2]=0,q[r+4>>2]=(u>>>0)%(o>>>0)),f=(u>>>0)/(o>>>0)>>>0,0|(y(0|(h=0)),f);if(!((i=o-1|0)&o))return 0|r&&(q[r>>2]=0|e,q[r+4>>2]=i&u|0&t),h=0,f=u>>>((0|_t(0|o))>>>0),0|(y(0|h),f);if((i=(0|_(0|o))-(0|_(0|u))|0)>>>0<=30){a=t=i+1|0,e=u<<(o=31-i|0)|A>>>(t>>>0),t=u>>>(t>>>0),i=0,o=A<<o;break}return r?(q[r>>2]=0|e,q[r+4>>2]=s|0&t,f=0,0|(y(0|(h=0)),f)):(f=0,0|(y(0|(h=0)),f))}while(0);if(a){u=0|function(e,t,n,l){return 0|(y((t|=0)+(l|=0)+((n=(e|=0)+(n|=0)>>>0)>>>0<e>>>0|0)>>>0|0),0|n)}(0|(c=0|n),0|(A=m|0&l),-1,-1),n=0|b(),s=o,o=0;do{l=s,s=i>>>31|s<<1,i=o|i<<1,gt(0|u,0|n,0|(l=e<<1|l>>>31|0),0|(m=e>>>31|t<<1|0)),o=1&(h=(f=0|b())>>31|((0|f)<0?-1:0)<<1),e=0|gt(0|l,0|m,h&c|0,(((0|f)<0?-1:0)>>31|((0|f)<0?-1:0)<<1)&A|0),t=0|b(),a=a-1|0}while(0!=(0|a));u=s,s=0}else u=o,s=0,o=0;return a=0,0|r&&(q[r>>2]=e,q[r+4>>2]=t),f=-2&(i<<1|0)|o,0|(y(0|(h=(0|i)>>>31|(u|a)<<1|0&(a<<1|i>>>31)|s)),f)}function bt(e,t,n,l){var r,i;return i=T,T=T+16|0,yt(e|=0,t|=0,n|=0,l|=0,r=0|i),T=i,0|(y(0|q[r+4>>2]),0|q[r>>2])}function wt(e,t,n){return e|=0,t|=0,(0|(n|=0))<32?(y(t>>>n|0),e>>>n|(t&(1<<n)-1)<<32-n):(y(0),t>>>n-32|0)}function Mt(e,t,n){return e|=0,t|=0,(0|(n|=0))<32?(y(t<<n|(e&(1<<n)-1<<32-n)>>>32-n|0),e<<n):(y(e<<n-32|0),0)}function St(e,t){return t=+t,(e=+e)!=e?+t:t!=t?+e:+g(+e,+t)}function Et(e){return(e=+e)>=0?+a(e+.5):+x(e-.5)}function zt(e,t,n){e|=0,t|=0;var r,i,a=0;if((0|(n|=0))>=8192)return E(0|e,0|t,0|n),0|e;if(i=0|e,r=e+n|0,(3&e)==(3&t)){for(;3&e;){if(!n)return 0|i;l[e>>0]=0|l[t>>0],e=e+1|0,t=t+1|0,n=n-1|0}for(a=(n=-4&r|0)-64|0;(0|e)<=(0|a);)q[e>>2]=q[t>>2],q[e+4>>2]=q[t+4>>2],q[e+8>>2]=q[t+8>>2],q[e+12>>2]=q[t+12>>2],q[e+16>>2]=q[t+16>>2],q[e+20>>2]=q[t+20>>2],q[e+24>>2]=q[t+24>>2],q[e+28>>2]=q[t+28>>2],q[e+32>>2]=q[t+32>>2],q[e+36>>2]=q[t+36>>2],q[e+40>>2]=q[t+40>>2],q[e+44>>2]=q[t+44>>2],q[e+48>>2]=q[t+48>>2],q[e+52>>2]=q[t+52>>2],q[e+56>>2]=q[t+56>>2],q[e+60>>2]=q[t+60>>2],e=e+64|0,t=t+64|0;for(;(0|e)<(0|n);)q[e>>2]=q[t>>2],e=e+4|0,t=t+4|0}else for(n=r-4|0;(0|e)<(0|n);)l[e>>0]=0|l[t>>0],l[e+1>>0]=0|l[t+1>>0],l[e+2>>0]=0|l[t+2>>0],l[e+3>>0]=0|l[t+3>>0],e=e+4|0,t=t+4|0;for(;(0|e)<(0|r);)l[e>>0]=0|l[t>>0],e=e+1|0,t=t+1|0;return 0|i}function kt(e,t,n){t|=0;var r,i=0,a=0,o=0;if(r=(e|=0)+(n|=0)|0,t&=255,(0|n)>=67){for(;3&e;)l[e>>0]=t,e=e+1|0;for(o=t|t<<8|t<<16|t<<24,a=(i=-4&r|0)-64|0;(0|e)<=(0|a);)q[e>>2]=o,q[e+4>>2]=o,q[e+8>>2]=o,q[e+12>>2]=o,q[e+16>>2]=o,q[e+20>>2]=o,q[e+24>>2]=o,q[e+28>>2]=o,q[e+32>>2]=o,q[e+36>>2]=o,q[e+40>>2]=o,q[e+44>>2]=o,q[e+48>>2]=o,q[e+52>>2]=o,q[e+56>>2]=o,q[e+60>>2]=o,e=e+64|0;for(;(0|e)<(0|i);)q[e>>2]=o,e=e+4|0}for(;(0|e)<(0|r);)l[e>>0]=t,e=e+1|0;return r-n|0}function Tt(e){return(e=+e)>=0?+a(e+.5):+x(e-.5)}function Ct(e){e|=0;var t,n,l;return l=0|S(),(0|e)>0&(0|(t=(n=0|q[i>>2])+e|0))<(0|n)|(0|t)<0?(k(0|t),M(12),-1):(0|t)>(0|l)&&!(0|z(0|t))?(M(12),-1):(q[i>>2]=t,0|n)}return{___uremdi3:bt,_bitshift64Lshr:wt,_bitshift64Shl:Mt,_calloc:vt,_cellAreaKm2:function(e,t){var n,l,r,i=0;if(r=T,T=T+192|0,l=r,je(e|=0,t|=0,n=r+168|0),Ve(e,t,l),(0|(t=0|q[l>>2]))>0){if(i=+ke(l+8|0,l+8+((1!=(0|t)&1)<<4)|0,n)+0,1!=(0|t)){e=1;do{i+=+ke(l+8+(e<<4)|0,l+8+(((0|(e=e+1|0))%(0|t)|0)<<4)|0,n)}while((0|e)<(0|t))}}else i=0;return T=r,6371.007180918475*i*6371.007180918475},_cellAreaM2:function(e,t){var n,l,r,i=0;if(r=T,T=T+192|0,l=r,je(e|=0,t|=0,n=r+168|0),Ve(e,t,l),(0|(t=0|q[l>>2]))>0){if(i=+ke(l+8|0,l+8+((1!=(0|t)&1)<<4)|0,n)+0,1!=(0|t)){e=1;do{i+=+ke(l+8+(e<<4)|0,l+8+(((0|(e=e+1|0))%(0|t)|0)<<4)|0,n)}while((0|e)<(0|t))}}else i=0;return T=r,6371.007180918475*i*6371.007180918475*1e3*1e3},_cellAreaRads2:function(e,t){var n,l,r,i=0;if(r=T,T=T+192|0,l=r,je(e|=0,t|=0,n=r+168|0),Ve(e,t,l),(0|(t=0|q[l>>2]))<=0)return T=r,+(i=0);if(i=+ke(l+8|0,l+8+((1!=(0|t)&1)<<4)|0,n)+0,1==(0|t))return T=r,+i;e=1;do{i+=+ke(l+8+(e<<4)|0,l+8+(((0|(e=e+1|0))%(0|t)|0)<<4)|0,n)}while((0|e)<(0|t));return T=r,+i},_compact:function(e,t,n){t|=0;var l,r=0,i=0,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0,w=0,M=0,S=0;if(!(n|=0))return 0|(M=0);if(r=0|q[(i=e|=0)>>2],!0&0==(15728640&(i=0|q[i+4>>2])|0)){if((0|n)<=0)return 0|(M=0);if(q[(M=t)>>2]=r,q[M+4>>2]=i,1==(0|n))return 0|(M=0);r=1;do{w=0|q[(y=e+(r<<3)|0)+4>>2],q[(M=t+(r<<3)|0)>>2]=q[y>>2],q[M+4>>2]=w,r=r+1|0}while((0|r)!=(0|n));return 0|(r=0)}if(!(w=0|pt(y=n<<3)))return 0|(M=-3);if(zt(0|w,0|e,0|y),!(l=0|vt(n,8)))return xt(w),0|(M=-3);r=n;e:for(;;){g=0|wt(0|(c=0|q[(o=w)>>2]),0|(o=0|q[o+4>>2]),52),b(),_=(g&=15)+-1|0,v=(0|r)>0;t:do{if(v){if(x=((0|r)<0)<<31>>31,d=0|Mt(0|_,0,52),p=0|b(),_>>>0>15)for(i=0,e=c,n=o;;){if(!(0==(0|e)&0==(0|n))){if(a=0|wt(0|e,0|n,52),b(),s=(0|(a&=15))<(0|_),a=(0|a)==(0|_),n=0|bt(0|(A=s?0:a?e:0),0|(e=s?0:a?n:0),0|r,0|x),b(),0==(0|(u=0|q[(s=a=l+(n<<3)|0)>>2]))&0==(0|(s=0|q[s+4>>2])))n=A;else for(d=0,f=n,h=s,n=A;;){if((0|d)>(0|r)){M=41;break e}if((0|u)==(0|n)&(-117440513&h|0)==(0|e)){A=0|wt(0|u,0|h,56),b(),m=(A&=7)+1|0,p=0|wt(0|u,0|h,45),b();n:do{if(0|I(127&p)){if(u=0|wt(0|u,0|h,52),b(),!(u&=15)){s=6;break}for(s=1;;){if(!(0==((p=0|Mt(7,0,3*(15-s|0)|0))&n|0)&0==((0|b())&e|0))){s=7;break n}if(!(s>>>0<u>>>0)){s=6;break}s=s+1|0}}else s=7}while(0);if((A+2|0)>>>0>s>>>0){M=51;break e}p=0|Mt(0|m,0,56),e=0|b()|-117440513&e,q[(s=a)>>2]=0,q[s+4>>2]=0,s=f,n|=p}else s=(f+1|0)%(0|r)|0;if(0==(0|(u=0|q[(h=a=l+(s<<3)|0)>>2]))&0==(0|(h=0|q[h+4>>2])))break;d=d+1|0,f=s}q[(p=a)>>2]=n,q[p+4>>2]=e}if((0|(i=i+1|0))>=(0|r))break t;e=0|q[(n=w+(i<<3)|0)>>2],n=0|q[n+4>>2]}for(i=0,e=c,n=o;;){if(!(0==(0|e)&0==(0|n))){if(s=0|wt(0|e,0|n,52),b(),(0|(s&=15))>=(0|_)){if((0|s)!=(0|_)&&(e|=d,n=-15728641&n|p,s>>>0>=g>>>0)){a=_;do{f=0|Mt(7,0,3*(14-a|0)|0),a=a+1|0,e|=f,n=0|b()|n}while(a>>>0<s>>>0)}}else e=0,n=0;if(s=0|bt(0|e,0|n,0|r,0|x),b(),!(0==(0|(A=0|q[(u=a=l+(s<<3)|0)>>2]))&0==(0|(u=0|q[u+4>>2]))))for(f=0;;){if((0|f)>(0|r)){M=41;break e}if((0|A)==(0|e)&(-117440513&u|0)==(0|n)){m=0|wt(0|A,0|u,56),b(),h=(m&=7)+1|0,S=0|wt(0|A,0|u,45),b();n:do{if(0|I(127&S)){if(A=0|wt(0|A,0|u,52),b(),!(A&=15)){u=6;break}for(u=1;;){if(!(0==((S=0|Mt(7,0,3*(15-u|0)|0))&e|0)&0==((0|b())&n|0))){u=7;break n}if(!(u>>>0<A>>>0)){u=6;break}u=u+1|0}}else u=7}while(0);if((m+2|0)>>>0>u>>>0){M=51;break e}S=0|Mt(0|h,0,56),n=0|b()|-117440513&n,q[(h=a)>>2]=0,q[h+4>>2]=0,e|=S}else s=(s+1|0)%(0|r)|0;if(0==(0|(A=0|q[(u=a=l+(s<<3)|0)>>2]))&0==(0|(u=0|q[u+4>>2])))break;f=f+1|0}q[(S=a)>>2]=e,q[S+4>>2]=n}if((0|(i=i+1|0))>=(0|r))break t;e=0|q[(n=w+(i<<3)|0)>>2],n=0|q[n+4>>2]}}}while(0);if((r+5|0)>>>0<11){M=99;break}if(!(p=0|vt((0|r)/6|0,8))){M=58;break}t:do{if(v){f=0,h=0;do{if(!(0==(0|(i=0|q[(e=s=l+(f<<3)|0)>>2]))&0==(0|(e=0|q[e+4>>2])))){u=0|wt(0|i,0|e,56),b(),n=(u&=7)+1|0,A=-117440513&e,S=0|wt(0|i,0|e,45),b();n:do{if(0|I(127&S)){if(m=0|wt(0|i,0|e,52),b(),0|(m&=15))for(a=1;;){if(!(0==(i&(S=0|Mt(7,0,3*(15-a|0)|0))|0)&0==(A&(0|b())|0)))break n;if(!(a>>>0<m>>>0))break;a=a+1|0}i|=e=0|Mt(0|n,0,56),e=0|b()|A,q[(n=s)>>2]=i,q[n+4>>2]=e,n=u+2|0}}while(0);7==(0|n)&&(q[(S=p+(h<<3)|0)>>2]=i,q[S+4>>2]=-117440513&e,h=h+1|0)}f=f+1|0}while((0|f)!=(0|r));if(v){if(d=((0|r)<0)<<31>>31,m=0|Mt(0|_,0,52),f=0|b(),_>>>0>15)for(e=0,i=0;;){do{if(!(0==(0|c)&0==(0|o))){for(u=0|wt(0|c,0|o,52),b(),a=(0|(u&=15))<(0|_),u=(0|u)==(0|_),a=0|bt(0|(s=a?0:u?c:0),0|(u=a?0:u?o:0),0|r,0|d),b(),n=0;;){if((0|n)>(0|r)){M=98;break e}if((-117440513&(A=0|q[(S=l+(a<<3)|0)+4>>2])|0)==(0|u)&&(0|q[S>>2])==(0|s)){M=70;break}if((0|q[(S=l+((a=(a+1|0)%(0|r)|0)<<3)|0)>>2])==(0|s)&&(0|q[S+4>>2])==(0|u))break;n=n+1|0}if(70==(0|M)&&(M=0,!0&100663296==(117440512&A|0)))break;q[(S=t+(i<<3)|0)>>2]=c,q[S+4>>2]=o,i=i+1|0}}while(0);if((0|(e=e+1|0))>=(0|r)){r=h;break t}c=0|q[(o=w+(e<<3)|0)>>2],o=0|q[o+4>>2]}for(e=0,i=0;;){do{if(!(0==(0|c)&0==(0|o))){if(u=0|wt(0|c,0|o,52),b(),(0|(u&=15))>=(0|_))if((0|u)!=(0|_))if(n=c|m,a=-15728641&o|f,u>>>0<g>>>0)u=a;else{s=_;do{S=0|Mt(7,0,3*(14-s|0)|0),s=s+1|0,n|=S,a=0|b()|a}while(s>>>0<u>>>0);u=a}else n=c,u=o;else n=0,u=0;for(s=0|bt(0|n,0|u,0|r,0|d),b(),a=0;;){if((0|a)>(0|r)){M=98;break e}if((-117440513&(A=0|q[(S=l+(s<<3)|0)+4>>2])|0)==(0|u)&&(0|q[S>>2])==(0|n)){M=93;break}if((0|q[(S=l+((s=(s+1|0)%(0|r)|0)<<3)|0)>>2])==(0|n)&&(0|q[S+4>>2])==(0|u))break;a=a+1|0}if(93==(0|M)&&(M=0,!0&100663296==(117440512&A|0)))break;q[(S=t+(i<<3)|0)>>2]=c,q[S+4>>2]=o,i=i+1|0}}while(0);if((0|(e=e+1|0))>=(0|r)){r=h;break t}c=0|q[(o=w+(e<<3)|0)>>2],o=0|q[o+4>>2]}}else i=0,r=h}else i=0,r=0}while(0);if(kt(0|l,0,0|y),zt(0|w,0|p,r<<3|0),xt(p),!r)break;t=t+(i<<3)|0}return 41==(0|M)?(xt(w),xt(l),0|(S=-1)):51==(0|M)?(xt(w),xt(l),0|(S=-2)):58==(0|M)?(xt(w),xt(l),0|(S=-3)):98==(0|M)?(xt(p),xt(w),xt(l),0|(S=-1)):(99==(0|M)&&zt(0|t,0|w,r<<3|0),xt(w),xt(l),0|(S=0))},_destroyLinkedPolygon:function(e){var t=0,n=0,l=0,r=0;if(e|=0)for(l=1;;){if(0|(t=0|q[e>>2]))do{if(0|(n=0|q[t>>2]))do{r=n,n=0|q[n+16>>2],xt(r)}while(0!=(0|n));r=t,t=0|q[t+8>>2],xt(r)}while(0!=(0|t));if(t=e,e=0|q[e+8>>2],l||xt(t),!e)break;l=0}},_edgeLengthKm:function(e){return+ +r[20752+((e|=0)<<3)>>3]},_edgeLengthM:function(e){return+ +r[20880+((e|=0)<<3)>>3]},_emscripten_replace_memory:function(e){return l=new Int8Array(e),new Uint8Array(e),q=new Int32Array(e),new Float32Array(e),r=new Float64Array(e),n=e,!0},_exactEdgeLengthKm:function(e,t){var n,l,i=0,a=0,o=0,u=0,m=0,h=0;if(l=T,T=T+176|0,Ye(e|=0,t|=0,n=l),(0|(e=0|q[n>>2]))<=1)return T=l,+(o=0);t=e+-1|0,e=0,i=0,a=+r[n+8>>3],o=+r[n+16>>3];do{m=a,a=+r[n+8+((e=e+1|0)<<4)>>3],h=+c(.5*(a-m)),u=o,o=+r[n+8+(e<<4)+8>>3],u=h*h+(u=+c(.5*(o-u)))*(+A(+m)*+A(+a)*u),i+=2*+p(+ +s(+u),+ +s(+(1-u)))}while((0|e)!=(0|t));return T=l,+(h=6371.007180918475*i)},_exactEdgeLengthM:function(e,t){var n,l,i=0,a=0,o=0,u=0,m=0,h=0;if(l=T,T=T+176|0,Ye(e|=0,t|=0,n=l),(0|(e=0|q[n>>2]))<=1)return T=l,+(o=0);t=e+-1|0,e=0,i=0,a=+r[n+8>>3],o=+r[n+16>>3];do{m=a,a=+r[n+8+((e=e+1|0)<<4)>>3],h=+c(.5*(a-m)),u=o,o=+r[n+8+(e<<4)+8>>3],u=h*h+(u=+c(.5*(o-u)))*(+A(+m)*+A(+a)*u),i+=2*+p(+ +s(+u),+ +s(+(1-u)))}while((0|e)!=(0|t));return T=l,+(h=6371.007180918475*i*1e3)},_exactEdgeLengthRads:function(e,t){var n,l,i=0,a=0,o=0,u=0,m=0,h=0;if(l=T,T=T+176|0,Ye(e|=0,t|=0,n=l),(0|(e=0|q[n>>2]))<=1)return T=l,+(o=0);t=e+-1|0,e=0,i=0,a=+r[n+8>>3],o=+r[n+16>>3];do{m=a,a=+r[n+8+((e=e+1|0)<<4)>>3],h=+c(.5*(a-m)),u=o,o=+r[n+8+(e<<4)+8>>3],u=h*h+(u=+c(.5*(o-u)))*(+A(+a)*+A(+m)*u),i+=2*+p(+ +s(+u),+ +s(+(1-u)))}while((0|e)<(0|t));return T=l,+i},_experimentalH3ToLocalIj:function(e,t,n,l,q){var r,i;return q|=0,i=T,T=T+16|0,(e=0|$e(e|=0,t|=0,n|=0,l|=0,r=i))||(me(r,q),e=0),T=i,0|e},_experimentalLocalIjToH3:function(e,t,n,l){var q,r;return e|=0,t|=0,l|=0,q=T,T=T+16|0,he(n|=0,r=q),l=0|et(e,t,r,l),T=q,0|l},_free:xt,_geoToH3:Fe,_getDestinationH3IndexFromUnidirectionalEdge:function(e,t){e|=0;var n,l,r=0;return n=T,T=T+16|0,r=n,!0&268435456==(2013265920&(t|=0)|0)?(l=0|wt(0|e,0|t,56),b(),q[r>>2]=0,r=0|R(e,-2130706433&t|134217728,7&l,r),t=0|b(),y(0|t),T=n,0|r):(r=0,y(0|(t=0)),T=n,0|r)},_getH3IndexesFromUnidirectionalEdge:function(e,t,n){e|=0;var l,r,i,a,o=0;i=T,T=T+16|0,l=i,a=!0&268435456==(2013265920&(t|=0)|0),r=-2130706433&t|134217728,q[(o=n|=0)>>2]=a?e:0,q[o+4>>2]=a?r:0,a?(t=0|wt(0|e,0|t,56),b(),q[l>>2]=0,e=0|R(e,r,7&t,l),t=0|b()):(e=0,t=0),q[(o=n+8|0)>>2]=e,q[o+4>>2]=t,T=i},_getH3UnidirectionalEdge:function(e,t,n,l){var r,i,a=0,o=0,s=0,u=0,A=0;if(i=T,T=T+16|0,r=i,!(0|Qe(e|=0,t|=0,n|=0,l|=0)))return u=0,y(0|(s=0)),T=i,0|u;for(s=-2130706433&t,a=(a=0==(0|Re(e,t)))?1:2;q[r>>2]=0,o=a+1|0,!((0|(A=0|R(e,t,a,r)))==(0|n)&(0|b())==(0|l));){if(!(o>>>0<7)){a=0,e=0,u=6;break}a=o}return 6==(0|u)?(y(0|a),T=i,0|e):(A=0|Mt(0|a,0,56),u=0|s|b()|268435456,A|=e,y(0|u),T=i,0|A)},_getH3UnidirectionalEdgeBoundary:Ye,_getH3UnidirectionalEdgesFromHexagon:function(e,t,n){n|=0;var l,r=0;l=0==(0|Re(e|=0,t|=0)),t&=-2130706433,q[(r=n)>>2]=l?e:0,q[r+4>>2]=l?285212672|t:0,q[(r=n+8|0)>>2]=e,q[r+4>>2]=301989888|t,q[(r=n+16|0)>>2]=e,q[r+4>>2]=318767104|t,q[(r=n+24|0)>>2]=e,q[r+4>>2]=335544320|t,q[(r=n+32|0)>>2]=e,q[r+4>>2]=352321536|t,q[(n=n+40|0)>>2]=e,q[n+4>>2]=369098752|t},_getOriginH3IndexFromUnidirectionalEdge:function(e,t){var n;return e|=0,y(0|((n=!0&268435456==(2013265920&(t|=0)|0))?-2130706433&t|134217728:0)),0|(n?e:0)},_getPentagonIndexes:We,_getRes0Indexes:function(e){e|=0;var t=0,n=0,l=0;t=0;do{Mt(0|t,0,45),l=134225919|b(),q[(n=e+(t<<3)|0)>>2]=-1,q[n+4>>2]=l,t=t+1|0}while(122!=(0|t))},_h3Distance:function(e,t,n,l){var q,r,i;return n|=0,l|=0,i=T,T=T+32|0,r=i,e=0==(0|$e(e|=0,t|=0,e,t,q=i+12|0))&&0==(0|$e(e,t,n,l,r))?0|ce(q,r):-1,T=i,0|e},_h3GetBaseCell:Te,_h3GetFaces:function e(t,n,l){l|=0;var r,i=0,a=0,o=0,s=0,u=0,A=0,c=0,m=0;r=T,T=T+128|0,c=r+112|0,o=r+96|0,m=r,a=0|wt(0|(t|=0),0|(n|=0),52),b(),u=15&a,q[c>>2]=u,s=0|wt(0|t,0|n,45),b(),s&=127;e:do{if(0|I(s)){if(0|u)for(i=1;;){if(!(0==((A=0|Mt(7,0,3*(15-i|0)|0))&t|0)&0==((0|b())&n|0))){a=0;break e}if(!(i>>>0<u>>>0))break;i=i+1|0}if(!(1&a))return A=0|Mt(u+1|0,0,52),m=0|b()|-15728641&n,e((A|t)&~(c=0|Mt(7,0,3*(14-u|0)|0)),m&~(0|b()),l),void(T=r);a=1}else a=0}while(0);Ge(t,n,o),a?(_e(o,c,m),A=5):(Me(o,c,m),A=6);e:do{if(0|I(s))if(u)for(i=1;;){if(!(0==((s=0|Mt(7,0,3*(15-i|0)|0))&t|0)&0==((0|b())&n|0))){i=8;break e}if(!(i>>>0<u>>>0)){i=20;break}i=i+1|0}else i=20;else i=8}while(0);if(kt(0|l,-1,0|i),a){a=0;do{for(be(o=m+(a<<4)|0,0|q[c>>2]),o=0|q[o>>2],i=0;!(-1==(0|(u=0|q[(s=l+(i<<2)|0)>>2]))|(0|u)==(0|o));)i=i+1|0;q[s>>2]=o,a=a+1|0}while((0|a)!=(0|A))}else{a=0;do{for(ye(o=m+(a<<4)|0,0|q[c>>2],0,1),o=0|q[o>>2],i=0;!(-1==(0|(u=0|q[(s=l+(i<<2)|0)>>2]))|(0|u)==(0|o));)i=i+1|0;q[s>>2]=o,a=a+1|0}while((0|a)!=(0|A))}T=r},_h3GetResolution:function(e,t){return t=0|wt(0|(e|=0),0|(t|=0),52),b(),15&t|0},_h3IndexesAreNeighbors:Qe,_h3IsPentagon:Re,_h3IsResClassIII:function(e,t){return t=0|wt(0|(e|=0),0|(t|=0),52),b(),1&t|0},_h3IsValid:Ce,_h3Line:function(e,t,n,l,r){n|=0,l|=0,r|=0;var i,a=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0,b=0,w=0;if(i=T,T=T+48|0,s=i+12|0,b=i,0==(0|$e(e|=0,t|=0,e,t,a=i+24|0))&&0==(0|$e(e,t,n,l,s))){if((0|(y=0|ce(a,s)))<0)return T=i,0|(b=y);for(q[a>>2]=0,q[a+4>>2]=0,q[a+8>>2]=0,q[s>>2]=0,q[s+4>>2]=0,q[s+8>>2]=0,$e(e,t,e,t,a),$e(e,t,n,l,s),fe(a),fe(s),y?(d=+(0|y),_=a,n=m=0|q[a>>2],l=h=0|q[(v=a+4|0)>>2],a=f=0|q[(g=a+8|0)>>2],p=+((0|q[s>>2])-m|0)/d,x=+((0|q[s+4>>2])-h|0)/d,d=+((0|q[s+8>>2])-f|0)/d):(v=l=a+4|0,g=f=a+8|0,_=a,n=0|q[a>>2],l=0|q[l>>2],a=0|q[f>>2],p=0,x=0,d=0),q[b>>2]=n,q[(f=b+4|0)>>2]=l,q[(h=b+8|0)>>2]=a,m=0;;){w=p*(A=+(0|m))+ +(0|n),u=x*A+ +(0|q[v>>2]),A=d*A+ +(0|q[g>>2]),l=~~+Et(+w),s=~~+Et(+u),n=~~+Et(+A),w=+o(+(+(0|l)-w)),u=+o(+(+(0|s)-u)),A=+o(+(+(0|n)-A));do{if(!(w>u&w>A)){if(c=0-l|0,u>A){a=c-n|0;break}a=s,n=c-s|0;break}l=0-(s+n)|0,a=s}while(0);if(q[b>>2]=l,q[f>>2]=a,q[h>>2]=n,de(b),et(e,t,b,r+(m<<3)|0),(0|m)==(0|y))break;m=m+1|0,n=0|q[_>>2]}return T=i,0|(b=0)}return T=i,0|(b=-1)},_h3LineSize:function(e,t,n,l){var q,r,i;return n|=0,l|=0,i=T,T=T+32|0,r=i,e=0==(0|$e(e|=0,t|=0,e,t,q=i+12|0))&&0==(0|$e(e,t,n,l,r))?0|ce(q,r):-1,T=i,(e>>>31^1)+e|0},_h3SetToLinkedGeo:function(e,t,n){n|=0;var l,r,i,a=0;if(i=T,T=T+32|0,l=i,function(e,t,n){e|=0,n|=0;var l,r,i=0,a=0,o=0,s=0,u=0;if(r=T,T=T+176|0,l=r,(0|(t|=0))<1)return st(n,0,0),void(T=r);s=0|wt(0|q[(s=e)>>2],0|q[s+4>>2],52),b(),st(n,(0|t)>6?t:6,15&s),s=0;do{if(Ve(0|q[(i=e+(s<<3)|0)>>2],0|q[i+4>>2],l),(0|(i=0|q[l>>2]))>0){u=0;do{o=l+8+(u<<4)|0,(a=0|ht(n,i=l+8+(((0|(u=u+1|0))%(0|i)|0)<<4)|0,o))?ct(n,a):mt(n,o,i),i=0|q[l>>2]}while((0|u)<(0|i))}s=s+1|0}while((0|s)!=(0|t));T=r}(e|=0,t|=0,r=i+16|0),q[n>>2]=0,q[n+4>>2]=0,q[n+8>>2]=0,!(e=0|At(r)))return Je(n),ut(r),void(T=i);do{t=0|Xe(n);do{Ze(t,e),a=e+16|0,q[l>>2]=q[a>>2],q[l+4>>2]=q[a+4>>2],q[l+8>>2]=q[a+8>>2],q[l+12>>2]=q[a+12>>2],ct(r,e),e=0|ft(r,l)}while(0!=(0|e));e=0|At(r)}while(0!=(0|e));Je(n),ut(r),T=i},_h3ToCenterChild:function(e,t,n){n|=0;var l=0,q=0;if(l=0|wt(0|(e|=0),0|(t|=0),52),b(),(0|n)<16&(0|(l&=15))<=(0|n)){if((0|l)!=(0|n)&&(e|=q=0|Mt(0|n,0,52),t=0|b()|-15728641&t,(0|l)<(0|n)))do{q=0|Mt(7,0,3*(14-l|0)|0),l=l+1|0,e&=~q,t&=~(0|b())}while((0|l)<(0|n))}else t=0,e=0;return y(0|t),0|e},_h3ToChildren:Pe,_h3ToGeo:je,_h3ToGeoBoundary:Ve,_h3ToParent:Le,_h3UnidirectionalEdgeIsValid:function(e,t){var n=0;if(!(!0&268435456==(2013265920&(t|=0)|0)))return 0|(n=0);switch(n=0|wt(0|(e|=0),0|t,56),b(),7&n){case 0:case 7:return 0|(n=0)}return!0&16777216==(117440512&t|0)&0!=(0|Re(e,n=-2130706433&t|134217728))?0|(n=0):0|(n=0|Ce(e,n))},_hexAreaKm2:function(e){return+ +r[20496+((e|=0)<<3)>>3]},_hexAreaM2:function(e){return+ +r[20624+((e|=0)<<3)>>3]},_hexRing:function(e,t,n,l){e|=0,t|=0,l|=0;var r,i=0,a=0,o=0,s=0,u=0,A=0,c=0;if(r=T,T=T+16|0,c=r,!(n|=0))return q[(c=l)>>2]=e,q[c+4>>2]=t,T=r,0|(c=0);q[c>>2]=0;e:do{if(0|Re(e,t))e=1;else{if(a=(0|n)>0){i=0,A=e;do{if(0==(0|(A=0|R(A,t,4,c)))&0==(0|(t=0|b()))){e=2;break e}if(i=i+1|0,0|Re(A,t)){e=1;break e}}while((0|i)<(0|n));if(q[(u=l)>>2]=A,q[u+4>>2]=t,u=n+-1|0,a){a=0,o=1,i=A,e=t;do{if(0==(0|(i=0|R(i,e,2,c)))&0==(0|(e=0|b()))){e=2;break e}if(q[(s=l+(o<<3)|0)>>2]=i,q[s+4>>2]=e,o=o+1|0,0|Re(i,e)){e=1;break e}a=a+1|0}while((0|a)<(0|n));s=0,a=o;do{if(0==(0|(i=0|R(i,e,3,c)))&0==(0|(e=0|b()))){e=2;break e}if(q[(o=l+(a<<3)|0)>>2]=i,q[o+4>>2]=e,a=a+1|0,0|Re(i,e)){e=1;break e}s=s+1|0}while((0|s)<(0|n));o=0;do{if(0==(0|(i=0|R(i,e,1,c)))&0==(0|(e=0|b()))){e=2;break e}if(q[(s=l+(a<<3)|0)>>2]=i,q[s+4>>2]=e,a=a+1|0,0|Re(i,e)){e=1;break e}o=o+1|0}while((0|o)<(0|n));o=0;do{if(0==(0|(i=0|R(i,e,5,c)))&0==(0|(e=0|b()))){e=2;break e}if(q[(s=l+(a<<3)|0)>>2]=i,q[s+4>>2]=e,a=a+1|0,0|Re(i,e)){e=1;break e}o=o+1|0}while((0|o)<(0|n));o=0;do{if(0==(0|(i=0|R(i,e,4,c)))&0==(0|(e=0|b()))){e=2;break e}if(q[(s=l+(a<<3)|0)>>2]=i,q[s+4>>2]=e,a=a+1|0,0|Re(i,e)){e=1;break e}o=o+1|0}while((0|o)<(0|n));for(o=0;;){if(0==(0|(i=0|R(i,e,6,c)))&0==(0|(e=0|b()))){e=2;break e}if((0|o)!=(0|u)){if(q[(s=l+(a<<3)|0)>>2]=i,q[s+4>>2]=e,0|Re(i,e)){e=1;break e}a=a+1|0}if((0|(o=o+1|0))>=(0|n)){o=A,a=t;break}}}else o=A,i=A,a=t,e=t}else q[(o=l)>>2]=e,q[o+4>>2]=t,o=e,i=e,a=t,e=t;e=1&((0|o)!=(0|i)|(0|a)!=(0|e))}}while(0);return T=r,0|(c=e)},_i64Subtract:gt,_kRing:C,_kRingDistances:function(e,t,n,l,q){var r;if(0|L(e|=0,t|=0,n|=0,l|=0,q|=0)){if(kt(0|l,0,(r=1+(0|v(3*n|0,n+1|0))|0)<<3|0),0|q)return kt(0|q,0,r<<2|0),void P(e,t,n,l,q,r,0);(q=0|vt(r,4))&&(P(e,t,n,l,q,r,0),xt(q))}},_llvm_minnum_f64:St,_llvm_round_f64:Et,_malloc:pt,_maxFaceCount:function(e,t){var n=0,l=0;if(l=0|wt(0|(e|=0),0|(t|=0),45),b(),!(0|I(127&l)))return 0|(l=2);if(l=0|wt(0|e,0|t,52),b(),!(l&=15))return 0|(l=5);for(n=1;;){if(!(0==((0|Mt(7,0,3*(15-n|0)|0))&e|0)&0==((0|b())&t|0))){n=2,e=6;break}if(!(n>>>0<l>>>0)){n=5,e=6;break}n=n+1|0}return 6==(0|e)?0|n:0},_maxH3ToChildrenSize:function(e,t,n){return n|=0,e=0|wt(0|(e|=0),0|(t|=0),52),b(),(0|n)<16&(0|(e&=15))<=(0|n)?0|(n=0|tt(7,n-e|0)):0|(n=0)},_maxKringSize:function(e){return 1+(0|v(3*(e|=0)|0,e+1|0))|0},_maxPolyfillSize:function(e,t){t|=0;var n,l=0,r=0,i=0,a=0,o=0;if(n=T,T=T+48|0,i=n+8|0,r=n,a=0|q[(o=e|=0)+4>>2],q[(l=r)>>2]=q[o>>2],q[l+4>>2]=a,lt(r,i),i=0|V(i,t),t=0|q[r>>2],(0|(r=0|q[e+8>>2]))<=0)return T=n,0|(o=(o=(a=(0|i)<(0|(o=t)))?o:i)+12|0);l=0|q[e+12>>2],e=0;do{t=(0|q[l+(e<<3)>>2])+t|0,e=e+1|0}while((0|e)<(0|r));return T=n,0|(o=(o=(o=(0|i)<(0|t))?t:i)+12|0)},_maxUncompactSize:function(e,t,n){e|=0,n|=0;var l=0,r=0,i=0,a=0;if((0|(t|=0))<=0)return 0|(n=0);if((0|n)>=16){for(l=0;;){if(!(0==(0|q[(a=e+(l<<3)|0)>>2])&0==(0|q[a+4>>2]))){l=-1,r=13;break}if((0|(l=l+1|0))>=(0|t)){l=0,r=13;break}}if(13==(0|r))return 0|l}l=0,a=0;e:for(;;){i=0|q[(r=e+(a<<3)|0)>>2],r=0|q[r+4>>2];do{if(!(0==(0|i)&0==(0|r))){if(r=0|wt(0|i,0|r,52),b(),(0|(r&=15))>(0|n)){l=-1,r=13;break e}if((0|r)==(0|n)){l=l+1|0;break}l=(0|tt(7,n-r|0))+l|0;break}}while(0);if((0|(a=a+1|0))>=(0|t)){r=13;break}}return 13==(0|r)?0|l:0},_memcpy:zt,_memset:kt,_numHexagons:function(e){var t;return e=0|q[(t=21008+((e|=0)<<3)|0)>>2],y(0|q[t+4>>2]),0|e},_pentagonIndexCount:function(){return 12},_pointDistKm:ze,_pointDistM:function(e,t){e|=0;var n,l,q,i=0;return l=+r[(t|=0)>>3],n=+r[e>>3],i=(q=+c(.5*(l-n)))*q+(i=+c(.5*(+r[t+8>>3]-+r[e+8>>3])))*(+A(+l)*+A(+n)*i),2*+p(+ +s(+i),+ +s(+(1-i)))*6371.007180918475*1e3},_pointDistRads:function(e,t){e|=0;var n,l,q,i=0;return l=+r[(t|=0)>>3],n=+r[e>>3],i=(q=+c(.5*(l-n)))*q+(i=+c(.5*(+r[t+8>>3]-+r[e+8>>3])))*(+A(+l)*+A(+n)*i),2*+p(+ +s(+i),+ +s(+(1-i)))},_polyfill:function(e,t,n){var l,r=0,i=0,a=0,o=0,s=0;if(l=T,T=T+48|0,r=l+8|0,i=l,0|function(e,t,n){t|=0,n|=0;var l=0,r=0,i=0,a=0,o=0,s=0,u=0,A=0,c=0,m=0,h=0,f=0,d=0,p=0,x=0,v=0,g=0,_=0,y=0,M=0,S=0,E=0,z=0,k=0,C=0,R=0,I=0,O=0,B=0,N=0;N=T,T=T+112|0,R=N+80|0,s=N+72|0,I=N,O=N+56|0,(B=0|pt(32+(q[(u=(e=e|0)+8|0)>>2]<<5)|0))||w(22848,22448,800,22456);if(qt(e,B),l=0|q[(i=e)+4>>2],q[(o=s)>>2]=q[i>>2],q[o+4>>2]=l,lt(s,R),o=0|V(R,t),l=0|q[s>>2],(0|(i=0|q[u>>2]))>0){a=0|q[e+12>>2],r=0;do{l=(0|q[a+(r<<3)>>2])+l|0,r=r+1|0}while((0|r)!=(0|i))}if(r=0|vt(C=(o=(0|o)<(0|l)?l:o)+12|0,8),A=0|vt(C,8),q[R>>2]=0,k=0|q[(z=e)+4>>2],q[(l=s)>>2]=q[z>>2],q[l+4>>2]=k,0|(l=0|D(s,C,t,R,r,A)))return xt(r),xt(A),xt(B),T=N,0|(B=l);e:do{if((0|q[u>>2])>0){for(i=e+12|0,l=0;a=0|D((0|q[i>>2])+(l<<3)|0,C,t,R,r,A),l=l+1|0,!(0|a);)if((0|l)>=(0|q[u>>2]))break e;return xt(r),xt(A),xt(B),T=N,0|(B=a)}}while(0);(0|o)>-12&&kt(0|A,0,((0|C)>1?C:1)<<3|0);e:do{if((0|q[R>>2])>0){k=((0|C)<0)<<31>>31,_=r,y=A,M=r,S=r,E=A,z=r,l=r,p=r,x=A,v=A,g=A,r=A;t:for(;;){for(d=0|q[R>>2],h=0,f=0,i=0;;){o=(a=I)+56|0;do{q[a>>2]=0,a=a+4|0}while((0|a)<(0|o));if(0|L(s=0|q[(t=_+(h<<3)|0)>>2],t=0|q[t+4>>2],1,I,0)){o=(a=I)+56|0;do{q[a>>2]=0,a=a+4|0}while((0|a)<(0|o));0|(a=0|vt(7,4))&&(P(s,t,1,I,a,7,0),xt(a))}m=0;do{A=0|q[(c=I+(m<<3)|0)>>2],c=0|q[c+4>>2];n:do{if(!(0==(0|A)&0==(0|c))){if(s=0|bt(0|A,0|c,0|C,0|k),b(),!(0==(0|(t=0|q[(o=a=n+(s<<3)|0)>>2]))&0==(0|(o=0|q[o+4>>2]))))for(u=0;;){if((0|u)>(0|C))break t;if((0|t)==(0|A)&(0|o)==(0|c))break n;if(0==(0|(t=0|q[(o=a=n+((s=(s+1|0)%(0|C)|0)<<3)|0)>>2]))&0==(0|(o=0|q[o+4>>2])))break;u=u+1|0}0==(0|A)&0==(0|c)||(je(A,c,O),0|rt(e,B,O)&&(q[(u=a)>>2]=A,q[u+4>>2]=c,q[(u=y+(i<<3)|0)>>2]=A,q[u+4>>2]=c,i=i+1|0))}}while(0);m=m+1|0}while(m>>>0<7);if((0|(f=f+1|0))>=(0|d))break;h=h+1|0}if((0|d)>0&&kt(0|M,0,d<<3|0),q[R>>2]=i,!((0|i)>0))break e;A=r,c=g,m=z,h=v,f=x,d=y,r=p,g=l,v=S,x=M,p=A,l=c,z=E,E=m,S=h,M=f,y=_,_=d}return xt(S),xt(E),xt(B),T=N,0|(B=-1)}l=A}while(0);return xt(B),xt(r),xt(l),T=N,0|(B=0)}(e|=0,t|=0,n|=0)){if(a=0|q[(s=e)+4>>2],q[(o=i)>>2]=q[s>>2],q[o+4>>2]=a,lt(i,r),o=0|V(r,t),t=0|q[i>>2],(0|(a=0|q[e+8>>2]))>0){i=0|q[e+12>>2],r=0;do{t=(0|q[i+(r<<3)>>2])+t|0,r=r+1|0}while((0|r)!=(0|a))}(0|(t=(0|o)<(0|t)?t:o))<=-12||kt(0|n,0,8+(((0|(s=t+11|0))>0?s:0)<<3)|0),T=l}else T=l},_res0IndexCount:function(){return 122},_round:Tt,_sbrk:Ct,_sizeOfCoordIJ:function(){return 8},_sizeOfGeoBoundary:function(){return 168},_sizeOfGeoCoord:function(){return 16},_sizeOfGeoPolygon:function(){return 16},_sizeOfGeofence:function(){return 8},_sizeOfH3Index:function(){return 8},_sizeOfLinkedGeoPolygon:function(){return 12},_uncompact:function(e,t,n,l,r){e|=0,n|=0,l|=0,r|=0;var i=0,a=0,o=0,s=0,u=0,A=0;if((0|(t|=0))<=0)return 0|(r=0);if((0|r)>=16){for(i=0;;){if(!(0==(0|q[(A=e+(i<<3)|0)>>2])&0==(0|q[A+4>>2]))){i=14;break}if((0|(i=i+1|0))>=(0|t)){a=0,i=16;break}}if(14==(0|i))return 0|((0|l)>0?-2:-1);if(16==(0|i))return 0|a}i=0,A=0;e:for(;;){a=0|q[(o=u=e+(A<<3)|0)>>2],o=0|q[o+4>>2];do{if(!(0==(0|a)&0==(0|o))){if((0|i)>=(0|l)){a=-1,i=16;break e}if(s=0|wt(0|a,0|o,52),b(),(0|(s&=15))>(0|r)){a=-2,i=16;break e}if((0|s)==(0|r)){q[(u=n+(i<<3)|0)>>2]=a,q[u+4>>2]=o,i=i+1|0;break}if((0|(a=(0|tt(7,r-s|0))+i|0))>(0|l)){a=-1,i=16;break e}Pe(0|q[u>>2],0|q[u+4>>2],r,n+(i<<3)|0),i=a}}while(0);if((0|(A=A+1|0))>=(0|t)){a=0,i=16;break}}return 16==(0|i)?0|a:0},establishStackSpace:function(e,t){T=e|=0},stackAlloc:function(e){var t;return t=T,T=(T=T+(e|=0)|0)+15&-16,0|t},stackRestore:function(e){T=e|=0},stackSave:function(){return 0|T}}}({Math:Math,Int8Array:Int8Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Float32Array:Float32Array,Float64Array:Float64Array},J,d),$=(n.___uremdi3=K.___uremdi3,n._bitshift64Lshr=K._bitshift64Lshr,n._bitshift64Shl=K._bitshift64Shl,n._calloc=K._calloc,n._cellAreaKm2=K._cellAreaKm2,n._cellAreaM2=K._cellAreaM2,n._cellAreaRads2=K._cellAreaRads2,n._compact=K._compact,n._destroyLinkedPolygon=K._destroyLinkedPolygon,n._edgeLengthKm=K._edgeLengthKm,n._edgeLengthM=K._edgeLengthM,n._emscripten_replace_memory=K._emscripten_replace_memory),ee=(n._exactEdgeLengthKm=K._exactEdgeLengthKm,n._exactEdgeLengthM=K._exactEdgeLengthM,n._exactEdgeLengthRads=K._exactEdgeLengthRads,n._experimentalH3ToLocalIj=K._experimentalH3ToLocalIj,n._experimentalLocalIjToH3=K._experimentalLocalIjToH3,n._free=K._free,n._geoToH3=K._geoToH3,n._getDestinationH3IndexFromUnidirectionalEdge=K._getDestinationH3IndexFromUnidirectionalEdge,n._getH3IndexesFromUnidirectionalEdge=K._getH3IndexesFromUnidirectionalEdge,n._getH3UnidirectionalEdge=K._getH3UnidirectionalEdge,n._getH3UnidirectionalEdgeBoundary=K._getH3UnidirectionalEdgeBoundary,n._getH3UnidirectionalEdgesFromHexagon=K._getH3UnidirectionalEdgesFromHexagon,n._getOriginH3IndexFromUnidirectionalEdge=K._getOriginH3IndexFromUnidirectionalEdge,n._getPentagonIndexes=K._getPentagonIndexes,n._getRes0Indexes=K._getRes0Indexes,n._h3Distance=K._h3Distance,n._h3GetBaseCell=K._h3GetBaseCell,n._h3GetFaces=K._h3GetFaces,n._h3GetResolution=K._h3GetResolution,n._h3IndexesAreNeighbors=K._h3IndexesAreNeighbors,n._h3IsPentagon=K._h3IsPentagon,n._h3IsResClassIII=K._h3IsResClassIII,n._h3IsValid=K._h3IsValid,n._h3Line=K._h3Line,n._h3LineSize=K._h3LineSize,n._h3SetToLinkedGeo=K._h3SetToLinkedGeo,n._h3ToCenterChild=K._h3ToCenterChild,n._h3ToChildren=K._h3ToChildren,n._h3ToGeo=K._h3ToGeo,n._h3ToGeoBoundary=K._h3ToGeoBoundary,n._h3ToParent=K._h3ToParent,n._h3UnidirectionalEdgeIsValid=K._h3UnidirectionalEdgeIsValid,n._hexAreaKm2=K._hexAreaKm2,n._hexAreaM2=K._hexAreaM2,n._hexRing=K._hexRing,n._i64Subtract=K._i64Subtract,n._kRing=K._kRing,n._kRingDistances=K._kRingDistances,n._llvm_minnum_f64=K._llvm_minnum_f64,n._llvm_round_f64=K._llvm_round_f64,n._malloc=K._malloc,n._maxFaceCount=K._maxFaceCount,n._maxH3ToChildrenSize=K._maxH3ToChildrenSize,n._maxKringSize=K._maxKringSize,n._maxPolyfillSize=K._maxPolyfillSize,n._maxUncompactSize=K._maxUncompactSize,n._memcpy=K._memcpy,n._memset=K._memset,n._numHexagons=K._numHexagons,n._pentagonIndexCount=K._pentagonIndexCount,n._pointDistKm=K._pointDistKm,n._pointDistM=K._pointDistM,n._pointDistRads=K._pointDistRads,n._polyfill=K._polyfill,n._res0IndexCount=K._res0IndexCount,n._round=K._round,n._sbrk=K._sbrk,n._sizeOfCoordIJ=K._sizeOfCoordIJ,n._sizeOfGeoBoundary=K._sizeOfGeoBoundary,n._sizeOfGeoCoord=K._sizeOfGeoCoord,n._sizeOfGeoPolygon=K._sizeOfGeoPolygon,n._sizeOfGeofence=K._sizeOfGeofence,n._sizeOfH3Index=K._sizeOfH3Index,n._sizeOfLinkedGeoPolygon=K._sizeOfLinkedGeoPolygon,n._uncompact=K._uncompact,n.establishStackSpace=K.establishStackSpace,n.stackAlloc=K.stackAlloc),te=n.stackRestore=K.stackRestore,ne=n.stackSave=K.stackSave;if(n.asm=K,n.cwrap=function(e,t,n,l){var q=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&q&&!l?c(e):function(){return m(e,t,n,arguments)}},n.setValue=function(e,t,n,l){switch("*"===(n=n||"i8").charAt(n.length-1)&&(n="i32"),n){case"i1":case"i8":p[e>>0]=t;break;case"i16":v[e>>1]=t;break;case"i32":g[e>>2]=t;break;case"i64":N=[t>>>0,(B=t,+C(B)>=1?B>0?(0|R(+P(B/4294967296),4294967295))>>>0:~~+L((B-+(~~B>>>0))/4294967296)>>>0:0)],g[e>>2]=N[0],g[e+4>>2]=N[1];break;case"float":_[e>>2]=t;break;case"double":y[e>>3]=t;break;default:oe("invalid type for setValue: "+n)}},n.getValue=function(e,t,n){switch("*"===(t=t||"i8").charAt(t.length-1)&&(t="i32"),t){case"i1":case"i8":return p[e>>0];case"i16":return v[e>>1];case"i32":case"i64":return g[e>>2];case"float":return _[e>>2];case"double":return y[e>>3];default:oe("invalid type for getValue: "+t)}return null},n.getTempRet0=u,U){H(U)||(U=function(e){return n.locateFile?n.locateFile(e,i):i+e}(U)),D++,n.monitorRunDependencies&&n.monitorRunDependencies(D);var le=function(e){e.byteLength&&(e=new Uint8Array(e)),x.set(e,8),n.memoryInitializerRequest&&delete n.memoryInitializerRequest.response,function(e){if(D--,n.monitorRunDependencies&&n.monitorRunDependencies(D),0==D&&(null!==I&&(clearInterval(I),I=null),O)){var t=O;O=null,t()}}()},qe=function(){q(U,le,(function(){throw"could not load memory initializer "+U}))},re=X(U);if(re)le(re.buffer);else if(n.memoryInitializerRequest){var ie=function(){var e=n.memoryInitializerRequest,t=e.response;if(200!==e.status&&0!==e.status){var l=X(n.memoryInitializerRequestURL);if(!l)return console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+e.status+", retrying "+U),void qe();t=l.buffer}le(t)};n.memoryInitializerRequest.response?setTimeout(ie,0):n.memoryInitializerRequest.addEventListener("load",ie)}else qe()}function ae(e){function t(){Z||(Z=!0,A||(S(z),S(k),n.onRuntimeInitialized&&n.onRuntimeInitialized(),function(){if(n.postRun)for("function"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;)e=n.postRun.shift(),T.unshift(e);var e;S(T)}()))}e=e||r,D>0||(!function(){if(n.preRun)for("function"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)e=n.preRun.shift(),E.unshift(e);var e;S(E)}(),D>0||(n.setStatus?(n.setStatus("Running..."),setTimeout((function(){setTimeout((function(){n.setStatus("")}),1),t()}),1)):t()))}function oe(e){throw n.onAbort&&n.onAbort(e),a(e+=""),o(e),A=!0,"abort("+e+"). Build with -s ASSERTIONS=1 for more info."}if(O=function e(){Z||ae(),Z||(O=e)},n.run=ae,n.abort=oe,n.preInit)for("function"==typeof n.preInit&&(n.preInit=[n.preInit]);n.preInit.length>0;)n.preInit.pop()();return ae(),e}("object"===typeof Xv?Xv:{}),Zv="number",Jv={};[["sizeOfH3Index",Zv],["sizeOfGeoCoord",Zv],["sizeOfGeoBoundary",Zv],["sizeOfGeoPolygon",Zv],["sizeOfGeofence",Zv],["sizeOfLinkedGeoPolygon",Zv],["sizeOfCoordIJ",Zv],["h3IsValid",Zv,[Zv,Zv]],["geoToH3",Zv,[Zv,Zv,Zv]],["h3ToGeo",null,[Zv,Zv,Zv]],["h3ToGeoBoundary",null,[Zv,Zv,Zv]],["maxKringSize",Zv,[Zv]],["kRing",null,[Zv,Zv,Zv,Zv]],["kRingDistances",null,[Zv,Zv,Zv,Zv,Zv]],["hexRing",null,[Zv,Zv,Zv,Zv]],["maxPolyfillSize",Zv,[Zv,Zv]],["polyfill",null,[Zv,Zv,Zv]],["h3SetToLinkedGeo",null,[Zv,Zv,Zv]],["destroyLinkedPolygon",null,[Zv]],["compact",Zv,[Zv,Zv,Zv]],["uncompact",Zv,[Zv,Zv,Zv,Zv,Zv]],["maxUncompactSize",Zv,[Zv,Zv,Zv]],["h3IsPentagon",Zv,[Zv,Zv]],["h3IsResClassIII",Zv,[Zv,Zv]],["h3GetBaseCell",Zv,[Zv,Zv]],["h3GetResolution",Zv,[Zv,Zv]],["maxFaceCount",Zv,[Zv,Zv]],["h3GetFaces",null,[Zv,Zv,Zv]],["h3ToParent",Zv,[Zv,Zv,Zv]],["h3ToChildren",null,[Zv,Zv,Zv,Zv]],["h3ToCenterChild",Zv,[Zv,Zv,Zv]],["maxH3ToChildrenSize",Zv,[Zv,Zv,Zv]],["h3IndexesAreNeighbors",Zv,[Zv,Zv,Zv,Zv]],["getH3UnidirectionalEdge",Zv,[Zv,Zv,Zv,Zv]],["getOriginH3IndexFromUnidirectionalEdge",Zv,[Zv,Zv]],["getDestinationH3IndexFromUnidirectionalEdge",Zv,[Zv,Zv]],["h3UnidirectionalEdgeIsValid",Zv,[Zv,Zv]],["getH3IndexesFromUnidirectionalEdge",null,[Zv,Zv,Zv]],["getH3UnidirectionalEdgesFromHexagon",null,[Zv,Zv,Zv]],["getH3UnidirectionalEdgeBoundary",null,[Zv,Zv,Zv]],["h3Distance",Zv,[Zv,Zv,Zv,Zv]],["h3Line",Zv,[Zv,Zv,Zv,Zv,Zv]],["h3LineSize",Zv,[Zv,Zv,Zv,Zv]],["experimentalH3ToLocalIj",Zv,[Zv,Zv,Zv,Zv,Zv]],["experimentalLocalIjToH3",Zv,[Zv,Zv,Zv,Zv]],["hexAreaM2",Zv,[Zv]],["hexAreaKm2",Zv,[Zv]],["edgeLengthM",Zv,[Zv]],["edgeLengthKm",Zv,[Zv]],["pointDistM",Zv,[Zv,Zv]],["pointDistKm",Zv,[Zv,Zv]],["pointDistRads",Zv,[Zv,Zv]],["cellAreaM2",Zv,[Zv,Zv]],["cellAreaKm2",Zv,[Zv,Zv]],["cellAreaRads2",Zv,[Zv,Zv]],["exactEdgeLengthM",Zv,[Zv,Zv]],["exactEdgeLengthKm",Zv,[Zv,Zv]],["exactEdgeLengthRads",Zv,[Zv,Zv]],["numHexagons",Zv,[Zv]],["getRes0Indexes",null,[Zv]],["res0IndexCount",Zv],["getPentagonIndexes",null,[Zv,Zv]],["pentagonIndexCount",Zv]].forEach((function(e){Jv[e[0]]=Xv.cwrap.apply(Xv,e)}));var Kv=16,$v=Jv.sizeOfH3Index(),eg=Jv.sizeOfGeoCoord(),tg=Jv.sizeOfGeoBoundary(),ng=Jv.sizeOfGeoPolygon(),lg=Jv.sizeOfGeofence();Jv.sizeOfLinkedGeoPolygon(),Jv.sizeOfCoordIJ();function qg(e){if("number"!==typeof e||e<0||e>15||Math.floor(e)!==e)throw new Error("Invalid resolution: "+e)}var rg=/[^0-9a-fA-F]/;function ig(e){if(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&Number.isInteger(e[1]))return e;if("string"!==typeof e||rg.test(e))return[0,0];var t=parseInt(e.substring(0,e.length-8),Kv);return[parseInt(e.substring(e.length-8),Kv),t]}function ag(e){if(e>=0)return e.toString(Kv);var t=sg(8,(e&=2147483647).toString(Kv));return t=(parseInt(t[0],Kv)+8).toString(Kv)+t.substring(1)}function og(e,t){return ag(t)+sg(8,ag(e))}function sg(e,t){for(var n=e-t.length,l="",q=0;q<n;q++)l+="0";return l+=t}function ug(e,t,n){for(var l=e.length,q=Xv._calloc(l,eg),r=n?1:0,i=n?0:1,a=0;a<2*l;a+=2)Xv.HEAPF64.set([e[a/2][r],e[a/2][i]].map(bg),q/8+a);return Xv.HEAPU32.set([l,q],t/4),t}function Ag(e){return[e,Xv.getTempRet0()]}function cg(e){var t=Ag(e),n=t[0],l=t[1];return l?og(n,l):null}function mg(e,t){void 0===t&&(t=0);var n=Xv.getValue(e+4*t*2,"i32"),l=Xv.getValue(e+4*(2*t+1),"i32");return l?og(n,l):null}function hg(e,t){for(var n=[],l=0;l<t;l++){var q=mg(e,l);null!==q&&n.push(q)}return n}function fg(e){return 180*Xv.getValue(e,"double")/Math.PI}function dg(e){return[fg(e),fg(e+8)]}function pg(e){return[fg(e+8),fg(e)]}function xg(e,t,n){for(var l=Xv.getValue(e,"i32"),q=e+8,r=[],i=t?pg:dg,a=0;a<2*l;a+=2)r.push(i(q+8*a));return n&&r.push(r[0]),r}function vg(e,t,n){var l=Xv._malloc(eg);Xv.HEAPF64.set([e,t].map(bg),l/8);var q=cg(Jv.geoToH3(l,n));return Xv._free(l),q}function gg(e){var t=Xv._malloc(eg),n=ig(e),l=n[0],q=n[1];Jv.h3ToGeo(l,q,t);var r=dg(t);return Xv._free(t),r}function _g(e,t){var n=Xv._malloc(tg),l=ig(e),q=l[0],r=l[1];Jv.h3ToGeoBoundary(q,r,n);var i=xg(n,t,t);return Xv._free(n),i}function yg(e,t,n){if(qg(t),n=Boolean(n),0===e.length||0===e[0].length)return[];"number"===typeof e[0][0]&&(e=[e]);var l=function(e,t){var n,l=e.length-1,q=Xv._calloc(ng),r=0+lg,i=r+4;if(ug(e[0],q+0,t),l>0){n=Xv._calloc(l,lg);for(var a=0;a<l;a++)ug(e[a+1],n+lg*a,t)}return Xv.setValue(q+r,l,"i32"),Xv.setValue(q+i,n,"i32"),q}(e,n),q=Jv.maxPolyfillSize(l,t),r=Xv._calloc(q,$v);Jv.polyfill(l,t,r);var i=hg(r,q);return Xv._free(r),function(e){var t=0+lg,n=t+4;Xv._free(Xv.getValue(e+0+4,"i8*"));var l=Xv.getValue(e+t,"i32");if(l>0){for(var q=Xv.getValue(e+n,"i32"),r=0;r<l;r++)Xv._free(Xv.getValue(q+lg*r+4,"i8*"));Xv._free(q)}Xv._free(e)}(l),i}function bg(e){return e*Math.PI/180}var wg=window.THREE?window.THREE:{Box3:ht,BufferGeometry:Zn,Float32BufferAttribute:Hn,InstancedBufferGeometry:Rs,InstancedInterleavedBuffer:au,InterleavedBufferAttribute:Ci,Sphere:Pt,Vector3:At,WireframeGeometry:Po},Mg=(new wg.BufferGeometry).setAttribute?"setAttribute":"addAttribute",Sg=new wg.Box3,Eg=new wg.Vector3,zg=function(e){R(n,e);var t=I(n);function n(){var e;O(this,n),(e=t.call(this)).type="LineSegmentsGeometry";return e.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),e[Mg]("position",new wg.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),e[Mg]("uv",new wg.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2)),e}return N(n,[{key:"applyMatrix4",value:function(e){var t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"setPositions",value:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var n=new wg.InstancedInterleavedBuffer(t,6,1);return this[Mg]("instanceStart",new wg.InterleavedBufferAttribute(n,3,0)),this[Mg]("instanceEnd",new wg.InterleavedBufferAttribute(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}},{key:"setColors",value:function(e){var t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));var n=new wg.InstancedInterleavedBuffer(t,6,1);return this[Mg]("instanceColorStart",new wg.InterleavedBufferAttribute(n,3,0)),this[Mg]("instanceColorEnd",new wg.InterleavedBufferAttribute(n,3,3)),this}},{key:"fromWireframeGeometry",value:function(e){return this.setPositions(e.attributes.position.array),this}},{key:"fromEdgesGeometry",value:function(e){return this.setPositions(e.attributes.position.array),this}},{key:"fromMesh",value:function(e){return this.fromWireframeGeometry(new wg.WireframeGeometry(e.geometry)),this}},{key:"fromLineSegments",value:function(e){var t=e.geometry;if(!t.isGeometry)return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this;console.error("LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new wg.Box3);var e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),Sg.setFromBufferAttribute(t),this.boundingBox.union(Sg))}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new wg.Sphere),null===this.boundingBox&&this.computeBoundingBox();var e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){var n=this.boundingSphere.center;this.boundingBox.getCenter(n);for(var l=0,q=0,r=e.count;q<r;q++)Eg.fromBufferAttribute(e,q),l=Math.max(l,n.distanceToSquared(Eg)),Eg.fromBufferAttribute(t,q),l=Math.max(l,n.distanceToSquared(Eg));this.boundingSphere.radius=Math.sqrt(l),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}},{key:"toJSON",value:function(){}},{key:"applyMatrix",value:function(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}]),n}(wg.InstancedBufferGeometry);zg.prototype.isLineSegmentsGeometry=!0;var kg=window.THREE?window.THREE:{ShaderLib:Nl,ShaderMaterial:gl,UniformsLib:Bl,UniformsUtils:vl,Vector2:Ze};kg.UniformsLib.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new kg.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1}},kg.ShaderLib.line={uniforms:kg.UniformsUtils.merge([kg.UniformsLib.common,kg.UniformsLib.fog,kg.UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\tworldStart = start.xyz;\n\t\t\tworldEnd = end.xyz;\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segements overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\t\tvarying vec4 worldPos;\n\t\tvarying vec3 worldStart;\n\t\tvarying vec3 worldEnd;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};var Tg=function(e){R(n,e);var t=I(n);function n(e){var l;return O(this,n),l=t.call(this,{type:"LineMaterial",uniforms:kg.UniformsUtils.clone(kg.ShaderLib.line.uniforms),vertexShader:kg.ShaderLib.line.vertexShader,fragmentShader:kg.ShaderLib.line.fragmentShader,clipping:!0}),Object.defineProperties(E(l),{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set:function(e){Boolean(e)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("ALPHA_TO_COVERAGE"in this.defines)},set:function(e){Boolean(e)!==Boolean("ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===e?(this.defines.ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),l.setValues(e),l}return N(n)}(kg.ShaderMaterial);Tg.prototype.isLineMaterial=!0;var Cg=window.THREE?window.THREE:{Box3:ht,BufferGeometry:Zn,InstancedInterleavedBuffer:au,InterleavedBufferAttribute:Ci,Line3:pu,MathUtils:Xe,Matrix4:Ht,Mesh:hl,Sphere:Pt,Vector3:At,Vector4:it},Lg=(new Cg.BufferGeometry).setAttribute?"setAttribute":"addAttribute",Pg=new Cg.Vector3,Rg=new Cg.Vector3,Dg=new Cg.Vector4,Ig=new Cg.Vector4,Og=new Cg.Vector4,Bg=new Cg.Vector3,Ng=new Cg.Matrix4,Ug=new Cg.Line3,Fg=new Cg.Vector3,Hg=new Cg.Box3,Gg=new Cg.Sphere,jg=new Cg.Vector4,Vg=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new zg,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Tg({color:16777215*Math.random()});return O(this,n),(e=t.call(this,l,q)).type="LineSegments2",e}return N(n,[{key:"computeLineDistances",value:function(){for(var e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,l=new Float32Array(2*t.count),q=0,r=0,i=t.count;q<i;q++,r+=2)Pg.fromBufferAttribute(t,q),Rg.fromBufferAttribute(n,q),l[r]=0===r?0:l[r-1],l[r+1]=l[r]+Pg.distanceTo(Rg);var a=new Cg.InstancedInterleavedBuffer(l,2,1);return e[Lg]("instanceDistanceStart",new Cg.InterleavedBufferAttribute(a,1,0)),e[Lg]("instanceDistanceEnd",new Cg.InterleavedBufferAttribute(a,1,1)),this}},{key:"raycast",value:function(e,t){null===e.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var n=void 0!==e.params.Line2&&e.params.Line2.threshold||0,l=e.ray,q=e.camera,r=q.projectionMatrix,i=this.matrixWorld,a=this.geometry,o=this.material,s=o.resolution,u=o.linewidth+n,A=a.attributes.instanceStart,c=a.attributes.instanceEnd,m=-q.near,h=2*Math.max(u/s.width,u/s.height);null===a.boundingSphere&&a.computeBoundingSphere(),Gg.copy(a.boundingSphere).applyMatrix4(i);var f=Math.max(q.near,Gg.distanceToPoint(l.origin));jg.set(0,0,-f,1).applyMatrix4(q.projectionMatrix),jg.multiplyScalar(1/jg.w),jg.applyMatrix4(q.projectionMatrixInverse);var d=.5*Math.abs(h/jg.w);if(Gg.radius+=d,!1!==e.ray.intersectsSphere(Gg)){null===a.boundingBox&&a.computeBoundingBox(),Hg.copy(a.boundingBox).applyMatrix4(i);var p=Math.max(q.near,Hg.distanceToPoint(l.origin));jg.set(0,0,-p,1).applyMatrix4(q.projectionMatrix),jg.multiplyScalar(1/jg.w),jg.applyMatrix4(q.projectionMatrixInverse);var x=.5*Math.abs(h/jg.w);if(Hg.max.x+=x,Hg.max.y+=x,Hg.max.z+=x,Hg.min.x-=x,Hg.min.y-=x,Hg.min.z-=x,!1!==e.ray.intersectsBox(Hg)){l.at(1,Og),Og.w=1,Og.applyMatrix4(q.matrixWorldInverse),Og.applyMatrix4(r),Og.multiplyScalar(1/Og.w),Og.x*=s.x/2,Og.y*=s.y/2,Og.z=0,Bg.copy(Og),Ng.multiplyMatrices(q.matrixWorldInverse,i);for(var v=0,g=A.count;v<g;v++){if(Dg.fromBufferAttribute(A,v),Ig.fromBufferAttribute(c,v),Dg.w=1,Ig.w=1,Dg.applyMatrix4(Ng),Ig.applyMatrix4(Ng),!(Dg.z>m&&Ig.z>m)){if(Dg.z>m){var _=Dg.z-Ig.z,y=(Dg.z-m)/_;Dg.lerp(Ig,y)}else if(Ig.z>m){var b=Ig.z-Dg.z,w=(Ig.z-m)/b;Ig.lerp(Dg,w)}Dg.applyMatrix4(r),Ig.applyMatrix4(r),Dg.multiplyScalar(1/Dg.w),Ig.multiplyScalar(1/Ig.w),Dg.x*=s.x/2,Dg.y*=s.y/2,Ig.x*=s.x/2,Ig.y*=s.y/2,Ug.start.copy(Dg),Ug.start.z=0,Ug.end.copy(Ig),Ug.end.z=0;var M=Ug.closestPointToPointParameter(Bg,!0);Ug.at(M,Fg);var S=Cg.MathUtils.lerp(Dg.z,Ig.z,M),E=S>=-1&&S<=1,z=Bg.distanceTo(Fg)<.5*u;if(E&&z){Ug.start.fromBufferAttribute(A,v),Ug.end.fromBufferAttribute(c,v),Ug.start.applyMatrix4(i),Ug.end.applyMatrix4(i);var k=new Cg.Vector3,T=new Cg.Vector3;l.distanceSqToSegment(Ug.start,Ug.end,T,k),t.push({point:T,pointOnLine:k,distance:l.origin.distanceTo(T),object:this,face:null,faceIndex:v,uv:null,uv2:null})}}}}}}}]),n}(Cg.Mesh);Vg.prototype.LineSegments2=!0;var Wg=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).type="LineGeometry",e}return N(n,[{key:"setPositions",value:function(e){for(var t=e.length-3,l=new Float32Array(2*t),q=0;q<t;q+=3)l[2*q]=e[q],l[2*q+1]=e[q+1],l[2*q+2]=e[q+2],l[2*q+3]=e[q+3],l[2*q+4]=e[q+4],l[2*q+5]=e[q+5];return C(k(n.prototype),"setPositions",this).call(this,l),this}},{key:"setColors",value:function(e){for(var t=e.length-3,l=new Float32Array(2*t),q=0;q<t;q+=3)l[2*q]=e[q],l[2*q+1]=e[q+1],l[2*q+2]=e[q+2],l[2*q+3]=e[q+3],l[2*q+4]=e[q+4],l[2*q+5]=e[q+5];return C(k(n.prototype),"setColors",this).call(this,l),this}},{key:"fromLine",value:function(e){var t=e.geometry;if(!t.isGeometry)return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this;console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")}}]),n}(zg);Wg.prototype.isLineGeometry=!0;var Qg=function(e){R(n,e);var t=I(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Wg,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Tg({color:16777215*Math.random()});return O(this,n),(e=t.call(this,l,q)).type="Line2",e}return N(n)}(Vg);Qg.prototype.isLine2=!0;var Yg=function(e){R(n,e);var t=I(n);function n(e){var l,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};O(this,n);var r=q.font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),z(l,new Zn);var i=r.generateShapes(e,q.size);return q.depth=void 0!==q.height?q.height:50,void 0===q.bevelThickness&&(q.bevelThickness=10),void 0===q.bevelSize&&(q.bevelSize=8),void 0===q.bevelEnabled&&(q.bevelEnabled=!1),(l=t.call(this,i,q)).type="TextGeometry",l}return N(n)}(zo),Xg=function(){function e(t){O(this,e),this.type="Font",this.data=t}return N(e,[{key:"generateShapes",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=[],l=Zg(e,t,this.data),q=0,r=l.length;q<r;q++)Array.prototype.push.apply(n,l[q].toShapes());return n}}]),e}();function Zg(e,t,n){for(var l=Array.from(e),q=t/n.resolution,r=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*q,i=[],a=0,o=0,s=0;s<l.length;s++){var u=l[s];if("\n"===u)a=0,o-=r;else{var A=Jg(u,q,a,o,n);a+=A.offsetX,i.push(A.path)}}return i}function Jg(e,t,n,l,q){var r=q.glyphs[e]||q.glyphs["?"];if(r){var i,a,o,s,u,A,c,m,h=new wu;if(r.o)for(var f=r._cachedOutline||(r._cachedOutline=r.o.split(" ")),d=0,p=f.length;d<p;){switch(f[d++]){case"m":i=f[d++]*t+n,a=f[d++]*t+l,h.moveTo(i,a);break;case"l":i=f[d++]*t+n,a=f[d++]*t+l,h.lineTo(i,a);break;case"q":o=f[d++]*t+n,s=f[d++]*t+l,u=f[d++]*t+n,A=f[d++]*t+l,h.quadraticCurveTo(u,A,o,s);break;case"b":o=f[d++]*t+n,s=f[d++]*t+l,u=f[d++]*t+n,A=f[d++]*t+l,c=f[d++]*t+n,m=f[d++]*t+l,h.bezierCurveTo(u,A,c,m,o,s)}}return{offsetX:r.ha*t,path:h}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+q.familyName+".")}function Kg(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function $g(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Kg(Object(n),!0).forEach((function(t){t_(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Kg(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function e_(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t_(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function n_(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q_(e,t)}function l_(e){return l_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},l_(e)}function q_(e,t){return q_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q_(e,t)}function r_(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function i_(e,t,n){return i_=r_()?Reflect.construct:function(e,t,n){var l=[null];l.push.apply(l,t);var q=new(Function.bind.apply(e,l));return n&&q_(q,n.prototype),q},i_.apply(null,arguments)}function a_(e,t){if(null==e)return{};var n,l,q=function(e,t){if(null==e)return{};var n,l,q={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(q[n]=e[n]);return q}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(q[n]=e[n])}return q}function o_(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s_(e,t){if(t&&("object"===typeof t||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return o_(e)}function u_(e){var t=r_();return function(){var n,l=l_(e);if(t){var q=l_(this).constructor;n=Reflect.construct(l,arguments,q)}else n=l.apply(this,arguments);return s_(this,n)}}function A_(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||m_(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c_(e){return function(e){if(Array.isArray(e))return h_(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||m_(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m_(e,t){if(e){if("string"===typeof e)return h_(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?h_(e,t):void 0}}function h_(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}Xg.prototype.isFont=!0;var f_=function e(t){t instanceof Array?t.forEach(e):(t.map&&t.map.dispose(),t.dispose())},d_=function e(t){t.geometry&&t.geometry.dispose(),t.material&&f_(t.material),t.texture&&t.texture.dispose(),t.children&&t.children.forEach(e)},p_=function(e){if(e&&e.children)for(;e.children.length;){var t=e.children[0];e.remove(t),d_(t)}};function x_(e,t){var n=new t;return{linkProp:function(t){return{default:n[t](),onChange:function(n,l){l[e][t](n)},triggerUpdate:!1}},linkMethod:function(t){return function(n){for(var l=n[e],q=arguments.length,r=new Array(q>1?q-1:0),i=1;i<q;i++)r[i-1]=arguments[i];var a=l[t].apply(l,r);return a===l?this:a}}}}var v_=100;function g_(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=(90-e)*Math.PI/180,q=(90-t)*Math.PI/180,r=v_*(1+n);return{x:r*Math.sin(l)*Math.cos(q),y:r*Math.cos(l),z:r*Math.sin(l)*Math.sin(q)}}function __(e){var t=e.x,n=e.y,l=e.z,q=Math.sqrt(t*t+n*n+l*l),r=Math.acos(n/q),i=Math.atan2(l,t);return{lat:90-180*r/Math.PI,lng:90-180*i/Math.PI-(i<-Math.PI/2?360:0),altitude:q/v_-1}}var y_=window.THREE?window.THREE:{BackSide:1,BufferAttribute:Bn,Color:Rn,Mesh:hl,ShaderMaterial:gl},b_={backside:!0,coefficient:.5,color:"gold",size:2,power:1};function w_(e,t,n){return new y_.ShaderMaterial({depthWrite:!1,fragmentShader:"\nuniform vec3 color;\nuniform float coefficient;\nuniform float power;\nvarying vec3 vVertexNormal;\nvarying vec3 vVertexWorldPosition;\nvoid main() {\n  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;\n  vec3 viewCameraToVertex\t= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;\n  viewCameraToVertex = normalize(viewCameraToVertex);\n  float intensity\t= pow(\n    coefficient + dot(vVertexNormal, viewCameraToVertex),\n    power\n  );\n  gl_FragColor = vec4(color, intensity);\n}",transparent:!0,uniforms:{coefficient:{value:e},color:{value:new y_.Color(t)},power:{value:n}},vertexShader:"\nvarying vec3 vVertexWorldPosition;\nvarying vec3 vVertexNormal;\nvoid main() {\n  vVertexNormal\t= normalize(normalMatrix * normal);\n  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n  gl_Position\t= projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"})}function M_(e,t){for(var n=e.clone(),l=new Float32Array(3*e.attributes.position.count),q=0,r=l.length;q<r;q++){var i=e.attributes.normal.array[q],a=e.attributes.position.array[q];l[q]=a+i*t}return n.setAttribute("position",new y_.BufferAttribute(l,3)),n}var S_=window.THREE?window.THREE:{Color:Rn,LineBasicMaterial:oa,LineSegments:pa,Mesh:hl,MeshPhongMaterial:Bo,SphereBufferGeometry:Co,TextureLoader:ms},E_=Cu({props:{globeImageUrl:{},bumpImageUrl:{},showGlobe:{default:!0,onChange:function(e,t){t.globeObj.visible=!!e},triggerUpdate:!1},showGraticules:{default:!1,onChange:function(e,t){t.graticulesObj.visible=!!e},triggerUpdate:!1},showAtmosphere:{default:!0,onChange:function(e,t){t.atmosphereObj&&(t.atmosphereObj.visible=!!e)},triggerUpdate:!1},atmosphereColor:{default:"lightskyblue"},atmosphereAltitude:{default:.15},onReady:{default:function(){},triggerUpdate:!1}},methods:{globeMaterial:function(e,t){return void 0!==t?(e.globeObj.material=t||e.defaultGlobeMaterial,this):e.globeObj.material}},stateInit:function(){var e=new S_.SphereBufferGeometry(v_,75,75),t=new S_.MeshPhongMaterial({color:0,transparent:!0}),n=new S_.Mesh(e,t);return n.rotation.y=-Math.PI/2,n.__globeObjType="globe",{globeObj:n,graticulesObj:new S_.LineSegments(new GA(ZA(),v_,2),new S_.LineBasicMaterial({color:"lightgrey",transparent:!0,opacity:.1})),defaultGlobeMaterial:t}},init:function(e,t){p_(e),t.scene=e,t.scene.add(t.globeObj),t.scene.add(t.graticulesObj),t.ready=!1},update:function(e,t){var n=e.globeObj.material;if(t.hasOwnProperty("globeImageUrl")&&(e.globeImageUrl?(new S_.TextureLoader).load(e.globeImageUrl,(function(t){n.map=t,n.color=null,n.needsUpdate=!0,!e.ready&&(e.ready=!0)&&setTimeout(e.onReady)})):!n.color&&(n.color=new S_.Color(0))),t.hasOwnProperty("bumpImageUrl")&&(e.bumpImageUrl?e.bumpImageUrl&&(new S_.TextureLoader).load(e.bumpImageUrl,(function(e){n.bumpMap=e,n.needsUpdate=!0})):(n.bumpMap=null,n.needsUpdate=!0)),(t.hasOwnProperty("atmosphereColor")||t.hasOwnProperty("atmosphereAltitude"))&&(e.atmosphereObj&&(e.scene.remove(e.atmosphereObj),p_(e.atmosphereObj)),e.atmosphereColor&&e.atmosphereAltitude)){var l=e.atmosphereObj=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b_,n=t.backside,l=t.coefficient,q=t.color,r=t.size,i=t.power,a=M_(e,r),o=w_(l,q,i);return n&&(o.side=y_.BackSide),new y_.Mesh(a,o)}(e.globeObj.geometry,{backside:!0,color:e.atmosphereColor,size:v_*e.atmosphereAltitude,power:3.5,coefficient:.1});l.visible=!!e.showAtmosphere,l.__globeObjType="atmosphere",e.scene.add(l)}e.ready||e.globeImageUrl||(e.ready=!0,e.onReady())}}),z_=function(e){return isNaN(e)?parseInt(ac()(e).toHex(),16):e},k_=function(e){return isNaN(e)?ac()(e).getAlpha():1},T_=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=ac()(e).toRgb(),l=["r","g","b"].map((function(e){return n[e]/255}));return t?[].concat(c_(l),[n.a]):l};function C_(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},q=l.removeDelay,r=void 0===q?0:q;return bc(e,t.children,(function(e){return t.add(e)}),(function(e){var n=function(){t.remove(e),p_(e),e&&e.hasOwnProperty("__data")&&delete e.__data.__currentTargetD};r?setTimeout(n,r):n()}),$g({objBindAttr:"__threeObj"},n))}var L_=window.THREE?window.THREE:{BufferAttribute:Bn,BufferGeometry:Zn,Color:Rn,CylinderBufferGeometry:za,Matrix4:Ht,Mesh:hl,MeshBasicMaterial:Dn,MeshLambertMaterial:Fo,Object3D:hn,Vector3:At},P_=Object.assign({},l),R_=P_.BufferGeometryUtils||P_,D_=(new L_.BufferGeometry).applyMatrix4?"applyMatrix4":"applyMatrix",I_=Cu({props:{pointsData:{default:[]},pointLat:{default:"lat"},pointLng:{default:"lng"},pointColor:{default:function(){return"#ffffaa"}},pointAltitude:{default:.1},pointRadius:{default:.25},pointResolution:{default:12,triggerUpdate:!1},pointsMerge:{default:!1},pointsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.pointLat),n=rc(e.pointLng),l=rc(e.pointAltitude),q=rc(e.pointRadius),r=rc(e.pointColor),i=new L_.CylinderBufferGeometry(1,1,1,e.pointResolution);i[D_]((new L_.Matrix4).makeRotationX(Math.PI/2)),i[D_]((new L_.Matrix4).makeTranslation(0,0,-.5));var a=2*Math.PI*v_/360,o={},s=e.pointsMerge?new L_.Object3D:e.scene;if(C_(e.pointsData,s,{createObj:function(){var e=new L_.Mesh(i);return e.__globeObjType="point",e},updateObj:function(i,s){var u=function(t){var n=i.__currentTargetD=t,l=n.r,q=n.alt,r=n.lat,o=n.lng;Object.assign(i.position,g_(r,o));var s=e.pointsMerge?new L_.Vector3(0,0,0):e.scene.localToWorld(new L_.Vector3(0,0,0));i.lookAt(s),i.scale.x=i.scale.y=Math.min(30,l)*a,i.scale.z=Math.max(q*v_,.1)},A={alt:+l(s),r:+q(s),lat:+t(s),lng:+n(s)},c=i.__currentTargetD||Object.assign({},A,{alt:-.001});Object.keys(A).some((function(e){return c[e]!==A[e]}))&&(e.pointsMerge||!e.pointsTransitionDuration||e.pointsTransitionDuration<0?u(A):new Qu.Tween(c).to(A,e.pointsTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(u).start());if(!e.pointsMerge){var m=r(s),h=m?k_(m):0,f=!!h;i.visible=f,f&&(o.hasOwnProperty(m)||(o[m]=new L_.MeshLambertMaterial({color:z_(m),transparent:h<1,opacity:h})),i.material=o[m])}}}),e.pointsMerge){var u=e.pointsData.length?R_.mergeBufferGeometries(e.pointsData.map((function(e){var t=e.__threeObj;e.__threeObj=void 0;var n=t.geometry.clone();t.updateMatrix(),n[D_](t.matrix);for(var l=new L_.Color(r(e)),q=n.attributes.position.count,i=new Float32Array(3*q),a=0,o=q;a<o;a++){var s=3*a;i[s]=l.r,i[s+1]=l.g,i[s+2]=l.b}return n.setAttribute("color",new L_.BufferAttribute(i,3)),n}))):new L_.BufferGeometry,A=new L_.Mesh(u,new L_.MeshBasicMaterial({color:16777215,vertexColors:!0}));A.__globeObjType="points",A.__data=e.pointsData,p_(e.scene),e.scene.add(A)}}}),O_=["stroke"],B_=window.THREE?window.THREE:{BufferGeometry:Zn,CubicBezierCurve3:Ha,Curve:ka,Float32BufferAttribute:Hn,Group:pi,Line:ha,Mesh:hl,NormalBlending:1,QuadraticBezierCurve3:Wa,ShaderMaterial:gl,TubeBufferGeometry:Lo,Vector3:At},N_=(new B_.BufferGeometry).setAttribute?"setAttribute":"addAttribute",U_={uniforms:{dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}},vertexShader:"\n    uniform float dashTranslate; \n\n    attribute vec4 vertexColor;\n    varying vec4 vColor;\n    \n    attribute float vertexRelDistance;\n    varying float vRelDistance;\n\n    void main() {\n      // pass through colors and distances\n      vColor = vertexColor;\n      vRelDistance = vertexRelDistance + dashTranslate;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    uniform float dashOffset; \n    uniform float dashSize;\n    uniform float gapSize; \n    \n    varying vec4 vColor;\n    varying float vRelDistance;\n    \n    void main() {\n      // ignore pixels in the gap\n      if (vRelDistance < dashOffset) discard;\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\n    \n      // set px color: [r, g, b, a], interpolated between vertices \n      gl_FragColor = vColor; \n    }\n  "},F_=Cu({props:{arcsData:{default:[]},arcStartLat:{default:"startLat"},arcStartLng:{default:"startLng"},arcEndLat:{default:"endLat"},arcEndLng:{default:"endLng"},arcColor:{default:function(){return"#ffffaa"}},arcAltitude:{},arcAltitudeAutoScale:{default:.5},arcStroke:{},arcCurveResolution:{default:64,triggerUpdate:!1},arcCircularResolution:{default:6,triggerUpdate:!1},arcDashLength:{default:1},arcDashGap:{default:0},arcDashInitialGap:{default:0},arcDashAnimateTime:{default:0},arcsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e,(new(Mc())).onTick.add((function(e,n){t.arcsData.filter((function(e){return e.__threeObj&&e.__threeObj.children.length&&e.__threeObj.children[0].material&&e.__threeObj.children[0].__dashAnimateStep})).forEach((function(e){var t=e.__threeObj.children[0],l=t.__dashAnimateStep*n,q=t.material.uniforms.dashTranslate.value%1e9;t.material.uniforms.dashTranslate.value=q+l}))}))},update:function(e){var t=rc(e.arcStartLat),n=rc(e.arcStartLng),l=rc(e.arcEndLat),q=rc(e.arcEndLng),r=rc(e.arcAltitude),i=rc(e.arcAltitudeAutoScale),a=rc(e.arcStroke),o=rc(e.arcColor),s=rc(e.arcDashLength),u=rc(e.arcDashGap),A=rc(e.arcDashInitialGap),c=rc(e.arcDashAnimateTime),m=new B_.ShaderMaterial($g($g({},U_),{},{transparent:!0,blending:B_.NormalBlending}));C_(e.arcsData,e.scene,{createObj:function(){var e=new B_.Group;return e.__globeObjType="arc",e},updateObj:function(h,f){var d=a(f),p=null!==d&&void 0!==d;if(!h.children.length||p!==("Mesh"===h.children[0].type)){p_(h);var x=p?new B_.Mesh:new B_.Line(new B_.BufferGeometry);x.material=m.clone(),h.add(x)}var v=h.children[0];Object.assign(v.material.uniforms,{dashSize:{value:s(f)},gapSize:{value:u(f)},dashOffset:{value:A(f)}});var g=c(f);v.__dashAnimateStep=g>0?1e3/g:0;var _=function(e,t){var n,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,q=t+1;if(e instanceof Array||e instanceof Function){var r=e instanceof Array?qh().domain(e.map((function(t,n){return n/(e.length-1)}))).range(e):e;n=function(e){return T_(r(e))}}else{var i=T_(e);n=function(){return i}}for(var a=new B_.Float32BufferAttribute(4*q*l,4),o=0,s=q;o<s;o++)for(var u=n(o/(s-1)),A=0;A<l;A++)a.set(u,4*(o*l+A));return a}(o(f),e.arcCurveResolution,p?e.arcCircularResolution+1:1),y=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=e+1,q=l*t,r=new B_.Float32BufferAttribute(q,1),i=0,a=l;i<a;i++)for(var o=i/(a-1),s=0;s<t;s++){var u=i*t+s,A=n?q-1-u:u;r.setX(A,o)}return r}(e.arcCurveResolution,p?e.arcCircularResolution+1:1,!0);v.geometry[N_]("vertexColor",_),v.geometry[N_]("vertexRelDistance",y);var b=function(t){var n=f.__currentTargetD=t,l=n.stroke,q=function(e){var t=e.alt,n=e.altAutoScale,l=e.startLat,q=e.startLng,r=e.endLat,i=e.endLng,a=function(e){var t=A_(e,3),n=t[0],l=g_(t[1],n,t[2]),q=l.x,r=l.y,i=l.z;return new B_.Vector3(q,r,i)},o=[q,l],s=[i,r],u=t;if((null===u||void 0===u)&&(u=TA(o,s)/2*n),u){var A=CA(o,s),c=A_([.25,.75].map((function(e){return[].concat(c_(A(e)),[1.5*u])})),2),m=c[0],h=c[1];return i_(B_.CubicBezierCurve3,c_([o,m,h,s].map(a)))}var f=.001;return d.apply(void 0,c_([[].concat(o,[f]),[].concat(s,[f])].map(a)));function d(e,t){var n=e.angleTo(t),l=function(l){return(new B_.Vector3).addVectors(e.clone().multiplyScalar(Math.sin((1-l)*n)),t.clone().multiplyScalar(Math.sin(l*n))).divideScalar(Math.sin(n))},q=new B_.Curve;return q.getPoint=l,q}}(a_(n,O_));p?(v.geometry&&v.geometry.dispose(),v.geometry=new B_.TubeBufferGeometry(q,e.arcCurveResolution,l/2,e.arcCircularResolution),v.geometry[N_]("vertexColor",_),v.geometry[N_]("vertexRelDistance",y)):v.geometry.setFromPoints(q.getPoints(e.arcCurveResolution))},w={stroke:d,alt:r(f),altAutoScale:+i(f),startLat:+t(f),startLng:+n(f),endLat:+l(f),endLng:+q(f)},M=f.__currentTargetD||Object.assign({},w,{altAutoScale:-.001});Object.keys(w).some((function(e){return M[e]!==w[e]}))&&(!e.arcsTransitionDuration||e.arcsTransitionDuration<0?b(w):new Qu.Tween(M).to(w,e.arcsTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(b).start())}})}}),H_=window.THREE?window.THREE:{BufferAttribute:Bn,BufferGeometry:Zn,Color:Rn,DoubleSide:2,Mesh:hl,MeshBasicMaterial:Dn,MeshLambertMaterial:Fo,Object3D:hn},G_=Object.assign({},l),j_=G_.BufferGeometryUtils||G_,V_=(new H_.BufferGeometry).applyMatrix4?"applyMatrix4":"applyMatrix",W_=Cu({props:{hexBinPointsData:{default:[]},hexBinPointLat:{default:"lat"},hexBinPointLng:{default:"lng"},hexBinPointWeight:{default:1},hexBinResolution:{default:4},hexMargin:{default:.2},hexTopCurvatureResolution:{default:5},hexTopColor:{default:function(){return"#ffffaa"}},hexSideColor:{default:function(){return"#ffffaa"}},hexAltitude:{default:function(e){return.01*e.sumWeight}},hexBinMerge:{default:!1},hexTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.hexBinPointLat),n=rc(e.hexBinPointLng),l=rc(e.hexBinPointWeight),q=rc(e.hexAltitude),r=rc(e.hexTopColor),i=rc(e.hexSideColor),a=rc(e.hexMargin),o=hc(e.hexBinPointsData.map((function(l){return $g($g({},l),{},{h3Idx:vg(t(l),n(l),e.hexBinResolution)})})),"h3Idx"),s=Object.entries(o).map((function(e){var t=A_(e,2),n=t[0],q=t[1];return{h3Idx:n,points:q,sumWeight:q.reduce((function(e,t){return e+ +l(t)}),0)}})),u={};if(C_(s,e.hexBinMerge?new H_.Object3D:e.scene,{createObj:function(e){var t=new H_.Mesh;t.__hexCenter=gg(e.h3Idx),t.__hexGeoJson=_g(e.h3Idx,!0).reverse();var n=t.__hexCenter[1];return t.__hexGeoJson.forEach((function(e){var t=e[0];Math.abs(n-t)>170&&(e[0]+=n>t?360:-360)})),t.__globeObjType="hexbin",t},updateObj:function(t,n){var l=Math.max(0,Math.min(1,+a(n))),o=A_(t.__hexCenter,2),s=o[0],A=o[1],c=0===l?t.__hexGeoJson:t.__hexGeoJson.map((function(e){var t=A_(e,2),n=t[0],q=t[1];return[[n,A],[q,s]].map((function(e){var t=A_(e,2);return function(e,t,n){return e-(e-t)*n}(t[0],t[1],l)}))})),m=e.hexTopCurvatureResolution;t.geometry=new Yv([c],0,v_,!1,!0,!0,m);var h={alt:+q(n)},f=function(e){var n=(t.__currentTargetD=e).alt;t.scale.x=t.scale.y=t.scale.z=1+n},d=t.__currentTargetD||Object.assign({},h,{alt:-.001});Object.keys(h).some((function(e){return d[e]!==h[e]}))&&(e.hexBinMerge||!e.hexTransitionDuration||e.hexTransitionDuration<0?f(h):new Qu.Tween(d).to(h,e.hexTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(f).start());if(!e.hexBinMerge){var p=i(n),x=r(n);[p,x].forEach((function(e){if(!u.hasOwnProperty(e)){var t=k_(e);u[e]=new H_.MeshLambertMaterial({color:z_(e),transparent:t<1,opacity:t,side:H_.DoubleSide})}})),t.material=[p,x].map((function(e){return u[e]}))}},idAccessor:function(e){return e.h3Idx}}),e.hexBinMerge){var A=s.length?j_.mergeBufferGeometries(s.map((function(e){var t=e.__threeObj;e.__threeObj=void 0;var n=t.geometry.toNonIndexed();t.updateMatrix(),n[V_](t.matrix);for(var l=new H_.Color(r(e)),q=new H_.Color(i(e)),a=n.attributes.position.count,o=n.groups[0].count,s=new Float32Array(3*a),u=0,A=a;u<A;u++){var c=3*u,m=u>=o?l:q;s[c]=m.r,s[c+1]=m.g,s[c+2]=m.b}return n.setAttribute("color",new H_.BufferAttribute(s,3)),n}))):new H_.BufferGeometry,c=new H_.Mesh(A,new H_.MeshBasicMaterial({color:16777215,vertexColors:!0,side:H_.DoubleSide}));c.__globeObjType="hexBinPoints",c.__data=s,p_(e.scene),e.scene.add(c)}}}),Q_=window.THREE?window.THREE:{DoubleSide:2,Group:pi,LineBasicMaterial:oa,LineSegments:pa,Mesh:hl,MeshBasicMaterial:Dn},Y_=Cu({props:{polygonsData:{default:[]},polygonGeoJsonGeometry:{default:"geometry"},polygonSideColor:{default:function(){return"#ffffaa"}},polygonSideMaterial:{},polygonCapColor:{default:function(){return"#ffffaa"}},polygonCapMaterial:{},polygonStrokeColor:{},polygonAltitude:{default:.01},polygonCapCurvatureResolution:{default:5},polygonsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.polygonGeoJsonGeometry),n=rc(e.polygonAltitude),l=rc(e.polygonCapCurvatureResolution),q=rc(e.polygonCapColor),r=rc(e.polygonCapMaterial),i=rc(e.polygonSideColor),a=rc(e.polygonSideMaterial),o=rc(e.polygonStrokeColor),s=[];e.polygonsData.forEach((function(e){var u={data:e,capColor:q(e),capMaterial:r(e),sideColor:i(e),sideMaterial:a(e),strokeColor:o(e),altitude:+n(e),capCurvatureResolution:+l(e)},A=t(e),c=e.__id||"".concat(Math.round(1e9*Math.random()));e.__id=c,"Polygon"===A.type?s.push($g({id:"".concat(c,"_0"),coords:A.coordinates},u)):"MultiPolygon"===A.type?s.push.apply(s,c_(A.coordinates.map((function(e,t){return $g({id:"".concat(c,"_").concat(t),coords:e},u)})))):console.warn("Unsupported GeoJson geometry type: ".concat(A.type,". Skipping geometry..."))})),C_(s,e.scene,{idAccessor:function(e){return e.id},createObj:function(){var e=new Q_.Group;return e.__defaultSideMaterial=new Q_.MeshBasicMaterial({side:Q_.DoubleSide,depthWrite:!0}),e.__defaultCapMaterial=new Q_.MeshBasicMaterial({side:Q_.DoubleSide,depthWrite:!0}),e.add(new Q_.Mesh(void 0,[e.__defaultSideMaterial,e.__defaultCapMaterial])),e.add(new Q_.LineSegments(void 0,new Q_.LineBasicMaterial)),e.__globeObjType="polygon",e},updateObj:function(t,n){var l=n.coords,q=n.capColor,r=n.capMaterial,i=n.sideColor,a=n.sideMaterial,o=n.strokeColor,s=n.altitude,u=n.capCurvatureResolution,A=A_(t.children,2),c=A[0],m=A[1],h=!!o;if(m.visible=h,!function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){return function(e,t){return e===t}};return Object.entries(t).every((function(t){var l=A_(t,2),q=l[0],r=l[1];return e.hasOwnProperty(q)&&n(q)(e[q],r)}))}(c.geometry.parameters||{},{polygonGeoJson:l,curvatureResolution:u})&&(c.geometry=new Yv(l,0,v_,!1,!0,!0,u)),h&&(!m.geometry.parameters||m.geometry.parameters.geoJson.coordinates!==l||m.geometry.parameters.resolution!==u)&&(m.geometry=new GA({type:"Polygon",coordinates:l},v_,u)),c.material[0]=a||t.__defaultSideMaterial,c.material[1]=r||t.__defaultCapMaterial,[!a&&i,!r&&q].forEach((function(e,t){if(e){var n=c.material[t],l=k_(e);n.color.set(z_(e)),n.transparent=l<1,n.opacity=l}})),h){var f=m.material,d=k_(o);f.color.set(z_(o)),f.transparent=d<1,f.opacity=d}var p={alt:s},x=function(e){var n=(t.__currentTargetD=e).alt;c.scale.x=c.scale.y=c.scale.z=1+n,h&&(m.scale.x=m.scale.y=m.scale.z=1+n+1e-4)},v=t.__currentTargetD||Object.assign({},p,{alt:-.001});Object.keys(p).some((function(e){return v[e]!==p[e]}))&&(!e.polygonsTransitionDuration||e.polygonsTransitionDuration<0||v.alt===p.alt?x(p):new Qu.Tween(v).to(p,e.polygonsTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(x).start())}})}});var X_=window.THREE?window.THREE:{BufferGeometry:Zn,DoubleSide:2,Mesh:hl,MeshLambertMaterial:Fo},Z_=Object.assign({},l),J_=Z_.BufferGeometryUtils||Z_,K_=Cu({props:{hexPolygonsData:{default:[]},hexPolygonGeoJsonGeometry:{default:"geometry"},hexPolygonColor:{default:function(){return"#ffffaa"}},hexPolygonAltitude:{default:.001},hexPolygonResolution:{default:3},hexPolygonMargin:{default:.2},hexPolygonCurvatureResolution:{default:5},hexPolygonsTransitionDuration:{default:0,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.hexPolygonGeoJsonGeometry),n=rc(e.hexPolygonColor),l=rc(e.hexPolygonAltitude),q=rc(e.hexPolygonResolution),r=rc(e.hexPolygonMargin),i=rc(e.hexPolygonCurvatureResolution);C_(e.hexPolygonsData,e.scene,{createObj:function(e){var t=new X_.Mesh(void 0,new X_.MeshLambertMaterial({side:X_.DoubleSide}));return t.__globeObjType="hexPolygon",t},updateObj:function(a,o){var s=t(o),u=q(o),A=l(o),c=Math.max(0,Math.min(1,+r(o))),m=i(o),h=n(o),f=k_(h);a.material.color.set(z_(h)),a.material.transparent=f<1,a.material.opacity=f;var d=[];"Polygon"===s.type?yg(s.coordinates,u,!0).forEach((function(e){return d.push(e)})):"MultiPolygon"===s.type?s.coordinates.forEach((function(e){return yg(e,u,!0).forEach((function(e){return d.push(e)}))})):console.warn("Unsupported GeoJson geometry type: ".concat(s.type,". Skipping geometry..."));var p=d.map((function(e){var t=gg(e),n=_g(e,!0).reverse(),l=t[1];return n.forEach((function(e){var t=e[0];Math.abs(l-t)>170&&(e[0]+=l>t?360:-360)})),{h3Idx:e,hexCenter:t,hexGeoJson:n}})),x={alt:A,margin:c,curvatureResolution:m},v=function(e){var t=a.__currentTargetD=e,n=t.alt,l=t.margin,q=t.curvatureResolution;a.geometry=p.length?J_.mergeBufferGeometries(p.map((function(e){var t=A_(e.hexCenter,2),r=t[0],i=t[1],a=0===l?e.hexGeoJson:e.hexGeoJson.map((function(e){var t=A_(e,2),n=t[0],q=t[1];return[[n,i],[q,r]].map((function(e){var t=A_(e,2);return function(e,t,n){return e-(e-t)*n}(t[0],t[1],l)}))}));return new Yv([a],v_,v_*(1+n),!1,!0,!1,q)}))):new X_.BufferGeometry},g=a.__currentTargetD||Object.assign({},x,{alt:-.001});Object.keys(x).some((function(e){return g[e]!==x[e]}))&&(!e.hexPolygonsTransitionDuration||e.hexPolygonsTransitionDuration<0?v(x):new Qu.Tween(g).to(x,e.hexPolygonsTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(v).start())}})}}),$_=window.THREE?window.THREE:{Vector3:At};function ey(e,t){var n=Math.max(e.length,t.length),l=_m.apply(void 0,c_([e,t].map((function(e){return e.map((function(e){return[e.x,e.y,e.z]}))})).map((function(e){return function(e,t){var n=e[e.length-1];return[].concat(c_(e),c_(c_(new Array(t-e.length)).map((function(){return n}))))}(e,n)}))));return function(n){return 0===n?e:1===n?t:l(n).map((function(e){var t=A_(e,3),n=t[0],l=t[1],q=t[2];return new $_.Vector3(n,l,q)}))}}var ty=window.THREE?window.THREE:{BufferGeometry:Zn,Color:Rn,Float32BufferAttribute:Hn,Group:pi,Line:ha,NoColors:0,NormalBlending:1,ShaderMaterial:gl,Vector3:At,VertexColors:2},ny=(new ty.BufferGeometry).setAttribute?"setAttribute":"addAttribute",ly={uniforms:{dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}},vertexShader:"\n    uniform float dashTranslate;\n\n    attribute vec4 vertexColor;\n    varying vec4 vColor;\n\n    attribute float vertexRelDistance;\n    varying float vRelDistance;\n\n    void main() {\n      // pass through colors and distances\n      vColor = vertexColor;\n      vRelDistance = vertexRelDistance + dashTranslate;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    uniform float dashOffset;\n    uniform float dashSize;\n    uniform float gapSize;\n\n    varying vec4 vColor;\n    varying float vRelDistance;\n\n    void main() {\n      // ignore pixels in the gap\n      if (vRelDistance < dashOffset) discard;\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\n\n      // set px color: [r, g, b, a], interpolated between vertices\n      gl_FragColor = vColor;\n    }\n  "},qy=Cu({props:{pathsData:{default:[]},pathPoints:{default:function(e){return e}},pathPointLat:{default:function(e){return e[0]}},pathPointLng:{default:function(e){return e[1]}},pathPointAlt:{default:.001},pathResolution:{default:2},pathColor:{default:function(){return"#ffffaa"}},pathStroke:{},pathDashLength:{default:1},pathDashGap:{default:0},pathDashInitialGap:{default:0},pathDashAnimateTime:{default:0},pathTransitionDuration:{default:1e3,triggerUpdate:!1},rendererSize:{}},init:function(e,t){p_(e),t.scene=e,(new(Mc())).onTick.add((function(e,n){t.pathsData.filter((function(e){return e.__threeObj&&e.__threeObj.children.length&&e.__threeObj.children[0].material&&e.__threeObj.children[0].__dashAnimateStep})).forEach((function(e){var t=e.__threeObj.children[0],l=t.__dashAnimateStep*n;if("Line"===t.type){var q=t.material.uniforms.dashTranslate.value%1e9;t.material.uniforms.dashTranslate.value=q+l}else if("Line2"===t.type){for(var r=t.material.dashOffset-l,i=t.material.dashSize+t.material.gapSize;r<=-i;)r+=i;t.material.dashOffset=r}}))}))},update:function(e){var t=rc(e.pathPoints),n=rc(e.pathPointLat),l=rc(e.pathPointLng),q=rc(e.pathPointAlt),r=rc(e.pathStroke),i=rc(e.pathColor),a=rc(e.pathDashLength),o=rc(e.pathDashGap),s=rc(e.pathDashInitialGap),u=rc(e.pathDashAnimateTime),A=new ty.ShaderMaterial($g($g({},ly),{},{transparent:!0,blending:ty.NormalBlending}));function c(e,t){var n,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,q=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=t+1;if(e instanceof Array||e instanceof Function){var i=e instanceof Array?qh().domain(e.map((function(t,n){return n/(e.length-1)}))).range(e):e;n=function(e){return T_(i(e),q)}}else{var a=T_(e,q);n=function(){return a}}for(var o=q?4:3,s=new ty.Float32BufferAttribute(r*o*l,o),u=0,A=r;u<A;u++)for(var c=n(u/(A-1)),m=0;m<l;m++)s.set(c,(u*l+m)*o);return s}C_(e.pathsData,e.scene,{createObj:function(){var e=new ty.Group;return e.__globeObjType="path",e},updateObj:function(m,h){var f=r(h),d=null!==f&&void 0!==f;if(!m.children.length||d===("Line"===m.children[0].type)){p_(m);var p=d?new Qg(new Wg,new Tg):new ty.Line(new ty.BufferGeometry,A.clone());m.add(p)}var x=m.children[0],v=function(e,t,n,l,q){var r=function(e,t,n){for(var l=[],q=1;q<=n;q++)l.push(e+(t-e)*q/(n+1));return l},i=function(){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=[],n=null;return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(l){if(n){for(;Math.abs(n[1]-l[1])>180;)n[1]+=360*(n[1]<l[1]?1:-1);var q=Math.sqrt(Math.pow(l[0]-n[0],2)+Math.pow(l[1]-n[1],2));if(q>e)for(var i=Math.floor(q/e),a=r(n[0],l[0],i),o=r(n[1],l[1],i),s=r(n[2],l[2],i),u=0,A=a.length;u<A;u++)t.push([a[u],o[u],s[u]])}t.push(n=l)})),t},a=function(e){var t=A_(e,3),n=g_(t[0],t[1],t[2]),l=n.x,q=n.y,r=n.z;return new ty.Vector3(l,q,r)};return i(e.map((function(e){return[t(e),n(e),l(e)]})),q).map(a)}(t(h),n,l,q,e.pathResolution),g=u(h);if(x.__dashAnimateStep=g>0?1e3/g:0,d){x.material.resolution=e.rendererSize;var _=a(h),y=o(h),b=s(h);x.material.dashed=y>0,x.material.dashed?x.material.defines.USE_DASH="":delete x.material.defines.USE_DASH,x.material.dashed&&(x.material.dashScale=1/function(e){var t,n=0;return e.forEach((function(e){t&&(n+=t.distanceTo(e)),t=e})),n}(v),x.material.dashSize=_,x.material.gapSize=y,x.material.dashOffset=-b);var w=i(h);if(w instanceof Array){var M=c(i(h),v.length-1,1,!1);x.geometry.setColors(M.array),x.material.vertexColors=ty.VertexColors}else{var S=w,E=k_(S);x.material.color=new ty.Color(z_(S)),x.material.transparent=E<1,x.material.opacity=E,x.material.vertexColors=ty.NoColors}x.material.needsUpdate=!0}else{Object.assign(x.material.uniforms,{dashSize:{value:a(h)},gapSize:{value:o(h)},dashOffset:{value:s(h)}});var z=c(i(h),v.length),k=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=e+1,q=l*t,r=new ty.Float32BufferAttribute(q,1),i=0,a=l;i<a;i++)for(var o=i/(a-1),s=0;s<t;s++){var u=i*t+s,A=n?q-1-u:u;r.setX(A,o)}return r}(v.length,1,!0);x.geometry[ny]("vertexColor",z),x.geometry[ny]("vertexRelDistance",k)}var T=ey(h.__currentTargetD&&h.__currentTargetD.points||[v[0]],v),C=function(e){var t,n=h.__currentTargetD=e,l=n.stroke,q=n.interpolK,r=h.__currentTargetD.points=T(q);d?(x.geometry.setPositions((t=[]).concat.apply(t,c_(r.map((function(e){return[e.x,e.y,e.z]}))))),x.material.linewidth=l,x.material.dashed&&x.computeLineDistances()):(x.geometry.setFromPoints(r),x.geometry.computeBoundingSphere())},L={stroke:f,interpolK:1},P=Object.assign({},h.__currentTargetD||L,{interpolK:0});Object.keys(L).some((function(e){return P[e]!==L[e]}))&&(!e.pathTransitionDuration||e.pathTransitionDuration<0?C(L):new Qu.Tween(P).to(L,e.pathTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(C).start())}})}}),ry=window.THREE?window.THREE:{Euler:Kt,Mesh:hl,MeshLambertMaterial:Fo,SphereBufferGeometry:Co},iy=Cu({props:{tilesData:{default:[]},tileLat:{default:"lat"},tileLng:{default:"lng"},tileAltitude:{default:.01},tileWidth:{default:1},tileHeight:{default:1},tileUseGlobeProjection:{default:!0},tileMaterial:{default:function(){return new ry.MeshLambertMaterial({color:"#ffbb88",opacity:.4,transparent:!0})}},tileCurvatureResolution:{default:5},tilesTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.tileLat),n=rc(e.tileLng),l=rc(e.tileAltitude),q=rc(e.tileWidth),r=rc(e.tileHeight),i=rc(e.tileUseGlobeProjection),a=rc(e.tileMaterial),o=rc(e.tileCurvatureResolution);C_(e.tilesData,e.scene,{createObj:function(){var e=new ry.Mesh;return e.__globeObjType="tile",e},updateObj:function(s,u){s.material=a(u);var A=i(u),c=o(u),m=function(e){var t=s.__currentTargetD=e,n=t.lat,l=t.lng,q=t.alt,r=t.width,i=t.height,a=ay(l),o=ay(-n);s.geometry=new ry.SphereBufferGeometry(v_*(1+q),Math.ceil(r/(c||-1)),Math.ceil(i/(c||-1)),ay(90-r/2)+(A?a:0),ay(r),ay(90-i/2)+(A?o:0),ay(i)),A||s.setRotationFromEuler(new ry.Euler(o,a,0,"YXZ"))},h={lat:+t(u),lng:+n(u),alt:+l(u),width:+q(u),height:+r(u)},f=s.__currentTargetD||Object.assign({},h,{width:0,height:0});Object.keys(h).some((function(e){return f[e]!==h[e]}))&&(!e.tilesTransitionDuration||e.tilesTransitionDuration<0?m(h):new Qu.Tween(f).to(h,e.tilesTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(m).start())}})}}),ay=function(e){return e*Math.PI/180},oy={glyphs:{0:{x_min:73,x_max:715,ha:792,o:"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},1:{x_min:215.671875,x_max:574,ha:792,o:"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},2:{x_min:59,x_max:731,ha:792,o:"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},3:{x_min:54,x_max:737,ha:792,o:"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},4:{x_min:48,x_max:742.453125,ha:792,o:"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},5:{x_min:54.171875,x_max:738,ha:792,o:"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},6:{x_min:53,x_max:739,ha:792,o:"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},7:{x_min:58.71875,x_max:730.953125,ha:792,o:"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},8:{x_min:55,x_max:736,ha:792,o:"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},9:{x_min:53,x_max:739,ha:792,o:"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},"\u03bf":{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},S:{x_min:0,x_max:788,ha:890,o:"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"\xa6":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"/":{x_min:183.25,x_max:608.328125,ha:792,o:"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},"\u03a4":{x_min:-.4375,x_max:777.453125,ha:839,o:"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},y:{x_min:0,x_max:684.78125,ha:771,o:"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},"\u03a0":{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},"\u0390":{x_min:-111,x_max:339,ha:361,o:"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},g:{x_min:0,x_max:686,ha:838,o:"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"\xb2":{x_min:0,x_max:442,ha:539,o:"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"\u2013":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},"\u039a":{x_min:0,x_max:819.5625,ha:893,o:"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},"\u0192":{x_min:-46.265625,x_max:392,ha:513,o:"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},e:{x_min:0,x_max:714,ha:813,o:"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},"\u03cc":{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},J:{x_min:0,x_max:588,ha:699,o:"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"\xbb":{x_min:-1,x_max:503,ha:601,o:"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"\xa9":{x_min:-3,x_max:1008,ha:1106,o:"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},"\u03ce":{x_min:0,x_max:922,ha:1030,o:"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{x_min:193.0625,x_max:598.609375,ha:792,o:"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"\xab":{x_min:0,x_max:507.203125,ha:604,o:"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},D:{x_min:0,x_max:828,ha:935,o:"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"\u2219":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"\xff":{x_min:0,x_max:47,ha:125,o:"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},w:{x_min:0,x_max:1009.71875,ha:1100,o:"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},$:{x_min:0,x_max:700,ha:793,o:"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\":{x_min:-.015625,x_max:425.0625,ha:522,o:"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},"\xb5":{x_min:0,x_max:697.21875,ha:747,o:"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},"\u0399":{x_min:42,x_max:181,ha:297,o:"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},"\u038e":{x_min:0,x_max:1144.5,ha:1214,o:"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u2019":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"\u039d":{x_min:0,x_max:801,ha:915,o:"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{x_min:8.71875,x_max:350.390625,ha:478,o:"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},Q:{x_min:0,x_max:968,ha:1072,o:"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},"\u03c2":{x_min:1,x_max:676.28125,ha:740,o:"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},M:{x_min:0,x_max:954,ha:1067,o:"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},"\u03a8":{x_min:0,x_max:1006,ha:1094,o:"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},C:{x_min:0,x_max:886,ha:944,o:"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{x_min:0,x_max:138,ha:236,o:"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{x_min:0,x_max:480.5625,ha:578,o:"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},X:{x_min:-.015625,x_max:854.15625,ha:940,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{x_min:0,x_max:963.890625,ha:1061,o:"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},"\u03b9":{x_min:42,x_max:284,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},"\u0386":{x_min:0,x_max:906.953125,ha:982,o:"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{x_min:0,x_max:318,ha:415,o:"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},"\u03b5":{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},"\u0394":{x_min:0,x_max:952.78125,ha:1028,o:"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{x_min:0,x_max:481,ha:578,o:"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"\u2030":{x_min:-3,x_max:1672,ha:1821,o:"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},a:{x_min:0,x_max:698.609375,ha:794,o:"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"\u2014":{x_min:0,x_max:941.671875,ha:1039,o:"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{x_min:8.71875,x_max:780.953125,ha:792,o:"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},N:{x_min:0,x_max:801,ha:914,o:"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},"\u03c1":{x_min:0,x_max:712,ha:797,o:"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},"\xaf":{x_min:0,x_max:941.671875,ha:938,o:"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},Z:{x_min:0,x_max:779,ha:849,o:"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},u:{x_min:0,x_max:617,ha:729,o:"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},k:{x_min:0,x_max:612.484375,ha:697,o:"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},"\u0397":{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"\u0391":{x_min:0,x_max:906.953125,ha:985,o:"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},s:{x_min:0,x_max:604,ha:697,o:"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},B:{x_min:0,x_max:778,ha:876,o:"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"\u2026":{x_min:0,x_max:614,ha:708,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{x_min:0,x_max:607,ha:704,o:"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},H:{x_min:0,x_max:803,ha:915,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"\u03bd":{x_min:0,x_max:675,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},c:{x_min:1,x_max:701.390625,ha:775,o:"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"\xb6":{x_min:0,x_max:566.671875,ha:678,o:"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},"\u03b2":{x_min:0,x_max:660,ha:745,o:"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},"\u039c":{x_min:0,x_max:954,ha:1068,o:"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},"\u038c":{x_min:.109375,x_max:1120,ha:1217,o:"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u0389":{x_min:0,x_max:1158,ha:1275,o:"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u2022":{x_min:0,x_max:663.890625,ha:775,o:"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"\xa5":{x_min:.1875,x_max:819.546875,ha:886,o:"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{x_min:0,x_max:318.0625,ha:415,o:"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},U:{x_min:0,x_max:796,ha:904,o:"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},"\u03b3":{x_min:.5,x_max:744.953125,ha:822,o:"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},"\u03b1":{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},F:{x_min:0,x_max:683.328125,ha:717,o:"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"\xad":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"\u03a7":{x_min:0,x_max:854.171875,ha:935,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{x_min:116,x_max:674,ha:792,o:"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"\u2020":{x_min:0,x_max:777,ha:835,o:"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"\xb0":{x_min:0,x_max:347,ha:444,o:"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},V:{x_min:0,x_max:862.71875,ha:940,o:"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},"\u039e":{x_min:0,x_max:734.71875,ha:763,o:"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "},"\xa0":{x_min:0,x_max:0,ha:853},"\u03ab":{x_min:.328125,x_max:819.515625,ha:889,o:"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},"\u201d":{x_min:0,x_max:347,ha:454,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{x_min:0,x_max:1260,ha:1357,o:"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},"\u038a":{x_min:0,x_max:499,ha:613,o:"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},i:{x_min:14,x_max:136,ha:275,o:"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},"\u0392":{x_min:0,x_max:778,ha:877,o:"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},"\u03c5":{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{x_min:0,x_max:275,ha:372,o:"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},m:{x_min:0,x_max:1019,ha:1128,o:"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},"\u03c7":{x_min:8.328125,x_max:780.5625,ha:815,o:"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},"\u03af":{x_min:42,x_max:326.71875,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},"\u0396":{x_min:0,x_max:779.171875,ha:850,o:"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},R:{x_min:0,x_max:781.953125,ha:907,o:"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},o:{x_min:0,x_max:713,ha:821,o:"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},K:{x_min:0,x_max:819.46875,ha:906,o:"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{x_min:0,x_max:142,ha:239,o:"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},d:{x_min:0,x_max:683,ha:796,o:"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"\xa8":{x_min:-109,x_max:247,ha:232,o:"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},E:{x_min:0,x_max:736.109375,ha:789,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},Y:{x_min:0,x_max:820,ha:886,o:"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},'"':{x_min:0,x_max:299,ha:396,o:"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"\u2039":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"\u201e":{x_min:0,x_max:364,ha:467,o:"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},"\u03b4":{x_min:1,x_max:710,ha:810,o:"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},"\u03ad":{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},"\u03c9":{x_min:0,x_max:922,ha:1031,o:"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"\xb4":{x_min:0,x_max:96,ha:251,o:"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"\xb1":{x_min:11,x_max:781,ha:792,o:"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"\u03cb":{x_min:0,x_max:617,ha:725,o:"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"\xa7":{x_min:0,x_max:593,ha:690,o:"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},b:{x_min:0,x_max:685,ha:783,o:"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},q:{x_min:0,x_max:683,ha:876,o:"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},"\u03a9":{x_min:-.171875,x_max:969.5625,ha:1068,o:"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},"\u03cd":{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},z:{x_min:-.015625,x_max:613.890625,ha:697,o:"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"\u2122":{x_min:0,x_max:894,ha:1e3,o:"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},"\u03ae":{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},"\u0398":{x_min:0,x_max:960,ha:1056,o:"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"\xae":{x_min:-3,x_max:1008,ha:1106,o:"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{x_min:0,x_max:833,ha:931,o:"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},"\u0395":{x_min:0,x_max:736.21875,ha:778,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"\xb3":{x_min:0,x_max:450,ha:547,o:"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{x_min:0,x_max:273.609375,ha:371,o:"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},L:{x_min:0,x_max:645.828125,ha:696,o:"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},"\u03c3":{x_min:0,x_max:803.390625,ha:894,o:"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},"\u03b6":{x_min:0,x_max:573,ha:642,o:"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},"\u03b8":{x_min:0,x_max:674,ha:778,o:"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},"\u039f":{x_min:0,x_max:958,ha:1054,o:"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},"\u0393":{x_min:0,x_max:705.28125,ha:749,o:"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "}," ":{x_min:0,x_max:0,ha:375},"%":{x_min:-3,x_max:1089,ha:1186,o:"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},P:{x_min:0,x_max:726,ha:806,o:"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},"\u0388":{x_min:0,x_max:1078.21875,ha:1118,o:"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u038f":{x_min:.125,x_max:1136.546875,ha:1235,o:"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},_:{x_min:0,x_max:705.5625,ha:803,o:"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},"\u03aa":{x_min:-110,x_max:246,ha:275,o:"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{x_min:23,x_max:768,ha:792,o:"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"\xbd":{x_min:0,x_max:1050,ha:1149,o:"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},"\u03a1":{x_min:0,x_max:720,ha:783,o:"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"'":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"\xaa":{x_min:0,x_max:350,ha:397,o:"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"\u0385":{x_min:0,x_max:450,ha:553,o:"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},T:{x_min:0,x_max:777,ha:835,o:"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},"\u03a6":{x_min:0,x_max:915,ha:997,o:"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"\u204b":{x_min:0,x_max:0,ha:694},j:{x_min:-77.78125,x_max:167,ha:349,o:"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},"\u03a3":{x_min:0,x_max:756.953125,ha:819,o:"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},"\u203a":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"\xa3":{x_min:0,x_max:704.484375,ha:801,o:"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},t:{x_min:0,x_max:367,ha:458,o:"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"\xac":{x_min:0,x_max:706,ha:803,o:"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},"\u03bb":{x_min:0,x_max:750,ha:803,o:"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},W:{x_min:0,x_max:1263.890625,ha:1351,o:"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},v:{x_min:0,x_max:675.15625,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},"\u03c4":{x_min:.28125,x_max:644.5,ha:703,o:"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},"\u03be":{x_min:0,x_max:624.9375,ha:699,o:"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{x_min:-3,x_max:894.25,ha:992,o:"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},"\u039b":{x_min:0,x_max:862.5,ha:942,o:"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},I:{x_min:41,x_max:180,ha:293,o:"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},G:{x_min:0,x_max:921,ha:1011,o:"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},"\u03b0":{x_min:0,x_max:617,ha:725,o:"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{x_min:0,x_max:138.890625,ha:236,o:"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"\xb7":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"\u03a5":{x_min:.328125,x_max:819.515625,ha:889,o:"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},r:{x_min:0,x_max:355.5625,ha:432,o:"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},x:{x_min:0,x_max:675,ha:764,o:"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},"\u03bc":{x_min:0,x_max:696.609375,ha:747,o:"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},h:{x_min:0,x_max:615,ha:724,o:"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{x_min:0,x_max:142,ha:239,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"\u03c6":{x_min:-2,x_max:878,ha:974,o:"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},f:{x_min:0,x_max:378,ha:472,o:"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"\u201c":{x_min:1,x_max:348.21875,ha:454,o:"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},A:{x_min:.03125,x_max:906.953125,ha:1008,o:"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},"\u2018":{x_min:1,x_max:139.890625,ha:236,o:"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},"\u03ca":{x_min:-70,x_max:283,ha:361,o:"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},"\u03c0":{x_min:-.21875,x_max:773.21875,ha:857,o:"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},"\u03ac":{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},O:{x_min:0,x_max:958,ha:1057,o:"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},n:{x_min:0,x_max:615,ha:724,o:"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},l:{x_min:41,x_max:166,ha:279,o:"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"\xa4":{x_min:40.09375,x_max:728.796875,ha:825,o:"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},"\u03ba":{x_min:0,x_max:632.328125,ha:679,o:"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},p:{x_min:0,x_max:685,ha:786,o:"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"\u2021":{x_min:0,x_max:777,ha:835,o:"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},"\u03c8":{x_min:0,x_max:808,ha:907,o:"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},"\u03b7":{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},cssFontWeight:"normal",ascender:1189,underlinePosition:-100,cssFontStyle:"normal",boundingBox:{yMin:-334,xMin:-111,yMax:1189,xMax:1672},resolution:1e3,original_font_information:{postscript_name:"Helvetiker-Regular",version_string:"Version 1.00 2004 initial release",vendor_url:"http://www.magenta.gr/",full_font_name:"Helvetiker",font_family_name:"Helvetiker",copyright:"Copyright (c) \u039cagenta ltd, 2004",description:"",trademark:"",designer:"",designer_url:"",unique_font_identifier:"\u039cagenta ltd:Helvetiker:22-10-104",license_url:"http://www.ellak.gr/fonts/MgOpen/license.html",license_description:'Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \r\n\r\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\r\n\r\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "MgOpen", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\r\n\r\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "MgOpen" name.\r\n\r\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \r\n\r\nTHE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.',manufacturer_name:"\u039cagenta ltd",font_sub_family_name:"Regular"},descender:-334,familyName:"Helvetiker",lineHeight:1522,underlineThickness:50},sy=$g($g({},window.THREE?window.THREE:{CircleBufferGeometry:Ea,Group:pi,Mesh:hl,MeshLambertMaterial:Fo,TextGeometry:Yg,Vector3:At}),{},{Font:Xg,TextGeometry:Yg}),uy=Cu({props:{labelsData:{default:[]},labelLat:{default:"lat"},labelLng:{default:"lng"},labelAltitude:{default:0},labelText:{default:"text"},labelSize:{default:.5},labelTypeFace:{default:oy,onChange:function(e,t){t.font=new sy.Font(e)}},labelColor:{default:function(){return"lightgrey"}},labelRotation:{default:0},labelResolution:{default:3},labelIncludeDot:{default:!0},labelDotRadius:{default:.1},labelDotOrientation:{default:function(){return"bottom"}},labelsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){var t=rc(e.labelLat),n=rc(e.labelLng),l=rc(e.labelAltitude),q=rc(e.labelText),r=rc(e.labelSize),i=rc(e.labelRotation),a=rc(e.labelColor),o=rc(e.labelIncludeDot),s=rc(e.labelDotRadius),u=rc(e.labelDotOrientation),A=new Set(["right","top","bottom"]),c=2*Math.PI*v_/360,m=new sy.CircleBufferGeometry(1,16);C_(e.labelsData,e.scene,{createObj:function(){var e=new sy.MeshLambertMaterial,t=new sy.Group;return t.add(new sy.Mesh(m,e)),t.add(new sy.Mesh(void 0,e)),t.__globeObjType="label",t},updateObj:function(m,h){var f=A_(m.children,2),d=f[0],p=f[1],x=a(h),v=k_(x);p.material.color.set(z_(x)),p.material.transparent=v<1,p.material.opacity=v;var g=o(h),_=u(h);!g||!A.has(_)&&(_="bottom");var y=g?+s(h)*c:1e-12;d.scale.x=d.scale.y=y;var b=+r(h)*c;if(p.geometry=new sy.TextGeometry(q(h),{font:e.font,size:b,height:0,curveSegments:e.labelResolution}),"right"!==_&&p.geometry.center(),g){var w=y+b/2;"right"===_&&(p.position.x=w),p.position.y={right:-b/2,top:w+b/2,bottom:-w-b/2}[_]}var M=function(t){var n=m.__currentTargetD=t,l=n.lat,q=n.lng,r=n.alt,i=n.rot,a=n.scale;Object.assign(m.position,g_(l,q,r)),m.lookAt(e.scene.localToWorld(new sy.Vector3(0,0,0))),m.rotateY(Math.PI),m.rotateZ(-i*Math.PI/180),m.scale.x=m.scale.y=m.scale.z=a},S={lat:+t(h),lng:+n(h),alt:+l(h),rot:+i(h),scale:1},E=m.__currentTargetD||Object.assign({},S,{scale:1e-12});Object.keys(S).some((function(e){return E[e]!==S[e]}))&&(!e.labelsTransitionDuration||e.labelsTransitionDuration<0?M(S):new Qu.Tween(E).to(S,e.labelsTransitionDuration).easing(Qu.Easing.Quadratic.InOut).onUpdate(M).start())}})}}),Ay=function(e){n_(n,e);var t=u_(n);function n(){var e,l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,q=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32;e_(this,n),(e=t.call(this)).type="CircleLineGeometry",e.parameters={radius:l,segmentCount:q};for(var r=[],i=0;i<=q;i++){var a=(i/q-.25)*Math.PI*2;r.push({x:Math.cos(a)*l,y:Math.sin(a)*l,z:0})}return e.setFromPoints(r),e}return n}((window.THREE?window.THREE:{BufferGeometry:Zn}).BufferGeometry),cy=window.THREE?window.THREE:{Color:Rn,Group:pi,Line:ha,LineBasicMaterial:oa,Vector3:At},my=Cu({props:{ringsData:{default:[]},ringLat:{default:"lat"},ringLng:{default:"lng"},ringAltitude:{default:.0015},ringColor:{default:function(){return"#ffffaa"},triggerUpdate:!1},ringResolution:{default:64,triggerUpdate:!1},ringMaxRadius:{default:2,triggerUpdate:!1},ringPropagationSpeed:{default:1,triggerUpdate:!1},ringRepeatPeriod:{default:700,triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e,(new(Mc())).onTick.add((function(e){if(t.ringsData.length){var n=rc(t.ringColor),l=rc(t.ringAltitude),q=rc(t.ringMaxRadius),r=rc(t.ringPropagationSpeed),i=rc(t.ringRepeatPeriod);t.ringsData.filter((function(e){return e.__threeObj})).forEach((function(a){var o,s,u,A=a.__threeObj;if((A.__nextRingTime||0)<=e){var c=i(a)/1e3;A.__nextRingTime=e+(c<=0?1/0:c);var m,h=new cy.Line(new Ay(1,t.ringResolution),new cy.LineBasicMaterial),f=n(a),d=f instanceof Array||f instanceof Function;d?f instanceof Array?(m=qh().domain(f.map((function(e,t){return t/(f.length-1)}))).range(f),h.material.transparent=f.some((function(e){return k_(e)<1}))):(m=f,h.material.transparent=!0):(h.material.color=new cy.Color(z_(f)),o=h.material,s=k_(f),o.opacity=s,o.transparent=s<1,o.depthWrite=void 0===u?s>=1:u);var p=v_*(1+l(a)),x=q(a),v=x*Math.PI/180,g=r(a),_=g<=0,y=function(e){var t=e.t,n=(_?1-t:t)*v;if(h.scale.x=h.scale.y=p*Math.sin(n),h.position.z=p*(1-Math.cos(n)),d){var l=m(t);h.material.color=new cy.Color(z_(l)),h.material.transparent&&(h.material.opacity=k_(l))}};if(0===g)y({t:0}),A.add(h);else{var b=1e3*Math.abs(x/g);new Qu.Tween({t:0}).to({t:1},b).onUpdate(y).onStart((function(){return A.add(h)})).onComplete((function(){A.remove(h),d_(h)})).start()}}}))}}))},update:function(e){var t=rc(e.ringLat),n=rc(e.ringLng),l=rc(e.ringAltitude),q=e.scene.localToWorld(new cy.Vector3(0,0,0));C_(e.ringsData,e.scene,{createObj:function(){var e=new cy.Group;return e.__globeObjType="ring",e},updateObj:function(e,r){var i=t(r),a=n(r),o=l(r);Object.assign(e.position,g_(i,a,o)),e.lookAt(q)}},{removeDelay:3e4})}}),hy=Cu({props:{customLayerData:{default:[]},customThreeObject:{},customThreeObjectUpdate:{triggerUpdate:!1}},init:function(e,t){p_(e),t.scene=e},update:function(e){e.customThreeObjectUpdate||p_(e.scene);var t=rc(e.customThreeObject),n=rc(e.customThreeObjectUpdate);C_(e.customLayerData,e.scene,{createObj:function(n){var l=t(n,v_);return l&&(e.customThreeObject===l&&(l=l.clone()),l.__globeObjType="custom"),l},updateObj:function(e,t){return n(e,t,v_)}})}}),fy=window.THREE?window.THREE:{Group:pi,Vector2:Ze,Vector3:At},dy=["globeLayer","pointsLayer","arcsLayer","hexBinLayer","polygonsLayer","hexedPolygonsLayer","pathsLayer","tilesLayer","labelsLayer","ringsLayer","customLayer"],py=x_("globeLayer",E_),xy=Object.assign.apply(Object,c_(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude"].map((function(e){return t_({},e,py.linkProp(e))})))),vy=Object.assign.apply(Object,c_(["globeMaterial"].map((function(e){return t_({},e,py.linkMethod(e))})))),gy=x_("pointsLayer",I_),_y=Object.assign.apply(Object,c_(["pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration"].map((function(e){return t_({},e,gy.linkProp(e))})))),yy=x_("arcsLayer",F_),by=Object.assign.apply(Object,c_(["arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration"].map((function(e){return t_({},e,yy.linkProp(e))})))),wy=x_("hexBinLayer",W_),My=Object.assign.apply(Object,c_(["hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration"].map((function(e){return t_({},e,wy.linkProp(e))})))),Sy=x_("hexedPolygonsLayer",K_),Ey=Object.assign.apply(Object,c_(["hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonCurvatureResolution","hexPolygonsTransitionDuration"].map((function(e){return t_({},e,Sy.linkProp(e))})))),zy=x_("polygonsLayer",Y_),ky=Object.assign.apply(Object,c_(["polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration"].map((function(e){return t_({},e,zy.linkProp(e))})))),Ty=x_("pathsLayer",qy),Cy=Object.assign.apply(Object,c_(["pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration"].map((function(e){return t_({},e,Ty.linkProp(e))})))),Ly=x_("tilesLayer",iy),Py=Object.assign.apply(Object,c_(["tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration"].map((function(e){return t_({},e,Ly.linkProp(e))})))),Ry=x_("labelsLayer",uy),Dy=Object.assign.apply(Object,c_(["labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration"].map((function(e){return t_({},e,Ry.linkProp(e))})))),Iy=x_("ringsLayer",my),Oy=Object.assign.apply(Object,c_(["ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod"].map((function(e){return t_({},e,Iy.linkProp(e))})))),By=x_("customLayer",hy),Ny=Object.assign.apply(Object,c_(["customLayerData","customThreeObject","customThreeObjectUpdate"].map((function(e){return t_({},e,By.linkProp(e))})))),Uy=Cu({props:$g($g($g($g($g($g($g($g($g($g($g({onGlobeReady:{triggerUpdate:!1},rendererSize:{default:new fy.Vector2(window.innerWidth,window.innerHeight),onChange:function(e,t){t.pathsLayer.rendererSize(e)},triggerUpdate:!1}},xy),_y),by),My),ky),Ey),Cy),Py),Dy),Oy),Ny),methods:$g({getCoords:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),l=1;l<t;l++)n[l-1]=arguments[l];return g_.apply(void 0,n)},toGeoCoords:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),l=1;l<t;l++)n[l-1]=arguments[l];return __.apply(void 0,n)}},vy),stateInit:function(){return{globeLayer:E_(),pointsLayer:I_(),arcsLayer:F_(),hexBinLayer:W_(),polygonsLayer:Y_(),hexedPolygonsLayer:K_(),pathsLayer:qy(),tilesLayer:iy(),labelsLayer:uy(),ringsLayer:my(),customLayer:hy()}},init:function(e,t,n){var l=n.animateIn,q=void 0===l||l,r=n.waitForGlobeReady,i=void 0===r||r;p_(e),e.add(t.scene=new fy.Group),t.scene.visible=!1,dy.forEach((function(e){var n=new fy.Group;t.scene.add(n),t[e](n)}));var a=function(){if(q){t.scene.scale.set(1e-6,1e-6,1e-6),new Qu.Tween({k:1e-6}).to({k:1},600).easing(Qu.Easing.Quadratic.Out).onUpdate((function(e){var n=e.k;return t.scene.scale.set(n,n,n)})).start();var e=new fy.Vector3(0,1,0);new Qu.Tween({rot:2*Math.PI}).to({rot:0},1200).easing(Qu.Easing.Quintic.Out).onUpdate((function(n){var l=n.rot;return t.scene.setRotationFromAxisAngle(e,l)})).start()}t.scene.visible=!0,t.onGlobeReady&&t.onGlobeReady()};i?t.globeLayer.onReady(a):a(),function e(){requestAnimationFrame(e),Qu.update()}()},update:function(e){}});var Fy=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],l=function(t){n_(q,t);var l=u_(q);function q(){var t;e_(this,q);for(var r=arguments.length,i=new Array(r),a=0;a<r;a++)i[a]=arguments[a];return(t=l.call.apply(l,[this].concat(i))).__kapsuleInstance=e.apply(void 0,i).apply(void 0,[].concat(c_(n?[o_(t)]:[]),i)),t}return q}(t);return Object.keys(e()).forEach((function(e){return l.prototype[e]=function(){var t,n=(t=this.__kapsuleInstance)[e].apply(t,arguments);return n===this.__kapsuleInstance?this:n}})),l}(Uy,(window.THREE?window.THREE:{Group:pi}).Group,!0),Hy={type:"change"},Gy={type:"start"},jy={type:"end"},Vy=function(e){R(n,e);var t=I(n);function n(e,l){var q;O(this,n),q=t.call(this),void 0===l&&console.warn('THREE.TrackballControls: The second parameter "domElement" is now mandatory.'),l===document&&console.error('THREE.TrackballControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.');var r=E(q),i=-1,a=0,o=1,s=2,u=3,A=4;q.object=e,q.domElement=l,q.domElement.style.touchAction="none",q.enabled=!0,q.screen={left:0,top:0,width:0,height:0},q.rotateSpeed=1,q.zoomSpeed=1.2,q.panSpeed=.3,q.noRotate=!1,q.noZoom=!1,q.noPan=!1,q.staticMoving=!1,q.dynamicDampingFactor=.2,q.minDistance=0,q.maxDistance=1/0,q.keys=["KeyA","KeyS","KeyD"],q.mouseButtons={LEFT:j.ROTATE,MIDDLE:j.DOLLY,RIGHT:j.PAN},q.target=new At;var c=1e-6,m=new At,h=1,f=i,d=i,p=0,x=0,v=0,g=new At,_=new Ze,y=new Ze,b=new At,w=new Ze,M=new Ze,S=new Ze,z=new Ze,k=[],T={};q.target0=q.target.clone(),q.position0=q.object.position.clone(),q.up0=q.object.up.clone(),q.zoom0=q.object.zoom,q.handleResize=function(){var e=r.domElement.getBoundingClientRect(),t=r.domElement.ownerDocument.documentElement;r.screen.left=e.left+window.pageXOffset-t.clientLeft,r.screen.top=e.top+window.pageYOffset-t.clientTop,r.screen.width=e.width,r.screen.height=e.height};var C=function(){var e=new Ze;return function(t,n){return e.set((t-r.screen.left)/r.screen.width,(n-r.screen.top)/r.screen.height),e}}(),L=function(){var e=new Ze;return function(t,n){return e.set((t-.5*r.screen.width-r.screen.left)/(.5*r.screen.width),(r.screen.height+2*(r.screen.top-n))/r.screen.width),e}}();function P(e){!1!==r.enabled&&(0===k.length&&(r.domElement.setPointerCapture(e.pointerId),r.domElement.addEventListener("pointermove",R),r.domElement.addEventListener("pointerup",D)),function(e){k.push(e)}(e),"touch"===e.pointerType?function(e){if(1===(G(e),k.length))f=u,y.copy(L(k[0].pageX,k[0].pageY)),_.copy(y);else{f=A;var t=k[0].pageX-k[1].pageX,n=k[0].pageY-k[1].pageY;x=p=Math.sqrt(t*t+n*n);var l=(k[0].pageX+k[1].pageX)/2,q=(k[0].pageY+k[1].pageY)/2;S.copy(C(l,q)),z.copy(S)}r.dispatchEvent(Gy)}(e):function(e){if(f===i)switch(e.button){case r.mouseButtons.LEFT:f=a;break;case r.mouseButtons.MIDDLE:f=o;break;case r.mouseButtons.RIGHT:f=s;break;default:f=i}var t=d!==i?d:f;t!==a||r.noRotate?t!==o||r.noZoom?t!==s||r.noPan||(S.copy(C(e.pageX,e.pageY)),z.copy(S)):(w.copy(C(e.pageX,e.pageY)),M.copy(w)):(y.copy(L(e.pageX,e.pageY)),_.copy(y));r.dispatchEvent(Gy)}(e))}function R(e){!1!==r.enabled&&("touch"===e.pointerType?function(e){if(1===(G(e),k.length))_.copy(y),y.copy(L(e.pageX,e.pageY));else{var t=function(e){var t=e.pointerId===k[0].pointerId?k[1]:k[0];return T[t.pointerId]}(e),n=e.pageX-t.x,l=e.pageY-t.y;x=Math.sqrt(n*n+l*l);var q=(e.pageX+t.x)/2,r=(e.pageY+t.y)/2;z.copy(C(q,r))}}(e):function(e){var t=d!==i?d:f;t!==a||r.noRotate?t!==o||r.noZoom?t!==s||r.noPan||z.copy(C(e.pageX,e.pageY)):M.copy(C(e.pageX,e.pageY)):(_.copy(y),y.copy(L(e.pageX,e.pageY)))}(e))}function D(e){!1!==r.enabled&&("touch"===e.pointerType?function(e){switch(k.length){case 0:f=i;break;case 1:f=u,y.copy(L(e.pageX,e.pageY)),_.copy(y);break;case 2:f=A,y.copy(L(e.pageX-_.pageX,e.pageY-_.pageY)),_.copy(y)}r.dispatchEvent(jy)}(e):(f=i,r.dispatchEvent(jy)),H(e),0===k.length&&(r.domElement.releasePointerCapture(e.pointerId),r.domElement.removeEventListener("pointermove",R),r.domElement.removeEventListener("pointerup",D)))}function I(e){H(e)}function B(e){!1!==r.enabled&&(window.removeEventListener("keydown",B),d===i&&(e.code!==r.keys[a]||r.noRotate?e.code!==r.keys[o]||r.noZoom?e.code!==r.keys[s]||r.noPan||(d=s):d=o:d=a))}function N(){!1!==r.enabled&&(d=i,window.addEventListener("keydown",B))}function U(e){if(!1!==r.enabled&&!0!==r.noZoom){switch(e.preventDefault(),e.deltaMode){case 2:w.y-=.025*e.deltaY;break;case 1:w.y-=.01*e.deltaY;break;default:w.y-=25e-5*e.deltaY}r.dispatchEvent(Gy),r.dispatchEvent(jy)}}function F(e){!1!==r.enabled&&e.preventDefault()}function H(e){delete T[e.pointerId];for(var t=0;t<k.length;t++)if(k[t].pointerId==e.pointerId)return void k.splice(t,1)}function G(e){var t=T[e.pointerId];void 0===t&&(t=new Ze,T[e.pointerId]=t),t.set(e.pageX,e.pageY)}return q.rotateCamera=function(){var e=new At,t=new ut,n=new At,l=new At,q=new At,i=new At;return function(){i.set(y.x-_.x,y.y-_.y,0);var a=i.length();a?(g.copy(r.object.position).sub(r.target),n.copy(g).normalize(),l.copy(r.object.up).normalize(),q.crossVectors(l,n).normalize(),l.setLength(y.y-_.y),q.setLength(y.x-_.x),i.copy(l.add(q)),e.crossVectors(i,g).normalize(),a*=r.rotateSpeed,t.setFromAxisAngle(e,a),g.applyQuaternion(t),r.object.up.applyQuaternion(t),b.copy(e),v=a):!r.staticMoving&&v&&(v*=Math.sqrt(1-r.dynamicDampingFactor),g.copy(r.object.position).sub(r.target),t.setFromAxisAngle(b,v),g.applyQuaternion(t),r.object.up.applyQuaternion(t)),_.copy(y)}}(),q.zoomCamera=function(){var e;f===A?(e=p/x,p=x,r.object.isPerspectiveCamera?g.multiplyScalar(e):r.object.isOrthographicCamera?(r.object.zoom/=e,r.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(1!==(e=1+(M.y-w.y)*r.zoomSpeed)&&e>0&&(r.object.isPerspectiveCamera?g.multiplyScalar(e):r.object.isOrthographicCamera?(r.object.zoom/=e,r.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),r.staticMoving?w.copy(M):w.y+=(M.y-w.y)*this.dynamicDampingFactor)},q.panCamera=function(){var e=new Ze,t=new At,n=new At;return function(){if(e.copy(z).sub(S),e.lengthSq()){if(r.object.isOrthographicCamera){var l=(r.object.right-r.object.left)/r.object.zoom/r.domElement.clientWidth,q=(r.object.top-r.object.bottom)/r.object.zoom/r.domElement.clientWidth;e.x*=l,e.y*=q}e.multiplyScalar(g.length()*r.panSpeed),n.copy(g).cross(r.object.up).setLength(e.x),n.add(t.copy(r.object.up).setLength(e.y)),r.object.position.add(n),r.target.add(n),r.staticMoving?S.copy(z):S.add(e.subVectors(z,S).multiplyScalar(r.dynamicDampingFactor))}}}(),q.checkDistances=function(){r.noZoom&&r.noPan||(g.lengthSq()>r.maxDistance*r.maxDistance&&(r.object.position.addVectors(r.target,g.setLength(r.maxDistance)),w.copy(M)),g.lengthSq()<r.minDistance*r.minDistance&&(r.object.position.addVectors(r.target,g.setLength(r.minDistance)),w.copy(M)))},q.update=function(){g.subVectors(r.object.position,r.target),r.noRotate||r.rotateCamera(),r.noZoom||r.zoomCamera(),r.noPan||r.panCamera(),r.object.position.addVectors(r.target,g),r.object.isPerspectiveCamera?(r.checkDistances(),r.object.lookAt(r.target),m.distanceToSquared(r.object.position)>c&&(r.dispatchEvent(Hy),m.copy(r.object.position))):r.object.isOrthographicCamera?(r.object.lookAt(r.target),(m.distanceToSquared(r.object.position)>c||h!==r.object.zoom)&&(r.dispatchEvent(Hy),m.copy(r.object.position),h=r.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},q.reset=function(){f=i,d=i,r.target.copy(r.target0),r.object.position.copy(r.position0),r.object.up.copy(r.up0),r.object.zoom=r.zoom0,r.object.updateProjectionMatrix(),g.subVectors(r.object.position,r.target),r.object.lookAt(r.target),r.dispatchEvent(Hy),m.copy(r.object.position),h=r.object.zoom},q.dispose=function(){r.domElement.removeEventListener("contextmenu",F),r.domElement.removeEventListener("pointerdown",P),r.domElement.removeEventListener("pointercancel",I),r.domElement.removeEventListener("wheel",U),r.domElement.removeEventListener("pointermove",R),r.domElement.removeEventListener("pointerup",D),window.removeEventListener("keydown",B),window.removeEventListener("keyup",N)},q.domElement.addEventListener("contextmenu",F),q.domElement.addEventListener("pointerdown",P),q.domElement.addEventListener("pointercancel",I),q.domElement.addEventListener("wheel",U,{passive:!1}),window.addEventListener("keydown",B),window.addEventListener("keyup",N),q.handleResize(),q.update(),q}return N(n)}(Ie),Wy={type:"change"},Qy={type:"start"},Yy={type:"end"},Xy=function(e){R(n,e);var t=I(n);function n(e,l){var q;O(this,n),q=t.call(this),void 0===l&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),l===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),q.object=e,q.domElement=l,q.domElement.style.touchAction="none",q.enabled=!0,q.target=new At,q.minDistance=0,q.maxDistance=1/0,q.minZoom=0,q.maxZoom=1/0,q.minPolarAngle=0,q.maxPolarAngle=Math.PI,q.minAzimuthAngle=-1/0,q.maxAzimuthAngle=1/0,q.enableDamping=!1,q.dampingFactor=.05,q.enableZoom=!0,q.zoomSpeed=1,q.enableRotate=!0,q.rotateSpeed=1,q.enablePan=!0,q.panSpeed=1,q.screenSpacePanning=!0,q.keyPanSpeed=7,q.autoRotate=!1,q.autoRotateSpeed=2,q.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},q.mouseButtons={LEFT:j.ROTATE,MIDDLE:j.DOLLY,RIGHT:j.PAN},q.touches={ONE:V,TWO:Q},q.target0=q.target.clone(),q.position0=q.object.position.clone(),q.zoom0=q.object.zoom,q._domElementKeyEvents=null,q.getPolarAngle=function(){return s.phi},q.getAzimuthalAngle=function(){return s.theta},q.getDistance=function(){return this.object.position.distanceTo(this.target)},q.listenToKeyEvents=function(e){e.addEventListener("keydown",$),this._domElementKeyEvents=e},q.saveState=function(){r.target0.copy(r.target),r.position0.copy(r.object.position),r.zoom0=r.object.zoom},q.reset=function(){r.target.copy(r.target0),r.object.position.copy(r.position0),r.object.zoom=r.zoom0,r.object.updateProjectionMatrix(),r.dispatchEvent(Wy),r.update(),a=i.NONE},q.update=function(){var t=new At,n=(new ut).setFromUnitVectors(e.up,new At(0,1,0)),l=n.clone().invert(),q=new At,h=new ut,f=2*Math.PI;return function(){var e=r.object.position;t.copy(e).sub(r.target),t.applyQuaternion(n),s.setFromVector3(t),r.autoRotate&&a===i.NONE&&S(2*Math.PI/60/60*r.autoRotateSpeed),r.enableDamping?(s.theta+=u.theta*r.dampingFactor,s.phi+=u.phi*r.dampingFactor):(s.theta+=u.theta,s.phi+=u.phi);var d=r.minAzimuthAngle,p=r.maxAzimuthAngle;return isFinite(d)&&isFinite(p)&&(d<-Math.PI?d+=f:d>Math.PI&&(d-=f),p<-Math.PI?p+=f:p>Math.PI&&(p-=f),s.theta=d<=p?Math.max(d,Math.min(p,s.theta)):s.theta>(d+p)/2?Math.max(d,s.theta):Math.min(p,s.theta)),s.phi=Math.max(r.minPolarAngle,Math.min(r.maxPolarAngle,s.phi)),s.makeSafe(),s.radius*=A,s.radius=Math.max(r.minDistance,Math.min(r.maxDistance,s.radius)),!0===r.enableDamping?r.target.addScaledVector(c,r.dampingFactor):r.target.add(c),t.setFromSpherical(s),t.applyQuaternion(l),e.copy(r.target).add(t),r.object.lookAt(r.target),!0===r.enableDamping?(u.theta*=1-r.dampingFactor,u.phi*=1-r.dampingFactor,c.multiplyScalar(1-r.dampingFactor)):(u.set(0,0,0),c.set(0,0,0)),A=1,!!(m||q.distanceToSquared(r.object.position)>o||8*(1-h.dot(r.object.quaternion))>o)&&(r.dispatchEvent(Wy),q.copy(r.object.position),h.copy(r.object.quaternion),m=!1,!0)}}(),q.dispose=function(){r.domElement.removeEventListener("contextmenu",ee),r.domElement.removeEventListener("pointerdown",G),r.domElement.removeEventListener("pointercancel",J),r.domElement.removeEventListener("wheel",K),r.domElement.removeEventListener("pointermove",X),r.domElement.removeEventListener("pointerup",Z),null!==r._domElementKeyEvents&&r._domElementKeyEvents.removeEventListener("keydown",$)};var r=E(q),i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},a=i.NONE,o=1e-6,s=new cu,u=new cu,A=1,c=new At,m=!1,h=new Ze,f=new Ze,d=new Ze,p=new Ze,x=new Ze,v=new Ze,g=new Ze,_=new Ze,y=new Ze,b=[],w={};function M(){return Math.pow(.95,r.zoomSpeed)}function S(e){u.theta-=e}function z(e){u.phi-=e}var k=function(){var e=new At;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),c.add(e)}}(),T=function(){var e=new At;return function(t,n){!0===r.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(r.object.up,e)),e.multiplyScalar(t),c.add(e)}}(),C=function(){var e=new At;return function(t,n){var l=r.domElement;if(r.object.isPerspectiveCamera){var q=r.object.position;e.copy(q).sub(r.target);var i=e.length();i*=Math.tan(r.object.fov/2*Math.PI/180),k(2*t*i/l.clientHeight,r.object.matrix),T(2*n*i/l.clientHeight,r.object.matrix)}else r.object.isOrthographicCamera?(k(t*(r.object.right-r.object.left)/r.object.zoom/l.clientWidth,r.object.matrix),T(n*(r.object.top-r.object.bottom)/r.object.zoom/l.clientHeight,r.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),r.enablePan=!1)}}();function L(e){r.object.isPerspectiveCamera?A/=e:r.object.isOrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom*e)),r.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function P(e){r.object.isPerspectiveCamera?A*=e:r.object.isOrthographicCamera?(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/e)),r.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function R(e){h.set(e.clientX,e.clientY)}function D(e){p.set(e.clientX,e.clientY)}function I(){if(1===b.length)h.set(b[0].pageX,b[0].pageY);else{var e=.5*(b[0].pageX+b[1].pageX),t=.5*(b[0].pageY+b[1].pageY);h.set(e,t)}}function B(){if(1===b.length)p.set(b[0].pageX,b[0].pageY);else{var e=.5*(b[0].pageX+b[1].pageX),t=.5*(b[0].pageY+b[1].pageY);p.set(e,t)}}function N(){var e=b[0].pageX-b[1].pageX,t=b[0].pageY-b[1].pageY,n=Math.sqrt(e*e+t*t);g.set(0,n)}function U(e){if(1==b.length)f.set(e.pageX,e.pageY);else{var t=le(e),n=.5*(e.pageX+t.x),l=.5*(e.pageY+t.y);f.set(n,l)}d.subVectors(f,h).multiplyScalar(r.rotateSpeed);var q=r.domElement;S(2*Math.PI*d.x/q.clientHeight),z(2*Math.PI*d.y/q.clientHeight),h.copy(f)}function F(e){if(1===b.length)x.set(e.pageX,e.pageY);else{var t=le(e),n=.5*(e.pageX+t.x),l=.5*(e.pageY+t.y);x.set(n,l)}v.subVectors(x,p).multiplyScalar(r.panSpeed),C(v.x,v.y),p.copy(x)}function H(e){var t=le(e),n=e.pageX-t.x,l=e.pageY-t.y,q=Math.sqrt(n*n+l*l);_.set(0,q),y.set(0,Math.pow(_.y/g.y,r.zoomSpeed)),L(y.y),g.copy(_)}function G(e){!1!==r.enabled&&(0===b.length&&(r.domElement.setPointerCapture(e.pointerId),r.domElement.addEventListener("pointermove",X),r.domElement.addEventListener("pointerup",Z)),function(e){b.push(e)}(e),"touch"===e.pointerType?function(e){switch(ne(e),b.length){case 1:switch(r.touches.ONE){case V:if(!1===r.enableRotate)return;I(),a=i.TOUCH_ROTATE;break;case W:if(!1===r.enablePan)return;B(),a=i.TOUCH_PAN;break;default:a=i.NONE}break;case 2:switch(r.touches.TWO){case Q:if(!1===r.enableZoom&&!1===r.enablePan)return;r.enableZoom&&N(),r.enablePan&&B(),a=i.TOUCH_DOLLY_PAN;break;case Y:if(!1===r.enableZoom&&!1===r.enableRotate)return;r.enableZoom&&N(),r.enableRotate&&I(),a=i.TOUCH_DOLLY_ROTATE;break;default:a=i.NONE}break;default:a=i.NONE}a!==i.NONE&&r.dispatchEvent(Qy)}(e):function(e){var t;switch(e.button){case 0:t=r.mouseButtons.LEFT;break;case 1:t=r.mouseButtons.MIDDLE;break;case 2:t=r.mouseButtons.RIGHT;break;default:t=-1}switch(t){case j.DOLLY:if(!1===r.enableZoom)return;!function(e){g.set(e.clientX,e.clientY)}(e),a=i.DOLLY;break;case j.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===r.enablePan)return;D(e),a=i.PAN}else{if(!1===r.enableRotate)return;R(e),a=i.ROTATE}break;case j.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===r.enableRotate)return;R(e),a=i.ROTATE}else{if(!1===r.enablePan)return;D(e),a=i.PAN}break;default:a=i.NONE}a!==i.NONE&&r.dispatchEvent(Qy)}(e))}function X(e){!1!==r.enabled&&("touch"===e.pointerType?function(e){switch(ne(e),a){case i.TOUCH_ROTATE:if(!1===r.enableRotate)return;U(e),r.update();break;case i.TOUCH_PAN:if(!1===r.enablePan)return;F(e),r.update();break;case i.TOUCH_DOLLY_PAN:if(!1===r.enableZoom&&!1===r.enablePan)return;!function(e){r.enableZoom&&H(e),r.enablePan&&F(e)}(e),r.update();break;case i.TOUCH_DOLLY_ROTATE:if(!1===r.enableZoom&&!1===r.enableRotate)return;!function(e){r.enableZoom&&H(e),r.enableRotate&&U(e)}(e),r.update();break;default:a=i.NONE}}(e):function(e){if(!1===r.enabled)return;switch(a){case i.ROTATE:if(!1===r.enableRotate)return;!function(e){f.set(e.clientX,e.clientY),d.subVectors(f,h).multiplyScalar(r.rotateSpeed);var t=r.domElement;S(2*Math.PI*d.x/t.clientHeight),z(2*Math.PI*d.y/t.clientHeight),h.copy(f),r.update()}(e);break;case i.DOLLY:if(!1===r.enableZoom)return;!function(e){_.set(e.clientX,e.clientY),y.subVectors(_,g),y.y>0?L(M()):y.y<0&&P(M()),g.copy(_),r.update()}(e);break;case i.PAN:if(!1===r.enablePan)return;!function(e){x.set(e.clientX,e.clientY),v.subVectors(x,p).multiplyScalar(r.panSpeed),C(v.x,v.y),p.copy(x),r.update()}(e)}}(e))}function Z(e){te(e),0===b.length&&(r.domElement.releasePointerCapture(e.pointerId),r.domElement.removeEventListener("pointermove",X),r.domElement.removeEventListener("pointerup",Z)),r.dispatchEvent(Yy),a=i.NONE}function J(e){te(e)}function K(e){!1!==r.enabled&&!1!==r.enableZoom&&a===i.NONE&&(e.preventDefault(),r.dispatchEvent(Qy),function(e){e.deltaY<0?P(M()):e.deltaY>0&&L(M()),r.update()}(e),r.dispatchEvent(Yy))}function $(e){!1!==r.enabled&&!1!==r.enablePan&&function(e){var t=!1;switch(e.code){case r.keys.UP:C(0,r.keyPanSpeed),t=!0;break;case r.keys.BOTTOM:C(0,-r.keyPanSpeed),t=!0;break;case r.keys.LEFT:C(r.keyPanSpeed,0),t=!0;break;case r.keys.RIGHT:C(-r.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),r.update())}(e)}function ee(e){!1!==r.enabled&&e.preventDefault()}function te(e){delete w[e.pointerId];for(var t=0;t<b.length;t++)if(b[t].pointerId==e.pointerId)return void b.splice(t,1)}function ne(e){var t=w[e.pointerId];void 0===t&&(t=new Ze,w[e.pointerId]=t),t.set(e.pageX,e.pageY)}function le(e){var t=e.pointerId===b[0].pointerId?b[1]:b[0];return w[t.pointerId]}return r.domElement.addEventListener("contextmenu",ee),r.domElement.addEventListener("pointerdown",G),r.domElement.addEventListener("pointercancel",J),r.domElement.addEventListener("wheel",K,{passive:!1}),q.update(),q}return N(n)}(Ie),Zy={type:"change"},Jy=function(e){R(n,e);var t=I(n);function n(e,l){var q;O(this,n),q=t.call(this),void 0===l&&(console.warn('THREE.FlyControls: The second parameter "domElement" is now mandatory.'),l=document),q.object=e,q.domElement=l,q.movementSpeed=1,q.rollSpeed=.005,q.dragToLook=!1,q.autoForward=!1;var r=E(q),i=1e-6,a=new ut,o=new At;q.tmpQuaternion=new ut,q.mouseStatus=0,q.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},q.moveVector=new At(0,0,0),q.rotationVector=new At(0,0,0),q.keydown=function(e){if(!e.altKey){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this.moveState.forward=1;break;case"KeyS":this.moveState.back=1;break;case"KeyA":this.moveState.left=1;break;case"KeyD":this.moveState.right=1;break;case"KeyR":this.moveState.up=1;break;case"KeyF":this.moveState.down=1;break;case"ArrowUp":this.moveState.pitchUp=1;break;case"ArrowDown":this.moveState.pitchDown=1;break;case"ArrowLeft":this.moveState.yawLeft=1;break;case"ArrowRight":this.moveState.yawRight=1;break;case"KeyQ":this.moveState.rollLeft=1;break;case"KeyE":this.moveState.rollRight=1}this.updateMovementVector(),this.updateRotationVector()}},q.keyup=function(e){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this.moveState.forward=0;break;case"KeyS":this.moveState.back=0;break;case"KeyA":this.moveState.left=0;break;case"KeyD":this.moveState.right=0;break;case"KeyR":this.moveState.up=0;break;case"KeyF":this.moveState.down=0;break;case"ArrowUp":this.moveState.pitchUp=0;break;case"ArrowDown":this.moveState.pitchDown=0;break;case"ArrowLeft":this.moveState.yawLeft=0;break;case"ArrowRight":this.moveState.yawRight=0;break;case"KeyQ":this.moveState.rollLeft=0;break;case"KeyE":this.moveState.rollRight=0}this.updateMovementVector(),this.updateRotationVector()},q.mousedown=function(e){if(this.dragToLook)this.mouseStatus++;else{switch(e.button){case 0:this.moveState.forward=1;break;case 2:this.moveState.back=1}this.updateMovementVector()}},q.mousemove=function(e){if(!this.dragToLook||this.mouseStatus>0){var t=this.getContainerDimensions(),n=t.size[0]/2,l=t.size[1]/2;this.moveState.yawLeft=-(e.pageX-t.offset[0]-n)/n,this.moveState.pitchDown=(e.pageY-t.offset[1]-l)/l,this.updateRotationVector()}},q.mouseup=function(e){if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else{switch(e.button){case 0:this.moveState.forward=0;break;case 2:this.moveState.back=0}this.updateMovementVector()}this.updateRotationVector()},q.update=function(e){var t=e*r.movementSpeed,n=e*r.rollSpeed;r.object.translateX(r.moveVector.x*t),r.object.translateY(r.moveVector.y*t),r.object.translateZ(r.moveVector.z*t),r.tmpQuaternion.set(r.rotationVector.x*n,r.rotationVector.y*n,r.rotationVector.z*n,1).normalize(),r.object.quaternion.multiply(r.tmpQuaternion),(o.distanceToSquared(r.object.position)>i||8*(1-a.dot(r.object.quaternion))>i)&&(r.dispatchEvent(Zy),a.copy(r.object.quaternion),o.copy(r.object.position))},q.updateMovementVector=function(){var e=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-e+this.moveState.back},q.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},q.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},q.dispose=function(){this.domElement.removeEventListener("contextmenu",Ky),this.domElement.removeEventListener("mousedown",u),this.domElement.removeEventListener("mousemove",s),this.domElement.removeEventListener("mouseup",A),window.removeEventListener("keydown",c),window.removeEventListener("keyup",m)};var s=q.mousemove.bind(E(q)),u=q.mousedown.bind(E(q)),A=q.mouseup.bind(E(q)),c=q.keydown.bind(E(q)),m=q.keyup.bind(E(q));return q.domElement.addEventListener("contextmenu",Ky),q.domElement.addEventListener("mousemove",s),q.domElement.addEventListener("mousedown",u),q.domElement.addEventListener("mouseup",A),window.addEventListener("keydown",c),window.addEventListener("keyup",m),q.updateMovementVector(),q.updateRotationVector(),q}return N(n)}(Ie);function Ky(e){e.preventDefault()}var $y={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\t\t}"},eb=function(){function e(){O(this,e),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return N(e,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}]),e}(),tb=new Wl(-1,1,1,-1,0,1),nb=new Zn;nb.setAttribute("position",new Hn([-1,3,0,-1,-1,0,3,-1,0],3)),nb.setAttribute("uv",new Hn([0,2,0,0,2,0],2));var lb=function(){function e(t){O(this,e),this._mesh=new hl(nb,t)}return N(e,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(e){e.render(this._mesh,tb)}},{key:"material",get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}]),e}(),qb=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this)).textureID=void 0!==l?l:"tDiffuse",e instanceof gl?(q.uniforms=e.uniforms,q.material=e):e&&(q.uniforms=vl.clone(e.uniforms),q.material=new gl({defines:Object.assign({},e.defines),uniforms:q.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),q.fsQuad=new lb(q.material),q}return N(n,[{key:"render",value:function(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}]),n}(eb),rb=function(e){R(n,e);var t=I(n);function n(e,l){var q;return O(this,n),(q=t.call(this)).scene=e,q.camera=l,q.clear=!0,q.needsSwap=!1,q.inverse=!1,q}return N(n,[{key:"render",value:function(e,t,n){var l,q,r=e.getContext(),i=e.state;i.buffers.color.setMask(!1),i.buffers.depth.setMask(!1),i.buffers.color.setLocked(!0),i.buffers.depth.setLocked(!0),this.inverse?(l=0,q=1):(l=1,q=0),i.buffers.stencil.setTest(!0),i.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),i.buffers.stencil.setFunc(r.ALWAYS,l,4294967295),i.buffers.stencil.setClear(q),i.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),i.buffers.color.setLocked(!1),i.buffers.depth.setLocked(!1),i.buffers.stencil.setLocked(!1),i.buffers.stencil.setFunc(r.EQUAL,1,4294967295),i.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),i.buffers.stencil.setLocked(!0)}}]),n}(eb),ib=function(e){R(n,e);var t=I(n);function n(){var e;return O(this,n),(e=t.call(this)).needsSwap=!1,e}return N(n,[{key:"render",value:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}]),n}(eb),ab=function(){function e(t,n){if(O(this,e),this.renderer=t,void 0===n){var l={minFilter:oe,magFilter:oe,format:pe},q=t.getSize(new Ze);this._pixelRatio=t.getPixelRatio(),this._width=q.width,this._height=q.height,(n=new at(this._width*this._pixelRatio,this._height*this._pixelRatio,l)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=n.width,this._height=n.height;this.renderTarget1=n,this.renderTarget2=n.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===$y&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===qb&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new qb($y),this.clock=new Us}return N(e,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}},{key:"removePass",value:function(e){var t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}},{key:"isLastEnabledPass",value:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}},{key:"render",value:function(e){void 0===e&&(e=this.clock.getDelta());for(var t=this.renderer.getRenderTarget(),n=!1,l=0,q=this.passes.length;l<q;l++){var r=this.passes[l];if(!1!==r.enabled){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(l),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),r.needsSwap){if(n){var i=this.renderer.getContext(),a=this.renderer.state.buffers.stencil;a.setFunc(i.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.setFunc(i.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==rb&&(r instanceof rb?n=!0:r instanceof ib&&(n=!1))}}this.renderer.setRenderTarget(t)}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getSize(new Ze);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this._width=e,this._height=t;var n=this._width*this._pixelRatio,l=this._height*this._pixelRatio;this.renderTarget1.setSize(n,l),this.renderTarget2.setSize(n,l);for(var q=0;q<this.passes.length;q++)this.passes[q].setSize(n,l)}},{key:"setPixelRatio",value:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}]),e}(),ob=(new Wl(-1,1,1,-1,0,1),new Zn);ob.setAttribute("position",new Hn([-1,3,0,-1,-1,0,3,-1,0],3)),ob.setAttribute("uv",new Hn([0,2,0,0,2,0],2));var sb=function(e){R(n,e);var t=I(n);function n(e,l,q,r,i){var a;return O(this,n),(a=t.call(this)).scene=e,a.camera=l,a.overrideMaterial=q,a.clearColor=r,a.clearAlpha=void 0!==i?i:0,a.clear=!0,a.clearDepth=!1,a.needsSwap=!1,a._oldClearColor=new Rn,a}return N(n,[{key:"render",value:function(e,t,n){var l,q,r=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(q=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),l=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,l),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=q),e.autoClear=r}}]),n}(eb);function ub(){return ub=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},ub.apply(this,arguments)}function Ab(e,t,n){return Ab=D()?Reflect.construct:function(e,t,n){var l=[null];l.push.apply(l,t);var q=new(Function.bind.apply(e,l));return n&&P(q,n.prototype),q},Ab.apply(null,arguments)}function cb(e){var t="function"===typeof Map?new Map:void 0;return cb=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,l)}function l(){return Ab(e,arguments,k(this).constructor)}return l.prototype=Object.create(e.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}}),P(l,e)},cb(e)}var mb=function(e){var t,n;function l(t){return E(e.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this)}return n=e,(t=l).prototype=Object.create(n.prototype),t.prototype.constructor=t,P(t,n),l}(cb(Error));function hb(e){return Math.round(255*e)}function fb(e,t,n){return hb(e)+","+hb(t)+","+hb(n)}function db(e,t,n,l){if(void 0===l&&(l=fb),0===t)return l(n,n,n);var q=(e%360+360)%360/60,r=(1-Math.abs(2*n-1))*t,i=r*(1-Math.abs(q%2-1)),a=0,o=0,s=0;q>=0&&q<1?(a=r,o=i):q>=1&&q<2?(a=i,o=r):q>=2&&q<3?(o=r,s=i):q>=3&&q<4?(o=i,s=r):q>=4&&q<5?(a=i,s=r):q>=5&&q<6&&(a=r,s=i);var u=n-r/2;return l(a+u,o+u,s+u)}var pb={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};var xb=/^#[a-fA-F0-9]{6}$/,vb=/^#[a-fA-F0-9]{8}$/,gb=/^#[a-fA-F0-9]{3}$/,_b=/^#[a-fA-F0-9]{4}$/,yb=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/i,bb=/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i,wb=/^hsl\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,Mb=/^hsla\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;function Sb(e){if("string"!==typeof e)throw new mb(3);var t=function(e){if("string"!==typeof e)return e;var t=e.toLowerCase();return pb[t]?"#"+pb[t]:e}(e);if(t.match(xb))return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16)};if(t.match(vb)){var n=parseFloat((parseInt(""+t[7]+t[8],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16),alpha:n}}if(t.match(gb))return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16)};if(t.match(_b)){var l=parseFloat((parseInt(""+t[4]+t[4],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16),alpha:l}}var q=yb.exec(t);if(q)return{red:parseInt(""+q[1],10),green:parseInt(""+q[2],10),blue:parseInt(""+q[3],10)};var r=bb.exec(t.substring(0,50));if(r)return{red:parseInt(""+r[1],10),green:parseInt(""+r[2],10),blue:parseInt(""+r[3],10),alpha:parseFloat(""+r[4])};var i=wb.exec(t);if(i){var a="rgb("+db(parseInt(""+i[1],10),parseInt(""+i[2],10)/100,parseInt(""+i[3],10)/100)+")",o=yb.exec(a);if(!o)throw new mb(4,t,a);return{red:parseInt(""+o[1],10),green:parseInt(""+o[2],10),blue:parseInt(""+o[3],10)}}var s=Mb.exec(t.substring(0,50));if(s){var u="rgb("+db(parseInt(""+s[1],10),parseInt(""+s[2],10)/100,parseInt(""+s[3],10)/100)+")",A=yb.exec(u);if(!A)throw new mb(4,t,u);return{red:parseInt(""+A[1],10),green:parseInt(""+A[2],10),blue:parseInt(""+A[3],10),alpha:parseFloat(""+s[4])}}throw new mb(5)}var Eb=function(e){return 7===e.length&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e};function zb(e){var t=e.toString(16);return 1===t.length?"0"+t:t}function kb(e,t,n){if("number"===typeof e&&"number"===typeof t&&"number"===typeof n)return Eb("#"+zb(e)+zb(t)+zb(n));if("object"===typeof e&&void 0===t&&void 0===n)return Eb("#"+zb(e.red)+zb(e.green)+zb(e.blue));throw new mb(6)}function Tb(e,t,n,l){if("string"===typeof e&&"number"===typeof t){var q=Sb(e);return"rgba("+q.red+","+q.green+","+q.blue+","+t+")"}if("number"===typeof e&&"number"===typeof t&&"number"===typeof n&&"number"===typeof l)return l>=1?kb(e,t,n):"rgba("+e+","+t+","+n+","+l+")";if("object"===typeof e&&void 0===t&&void 0===n&&void 0===l)return e.alpha>=1?kb(e.red,e.green,e.blue):"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")";throw new mb(7)}function Cb(e,t,n){return function(){var l=n.concat(Array.prototype.slice.call(arguments));return l.length>=t?e.apply(this,l):Cb(e,t,l)}}function Lb(e){return Cb(e,e.length,[])}function Pb(e,t,n){return Math.max(e,Math.min(t,n))}function Rb(e,t){if("transparent"===t)return t;var n=Sb(t);return Tb(ub({},n,{alpha:Pb(0,1,(100*("number"===typeof n.alpha?n.alpha:1)+100*parseFloat(e))/100)}))}var Db=Lb(Rb);function Ib(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ob(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var l,q,r=[],i=!0,a=!1;try{for(n=n.call(e);!(i=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);i=!0);}catch(o){a=!0,q=o}finally{try{i||null==n.return||n.return()}finally{if(a)throw q}}return r}(e,t)||Nb(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Bb(e){return function(e){if(Array.isArray(e))return Ub(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Nb(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nb(e,t){if(e){if("string"===typeof e)return Ub(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ub(e,t):void 0}}function Ub(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!==typeof document){var l=document.head||document.getElementsByTagName("head")[0],q=document.createElement("style");q.type="text/css","top"===n&&l.firstChild?l.insertBefore(q,l.firstChild):l.appendChild(q),q.styleSheet?q.styleSheet.cssText=e:q.appendChild(document.createTextNode(e))}}(".scene-nav-info {\n  bottom: 5px;\n  width: 100%;\n  text-align: center;\n  color: slategrey;\n  opacity: 0.7;\n  font-size: 10px;\n}\n\n.scene-tooltip {\n  color: lavender;\n  font-size: 15px;\n}\n\n.scene-nav-info, .scene-tooltip {\n  position: absolute;\n  font-family: sans-serif;\n  pointer-events: none;\n}\n\n.scene-container canvas:focus {\n  outline: none;\n}");var Fb=window.THREE?window.THREE:{WebGLRenderer:wi,Scene:zi,PerspectiveCamera:yl,Raycaster:su,TextureLoader:ms,Vector2:Ze,Vector3:At,Box3:ht,Color:Rn,Mesh:hl,SphereGeometry:Co,MeshBasicMaterial:Dn,BackSide:1,EventDispatcher:Ie,MOUSE:j,Quaternion:ut,Spherical:cu,Clock:Us},Hb=Cu({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,t){t.hoverObj=null,t.toolTipElem&&(t.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return-1},triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){if(e.controls.update&&e.controls.update(e.clock.getDelta()),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach((function(t){return t.render(e.scene,e.camera)})),e.enablePointerInteraction){var t=null;if(e.hoverDuringDrag||!e.isPointerDragging){var n=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y).filter((function(t){return e.hoverFilter(t.object)})).sort((function(t,n){return e.hoverOrderComparator(t.object,n.object)})),l=n.length?n[0]:null;t=l?l.object:null,e.intersectionPoint=l?l.point:null}t!==e.hoverObj&&(e.onHover(t,e.hoverObj),e.toolTipElem.innerHTML=t&&rc(e.tooltipContent)(t)||"",e.hoverObj=t)}Qu.update()}return this},getPointerPos:function(e){var t=e.pointerPos;return{x:t.x,y:t.y}},cameraPosition:function(e,t,n,l){var q=e.camera;if(t&&e.initialised){var r=t,i=n||{x:0,y:0,z:0};if(l){var a=Object.assign({},q.position),o=A();new Qu.Tween(a).to(r,l).easing(Qu.Easing.Quadratic.Out).onUpdate(s).start(),new Qu.Tween(o).to(i,l/3).easing(Qu.Easing.Quadratic.Out).onUpdate(u).start()}else s(r),u(i);return this}return Object.assign({},q.position,{lookAt:A()});function s(e){var t=e.x,n=e.y,l=e.z;void 0!==t&&(q.position.x=t),void 0!==n&&(q.position.y=n),void 0!==l&&(q.position.z=l)}function u(t){e.controls.target=new Fb.Vector3(t.x,t.y,t.z)}function A(){return Object.assign(new Fb.Vector3(0,0,-1e3).applyQuaternion(q.quaternion).add(q.position))}},zoomToFit:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,l=arguments.length,q=new Array(l>3?l-3:0),r=3;r<l;r++)q[r-3]=arguments[r];return this.fitToBbox(this.getBbox.apply(this,q),t,n)},fitToBbox:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10,q=e.camera;if(t){var r=new Fb.Vector3(0,0,0),i=2*Math.max.apply(Math,Bb(Object.entries(t).map((function(e){var t=Ob(e,2),n=t[0],l=t[1];return Math.max.apply(Math,Bb(l.map((function(e){return Math.abs(r[n]-e)}))))})))),a=(1-2*l/e.height)*q.fov,o=i/Math.atan(a*Math.PI/180),s=o/q.aspect,u=Math.max(o,s);if(u>0){var A=r.clone().sub(q.position).normalize().multiplyScalar(-u);this.cameraPosition(A,r,n)}}return this},getBbox:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){return!0},n=new Fb.Box3(new Fb.Vector3(0,0,0),new Fb.Vector3(0,0,0)),l=e.objects.filter(t);return l.length?(l.forEach((function(e){return n.expandByObject(e)})),Object.assign.apply(Object,Bb(["x","y","z"].map((function(e){return Ib({},e,[n.min[e],n.max[e]])}))))):null},getScreenCoords:function(e,t,n,l){var q=new Fb.Vector3(t,n,l);return q.project(this.camera()),{x:(q.x+1)*e.width/2,y:-(q.y-1)*e.height/2}},getSceneCoords:function(e,t,n){var l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,q=new Fb.Vector2(t/e.width*2-1,-n/e.height*2+1),r=new Fb.Raycaster;return r.setFromCamera(q,e.camera),Object.assign({},r.ray.at(l,new Fb.Vector3))},intersectingObjects:function(e,t,n){var l=new Fb.Vector2(t/e.width*2-1,-n/e.height*2+1),q=new Fb.Raycaster;return q.params.Line.threshold=e.lineHoverPrecision,q.setFromCamera(l,e.camera),q.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new Fb.Scene,camera:new Fb.PerspectiveCamera,clock:new Fb.Clock}},init:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=n.controlType,q=void 0===l?"trackball":l,r=n.rendererConfig,i=void 0===r?{}:r,a=n.extraRenderers,o=void 0===a?[]:a,s=n.waitForLoadComplete,u=void 0===s||s;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.className="scene-container",t.container.style.position="relative",t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[q]||"",t.navInfo.style.display=t.showNavInfo?null:"none",t.toolTipElem=document.createElement("div"),t.toolTipElem.classList.add("scene-tooltip"),t.container.appendChild(t.toolTipElem),t.pointerPos=new Fb.Vector2,t.pointerPos.x=-2,t.pointerPos.y=-2,["pointermove","pointerdown"].forEach((function(e){return t.container.addEventListener(e,(function(n){if("pointerdown"===e&&(t.isPointerPressed=!0),!t.isPointerDragging&&"pointermove"===n.type&&(n.pressure>0||t.isPointerPressed)&&("touch"!==n.pointerType||void 0===n.movementX||[n.movementX,n.movementY].some((function(e){return Math.abs(e)>1})))&&(t.isPointerDragging=!0),t.enablePointerInteraction){var l=function(e){var t=e.getBoundingClientRect(),n=window.pageXOffset||document.documentElement.scrollLeft,l=window.pageYOffset||document.documentElement.scrollTop;return{top:t.top+l,left:t.left+n}}(t.container);t.pointerPos.x=n.pageX-l.left,t.pointerPos.y=n.pageY-l.top,t.toolTipElem.style.top="".concat(t.pointerPos.y,"px"),t.toolTipElem.style.left="".concat(t.pointerPos.x,"px"),t.toolTipElem.style.transform="translate(-".concat(t.pointerPos.x/t.width*100,"%, 21px)")}}),{passive:!0})})),t.container.addEventListener("pointerup",(function(e){t.isPointerPressed=!1,t.isPointerDragging&&(t.isPointerDragging=!1,!t.clickAfterDrag)||requestAnimationFrame((function(){0===e.button&&t.onClick(t.hoverObj||null,e,t.intersectionPoint),2===e.button&&t.onRightClick&&t.onRightClick(t.hoverObj||null,e,t.intersectionPoint)}))}),{passive:!0,capture:!0}),t.container.addEventListener("contextmenu",(function(e){t.onRightClick&&e.preventDefault()})),t.renderer=new Fb.WebGLRenderer(Object.assign({antialias:!0,alpha:!0},i)),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),t.container.appendChild(t.renderer.domElement),t.extraRenderers=o,t.extraRenderers.forEach((function(e){e.domElement.style.position="absolute",e.domElement.style.top="0px",e.domElement.style.pointerEvents="none",t.container.appendChild(e.domElement)})),t.postProcessingComposer=new ab(t.renderer),t.postProcessingComposer.addPass(new sb(t.scene,t.camera)),t.controls=new{trackball:Vy,orbit:Xy,fly:Jy}[q](t.camera,t.renderer.domElement),"fly"===q&&(t.controls.movementSpeed=300,t.controls.rollSpeed=Math.PI/6,t.controls.dragToLook=!0),"trackball"!==q&&"orbit"!==q||(t.controls.minDistance=.1,t.controls.maxDistance=t.skyRadius,t.controls.addEventListener("start",(function(){t.controlsEngaged=!0})),t.controls.addEventListener("change",(function(){t.controlsEngaged&&(t.controlsDragging=!0)})),t.controls.addEventListener("end",(function(){t.controlsEngaged=!1,t.controlsDragging=!1}))),[t.renderer,t.postProcessingComposer].concat(Bb(t.extraRenderers)).forEach((function(e){return e.setSize(t.width,t.height)})),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,t.scene.add(t.skysphere=new Fb.Mesh),t.skysphere.visible=!1,t.loadComplete=t.scene.visible=!u,window.scene=t.scene},update:function(e,t){if(e.width&&e.height&&(t.hasOwnProperty("width")||t.hasOwnProperty("height"))&&(e.container.style.width=e.width,e.container.style.height=e.height,[e.renderer,e.postProcessingComposer].concat(Bb(e.extraRenderers)).forEach((function(t){return t.setSize(e.width,e.height)})),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix()),t.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&t.skyRadius&&(e.controls.maxDistance=e.skyRadius),e.camera.far=2.5*e.skyRadius,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new Fb.SphereGeometry(e.skyRadius)),t.hasOwnProperty("backgroundColor")){var n=Sb(e.backgroundColor).alpha;void 0===n&&(n=1),e.renderer.setClearColor(new Fb.Color(Db(1,e.backgroundColor)),n)}function l(){e.loadComplete=e.scene.visible=!0}t.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?(new Fb.TextureLoader).load(e.backgroundImageUrl,(function(t){e.skysphere.material=new Fb.MeshBasicMaterial({map:t,side:Fb.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&l()})):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&l())),t.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),t.hasOwnProperty("objects")&&((t.objects||[]).forEach((function(t){return e.scene.remove(t)})),e.objects.forEach((function(t){return e.scene.add(t)})))}}),Gb=Hb;function jb(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function Vb(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?jb(Object(n),!0).forEach((function(t){Wb(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):jb(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Wb(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Qb(e,t){if(null==e)return{};var n,l,q=function(e,t){if(null==e)return{};var n,l,q={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(q[n]=e[n]);return q}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(q[n]=e[n])}return q}function Yb(e){return function(e){if(Array.isArray(e))return Xb(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"===typeof e)return Xb(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Xb(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xb(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}function Zb(e,t){var n=new t;return{linkProp:function(t){return{default:n[t](),onChange:function(n,l){l[e][t](n)},triggerUpdate:!1}},linkMethod:function(t){return function(n){for(var l=n[e],q=arguments.length,r=new Array(q>1?q-1:0),i=1;i<q;i++)r[i-1]=arguments[i];var a=l[t].apply(l,r);return a===l?this:a}}}}!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!==typeof document){var l=document.head||document.getElementsByTagName("head")[0],q=document.createElement("style");q.type="text/css","top"===n&&l.firstChild?l.insertBefore(q,l.firstChild):l.appendChild(q),q.styleSheet?q.styleSheet.cssText=e:q.appendChild(document.createTextNode(e))}}(".scene-container .clickable {\n  cursor: pointer;\n}");var Jb=["rendererConfig","waitForGlobeReady"],Kb=window.THREE?window.THREE:{AmbientLight:ks,DirectionalLight:zs,Vector2:Ze},$b=Zb("globe",Fy),ew=Object.assign.apply(Object,Yb(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude","globeMaterial","onGlobeReady","pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration","arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration","polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration","pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration","hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration","hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonCurvatureResolution","hexPolygonsTransitionDuration","tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration","ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration","customLayerData","customThreeObject","customThreeObjectUpdate"].map((function(e){return Wb({},e,$b.linkProp(e))})))),tw=Object.assign.apply(Object,Yb(["getCoords","toGeoCoords"].map((function(e){return Wb({},e,$b.linkMethod(e))})))),nw=Zb("renderObjs",Gb),lw=Object.assign.apply(Object,Yb(["width","height","backgroundColor","backgroundImageUrl","enablePointerInteraction"].map((function(e){return Wb({},e,nw.linkProp(e))})))),qw=Object.assign.apply(Object,Yb(["postProcessingComposer"].map((function(e){return Wb({},e,nw.linkMethod(e))})))),rw=Cu({props:Vb(Vb({onZoom:{triggerUpdate:!1},onGlobeClick:{triggerUpdate:!1},onGlobeRightClick:{triggerUpdate:!1},pointLabel:{default:"name",triggerUpdate:!1},onPointClick:{triggerUpdate:!1},onPointRightClick:{triggerUpdate:!1},onPointHover:{triggerUpdate:!1},arcLabel:{default:"name",triggerUpdate:!1},onArcClick:{triggerUpdate:!1},onArcRightClick:{triggerUpdate:!1},onArcHover:{triggerUpdate:!1},polygonLabel:{default:"name",triggerUpdate:!1},onPolygonClick:{triggerUpdate:!1},onPolygonRightClick:{triggerUpdate:!1},onPolygonHover:{triggerUpdate:!1},pathLabel:{default:"name",triggerUpdate:!1},onPathClick:{triggerUpdate:!1},onPathRightClick:{triggerUpdate:!1},onPathHover:{triggerUpdate:!1},hexLabel:{triggerUpdate:!1},onHexClick:{triggerUpdate:!1},onHexRightClick:{triggerUpdate:!1},onHexHover:{triggerUpdate:!1},hexPolygonLabel:{triggerUpdate:!1},onHexPolygonClick:{triggerUpdate:!1},onHexPolygonRightClick:{triggerUpdate:!1},onHexPolygonHover:{triggerUpdate:!1},tileLabel:{default:"name",triggerUpdate:!1},onTileClick:{triggerUpdate:!1},onTileRightClick:{triggerUpdate:!1},onTileHover:{triggerUpdate:!1},labelLabel:{triggerUpdate:!1},onLabelClick:{triggerUpdate:!1},onLabelRightClick:{triggerUpdate:!1},onLabelHover:{triggerUpdate:!1},customLayerLabel:{default:"name",triggerUpdate:!1},onCustomLayerClick:{triggerUpdate:!1},onCustomLayerRightClick:{triggerUpdate:!1},onCustomLayerHover:{triggerUpdate:!1},pointerEventsFilter:{default:function(){return!0},triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.hoverFilter((function(t){return e(t,t.__data)}))}},lineHoverPrecision:{default:.2,triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)}}},ew),lw),methods:Vb(Vb({pauseAnimation:function(e){return null!==e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return null===e.animationFrameRequestId&&this._animationCycle(),this},_animationCycle:function(e){e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},pointOfView:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=r();if(void 0===t.lat&&void 0===t.lng&&void 0===t.altitude)return l;var q=Object.assign({},l,t);if(["lat","lng","altitude"].forEach((function(e){return q[e]=+q[e]})),n){for(;l.lng-q.lng>180;)l.lng-=360;for(;l.lng-q.lng<-180;)l.lng+=360;new Qu.Tween(l).to(q,n).easing(Qu.Easing.Cubic.InOut).onUpdate(i).start()}else i(q);return this;function r(){return e.globe.toGeoCoords(e.renderObjs.cameraPosition())}function i(t){var n=t.lat,l=t.lng,q=t.altitude;e.renderObjs.cameraPosition(e.globe.getCoords(n,l,q))}},getScreenCoords:function(e){for(var t,n=arguments.length,l=new Array(n>1?n-1:0),q=1;q<n;q++)l[q-1]=arguments[q];var r=(t=e.globe).getCoords.apply(t,l);return e.renderObjs.getScreenCoords(r.x,r.y,r.z)},toGlobeCoords:function(e,t,n){var l=e.renderObjs.intersectingObjects(t,n).find((function(e){return"globe"===e.object.__globeObjType}));if(!l)return null;var q=e.globe.toGeoCoords(l.point);return{lat:q.lat,lng:q.lng}},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},_destructor:function(){this.pauseAnimation(),this.pointsData([]),this.arcsData([]),this.polygonsData([]),this.pathsData([]),this.hexBinPointsData([]),this.hexPolygonsData([]),this.tilesData([]),this.labelsData([]),this.customLayerData([])}},tw),qw),stateInit:function(e){var t=e.rendererConfig,n=e.waitForGlobeReady,l=void 0===n||n,q=Qb(e,Jb);return{globe:new Fy(Vb({waitForGlobeReady:l},q)),renderObjs:Gb({controlType:"orbit",rendererConfig:t,waitForLoadComplete:l}).skyRadius(5e4).showNavInfo(!1)}},init:function(e,t){var n=this;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";var l=document.createElement("div");t.container.appendChild(l),t.renderObjs(l),t.globe.rendererSize(t.renderObjs.renderer().getSize(new Kb.Vector2)),this.pointOfView({altitude:2.5});var q=t.renderObjs.controls();q.minDistance=101,setTimeout((function(){return q.maxDistance=1e4})),q.enablePan=!1,q.enableDamping=!0,q.dampingFactor=.1,q.rotateSpeed=.3,q.zoomSpeed=.3,q.addEventListener("change",(function(){var e=n.pointOfView();q.rotateSpeed=.2*e.altitude,q.zoomSpeed=.1*(e.altitude+1),t.onZoom&&t.onZoom(e)}));var r=function(e){for(var t=e;t&&!t.hasOwnProperty("__globeObjType");)t=t.parent;return t},i={point:function(e){return e},arc:function(e){return e},polygon:function(e){return e.data},path:function(e){return e},hexbin:function(e){return e},hexPolygon:function(e){return e},tile:function(e){return e},label:function(e){return e},custom:function(e){return e}};t.renderObjs.objects([new Kb.AmbientLight(12303291),new Kb.DirectionalLight(16777215,.6),t.globe]).hoverOrderComparator((function(e,t){var n=r(e),l=r(t),q=function(e){return!e};return q(n)-q(l)})).tooltipContent((function(e){var n={point:t.pointLabel,arc:t.arcLabel,polygon:t.polygonLabel,path:t.pathLabel,hexbin:t.hexLabel,hexPolygon:t.hexPolygonLabel,tile:t.tileLabel,label:t.labelLabel,custom:t.customLayerLabel},l=r(e),q=l&&l.__globeObjType;return l&&q&&n.hasOwnProperty(q)&&i.hasOwnProperty(q)&&rc(n[q])(i[q](l.__data))||""})).onHover((function(e){var n={point:t.onPointHover,arc:t.onArcHover,polygon:t.onPolygonHover,path:t.onPathHover,hexbin:t.onHexHover,hexPolygon:t.onHexPolygonHover,tile:t.onTileHover,label:t.onLabelHover,custom:t.onCustomLayerHover},l={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,custom:t.onCustomLayerClick},q=r(e);if(q&&!n.hasOwnProperty(q.__globeObjType)&&(q=null),q!==t.hoverObj){var a=t.hoverObj?t.hoverObj.__globeObjType:null,o=t.hoverObj?i[a](t.hoverObj.__data):null,s=q?q.__globeObjType:null,u=q?i[s](q.__data):null;a&&a!==s&&n[a]&&n[a](null,o),s&&n[s]&&n[s](u,a===s?o:null),t.renderObjs.renderer().domElement.classList[s&&l[s]?"add":"remove"]("clickable"),t.hoverObj=q}})).onClick((function(e,l,q){if(e){var a={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,custom:t.onCustomLayerClick},o=r(e),s=o.__globeObjType;if(o&&a.hasOwnProperty(s)&&a[s]){var u=[l];if("globe"===s){var A=n.toGeoCoords(q),c=A.lat,m=A.lng;u.unshift({lat:c,lng:m})}i.hasOwnProperty(s)&&u.unshift(i[s](o.__data)),a[s].apply(a,u)}}})).onRightClick((function(e,l,q){if(e){var a={globe:t.onGlobeRightClick,point:t.onPointRightClick,arc:t.onArcRightClick,polygon:t.onPolygonRightClick,path:t.onPathRightClick,hexbin:t.onHexRightClick,hexPolygon:t.onHexPolygonRightClick,tile:t.onTileRightClick,label:t.onLabelRightClick,custom:t.onCustomLayerRightClick},o=r(e),s=o.__globeObjType;if(o&&a.hasOwnProperty(s)&&a[s]){var u=[l];if("globe"===s){var A=n.toGeoCoords(q),c=A.lat,m=A.lng;u.unshift({lat:c,lng:m})}i.hasOwnProperty(s)&&u.unshift(i[s](o.__data)),a[s].apply(a,u)}}})),this._animationCycle()}}),iw=n(7),aw=n.n(iw),ow={width:aw().number,height:aw().number,backgroundColor:aw().string,backgroundImageUrl:aw().string,globeImageUrl:aw().string,bumpImageUrl:aw().string,showGlobe:aw().bool,showGraticules:aw().bool,showAtmosphere:aw().bool,atmosphereColor:aw().string,atmosphereAltitude:aw().number,globeMaterial:aw().object,onGlobeReady:aw().func,onGlobeClick:aw().func,onGlobeRightClick:aw().func,pointsData:aw().arrayOf(aw().object),pointLat:aw().oneOfType([aw().number,aw().string,aw().func]),pointLng:aw().oneOfType([aw().number,aw().string,aw().func]),pointColor:aw().oneOfType([aw().string,aw().func]),pointAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),pointRadius:aw().oneOfType([aw().number,aw().string,aw().func]),pointResolution:aw().number,pointsMerge:aw().bool,pointsTransitionDuration:aw().number,pointLabel:aw().oneOfType([aw().string,aw().func]),onPointClick:aw().func,onPointRightClick:aw().func,onPointHover:aw().func,arcsData:aw().arrayOf(aw().object),arcStartLat:aw().oneOfType([aw().number,aw().string,aw().func]),arcStartLng:aw().oneOfType([aw().number,aw().string,aw().func]),arcEndLat:aw().oneOfType([aw().number,aw().string,aw().func]),arcEndLng:aw().oneOfType([aw().number,aw().string,aw().func]),arcColor:aw().oneOfType([aw().string,aw().arrayOf(aw().string),aw().func]),arcAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),arcAltitudeAutoScale:aw().oneOfType([aw().number,aw().string,aw().func]),arcStroke:aw().oneOfType([aw().number,aw().string,aw().func]),arcCurveResolution:aw().number,arcCircularResolution:aw().number,arcDashLength:aw().oneOfType([aw().number,aw().string,aw().func]),arcDashGap:aw().oneOfType([aw().number,aw().string,aw().func]),arcDashInitialGap:aw().oneOfType([aw().number,aw().string,aw().func]),arcDashAnimateTime:aw().oneOfType([aw().number,aw().string,aw().func]),arcsTransitionDuration:aw().number,arcLabel:aw().oneOfType([aw().string,aw().func]),onArcClick:aw().func,onArcRightClick:aw().func,onArcHover:aw().func,polygonsData:aw().arrayOf(aw().object),polygonGeoJsonGeometry:aw().oneOfType([aw().string,aw().func]),polygonCapColor:aw().oneOfType([aw().string,aw().func]),polygonCapMaterial:aw().oneOfType([aw().object,aw().string,aw().func]),polygonSideColor:aw().oneOfType([aw().string,aw().func]),polygonSideMaterial:aw().oneOfType([aw().object,aw().string,aw().func]),polygonStrokeColor:aw().oneOfType([aw().string,aw().func]),polygonAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),polygonCapCurvatureResolution:aw().oneOfType([aw().number,aw().string,aw().func]),polygonsTransitionDuration:aw().number,polygonLabel:aw().oneOfType([aw().string,aw().func]),onPolygonClick:aw().func,onPolygonRightClick:aw().func,onPolygonHover:aw().func,pathsData:aw().array,pathPoints:aw().oneOfType([aw().array,aw().string,aw().func]),pathPointLat:aw().oneOfType([aw().number,aw().string,aw().func]),pathPointLng:aw().oneOfType([aw().number,aw().string,aw().func]),pathPointAlt:aw().oneOfType([aw().number,aw().string,aw().func]),pathResolution:aw().number,pathColor:aw().oneOfType([aw().string,aw().arrayOf(aw().string),aw().func]),pathStroke:aw().oneOfType([aw().number,aw().string,aw().func]),pathDashLength:aw().oneOfType([aw().number,aw().string,aw().func]),pathDashGap:aw().oneOfType([aw().number,aw().string,aw().func]),pathDashInitialGap:aw().oneOfType([aw().number,aw().string,aw().func]),pathDashAnimateTime:aw().oneOfType([aw().number,aw().string,aw().func]),pathTransitionDuration:aw().number,pathLabel:aw().oneOfType([aw().string,aw().func]),onPathClick:aw().func,onPathRightClick:aw().func,onPathHover:aw().func,hexBinPointsData:aw().arrayOf(aw().object),hexBinPointLat:aw().oneOfType([aw().number,aw().string,aw().func]),hexBinPointLng:aw().oneOfType([aw().number,aw().string,aw().func]),hexBinPointWeight:aw().oneOfType([aw().number,aw().string,aw().func]),hexBinResolution:aw().number,hexMargin:aw().oneOfType([aw().number,aw().func]),hexTopColor:aw().func,hexSideColor:aw().func,hexAltitude:aw().oneOfType([aw().number,aw().func]),hexTopCurvatureResolution:aw().number,hexBinMerge:aw().bool,hexTransitionDuration:aw().number,hexLabel:aw().oneOfType([aw().string,aw().func]),onHexClick:aw().func,onHexRightClick:aw().func,onHexHover:aw().func,hexPolygonsData:aw().arrayOf(aw().object),hexPolygonGeoJsonGeometry:aw().oneOfType([aw().string,aw().func]),hexPolygonColor:aw().oneOfType([aw().string,aw().func]),hexPolygonAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),hexPolygonResolution:aw().oneOfType([aw().number,aw().string,aw().func]),hexPolygonMargin:aw().oneOfType([aw().number,aw().string,aw().func]),hexPolygonCurvatureResolution:aw().oneOfType([aw().number,aw().string,aw().func]),hexPolygonsTransitionDuration:aw().number,hexPolygonLabel:aw().oneOfType([aw().string,aw().func]),onHexPolygonClick:aw().func,onHexPolygonRightClick:aw().func,onHexPolygonHover:aw().func,tilesData:aw().arrayOf(aw().object),tileLat:aw().oneOfType([aw().number,aw().string,aw().func]),tileLng:aw().oneOfType([aw().number,aw().string,aw().func]),tileAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),tileWidth:aw().oneOfType([aw().number,aw().string,aw().func]),tileHeight:aw().oneOfType([aw().number,aw().string,aw().func]),tileUseGlobeProjection:aw().oneOfType([aw().bool,aw().string,aw().func]),tileMaterial:aw().oneOfType([aw().object,aw().string,aw().func]),tileCurvatureResolution:aw().oneOfType([aw().number,aw().string,aw().func]),tilesTransitionDuration:aw().number,tileLabel:aw().oneOfType([aw().string,aw().func]),onTileClick:aw().func,onTileRightClick:aw().func,onTileHover:aw().func,ringsData:aw().arrayOf(aw().object),ringLat:aw().oneOfType([aw().number,aw().string,aw().func]),ringLng:aw().oneOfType([aw().number,aw().string,aw().func]),ringAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),ringColor:aw().oneOfType([aw().string,aw().arrayOf(aw().string),aw().func]),ringResolution:aw().number,ringMaxRadius:aw().oneOfType([aw().number,aw().string,aw().func]),ringPropagationSpeed:aw().oneOfType([aw().number,aw().string,aw().func]),ringRepeatPeriod:aw().oneOfType([aw().number,aw().string,aw().func]),labelsData:aw().arrayOf(aw().object),labelLat:aw().oneOfType([aw().number,aw().string,aw().func]),labelLng:aw().oneOfType([aw().number,aw().string,aw().func]),labelAltitude:aw().oneOfType([aw().number,aw().string,aw().func]),labelRotation:aw().oneOfType([aw().number,aw().string,aw().func]),labelText:aw().oneOfType([aw().string,aw().func]),labelSize:aw().oneOfType([aw().number,aw().string,aw().func]),labelTypeFace:aw().object,labelColor:aw().oneOfType([aw().string,aw().func]),labelResolution:aw().number,labelIncludeDot:aw().oneOfType([aw().bool,aw().string,aw().func]),labelDotRadius:aw().oneOfType([aw().number,aw().string,aw().func]),labelDotOrientation:aw().oneOfType([aw().string,aw().func]),labelsTransitionDuration:aw().number,labelLabel:aw().oneOfType([aw().string,aw().func]),onLabelClick:aw().func,onLabelRightClick:aw().func,onLabelHover:aw().func,customLayerData:aw().arrayOf(aw().object),customThreeObject:aw().oneOfType([aw().object,aw().string,aw().func]),customThreeObjectUpdate:aw().oneOfType([aw().string,aw().func]),customLayerLabel:aw().oneOfType([aw().string,aw().func]),onCustomLayerClick:aw().func,onCustomLayerRightClick:aw().func,onCustomLayerHover:aw().func,enablePointerInteraction:aw().bool,pointerEventsFilter:aw().func,lineHoverPrecision:aw().number,onZoom:aw().func},sw=v(rw,{methodNames:["pauseAnimation","resumeAnimation","pointOfView","scene","camera","renderer","postProcessingComposer","controls","getCoords","getScreenCoords","toGeoCoords","toGlobeCoords"],initPropNames:["animateIn","waitForGlobeReady","rendererConfig"]});sw.displayName="Globe",sw.propTypes=ow;var uw,Aw=JSON.parse('{"glyphs":{"0":{"ha":764,"x_min":60,"x_max":704,"o":"m 704 443 q 684 257 704 341 q 622 114 663 174 q 519 21 581 54 q 375 -12 458 -12 q 245 15 304 -12 q 146 97 187 41 q 82 239 104 153 q 60 443 60 325 q 80 629 60 545 q 142 773 101 713 q 245 866 183 833 q 389 899 307 899 q 518 872 460 899 q 618 789 576 845 q 682 647 659 733 q 704 443 704 561 m 585 439 q 583 485 585 462 q 579 529 581 507 l 204 250 q 230 185 214 215 q 268 134 245 155 q 318 101 290 113 q 382 89 346 89 q 466 111 428 89 q 530 178 503 134 q 570 287 556 222 q 585 439 585 353 m 179 447 q 179 405 179 426 q 182 364 180 384 l 557 642 q 531 705 547 676 q 494 754 515 733 q 444 786 472 774 q 382 798 416 798 q 298 775 336 798 q 234 708 260 753 q 193 598 208 664 q 179 447 179 533 z "},"1":{"ha":764,"x_min":92,"x_max":676,"o":"m 676 0 l 119 0 l 119 110 l 347 110 l 347 757 l 135 642 l 92 742 l 374 890 l 478 890 l 478 110 l 676 110 l 676 0 z "},"2":{"ha":764,"x_min":100,"x_max":684,"o":"m 684 0 l 100 0 l 100 106 l 329 334 q 420 430 385 389 q 475 504 456 471 q 502 568 495 538 q 509 632 509 597 q 500 694 509 665 q 473 746 491 724 q 425 781 454 768 q 355 794 396 794 q 253 769 299 794 q 168 704 207 744 l 103 782 q 219 867 153 835 q 371 899 284 899 q 478 881 430 899 q 562 830 527 863 q 617 749 597 797 q 636 640 636 701 q 623 546 636 589 q 582 459 609 503 q 512 370 554 416 q 414 269 471 324 l 253 113 l 684 113 l 684 0 z "},"3":{"ha":764,"x_min":111,"x_max":667,"o":"m 667 269 q 643 160 667 211 q 572 70 619 109 q 452 10 524 32 q 285 -12 380 -12 q 190 -9 232 -12 q 111 0 148 -5 l 111 106 q 200 94 153 98 q 296 90 247 90 q 409 102 362 90 q 486 136 456 114 q 530 191 516 159 q 543 262 543 222 q 527 326 543 299 q 481 372 511 353 q 411 399 452 390 q 321 408 370 408 l 220 408 l 220 505 l 322 505 q 395 516 362 505 q 451 546 428 526 q 487 594 475 566 q 500 660 500 623 q 456 764 500 731 q 329 796 413 796 q 237 787 284 796 q 135 761 189 779 l 135 864 q 184 879 158 872 q 236 889 210 885 q 288 896 262 894 q 338 899 314 899 q 462 883 408 899 q 551 840 515 868 q 606 770 587 811 q 624 679 624 730 q 585 551 624 603 q 478 469 546 500 q 546 448 513 464 q 607 406 580 431 q 650 346 633 380 q 667 269 667 311 z "},"4":{"ha":764,"x_min":29,"x_max":728,"o":"m 728 196 l 576 196 l 576 0 l 456 0 l 456 196 l 29 196 l 29 300 l 407 886 l 576 886 l 576 300 l 728 300 l 728 196 m 456 772 l 147 300 l 456 300 l 456 772 z "},"5":{"ha":764,"x_min":121,"x_max":661,"o":"m 661 283 q 633 163 661 218 q 554 70 604 109 q 437 9 505 31 q 290 -12 369 -12 q 248 -11 271 -12 q 203 -8 225 -10 q 159 -5 180 -7 q 121 0 138 -3 l 121 107 q 204 94 157 98 q 300 90 252 90 q 397 103 354 90 q 471 140 441 116 q 518 198 502 164 q 534 275 534 233 q 475 396 534 358 q 304 433 416 433 l 136 433 l 136 886 l 614 886 l 614 783 l 248 783 l 248 534 l 325 534 q 449 523 389 534 q 556 483 509 511 q 632 405 604 454 q 661 283 661 357 z "},"6":{"ha":764,"x_min":83,"x_max":694,"o":"m 694 281 q 672 166 694 220 q 610 73 650 113 q 512 11 569 33 q 385 -12 454 -12 q 255 11 311 -12 q 161 83 199 35 q 103 205 123 132 q 83 380 83 279 q 92 512 83 448 q 121 632 101 576 q 176 735 142 688 q 260 815 210 782 q 379 868 311 849 q 538 886 448 886 l 625 886 l 625 783 l 530 783 q 393 764 451 783 q 295 711 334 745 q 235 627 256 676 q 208 518 214 578 l 205 490 q 304 531 248 515 q 425 546 360 546 q 543 526 492 546 q 627 472 593 507 q 677 388 661 437 q 694 281 694 339 m 571 273 q 561 347 571 314 q 530 402 551 380 q 477 438 509 425 q 400 450 445 450 q 348 446 374 450 q 296 432 321 441 q 248 413 271 424 q 205 390 224 402 q 218 244 205 302 q 254 150 230 185 q 313 100 278 115 q 395 85 349 85 q 466 97 433 85 q 521 134 498 110 q 558 194 545 159 q 571 273 571 229 z "},"7":{"ha":764,"x_min":79,"x_max":679,"o":"m 679 777 l 307 0 l 172 0 l 558 777 l 79 777 l 79 886 l 679 886 l 679 777 z "},"8":{"ha":764,"x_min":81,"x_max":684,"o":"m 684 222 q 661 122 684 166 q 596 49 637 79 q 498 3 555 19 q 376 -12 442 -12 q 249 4 304 -12 q 156 50 193 20 q 100 119 119 79 q 81 207 81 159 q 126 347 81 288 q 267 454 172 406 q 140 552 180 498 q 100 676 100 606 q 117 759 100 719 q 171 830 135 799 q 260 880 206 861 q 386 899 313 899 q 506 884 454 899 q 593 842 558 869 q 646 777 629 815 q 664 690 664 738 q 621 559 664 613 q 498 464 578 505 q 572 420 538 444 q 631 368 606 397 q 670 302 656 338 q 684 222 684 267 m 543 681 q 501 771 543 741 q 382 800 458 800 q 263 771 306 800 q 221 684 221 742 q 231 635 221 657 q 263 593 241 612 q 316 554 284 573 q 392 515 348 535 q 506 590 469 551 q 543 681 543 629 m 555 214 q 547 262 555 239 q 518 309 539 286 q 462 355 497 332 q 372 403 427 378 q 295 358 326 380 q 244 314 263 336 q 216 267 224 291 q 208 215 208 242 q 221 161 208 184 q 258 121 235 138 q 313 97 281 105 q 382 89 345 89 q 450 96 418 89 q 505 119 481 104 q 542 158 528 134 q 555 214 555 181 z "},"9":{"ha":764,"x_min":68,"x_max":679,"o":"m 679 493 q 648 270 679 363 q 555 117 616 177 q 404 28 494 57 q 196 0 314 0 l 122 0 l 122 103 l 204 103 q 355 121 292 103 q 461 173 419 138 q 526 256 504 207 q 554 368 549 305 l 557 396 q 458 356 514 371 q 338 340 403 340 q 220 360 271 340 q 135 415 169 380 q 85 499 102 450 q 68 604 68 547 q 90 720 68 666 q 153 813 113 773 q 250 876 193 852 q 374 899 306 899 q 495 877 439 899 q 592 807 551 855 q 656 681 633 758 q 679 493 679 604 m 368 802 q 298 789 330 802 q 242 752 266 777 q 205 693 219 728 q 192 612 192 658 q 202 538 192 571 q 232 483 212 506 q 286 448 253 460 q 363 436 318 436 q 415 441 388 436 q 467 454 441 446 q 515 473 492 462 q 557 496 538 484 q 544 642 557 583 q 507 736 531 701 q 447 787 482 772 q 368 802 412 802 z "},"\\u0000":{"ha":764,"x_min":0,"x_max":0,"o":""},"\\r":{"ha":0,"x_min":0,"x_max":0,"o":""}," ":{"ha":764,"x_min":0,"x_max":0,"o":""},"A":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 z "},"B":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 z "},"C":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 z "},"D":{"ha":764,"x_min":74,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 z "},"E":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 z "},"F":{"ha":764,"x_min":139,"x_max":639,"o":"m 639 783 l 262 783 l 262 496 l 619 496 l 619 395 l 262 395 l 262 0 l 139 0 l 139 886 l 639 886 l 639 783 z "},"G":{"ha":764,"x_min":45,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 z "},"H":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 z "},"I":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 z "},"J":{"ha":764,"x_min":123,"x_max":595,"o":"m 595 886 l 595 271 q 578 162 595 214 q 526 73 561 111 q 439 13 492 35 q 317 -9 387 -9 q 263 -6 290 -9 q 210 4 235 -2 q 162 20 184 11 q 123 40 140 29 l 123 161 q 217 113 165 131 q 318 96 268 96 q 432 141 392 96 q 472 271 472 186 l 472 782 l 135 782 l 135 886 l 595 886 z "},"K":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 z "},"L":{"ha":764,"x_min":158,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 z "},"M":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 z "},"N":{"ha":764,"x_min":81,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 z "},"O":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 z "},"P":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 z "},"Q":{"ha":764,"x_min":39,"x_max":764,"o":"m 317 -8 q 194 37 246 2 q 107 128 142 71 q 56 261 73 184 q 39 432 39 338 q 66 641 39 553 q 142 786 94 729 q 254 871 190 844 q 389 899 317 899 q 537 868 474 899 q 643 779 601 837 q 706 638 685 721 q 726 453 726 556 q 703 263 726 345 q 640 124 680 181 q 546 35 600 67 q 429 -8 492 2 q 477 -104 439 -68 q 582 -140 514 -140 q 646 -130 614 -140 q 710 -93 677 -119 l 764 -176 q 671 -229 719 -213 q 574 -244 624 -244 q 474 -229 519 -244 q 395 -185 429 -214 q 341 -111 361 -155 q 317 -8 321 -66 m 601 439 q 589 582 601 517 q 551 693 577 647 q 483 766 524 740 q 382 791 441 791 q 284 764 325 791 q 216 691 243 737 q 177 582 190 644 q 164 450 164 520 q 176 304 164 370 q 215 192 189 239 q 282 120 241 145 q 382 94 323 94 q 480 121 439 94 q 548 195 522 149 q 588 305 575 242 q 601 439 601 368 z "},"R":{"ha":764,"x_min":115,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 z "},"S":{"ha":764,"x_min":75,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 z "},"T":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 z "},"U":{"ha":764,"x_min":74,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 z "},"V":{"ha":764,"x_min":3,"x_max":761,"o":"m 761 886 l 460 0 l 297 0 l 3 886 l 139 886 l 330 289 l 385 114 l 440 289 l 632 886 l 761 886 z "},"W":{"ha":764,"x_min":31,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 z "},"X":{"ha":764,"x_min":12,"x_max":747,"o":"m 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 747 0 z "},"Y":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 z "},"Z":{"ha":764,"x_min":75,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 z "},"\xc0":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xc1":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\xc2":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\xc3":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\xc4":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u0100":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u0102":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\xc5":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 382 1180 q 436 1171 411 1180 q 479 1144 461 1162 q 508 1103 498 1127 q 518 1051 518 1080 q 508 999 518 1023 q 479 958 498 975 q 436 931 461 941 q 382 921 411 921 q 328 931 353 921 q 285 958 303 941 q 256 999 267 975 q 245 1051 245 1023 q 256 1103 245 1080 q 285 1144 267 1127 q 328 1171 303 1162 q 382 1180 353 1180 m 382 1111 q 338 1095 355 1111 q 321 1051 321 1079 q 338 1007 321 1024 q 382 990 355 990 q 427 1007 410 990 q 443 1051 443 1024 q 427 1095 443 1079 q 382 1111 410 1111 m 0 886 z "},"\u01fa":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 381 1160 q 439 1152 412 1160 q 486 1128 467 1144 q 515 1090 505 1112 q 526 1041 526 1067 q 515 992 526 1015 q 485 954 504 970 q 438 929 465 938 q 381 920 412 920 q 323 929 349 920 q 277 953 297 937 q 247 992 257 969 q 236 1041 236 1015 q 247 1089 236 1067 q 278 1127 258 1111 q 324 1152 298 1143 q 381 1160 350 1160 m 381 1096 q 334 1081 352 1096 q 316 1041 316 1066 q 334 1000 316 1016 q 381 985 352 985 q 428 1000 411 985 q 446 1041 446 1016 q 428 1081 446 1066 q 381 1096 411 1096 m 649 1322 l 466 1194 l 351 1194 l 487 1322 l 649 1322 m 0 886 z "},"\u0104":{"ha":764,"x_min":7,"x_max":767,"o":"m 767 -254 q 729 -259 750 -258 q 692 -261 709 -261 q 581 -230 618 -261 q 543 -150 543 -199 q 546 -119 543 -134 q 558 -85 549 -103 q 583 -47 567 -68 q 625 0 599 -26 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 l 731 0 q 692 -43 707 -24 q 669 -77 677 -62 q 657 -105 661 -92 q 654 -131 654 -118 q 669 -166 654 -153 q 720 -180 684 -180 q 742 -180 729 -180 q 767 -178 755 -179 l 767 -254 m 529 301 l 379 775 l 229 301 l 529 301 z "},"\xc6":{"ha":764,"x_min":-29,"x_max":736,"o":"m 736 0 l 396 0 l 396 191 l 164 191 l 90 0 l -29 0 l 332 886 l 726 886 l 726 790 l 509 790 l 509 507 l 717 507 l 717 411 l 509 411 l 509 97 l 736 97 l 736 0 m 396 288 l 396 791 l 201 288 l 396 288 z "},"\u01fc":{"ha":764,"x_min":-29,"x_max":736,"o":"m 736 0 l 396 0 l 396 191 l 164 191 l 90 0 l -29 0 l 332 886 l 726 886 l 726 790 l 509 790 l 509 507 l 717 507 l 717 411 l 509 411 l 509 97 l 736 97 l 736 0 m 396 288 l 396 791 l 201 288 l 396 288 m 667 1125 l 473 981 l 353 981 l 496 1125 l 667 1125 m 41 886 z "},"\u0106":{"ha":764,"x_min":41,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 667 1125 l 473 981 l 353 981 l 496 1125 l 667 1125 m 41 886 z "},"\u0108":{"ha":764,"x_min":41,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 637 981 l 513 981 l 422 1050 l 330 981 l 210 981 l 366 1125 l 480 1125 l 637 981 m 41 886 z "},"\u010c":{"ha":764,"x_min":41,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 210 1125 l 333 1125 l 425 1055 l 516 1125 l 637 1125 l 480 981 l 366 981 l 210 1125 m 41 886 z "},"\u010a":{"ha":764,"x_min":41,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 337 1053 q 344 1086 337 1070 q 362 1113 351 1101 q 389 1132 374 1125 q 423 1139 405 1139 q 457 1132 441 1139 q 485 1113 473 1125 q 503 1086 496 1101 q 509 1053 509 1070 q 503 1019 509 1035 q 485 992 496 1004 q 457 973 473 980 q 423 966 441 966 q 389 973 405 966 q 362 992 374 980 q 344 1019 351 1004 q 337 1053 337 1035 m 41 886 z "},"\xc7":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 458 -11 567 -11 l 403 -200 l 300 -200 l 345 0 q 135 139 208 28 q 62 433 62 250 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 185 191 273 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 z "},"\u010e":{"ha":764,"x_min":-26,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 142 1125 l 265 1125 l 357 1055 l 448 1125 l 570 1125 l 412 981 l 298 981 l 142 1125 m -26 886 z "},"\xd0":{"ha":764,"x_min":0,"x_max":714,"o":"m 94 886 l 310 886 q 615 780 517 886 q 714 453 714 673 q 705 331 714 389 q 675 222 696 273 q 620 131 654 172 q 537 61 586 90 q 421 16 488 32 q 271 0 355 0 l 94 0 l 94 408 l 0 408 l 0 510 l 94 510 l 94 886 m 215 104 l 292 104 q 515 190 443 104 q 587 444 587 275 q 571 604 587 538 q 519 709 554 669 q 432 767 485 749 q 306 785 378 785 l 215 785 l 215 510 l 368 510 l 368 408 l 215 408 l 215 104 z "},"\u0110":{"ha":764,"x_min":0,"x_max":714,"o":"m 94 886 l 310 886 q 615 780 517 886 q 714 453 714 673 q 705 331 714 389 q 675 222 696 273 q 620 131 654 172 q 537 61 586 90 q 421 16 488 32 q 271 0 355 0 l 94 0 l 94 408 l 0 408 l 0 510 l 94 510 l 94 886 m 215 104 l 292 104 q 515 190 443 104 q 587 444 587 275 q 571 604 587 538 q 519 709 554 669 q 432 767 485 749 q 306 785 378 785 l 215 785 l 215 510 l 368 510 l 368 408 l 215 408 l 215 104 z "},"\xc8":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xc9":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\xca":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u011a":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\xcb":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u0112":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u0114":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u0116":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u0118":{"ha":764,"x_min":136,"x_max":677,"o":"m 677 -254 q 639 -259 660 -258 q 602 -261 618 -261 q 491 -230 528 -261 q 453 -150 453 -199 q 456 -119 453 -134 q 468 -85 459 -103 q 493 -47 477 -68 q 535 0 509 -26 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 l 641 0 q 602 -43 616 -24 q 578 -77 587 -62 q 567 -105 570 -92 q 564 -131 564 -118 q 579 -166 564 -153 q 629 -180 593 -180 q 652 -180 639 -180 q 677 -178 665 -179 l 677 -254 z "},"\u011c":{"ha":764,"x_min":41,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 637 981 l 513 981 l 422 1050 l 330 981 l 210 981 l 366 1125 l 480 1125 l 637 981 m 41 886 z "},"\u011e":{"ha":764,"x_min":41,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 604 1129 q 589 1058 604 1088 q 550 1010 574 1029 q 492 982 525 991 q 423 972 459 972 q 355 982 387 972 q 297 1010 322 991 q 257 1058 272 1029 q 243 1129 243 1088 l 336 1129 q 358 1077 336 1095 q 423 1060 381 1060 q 488 1077 465 1060 q 511 1129 511 1095 l 604 1129 m 41 886 z "},"\u0120":{"ha":764,"x_min":41,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 337 1053 q 344 1086 337 1070 q 362 1113 351 1101 q 389 1132 374 1125 q 423 1139 405 1139 q 457 1132 441 1139 q 485 1113 473 1125 q 503 1086 496 1101 q 509 1053 509 1070 q 503 1019 509 1035 q 485 992 496 1004 q 457 973 473 980 q 423 966 441 966 q 389 973 405 966 q 362 992 374 980 q 344 1019 351 1004 q 337 1053 337 1035 m 41 886 z "},"\u0122":{"ha":764,"x_min":45,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0124":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0126":{"ha":764,"x_min":21,"x_max":743,"o":"m 668 637 l 668 0 l 547 0 l 547 387 l 216 387 l 216 0 l 96 0 l 96 637 l 21 637 l 21 739 l 96 739 l 96 886 l 216 886 l 216 739 l 547 739 l 547 886 l 668 886 l 668 739 l 743 739 l 743 637 l 668 637 m 547 489 l 547 637 l 216 637 l 216 489 l 547 489 z "},"\xcc":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xcd":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\xce":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0128":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\xcf":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u012a":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u012c":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u0130":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u012e":{"ha":764,"x_min":117,"x_max":684,"o":"m 684 -254 q 646 -259 667 -258 q 608 -261 625 -261 q 497 -230 535 -261 q 460 -150 460 -199 q 463 -119 460 -134 q 475 -85 466 -103 q 499 -47 484 -68 q 542 0 515 -26 l 117 0 l 117 103 l 321 103 l 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 648 0 q 608 -43 623 -24 q 585 -77 593 -62 q 574 -105 577 -92 q 571 -131 571 -118 q 586 -166 571 -153 q 636 -180 600 -180 q 659 -180 646 -180 q 684 -178 672 -179 l 684 -254 z "},"\u0132":{"ha":764,"x_min":75,"x_max":689,"o":"m 322 119 q 348 110 333 115 q 378 100 362 104 q 409 94 393 96 q 437 92 425 92 q 534 128 500 92 q 568 250 568 165 l 568 886 l 689 886 l 689 240 q 674 139 689 184 q 628 60 659 93 q 552 10 597 28 q 444 -8 506 -8 q 322 11 376 -8 l 322 119 m 196 0 l 75 0 l 75 886 l 196 886 l 196 0 z "},"\u0134":{"ha":764,"x_min":0,"x_max":596,"o":"m 595 886 l 595 271 q 578 162 595 214 q 526 73 561 111 q 439 13 492 35 q 317 -9 387 -9 q 263 -6 290 -9 q 210 4 235 -2 q 162 20 184 11 q 123 40 140 29 l 123 161 q 217 113 165 131 q 318 96 268 96 q 432 141 392 96 q 472 271 472 186 l 472 782 l 135 782 l 135 886 l 595 886 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0136":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0139":{"ha":764,"x_min":0,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u013d":{"ha":764,"x_min":-165,"x_max":672,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 672 994 l 598 794 l 500 794 l 557 994 l 672 994 m -165 681 z "},"\u013b":{"ha":764,"x_min":158,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0141":{"ha":764,"x_min":31,"x_max":668,"o":"m 294 103 l 668 103 l 668 0 l 172 0 l 172 408 l 31 336 l 31 443 l 172 515 l 172 886 l 294 886 l 294 576 l 539 700 l 539 593 l 294 469 l 294 103 z "},"\u013f":{"ha":764,"x_min":132,"x_max":758,"o":"m 642 0 l 132 0 l 132 886 l 254 886 l 254 103 l 642 103 l 642 0 m 646 525 q 689 516 669 525 q 725 491 710 507 q 749 455 741 476 q 758 411 758 434 q 749 368 758 388 q 725 332 741 347 q 689 308 710 317 q 646 298 669 298 q 602 308 622 298 q 566 332 581 317 q 542 368 551 347 q 533 411 533 388 q 542 455 533 434 q 566 491 551 476 q 602 516 581 507 q 646 525 622 525 z "},"\u0143":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u0147":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\xd1":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\u0145":{"ha":764,"x_min":81,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u014a":{"ha":764,"x_min":81,"x_max":684,"o":"m 277 557 l 193 730 l 193 0 l 81 0 l 81 886 l 229 886 l 498 376 l 571 229 l 571 886 l 684 886 l 684 12 q 665 -114 684 -59 q 610 -208 646 -170 q 524 -265 574 -245 q 410 -285 473 -285 l 411 -183 q 525 -135 485 -183 q 566 8 566 -87 l 277 557 z "},"\xd2":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xd3":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\xd4":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\xd5":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\xd6":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u014c":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u014e":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u0150":{"ha":764,"x_min":0,"x_max":764,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 458 1125 l 307 981 l 184 981 l 314 1125 l 458 1125 m 764 1125 l 587 981 l 464 981 l 607 1125 l 764 1125 m 0 886 z "},"\xd8":{"ha":764,"x_min":39,"x_max":725,"o":"m 608 1032 l 555 857 q 683 702 642 806 q 725 449 725 598 q 697 243 725 330 q 622 99 669 156 q 510 15 574 43 q 375 -12 446 -12 q 335 -11 354 -12 q 297 -5 316 -9 l 256 -146 l 157 -146 l 208 28 q 81 182 123 77 q 39 439 39 288 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 467 890 431 899 l 510 1032 l 608 1032 m 164 446 q 183 270 164 347 q 244 149 201 193 l 436 786 q 410 791 423 789 q 382 793 397 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 m 600 440 q 581 614 600 539 q 519 736 562 690 l 329 98 q 354 94 340 95 q 382 93 368 93 q 480 120 439 93 q 548 195 521 148 q 587 305 574 242 q 600 440 600 368 z "},"\u01fe":{"ha":764,"x_min":-68,"x_max":725,"o":"m 608 1032 l 555 857 q 683 702 642 806 q 725 449 725 598 q 697 243 725 330 q 622 99 669 156 q 510 15 574 43 q 375 -12 446 -12 q 335 -11 354 -12 q 297 -5 316 -9 l 256 -146 l 157 -146 l 208 28 q 81 182 123 77 q 39 439 39 288 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 467 890 431 899 l 510 1032 l 608 1032 m 164 446 q 183 270 164 347 q 244 149 201 193 l 436 786 q 410 791 423 789 q 382 793 397 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 m 600 440 q 581 614 600 539 q 519 736 562 690 l 329 98 q 354 94 340 95 q 382 93 368 93 q 480 120 439 93 q 548 195 521 148 q 587 305 574 242 q 600 440 600 368 m 557 1125 l 364 981 l 243 981 l 387 1125 l 557 1125 m -68 886 z "},"\u0152":{"ha":764,"x_min":21,"x_max":742,"o":"m 742 0 l 494 0 q 408 -5 444 0 q 343 -9 372 -9 q 200 20 260 -9 q 99 106 139 50 q 40 247 60 163 q 21 439 21 330 q 47 643 21 557 q 117 785 73 729 q 220 869 161 842 q 346 896 279 896 q 383 895 362 896 q 425 891 404 893 q 464 888 446 889 q 492 886 481 886 l 742 886 l 742 787 l 518 787 l 518 509 l 728 509 l 728 410 l 518 410 l 518 100 l 742 100 l 742 0 m 401 790 q 377 794 392 792 q 346 796 363 796 q 253 769 292 796 q 190 693 214 741 q 153 581 165 646 q 142 443 142 517 q 194 181 142 272 q 350 90 247 90 q 376 92 363 90 q 401 97 388 94 l 401 790 z "},"\xde":{"ha":764,"x_min":107,"x_max":689,"o":"m 228 886 l 228 754 l 357 754 q 483 739 422 754 q 589 689 543 723 q 662 603 635 656 q 689 476 689 550 q 669 368 689 422 q 606 270 648 313 q 496 199 563 227 q 338 172 430 172 l 228 172 l 228 0 l 107 0 l 107 886 l 228 886 m 564 471 q 549 547 564 513 q 508 605 535 581 q 441 642 480 629 q 351 654 401 654 l 228 654 l 228 275 l 340 275 q 506 326 448 275 q 564 471 564 376 z "},"\u0154":{"ha":764,"x_min":-26,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 599 1125 l 406 981 l 285 981 l 428 1125 l 599 1125 m -26 886 z "},"\u0158":{"ha":764,"x_min":-26,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 142 1125 l 265 1125 l 357 1055 l 448 1125 l 570 1125 l 412 981 l 298 981 l 142 1125 m -26 886 z "},"\u0156":{"ha":764,"x_min":115,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u015a":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u015c":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0160":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u015e":{"ha":764,"x_min":75,"x_max":676,"o":"m 428 -4 l 371 -200 l 268 -200 l 310 -12 q 251 -9 282 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 q 650 130 676 177 q 572 46 625 82 q 428 -4 519 11 z "},"\u0218":{"ha":764,"x_min":75,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0164":{"ha":764,"x_min":0,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u021a":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0166":{"ha":764,"x_min":58,"x_max":705,"o":"m 443 395 l 443 0 l 321 0 l 321 395 l 140 395 l 140 496 l 321 496 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 l 443 783 l 443 496 l 624 496 l 624 395 l 443 395 z "},"\xd9":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xda":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\xdb":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0168":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\xdc":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u016a":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u016c":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u016e":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 382 1180 q 436 1171 411 1180 q 479 1144 461 1162 q 508 1103 498 1127 q 518 1051 518 1080 q 508 999 518 1023 q 479 958 498 975 q 436 931 461 941 q 382 921 411 921 q 328 931 353 921 q 285 958 303 941 q 256 999 267 975 q 245 1051 245 1023 q 256 1103 245 1080 q 285 1144 267 1127 q 328 1171 303 1162 q 382 1180 353 1180 m 382 1111 q 338 1095 355 1111 q 321 1051 321 1079 q 338 1007 321 1024 q 382 990 355 990 q 427 1007 410 990 q 443 1051 443 1024 q 427 1095 443 1079 q 382 1111 410 1111 m 0 886 z "},"\u0170":{"ha":764,"x_min":0,"x_max":764,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 458 1125 l 307 981 l 184 981 l 314 1125 l 458 1125 m 764 1125 l 587 981 l 464 981 l 607 1125 l 764 1125 m 0 886 z "},"\u0172":{"ha":764,"x_min":74,"x_max":690,"o":"m 514 -254 q 476 -259 497 -258 q 439 -261 456 -261 q 328 -230 366 -261 q 290 -150 290 -199 q 293 -120 290 -135 q 303 -89 296 -106 q 325 -54 311 -73 q 361 -12 338 -35 q 228 13 283 -9 q 139 75 174 36 q 90 169 105 115 q 74 290 74 224 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 q 676 197 690 248 q 635 107 663 146 q 569 40 608 68 q 478 0 530 13 q 439 -43 454 -24 q 416 -77 424 -62 q 405 -105 408 -92 q 401 -131 401 -118 q 416 -166 401 -153 q 467 -180 431 -180 q 489 -180 476 -180 q 514 -178 503 -179 l 514 -254 z "},"\u1e80":{"ha":764,"x_min":0,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\u1e82":{"ha":764,"x_min":0,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u0174":{"ha":764,"x_min":0,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u1e84":{"ha":764,"x_min":0,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u1ef2":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\xdd":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u0176":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u0178":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u0179":{"ha":764,"x_min":0,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u017d":{"ha":764,"x_min":0,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u017b":{"ha":764,"x_min":0,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"a":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 z "},"b":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"c":{"ha":764,"x_min":107,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 z "},"d":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 z "},"e":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 z "},"f":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 848 q 553 868 620 868 q 393 701 393 868 l 393 582 l 692 582 l 692 484 l 393 484 l 393 0 l 273 0 l 273 484 l 54 484 l 54 582 l 273 582 l 273 694 q 557 966 273 966 q 713 950 627 966 l 713 848 m 0 681 z "},"g":{"ha":764,"x_min":64,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 z "},"h":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 z "},"i":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 z "},"j":{"ha":764,"x_min":89,"x_max":591,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 498 966 q 535 959 518 966 q 565 939 552 952 q 584 909 577 926 q 591 873 591 892 q 584 837 591 854 q 565 808 577 821 q 535 788 552 795 q 498 781 518 781 q 462 788 479 781 q 432 808 445 795 q 413 837 420 821 q 406 873 406 854 q 413 909 406 892 q 432 939 420 926 q 462 959 445 952 q 498 966 479 966 z "},"k":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 z "},"l":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 z "},"m":{"ha":764,"x_min":61,"x_max":703,"o":"m 594 0 l 594 489 q 592 541 594 521 q 584 573 589 562 q 571 590 579 585 q 552 595 564 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 621 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 0 l 594 0 z "},"n":{"ha":764,"x_min":109,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 z "},"o":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 z "},"p":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 z "},"q":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 475 684 441 689 q 547 667 509 678 l 652 693 l 652 -278 l 533 -278 l 533 -21 l 539 125 q 310 -12 443 -12 q 206 12 250 -12 q 133 81 162 37 q 89 189 103 126 q 74 326 74 251 m 195 334 q 203 231 195 277 q 229 154 212 186 q 272 106 246 123 q 334 89 298 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 299 593 q 195 334 195 461 z "},"r":{"ha":764,"x_min":136,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 z "},"s":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 z "},"t":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 z "},"u":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 z "},"v":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 447 0 l 311 0 l 45 681 z "},"w":{"ha":764,"x_min":25,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 z "},"x":{"ha":764,"x_min":47,"x_max":722,"o":"m 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 722 0 z "},"y":{"ha":764,"x_min":40,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 z "},"z":{"ha":764,"x_min":111,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 z "},"\xe0":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xe1":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\xe2":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\xe3":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\xe4":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u0101":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u0103":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\xe5":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u01fb":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 m 632 1193 l 439 1048 l 318 1048 l 461 1193 l 632 1193 m 7 954 z "},"\u0105":{"ha":764,"x_min":90,"x_max":688,"o":"m 688 -254 q 650 -259 671 -258 q 612 -261 629 -261 q 502 -230 539 -261 q 464 -150 464 -199 q 467 -119 464 -134 q 479 -85 470 -103 q 504 -47 488 -68 q 546 0 519 -26 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 q 612 -43 627 -24 q 589 -77 597 -62 q 578 -105 581 -92 q 575 -131 575 -118 q 590 -166 575 -153 q 640 -180 604 -180 q 663 -180 650 -180 q 688 -178 676 -179 l 688 -254 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 z "},"\xe6":{"ha":764,"x_min":21,"x_max":737,"o":"m 231 693 q 334 673 292 693 q 393 611 376 653 q 455 671 417 649 q 542 693 492 693 q 632 671 595 693 q 692 610 669 650 q 726 516 715 571 q 737 393 737 460 q 736 338 737 357 q 734 310 736 320 l 433 310 q 465 143 433 201 q 570 85 496 85 q 646 93 608 85 q 713 113 684 101 l 713 18 q 677 6 697 12 q 634 -4 656 0 q 589 -10 612 -8 q 545 -12 566 -12 q 363 106 413 -12 q 283 19 328 50 q 187 -12 239 -12 q 63 37 106 -12 q 21 182 21 87 q 34 273 21 233 q 75 341 47 313 q 145 383 102 368 q 248 397 188 397 l 329 397 l 329 454 q 306 560 329 523 q 225 597 282 597 q 143 584 186 597 q 58 547 100 571 l 58 650 q 95 666 75 658 q 138 680 116 673 q 184 689 161 686 q 231 693 208 693 m 244 310 q 159 276 185 310 q 132 186 132 242 q 150 110 132 135 q 200 85 168 85 q 260 108 229 85 q 329 191 292 131 l 329 310 l 244 310 m 538 599 q 492 583 511 599 q 459 541 473 568 q 440 477 446 514 q 433 397 433 440 l 627 397 q 623 476 627 439 q 608 541 618 513 q 580 583 597 568 q 538 599 563 599 z "},"\u01fd":{"ha":764,"x_min":0,"x_max":737,"o":"m 231 693 q 334 673 292 693 q 393 611 376 653 q 455 671 417 649 q 542 693 492 693 q 632 671 595 693 q 692 610 669 650 q 726 516 715 571 q 737 393 737 460 q 736 338 737 357 q 734 310 736 320 l 433 310 q 465 143 433 201 q 570 85 496 85 q 646 93 608 85 q 713 113 684 101 l 713 18 q 677 6 697 12 q 634 -4 656 0 q 589 -10 612 -8 q 545 -12 566 -12 q 363 106 413 -12 q 283 19 328 50 q 187 -12 239 -12 q 63 37 106 -12 q 21 182 21 87 q 34 273 21 233 q 75 341 47 313 q 145 383 102 368 q 248 397 188 397 l 329 397 l 329 454 q 306 560 329 523 q 225 597 282 597 q 143 584 186 597 q 58 547 100 571 l 58 650 q 95 666 75 658 q 138 680 116 673 q 184 689 161 686 q 231 693 208 693 m 244 310 q 159 276 185 310 q 132 186 132 242 q 150 110 132 135 q 200 85 168 85 q 260 108 229 85 q 329 191 292 131 l 329 310 l 244 310 m 538 599 q 492 583 511 599 q 459 541 473 568 q 440 477 446 514 q 433 397 433 440 l 627 397 q 623 476 627 439 q 608 541 618 513 q 580 583 597 568 q 538 599 563 599 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0107":{"ha":764,"x_min":28,"x_max":673,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 673 958 l 457 794 l 339 794 l 503 958 l 673 958 m 28 681 z "},"\u0109":{"ha":764,"x_min":28,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 458 958 l 624 794 l 504 794 l 408 876 l 313 794 l 196 794 l 361 958 l 458 958 m 28 681 z "},"\u010d":{"ha":764,"x_min":41,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 375 794 l 210 958 l 329 958 l 425 876 l 521 958 l 637 958 l 472 794 l 375 794 m 41 681 z "},"\u010b":{"ha":764,"x_min":28,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 410 964 q 445 957 429 964 q 474 937 462 949 q 493 909 486 925 q 500 873 500 892 q 493 838 500 854 q 474 810 486 822 q 445 790 462 798 q 410 783 429 783 q 374 790 390 783 q 345 810 357 798 q 326 838 333 822 q 319 873 319 854 q 326 909 319 892 q 345 937 333 925 q 374 957 357 949 q 410 964 390 964 m 28 681 z "},"\xe7":{"ha":764,"x_min":107,"x_max":637,"o":"m 459 -9 l 404 -200 l 300 -200 l 345 0 q 167 111 227 26 q 107 334 107 196 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 q 546 -1 591 7 q 459 -9 500 -9 z "},"\u010f":{"ha":764,"x_min":-9,"x_max":828,"o":"m 41 326 q 64 480 41 413 q 132 594 88 548 q 237 665 176 641 q 374 689 298 689 q 438 685 406 689 q 500 672 469 681 l 500 958 l 618 958 l 618 0 l 513 0 l 509 129 q 401 22 459 57 q 277 -12 344 -12 q 174 12 218 -12 q 100 81 130 37 q 56 188 71 125 q 41 326 41 250 m 161 334 q 198 150 161 210 q 300 89 234 89 q 395 129 345 89 q 500 248 445 169 l 500 564 q 435 584 471 577 q 366 591 400 591 q 215 529 269 591 q 161 334 161 467 m 828 994 l 754 794 l 656 794 l 713 994 l 828 994 m -9 681 z "},"\xf0":{"ha":764,"x_min":68,"x_max":682,"o":"m 486 578 q 436 586 458 584 q 395 589 414 589 q 298 568 338 589 q 235 511 259 547 q 200 429 211 475 q 189 330 189 382 q 203 226 189 271 q 242 150 217 180 q 301 103 267 119 q 375 87 335 87 q 457 105 422 87 q 515 156 492 123 q 549 233 538 188 q 561 334 561 279 q 543 451 561 392 q 486 578 525 510 m 418 685 q 388 728 404 705 q 354 775 372 751 l 164 734 l 164 833 l 290 860 l 212 958 l 359 958 l 415 888 l 616 929 l 616 831 l 478 803 q 566 672 528 734 q 629 553 604 610 q 669 444 655 496 q 682 340 682 391 q 676 264 682 304 q 657 185 671 224 q 620 110 644 146 q 562 47 597 75 q 478 4 527 20 q 366 -12 430 -12 q 238 12 294 -12 q 145 80 182 36 q 87 186 107 124 q 68 323 68 248 q 89 464 68 397 q 151 579 110 530 q 251 659 191 629 q 387 688 310 688 q 401 687 392 688 q 418 685 410 686 z "},"\u0111":{"ha":764,"x_min":66,"x_max":764,"o":"m 323 869 l 519 869 l 519 958 l 637 958 l 637 869 l 764 869 l 764 771 l 637 771 l 637 0 l 532 0 l 528 129 q 421 22 479 57 q 297 -12 364 -12 q 195 12 239 -12 q 123 81 152 37 q 81 188 95 125 q 66 326 66 250 q 90 480 66 413 q 155 594 113 548 q 259 665 198 641 q 395 689 319 689 q 519 672 460 689 l 519 771 l 323 771 l 323 869 m 187 334 q 221 149 187 210 q 321 89 255 89 q 415 129 366 89 q 519 248 464 169 l 519 564 q 455 584 490 577 q 386 591 420 591 q 239 529 290 591 q 187 334 187 467 z "},"\xe8":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xe9":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\xea":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u011b":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\xeb":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u0113":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u0115":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u0117":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0119":{"ha":764,"x_min":79,"x_max":684,"o":"m 599 -254 q 561 -259 582 -258 q 524 -261 541 -261 q 413 -230 450 -261 q 375 -150 375 -199 q 378 -120 375 -135 q 388 -89 380 -106 q 409 -54 395 -73 q 446 -12 423 -35 q 429 -12 437 -12 q 412 -12 420 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 562 0 608 7 q 523 -43 538 -24 q 500 -77 509 -62 q 489 -105 492 -92 q 486 -131 486 -118 q 501 -166 486 -153 q 551 -180 515 -180 q 574 -180 561 -180 q 599 -178 587 -179 l 599 -254 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 z "},"\ufb01":{"ha":764,"x_min":0,"x_max":653,"o":"m 653 0 l 534 0 l 534 514 l 271 514 l 271 0 l 153 0 l 153 514 l 32 514 l 32 612 l 153 612 l 153 694 q 230 899 153 831 q 461 966 308 966 q 543 961 497 966 q 631 945 588 955 l 631 843 q 544 861 590 854 q 457 868 498 868 q 318 827 366 868 q 271 701 271 785 l 271 612 l 653 612 l 653 0 m 0 681 z "},"\ufb02":{"ha":764,"x_min":0,"x_max":653,"o":"m 534 864 q 494 868 514 867 q 453 869 475 869 q 315 827 360 869 q 271 700 271 784 l 271 612 l 415 612 l 415 514 l 271 514 l 271 0 l 153 0 l 153 514 l 32 514 l 32 612 l 153 612 l 153 693 q 230 897 153 829 q 457 965 307 965 q 550 961 501 965 q 653 945 600 956 l 653 0 l 534 0 l 534 864 m 0 681 z "},"\u011d":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u011f":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u0121":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0123":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 315 794 l 389 994 l 488 994 l 431 794 l 315 794 m 0 681 z "},"\u0125":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 596 1015 l 472 1015 l 380 1084 l 289 1015 l 168 1015 l 325 1160 l 439 1160 l 596 1015 m 0 921 z "},"\u0127":{"ha":764,"x_min":0,"x_max":656,"o":"m 227 653 l 222 541 q 277 596 250 574 q 331 633 304 619 q 385 654 357 648 q 443 660 413 660 q 600 598 545 660 q 656 411 656 536 l 656 0 l 538 0 l 538 401 q 508 519 538 479 q 424 558 479 558 q 379 552 400 558 q 336 529 359 545 q 288 486 314 513 q 227 418 261 459 l 227 0 l 109 0 l 109 772 l 0 772 l 0 868 l 109 868 l 109 958 l 227 958 l 227 868 l 440 868 l 440 772 l 227 772 l 227 653 m 0 681 z "},"\xec":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xed":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\xee":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u0129":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\xef":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u012b":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u012d":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u012f":{"ha":764,"x_min":117,"x_max":699,"o":"m 699 -254 q 661 -259 682 -258 q 623 -261 640 -261 q 512 -230 550 -261 q 475 -150 475 -199 q 478 -119 475 -134 q 490 -85 481 -103 q 514 -47 498 -68 q 557 0 530 -26 l 117 0 l 117 98 l 340 98 l 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 q 623 -43 638 -24 q 600 -77 608 -62 q 589 -105 592 -92 q 586 -131 586 -118 q 601 -166 586 -153 q 651 -180 615 -180 q 674 -180 661 -180 q 699 -178 687 -179 l 699 -254 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 z "},"\u0131":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 z "},"\u0133":{"ha":764,"x_min":72,"x_max":692,"o":"m 232 -154 q 266 -166 247 -161 q 306 -175 286 -172 q 348 -181 327 -179 q 386 -183 368 -183 q 498 -135 458 -183 q 538 8 538 -87 l 538 681 l 656 681 l 656 12 q 637 -114 656 -59 q 582 -208 618 -170 q 496 -265 547 -245 q 382 -285 446 -285 q 297 -277 336 -285 q 232 -258 258 -269 l 232 -154 m 227 681 l 227 0 l 109 0 l 109 681 l 227 681 m 72 869 q 79 907 72 889 q 99 937 86 924 q 129 958 112 950 q 167 965 146 965 q 205 958 188 965 q 235 937 222 950 q 255 907 248 924 q 262 869 262 889 q 255 832 262 850 q 235 802 248 814 q 205 781 222 789 q 167 774 188 774 q 129 781 146 774 q 99 802 112 789 q 79 832 86 814 q 72 869 72 850 m 501 869 q 508 907 501 889 q 528 937 515 924 q 558 958 541 950 q 596 965 576 965 q 634 958 617 965 q 665 937 652 950 q 685 907 677 924 q 692 869 692 889 q 685 832 692 850 q 665 802 677 814 q 634 781 652 789 q 596 774 617 774 q 558 781 576 774 q 528 802 541 789 q 508 832 515 814 q 501 869 501 850 z "},"\u0237":{"ha":764,"x_min":89,"x_max":570,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 z "},"\u0135":{"ha":764,"x_min":0,"x_max":596,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u0137":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0138":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 z "},"\u013a":{"ha":764,"x_min":28,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 653 1166 l 460 1022 l 339 1022 l 482 1166 l 653 1166 m 28 928 z "},"\u013e":{"ha":764,"x_min":-96,"x_max":742,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 742 994 l 668 794 l 570 794 l 627 994 l 742 994 m -96 681 z "},"\u013c":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0142":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 449 l 146 350 l 146 457 l 340 555 l 340 863 l 139 863 l 139 958 l 460 958 l 460 615 l 654 714 l 654 607 l 460 509 l 460 96 l 663 96 l 663 0 l 117 0 l 117 96 l 340 96 l 340 449 z "},"\u0140":{"ha":764,"x_min":76,"x_max":860,"o":"m 300 861 l 98 861 l 98 958 l 419 958 l 419 98 l 622 98 l 622 0 l 76 0 l 76 98 l 300 98 l 300 861 m 747 525 q 791 516 770 525 q 827 491 812 507 q 851 455 842 476 q 860 411 860 434 q 851 368 860 388 q 827 332 842 347 q 791 308 812 317 q 747 298 770 298 q 703 308 724 298 q 668 332 683 317 q 644 368 652 347 q 635 411 635 388 q 644 455 635 434 q 668 491 652 476 q 703 516 683 507 q 747 525 724 525 z "},"\u0144":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0148":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\xf1":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u0146":{"ha":764,"x_min":109,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0149":{"ha":764,"x_min":0,"x_max":669,"o":"m 122 681 l 227 681 l 232 571 q 290 630 262 606 q 344 667 317 653 q 399 687 371 682 q 456 693 427 693 q 615 631 562 693 q 669 444 669 569 l 669 0 l 551 0 l 551 435 q 522 553 551 515 q 433 591 492 591 q 390 585 411 591 q 347 563 370 578 q 299 519 325 547 q 240 452 273 492 l 240 0 l 122 0 l 122 681 m 0 798 q 40 803 21 798 q 72 818 58 808 q 94 841 86 827 q 102 873 102 855 q 94 908 102 895 q 77 932 86 921 q 59 956 67 943 q 52 990 52 968 q 56 1013 52 1001 q 69 1035 60 1025 q 91 1051 77 1044 q 122 1057 104 1057 q 158 1050 141 1057 q 187 1028 174 1043 q 208 989 200 1013 q 215 935 215 966 q 198 845 215 884 q 152 778 181 806 q 83 736 123 751 q 0 720 44 721 l 0 798 m 0 681 z "},"\u014b":{"ha":764,"x_min":109,"x_max":656,"o":"m 383 -183 q 497 -135 457 -183 q 538 8 538 -87 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 12 q 637 -114 656 -59 q 582 -208 618 -170 q 496 -265 547 -245 q 382 -285 446 -285 l 383 -183 z "},"\xf2":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xf3":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\xf4":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\xf5":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\xf6":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u014d":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u014f":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u0151":{"ha":764,"x_min":0,"x_max":747,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 440 958 l 275 794 l 157 794 l 297 958 l 440 958 m 747 958 l 558 794 l 440 794 l 590 958 l 747 958 m 0 681 z "},"\xf8":{"ha":764,"x_min":62,"x_max":701,"o":"m 496 827 l 595 827 l 539 661 q 659 546 616 625 q 701 346 701 467 q 679 197 701 263 q 615 84 657 130 q 513 13 573 37 q 375 -12 452 -12 q 315 -8 345 -12 l 269 -146 l 171 -146 l 227 20 q 106 136 149 57 q 62 336 62 215 q 84 485 62 418 q 149 597 106 551 q 251 668 191 643 q 389 693 311 693 q 450 689 418 693 l 496 827 m 349 89 q 367 87 357 87 q 386 86 378 86 q 476 106 439 86 q 537 162 513 127 q 572 243 561 197 q 583 340 583 289 q 563 471 583 416 q 504 555 542 525 l 349 89 m 416 591 q 398 594 408 593 q 378 595 387 595 q 288 574 325 595 q 227 519 250 554 q 192 438 203 484 q 180 340 180 392 q 201 210 180 264 q 261 125 221 155 l 416 591 z "},"\u01ff":{"ha":764,"x_min":-54,"x_max":701,"o":"m 496 827 l 595 827 l 539 661 q 659 546 616 625 q 701 346 701 467 q 679 197 701 263 q 615 84 657 130 q 513 13 573 37 q 375 -12 452 -12 q 315 -8 345 -12 l 269 -146 l 171 -146 l 227 20 q 106 136 149 57 q 62 336 62 215 q 84 485 62 418 q 149 597 106 551 q 251 668 191 643 q 389 693 311 693 q 450 689 418 693 l 496 827 m 349 89 q 367 87 357 87 q 386 86 378 86 q 476 106 439 86 q 537 162 513 127 q 572 243 561 197 q 583 340 583 289 q 563 471 583 416 q 504 555 542 525 l 349 89 m 416 591 q 398 594 408 593 q 378 595 387 595 q 288 574 325 595 q 227 519 250 554 q 192 438 203 484 q 180 340 180 392 q 201 210 180 264 q 261 125 221 155 l 416 591 m 591 958 l 375 794 l 257 794 l 420 958 l 591 958 m -54 681 z "},"\u0153":{"ha":764,"x_min":26,"x_max":739,"o":"m 387 107 q 325 19 363 50 q 233 -12 286 -12 q 142 7 180 -12 q 77 70 103 27 q 39 178 52 112 q 26 335 26 243 q 40 484 26 418 q 80 596 54 550 q 148 668 107 643 q 243 693 189 693 q 332 665 296 693 q 396 575 368 636 q 422 625 408 603 q 455 662 437 647 q 497 685 473 677 q 550 693 520 693 q 630 672 595 693 q 689 610 665 651 q 726 511 713 570 q 739 376 739 452 q 739 335 739 351 q 737 311 739 319 l 450 311 q 481 145 450 202 q 576 89 513 89 q 651 97 615 89 q 715 117 688 105 l 715 18 q 646 -4 685 5 q 566 -12 607 -12 q 456 17 504 -12 q 387 107 409 47 m 332 339 q 325 457 332 409 q 307 536 319 506 q 277 581 294 567 q 237 595 259 595 q 195 580 214 595 q 163 534 176 566 q 144 455 151 503 q 138 339 138 407 q 143 222 138 271 q 161 144 149 174 q 193 100 174 114 q 237 86 212 86 q 332 339 332 86 m 629 399 q 623 489 630 452 q 605 550 616 526 q 577 584 593 573 q 543 595 562 595 q 474 543 496 595 q 450 399 452 492 l 629 399 z "},"\xfe":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"\u0155":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0159":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u0157":{"ha":764,"x_min":136,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u015b":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u015d":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u0161":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u015f":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 630 111 648 143 q 585 55 613 78 q 520 17 557 31 q 444 -5 484 2 l 387 -200 l 285 -200 l 326 -12 q 220 -4 269 -10 q 123 14 171 2 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 z "},"\u0219":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\xdf":{"ha":764,"x_min":100,"x_max":693,"o":"m 693 189 q 680 118 693 153 q 636 55 667 83 q 558 9 606 27 q 440 -8 510 -8 q 377 -5 406 -8 q 332 0 349 -2 l 332 104 q 351 99 339 102 q 378 94 363 96 q 407 91 392 92 q 435 90 422 90 q 497 97 471 90 q 539 115 523 104 q 564 142 556 127 q 572 175 572 157 q 555 231 572 207 q 511 277 537 256 q 453 321 484 299 q 395 368 422 342 q 351 426 369 393 q 334 501 334 458 q 347 566 334 539 q 380 614 360 593 q 422 651 399 635 q 465 683 446 667 q 498 719 485 700 q 511 765 511 739 q 477 846 511 821 q 378 871 443 871 q 312 861 341 871 q 262 828 283 850 q 230 772 241 806 q 218 689 218 737 l 218 0 l 100 0 l 100 685 q 121 810 100 757 q 182 898 143 863 q 273 949 220 932 q 389 966 326 966 q 491 953 446 966 q 568 914 536 939 q 615 853 599 889 q 631 774 631 818 q 617 705 631 733 q 585 655 604 676 q 542 618 565 634 q 499 586 519 602 q 466 551 479 570 q 453 507 453 533 q 471 460 453 481 q 515 418 488 439 q 573 376 542 397 q 631 327 604 354 q 675 266 658 300 q 693 189 693 233 z "},"\u017f":{"ha":764,"x_min":196,"x_max":699,"o":"m 699 950 l 699 851 q 654 859 677 856 q 608 865 631 863 q 563 868 585 867 q 522 869 541 869 q 368 820 420 869 q 317 664 317 770 l 317 0 l 196 0 l 196 652 q 219 791 196 732 q 285 890 243 850 q 386 948 327 929 q 515 968 444 968 q 609 963 560 968 q 699 950 658 958 z "},"\u0165":{"ha":764,"x_min":-123,"x_max":714,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 714 994 l 640 794 l 542 794 l 599 994 l 714 994 m -123 681 z "},"\u021b":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0167":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 304 l 71 304 l 71 403 l 233 403 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 403 l 615 403 l 615 304 l 351 304 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 z "},"\xf9":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xfa":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\xfb":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u0169":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\xfc":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u016b":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u016d":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u016f":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u0171":{"ha":764,"x_min":0,"x_max":747,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 440 958 l 275 794 l 157 794 l 297 958 l 440 958 m 747 958 l 558 794 l 440 794 l 590 958 l 747 958 m 0 681 z "},"\u0173":{"ha":764,"x_min":109,"x_max":692,"o":"m 692 -254 q 654 -259 675 -258 q 616 -261 633 -261 q 506 -230 543 -261 q 468 -150 468 -199 q 471 -119 468 -134 q 483 -85 474 -103 q 508 -47 492 -68 q 550 0 524 -26 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 q 616 -43 631 -24 q 593 -77 602 -62 q 582 -105 585 -92 q 579 -131 579 -118 q 594 -166 579 -153 q 644 -180 608 -180 q 667 -180 654 -180 q 692 -178 680 -179 l 692 -254 z "},"\u1e81":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\u1e83":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0175":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u1e85":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u1ef3":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xfd":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0177":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\xff":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u017a":{"ha":764,"x_min":0,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u017e":{"ha":764,"x_min":0,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u017c":{"ha":764,"x_min":0,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"&":{"ha":764,"x_min":39,"x_max":764,"o":"m 694 463 q 677 301 694 374 q 627 171 659 229 l 764 0 l 607 0 l 547 74 q 440 12 499 33 q 311 -9 380 -9 q 195 9 245 -9 q 109 60 144 27 q 57 138 75 93 q 39 239 39 184 q 52 331 39 290 q 89 402 66 371 q 142 458 112 434 q 205 503 172 482 l 191 524 q 134 618 153 570 q 115 713 115 667 q 131 803 115 762 q 177 874 146 844 q 251 922 207 905 q 353 939 296 939 q 449 923 408 939 q 518 880 490 907 q 560 818 546 853 q 574 742 574 782 q 556 653 574 691 q 511 585 539 614 q 447 532 483 555 q 372 488 410 509 l 547 269 q 575 463 577 349 l 694 463 m 161 253 q 173 187 161 217 q 206 136 184 157 q 258 103 227 115 q 328 92 289 92 q 482 157 416 92 l 267 427 q 224 393 243 411 q 191 355 205 376 q 169 309 177 334 q 161 253 161 283 m 454 730 q 426 810 454 781 q 349 839 397 839 q 301 830 321 839 q 266 806 280 821 q 244 769 252 790 q 237 724 237 748 q 251 655 237 687 q 294 586 264 624 l 313 562 q 368 595 342 578 q 413 632 393 612 q 443 676 432 652 q 454 730 454 700 z "},"`":{"ha":764,"x_min":0,"x_max":453,"o":"m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\xb4":{"ha":764,"x_min":0,"x_max":646,"o":"m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u02c6":{"ha":764,"x_min":0,"x_max":596,"o":"m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u02c7":{"ha":764,"x_min":0,"x_max":596,"o":"m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u0315":{"ha":764,"x_min":0,"x_max":838,"o":"m 838 994 l 764 794 l 665 794 l 722 994 l 838 994 m 0 681 z "},"\u02dc":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\xa8":{"ha":764,"x_min":0,"x_max":604,"o":"m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\xaf":{"ha":764,"x_min":0,"x_max":559,"o":"m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u02d8":{"ha":764,"x_min":0,"x_max":550,"o":"m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u02da":{"ha":764,"x_min":0,"x_max":528,"o":"m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u02dd":{"ha":764,"x_min":0,"x_max":747,"o":"m 440 958 l 275 794 l 157 794 l 297 958 l 440 958 m 747 958 l 558 794 l 440 794 l 590 958 l 747 958 m 0 681 z "},"\u02d9":{"ha":764,"x_min":0,"x_max":472,"o":"m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\xb8":{"ha":764,"x_min":296,"x_max":457,"o":"m 457 0 l 399 -200 l 296 -200 l 340 0 l 457 0 z "},"\u02db":{"ha":764,"x_min":464,"x_max":688,"o":"m 688 -254 q 650 -259 671 -258 q 612 -261 629 -261 q 502 -230 539 -261 q 464 -150 464 -199 q 467 -119 464 -134 q 479 -85 470 -103 q 504 -47 488 -68 q 546 0 519 -26 l 652 0 q 612 -43 627 -24 q 589 -77 597 -62 q 578 -105 581 -92 q 575 -131 575 -118 q 590 -166 575 -153 q 640 -180 604 -180 q 663 -180 650 -180 q 688 -178 676 -179 l 688 -254 z "},"\u0326":{"ha":764,"x_min":293,"x_max":453,"o":"m 453 -78 l 393 -278 l 293 -278 l 338 -78 l 453 -78 z "},"\u0312":{"ha":764,"x_min":0,"x_max":488,"o":"m 315 794 l 389 994 l 488 994 l 431 794 l 315 794 m 0 681 z "},",":{"ha":764,"x_min":161,"x_max":489,"o":"m 161 -139 q 229 -133 196 -140 q 286 -111 261 -125 q 326 -75 311 -96 q 340 -25 340 -53 q 331 21 340 3 q 309 54 321 39 q 287 85 296 68 q 277 131 277 102 q 282 161 277 145 q 299 189 288 176 q 327 210 310 202 q 368 218 345 218 q 414 209 392 218 q 453 178 436 199 q 479 127 469 158 q 489 56 489 97 q 468 -53 489 -1 q 407 -144 448 -104 q 304 -208 366 -184 q 161 -232 243 -232 l 161 -139 z "},";":{"ha":764,"x_min":170,"x_max":497,"o":"m 170 -139 q 237 -133 204 -140 q 294 -111 269 -125 q 334 -75 319 -96 q 349 -25 349 -53 q 339 21 349 3 q 317 54 329 39 q 295 85 304 68 q 285 131 285 102 q 290 161 285 145 q 307 189 296 176 q 335 210 318 202 q 376 218 353 218 q 422 209 400 218 q 461 178 444 199 q 487 127 477 158 q 497 56 497 97 q 476 -53 497 -1 q 415 -144 456 -104 q 312 -208 374 -184 q 170 -232 251 -232 l 170 -139 m 382 693 q 422 685 403 693 q 455 662 441 676 q 478 629 469 648 q 486 589 486 610 q 478 548 486 567 q 455 515 469 530 q 422 493 441 501 q 382 485 403 485 q 341 493 360 485 q 309 515 323 501 q 286 548 294 530 q 278 589 278 567 q 286 629 278 610 q 309 662 294 648 q 341 685 323 676 q 382 693 360 693 z "},":":{"ha":764,"x_min":278,"x_max":486,"o":"m 382 693 q 422 685 403 693 q 455 662 441 676 q 478 629 469 648 q 486 589 486 610 q 478 548 486 567 q 455 515 469 530 q 422 493 441 501 q 382 485 403 485 q 341 493 360 485 q 309 515 323 501 q 286 548 294 530 q 278 589 278 567 q 286 629 278 610 q 309 662 294 648 q 341 685 323 676 q 382 693 360 693 m 382 196 q 422 188 403 196 q 455 165 441 179 q 478 132 469 151 q 486 92 486 113 q 478 51 486 70 q 455 18 469 33 q 422 -4 441 4 q 382 -12 403 -12 q 341 -4 360 -12 q 309 18 323 4 q 286 51 294 33 q 278 92 278 70 q 286 132 278 113 q 309 165 294 151 q 341 188 323 179 q 382 196 360 196 z "},".":{"ha":764,"x_min":264,"x_max":489,"o":"m 376 214 q 420 205 399 214 q 456 180 441 196 q 480 144 471 165 q 489 100 489 123 q 480 56 489 77 q 456 21 471 36 q 420 -3 441 5 q 376 -12 399 -12 q 332 -3 353 -12 q 297 21 312 5 q 273 56 281 36 q 264 100 264 77 q 273 144 264 123 q 297 180 281 165 q 332 205 312 196 q 376 214 353 214 z "},"\u2026":{"ha":764,"x_min":40,"x_max":724,"o":"m 201 69 q 195 38 201 53 q 179 12 189 23 q 153 -6 168 1 q 121 -12 138 -12 q 88 -6 103 -12 q 63 12 73 1 q 46 37 52 22 q 40 69 40 52 q 46 101 40 86 q 63 127 52 116 q 88 145 73 138 q 121 151 103 151 q 153 145 138 151 q 179 127 168 138 q 195 101 189 117 q 201 69 201 86 m 463 69 q 456 38 463 53 q 440 12 450 23 q 414 -6 429 1 q 382 -12 399 -12 q 349 -6 364 -12 q 324 12 334 1 q 307 37 313 22 q 301 69 301 52 q 307 101 301 86 q 324 127 313 116 q 349 145 334 138 q 382 151 364 151 q 414 145 399 151 q 440 127 429 138 q 456 101 450 117 q 463 69 463 86 m 724 69 q 718 38 724 53 q 701 12 711 23 q 675 -6 690 1 q 643 -12 661 -12 q 610 -6 625 -12 q 585 12 595 1 q 568 37 574 22 q 562 69 562 52 q 568 101 562 86 q 585 127 574 116 q 610 145 595 138 q 643 151 625 151 q 675 145 661 151 q 701 127 690 138 q 718 101 711 117 q 724 69 724 86 z "},"-":{"ha":764,"x_min":179,"x_max":585,"o":"m 585 314 l 179 314 l 179 425 l 585 425 l 585 314 z "},"!":{"ha":764,"x_min":290,"x_max":469,"o":"m 452 958 l 433 260 l 329 260 l 309 958 l 452 958 m 380 167 q 415 160 399 167 q 443 140 431 153 q 462 112 455 128 q 469 77 469 95 q 462 42 469 58 q 443 14 455 26 q 415 -5 431 2 q 380 -12 399 -12 q 345 -5 361 -12 q 317 14 329 2 q 297 42 304 26 q 290 77 290 58 q 297 112 290 95 q 317 140 304 128 q 345 160 329 153 q 380 167 361 167 z "},"\xa1":{"ha":764,"x_min":294,"x_max":473,"o":"m 313 -278 l 330 421 l 435 421 l 456 -278 l 313 -278 m 383 514 q 349 521 365 514 q 321 541 333 528 q 301 569 309 553 q 294 604 294 585 q 301 639 294 623 q 321 667 309 655 q 349 686 333 679 q 383 693 365 693 q 418 686 402 693 q 447 667 435 679 q 466 639 459 655 q 473 604 473 623 q 466 569 473 585 q 447 541 459 553 q 418 521 435 528 q 383 514 402 514 z "},"?":{"ha":764,"x_min":205,"x_max":625,"o":"m 625 657 q 564 491 625 547 q 387 427 503 434 l 382 260 l 281 260 l 272 519 l 351 519 q 420 528 393 519 q 465 553 448 537 q 490 593 482 570 q 497 646 497 616 q 477 734 497 695 q 420 799 456 772 q 333 839 383 825 q 222 852 282 852 l 205 852 l 205 958 l 224 958 q 349 945 292 958 q 450 910 406 932 q 527 859 494 888 q 582 795 560 829 q 615 727 604 762 q 625 657 625 691 m 330 167 q 366 160 349 167 q 394 140 382 153 q 412 112 406 128 q 419 77 419 95 q 412 42 419 58 q 394 14 406 26 q 366 -5 382 2 q 330 -12 349 -12 q 296 -5 312 -12 q 267 14 279 2 q 248 42 255 26 q 241 77 241 58 q 248 112 241 95 q 267 140 255 128 q 296 160 279 153 q 330 167 312 167 z "},"\xbf":{"ha":764,"x_min":138,"x_max":557,"o":"m 138 24 q 199 190 138 133 q 375 254 260 247 l 380 421 l 482 421 l 490 161 l 411 161 q 342 153 370 161 q 297 127 314 144 q 273 88 280 111 q 265 35 265 64 q 286 -53 265 -15 q 343 -118 307 -92 q 430 -158 380 -144 q 541 -172 481 -172 l 557 -172 l 557 -278 l 539 -278 q 414 -265 471 -278 q 313 -230 357 -252 q 235 -178 268 -208 q 180 -115 202 -149 q 148 -46 159 -81 q 138 24 138 -10 m 432 514 q 397 521 413 514 q 369 541 380 528 q 350 569 357 553 q 343 604 343 585 q 350 639 343 623 q 369 667 357 655 q 397 686 380 679 q 432 693 413 693 q 467 686 451 693 q 495 667 484 679 q 514 639 507 655 q 521 604 521 623 q 514 569 521 585 q 495 541 507 553 q 467 521 484 528 q 432 514 451 514 z "},"\u203d":{"ha":764,"x_min":133,"x_max":628,"o":"m 298 167 q 334 160 317 167 q 362 140 350 153 q 380 112 374 128 q 387 77 387 95 q 380 42 387 58 q 362 14 374 26 q 334 -5 350 2 q 298 -12 317 -12 q 264 -5 280 -12 q 235 14 248 2 q 216 42 223 26 q 210 77 210 58 q 216 112 210 95 q 235 140 223 128 q 264 160 248 153 q 298 167 280 167 m 364 831 l 357 512 q 423 522 395 513 q 470 548 451 531 q 497 590 488 565 q 506 646 506 616 q 482 738 506 698 q 424 799 458 777 q 364 831 390 821 m 367 940 q 453 908 412 928 q 528 859 494 888 q 584 795 562 829 q 617 727 606 762 q 628 657 628 691 q 565 483 628 542 q 355 415 503 423 l 352 260 l 248 260 l 233 851 q 150 852 197 852 l 133 852 l 133 958 l 151 958 q 231 958 197 958 l 227 1087 l 370 1087 l 367 940 z "},"\u2018":{"ha":764,"x_min":275,"x_max":603,"o":"m 603 873 q 536 867 568 874 q 478 846 503 861 q 439 810 454 831 q 424 760 424 788 q 434 714 424 731 q 456 682 444 696 q 478 649 468 667 q 488 604 488 632 q 482 574 488 590 q 466 546 477 559 q 437 525 454 533 q 396 517 420 517 q 350 527 372 517 q 312 557 328 536 q 285 608 295 577 q 275 679 275 638 q 296 787 275 735 q 357 879 316 840 q 459 943 398 919 q 603 966 521 966 l 603 873 z "},"\u2019":{"ha":764,"x_min":161,"x_max":489,"o":"m 161 610 q 229 615 196 608 q 286 637 261 623 q 326 673 311 652 q 340 724 340 695 q 331 770 340 752 q 309 802 321 787 q 287 834 296 817 q 277 879 277 851 q 282 909 277 894 q 299 937 288 924 q 327 958 310 950 q 368 966 345 966 q 414 957 392 966 q 453 927 436 947 q 479 876 469 907 q 489 804 489 846 q 468 696 489 748 q 407 604 448 644 q 304 541 366 564 q 161 517 243 517 l 161 610 z "},"\u201c":{"ha":764,"x_min":71,"x_max":725,"o":"m 370 879 q 312 873 340 880 q 261 853 283 867 q 226 819 239 840 q 212 772 212 799 q 221 730 212 746 q 241 699 230 713 q 260 669 252 685 q 269 627 269 653 q 264 598 269 613 q 249 572 259 584 q 222 552 238 560 q 183 545 205 545 q 140 554 161 545 q 104 583 120 564 q 80 630 89 602 q 71 697 71 659 q 90 799 71 750 q 147 884 109 847 q 240 944 184 922 q 370 966 296 966 l 370 879 m 725 879 q 667 873 695 880 q 617 853 639 867 q 582 819 595 840 q 568 772 568 799 q 577 730 568 746 q 597 699 586 713 q 616 669 608 685 q 625 627 625 653 q 620 598 625 613 q 605 572 615 584 q 578 552 594 560 q 539 545 562 545 q 496 554 517 545 q 460 583 476 564 q 436 630 445 602 q 427 697 427 659 q 446 799 427 750 q 502 884 465 847 q 596 944 540 922 q 725 966 652 966 l 725 879 z "},"\u201d":{"ha":764,"x_min":39,"x_max":693,"o":"m 395 632 q 452 637 424 631 q 503 658 481 644 q 538 692 524 671 q 551 739 551 713 q 543 782 551 766 q 523 812 534 798 q 503 842 512 826 q 494 885 494 859 q 499 913 494 899 q 515 939 505 927 q 542 959 526 951 q 581 966 558 966 q 623 957 603 966 q 659 929 644 947 q 684 881 675 910 q 693 814 693 852 q 674 712 693 761 q 617 627 654 664 q 524 567 579 589 q 395 545 468 545 l 395 632 m 39 632 q 97 637 68 631 q 147 658 125 644 q 182 692 169 671 q 196 739 196 713 q 187 782 196 766 q 168 812 178 798 q 148 842 157 826 q 139 885 139 859 q 144 913 139 899 q 160 939 149 927 q 186 959 170 951 q 225 966 203 966 q 268 957 248 966 q 304 929 288 947 q 329 881 319 910 q 338 814 338 852 q 318 712 338 761 q 261 627 299 664 q 168 567 224 589 q 39 545 112 545 l 39 632 z "},"\u201a":{"ha":764,"x_min":161,"x_max":489,"o":"m 161 -139 q 229 -133 196 -140 q 286 -111 261 -125 q 326 -75 311 -96 q 340 -25 340 -53 q 331 21 340 3 q 309 54 321 39 q 287 85 296 68 q 277 131 277 102 q 282 161 277 145 q 299 189 288 176 q 327 210 310 202 q 368 218 345 218 q 414 209 392 218 q 453 178 436 199 q 479 127 469 158 q 489 56 489 97 q 468 -53 489 -1 q 407 -144 448 -104 q 304 -208 366 -184 q 161 -232 243 -232 l 161 -139 z "},"\u201e":{"ha":764,"x_min":39,"x_max":693,"o":"m 395 -134 q 452 -128 424 -135 q 503 -107 481 -121 q 538 -73 524 -94 q 551 -26 551 -53 q 543 16 551 0 q 523 47 534 33 q 503 77 512 61 q 494 119 494 93 q 499 148 494 133 q 515 174 505 162 q 542 194 526 186 q 581 201 558 201 q 623 192 603 201 q 659 163 644 182 q 684 116 675 144 q 693 49 693 87 q 674 -53 693 -4 q 617 -139 654 -101 q 524 -199 579 -176 q 395 -221 468 -221 l 395 -134 m 39 -134 q 97 -128 68 -135 q 147 -107 125 -121 q 182 -73 169 -94 q 196 -26 196 -53 q 187 16 196 0 q 168 47 178 33 q 148 77 157 61 q 139 119 139 93 q 144 148 139 133 q 160 174 149 162 q 186 194 170 186 q 225 201 203 201 q 268 192 248 201 q 304 163 288 182 q 329 116 319 144 q 338 49 338 87 q 318 -53 338 -4 q 261 -139 299 -101 q 168 -199 224 -176 q 39 -221 112 -221 l 39 -134 z "},"\u2039":{"ha":764,"x_min":195,"x_max":530,"o":"m 530 606 l 331 370 l 530 133 l 439 66 l 195 370 l 439 672 l 530 606 z "},"\u203a":{"ha":764,"x_min":234,"x_max":568,"o":"m 234 132 l 433 369 l 234 606 l 325 672 l 568 369 l 325 66 l 234 132 z "},"\xab":{"ha":764,"x_min":97,"x_max":659,"o":"m 366 595 l 218 368 l 366 140 l 272 93 l 97 368 l 272 642 l 366 595 m 659 590 l 500 368 l 659 146 l 568 97 l 382 368 l 568 639 l 659 590 z "},"\xbb":{"ha":764,"x_min":106,"x_max":667,"o":"m 399 140 l 546 368 l 399 595 l 492 642 l 667 368 l 492 93 l 399 140 m 106 146 l 264 368 l 106 590 l 196 639 l 382 368 l 196 97 l 106 146 z "},"/":{"ha":764,"x_min":78,"x_max":656,"o":"m 656 958 l 191 -146 l 78 -146 l 543 958 l 656 958 z "},"|":{"ha":764,"x_min":326,"x_max":437,"o":"m 437 -278 l 326 -278 l 326 1111 l 437 1111 l 437 -278 z "},"\u2013":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 318 l 90 318 l 90 421 l 673 421 l 673 318 z "},"\u2014":{"ha":764,"x_min":-3,"x_max":766,"o":"m 766 318 l -3 318 l -3 421 l 766 421 l 766 318 z "},"\u2015":{"ha":764,"x_min":-3,"x_max":766,"o":"m 766 318 l -3 318 l -3 421 l 766 421 l 766 318 z "},"\u2022":{"ha":764,"x_min":175,"x_max":589,"o":"m 382 590 q 462 574 425 590 q 528 529 500 557 q 572 464 556 501 q 589 383 589 426 q 572 303 589 340 q 528 237 556 265 q 462 193 500 209 q 382 176 425 176 q 301 193 339 176 q 236 237 264 209 q 191 303 208 265 q 175 383 175 340 q 191 464 175 426 q 236 529 208 501 q 301 574 264 557 q 382 590 339 590 z "},"\xb7":{"ha":764,"x_min":269,"x_max":494,"o":"m 382 497 q 426 488 405 497 q 461 464 446 479 q 486 427 477 448 q 494 383 494 406 q 486 340 494 360 q 461 304 477 319 q 426 280 446 289 q 382 271 405 271 q 338 280 358 271 q 302 304 317 289 q 278 340 287 319 q 269 383 269 360 q 278 427 269 406 q 302 464 287 448 q 338 488 317 479 q 382 497 358 497 z "},"(":{"ha":764,"x_min":203,"x_max":587,"o":"m 516 -285 q 203 355 203 5 q 220 519 203 437 q 274 683 237 601 q 371 847 311 765 q 519 1010 432 929 l 587 940 q 324 364 324 680 q 391 62 324 207 q 587 -212 457 -83 l 516 -285 z "},")":{"ha":764,"x_min":176,"x_max":560,"o":"m 248 1010 q 560 366 560 720 q 545 214 560 292 q 494 53 530 135 q 398 -115 458 -30 q 245 -285 337 -199 l 176 -215 q 374 58 309 -84 q 439 357 439 201 q 176 937 439 680 l 248 1010 z "},"[":{"ha":764,"x_min":234,"x_max":568,"o":"m 568 -278 l 234 -278 l 234 982 l 568 982 l 568 887 l 347 887 l 347 -183 l 568 -183 l 568 -278 z "},"]":{"ha":764,"x_min":195,"x_max":530,"o":"m 530 -278 l 195 -278 l 195 -183 l 416 -183 l 416 887 l 195 887 l 195 982 l 530 982 l 530 -278 z "},"{":{"ha":764,"x_min":110,"x_max":608,"o":"m 608 -278 l 558 -278 q 363 -217 427 -278 q 300 -31 300 -155 l 300 203 q 292 262 300 236 q 266 306 285 288 q 217 334 248 324 q 139 343 186 343 l 110 343 l 110 437 l 139 437 q 220 446 189 437 q 269 470 251 454 q 293 513 286 487 q 300 574 300 538 l 300 734 q 313 837 300 791 q 358 915 327 883 q 438 965 389 947 q 558 982 487 982 l 608 982 l 608 887 l 568 887 q 411 734 411 887 l 411 576 q 268 390 411 411 q 412 204 412 376 l 412 -28 q 568 -183 412 -183 l 608 -183 l 608 -278 z "},"}":{"ha":764,"x_min":155,"x_max":654,"o":"m 155 982 l 205 982 q 400 921 336 982 q 464 734 464 859 l 464 578 q 471 518 464 545 q 497 474 479 492 q 547 447 516 456 q 625 437 578 437 l 654 437 l 654 343 l 625 343 q 544 335 576 343 q 495 310 513 327 q 471 268 477 294 q 464 207 464 242 l 464 -31 q 450 -133 464 -87 q 406 -211 437 -179 q 326 -261 376 -243 q 205 -278 277 -278 l 155 -278 l 155 -183 l 196 -183 q 353 -31 353 -183 l 353 204 q 496 390 353 370 q 351 576 351 406 l 351 732 q 196 887 351 887 l 155 887 l 155 982 z "},"*":{"ha":764,"x_min":111,"x_max":653,"o":"m 652 570 l 606 489 l 415 615 l 431 383 l 334 383 l 349 615 l 154 489 l 111 568 l 319 671 l 111 775 l 158 854 l 350 726 l 334 958 l 431 958 l 414 726 l 606 856 l 653 772 l 444 669 l 652 570 z "},"\u2020":{"ha":764,"x_min":122,"x_max":642,"o":"m 642 679 l 440 679 l 440 172 l 323 172 l 323 679 l 122 679 l 122 778 l 323 778 l 323 958 l 440 958 l 440 778 l 642 778 l 642 679 z "},"\u2021":{"ha":764,"x_min":122,"x_max":642,"o":"m 122 679 l 122 778 l 323 778 l 323 958 l 440 958 l 440 778 l 642 778 l 642 679 l 440 679 l 440 288 l 642 288 l 642 189 l 440 189 l 440 0 l 323 0 l 323 189 l 122 189 l 122 288 l 323 288 l 323 679 l 122 679 z "},"\xa7":{"ha":764,"x_min":96,"x_max":672,"o":"m 553 161 q 590 116 574 144 q 606 56 606 88 q 579 -41 606 -1 q 511 -107 553 -81 q 419 -146 470 -134 q 321 -158 369 -158 q 259 -157 286 -158 q 208 -153 232 -155 q 163 -145 184 -150 q 118 -135 141 -141 l 118 -26 q 166 -41 143 -35 q 214 -51 190 -47 q 263 -57 237 -55 q 317 -58 288 -58 q 443 -30 401 -58 q 484 47 484 -2 q 467 90 484 70 q 423 128 450 109 q 361 167 395 147 q 290 209 326 186 q 218 256 253 231 q 156 311 184 281 q 112 377 129 341 q 96 457 96 413 q 103 511 96 484 q 125 563 111 538 q 163 611 140 589 q 215 652 185 634 q 180 695 195 668 q 164 760 164 723 q 177 828 164 792 q 222 895 191 865 q 309 946 254 926 q 444 966 363 966 q 597 950 522 966 l 597 848 q 517 865 555 860 q 441 869 479 869 q 368 862 397 869 q 320 841 338 854 q 294 810 302 828 q 286 770 286 791 q 303 727 286 747 q 347 687 319 707 q 408 648 374 667 q 479 606 443 628 q 550 559 515 584 q 612 503 585 534 q 655 436 639 473 q 672 355 672 400 q 664 301 672 328 q 641 249 656 274 q 604 201 626 223 q 553 161 581 178 m 472 222 q 509 248 493 233 q 535 280 524 263 q 551 314 546 297 q 557 346 557 332 q 532 420 557 387 q 468 481 507 453 q 383 535 429 509 q 294 590 336 562 q 258 565 274 580 q 232 533 243 550 q 216 499 222 516 q 211 468 211 482 q 235 394 211 427 q 298 332 260 361 q 382 277 336 303 q 472 222 429 250 z "},"\xb6":{"ha":764,"x_min":74,"x_max":676,"o":"m 444 387 q 268 410 339 387 q 154 472 197 433 q 92 563 111 511 q 74 675 74 616 q 96 785 74 734 q 163 876 118 837 q 277 936 208 914 q 441 958 347 958 l 676 958 l 676 139 q 656 12 676 68 q 598 -81 636 -43 q 507 -138 561 -119 q 386 -158 453 -158 q 260 -136 319 -158 q 153 -75 202 -115 l 214 14 q 296 -37 250 -18 q 392 -57 342 -57 q 514 -9 469 -57 q 558 135 558 39 l 558 861 l 444 861 l 444 387 z "},"\u0391":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 z "},"\u0392":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 z "},"\u0393":{"ha":764,"x_min":158,"x_max":668,"o":"m 281 783 l 281 0 l 158 0 l 158 886 l 668 886 l 668 783 l 281 783 z "},"\u0394":{"ha":764,"x_min":37,"x_max":726,"o":"m 37 103 l 304 886 l 467 886 l 726 103 l 726 0 l 37 0 l 37 103 m 589 113 l 379 775 l 168 113 l 589 113 z "},"\u0395":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 z "},"\u0396":{"ha":764,"x_min":75,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 z "},"\u0397":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 z "},"\u0398":{"ha":764,"x_min":34,"x_max":730,"o":"m 730 449 q 701 243 730 330 q 623 99 672 156 q 510 15 574 43 q 374 -12 446 -12 q 225 19 289 -12 q 119 108 161 50 q 55 250 76 166 q 34 439 34 334 q 62 644 34 557 q 140 787 91 730 q 253 871 189 844 q 388 899 317 899 q 537 867 473 899 q 644 778 602 836 q 708 637 687 720 q 730 449 730 553 m 605 440 q 592 583 605 518 q 552 695 579 648 q 483 768 525 742 q 381 793 440 793 q 282 766 324 793 q 213 691 241 739 q 172 580 186 644 q 159 446 159 517 q 172 302 159 367 q 212 191 185 237 q 281 119 239 144 q 381 93 323 93 q 480 120 438 93 q 550 195 522 148 q 591 305 578 242 q 605 440 605 368 m 253 408 l 253 510 l 511 510 l 511 408 l 253 408 z "},"\u0399":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 z "},"\u039a":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 z "},"\u039b":{"ha":764,"x_min":3,"x_max":761,"o":"m 3 0 l 304 886 l 467 886 l 761 0 l 625 0 l 433 597 l 379 772 l 323 597 l 132 0 l 3 0 z "},"\u039c":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 z "},"\u039d":{"ha":764,"x_min":81,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 z "},"\u039e":{"ha":764,"x_min":118,"x_max":646,"o":"m 600 406 l 164 406 l 164 513 l 600 513 l 600 406 m 640 779 l 123 779 l 123 886 l 640 886 l 640 779 m 118 0 l 118 109 l 646 109 l 646 0 l 118 0 z "},"\u039f":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 z "},"\u03a0":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 0 l 564 0 l 564 782 l 200 782 l 200 0 l 79 0 l 79 886 l 684 886 l 684 0 z "},"\u03a1":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 z "},"\u03a3":{"ha":764,"x_min":75,"x_max":688,"o":"m 232 113 l 688 113 l 688 0 l 75 0 l 75 95 l 372 460 l 87 793 l 87 886 l 679 886 l 679 777 l 259 777 l 522 469 l 232 113 z "},"\u03a4":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 z "},"\u03a5":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 z "},"\u03a6":{"ha":764,"x_min":0,"x_max":737,"o":"m 437 -57 l 326 -57 l 326 21 q 194 58 250 27 q 101 141 138 88 q 46 270 64 195 q 28 439 28 345 q 51 617 28 541 q 115 746 75 694 q 210 827 155 798 q 326 864 264 856 l 326 943 l 437 943 l 437 865 q 570 828 513 859 q 663 745 626 798 q 719 617 701 692 q 737 449 737 543 q 714 269 737 346 q 650 141 690 193 q 554 60 609 89 q 437 22 500 31 l 437 -57 m 326 762 q 245 727 279 755 q 189 657 212 699 q 156 561 167 615 q 146 446 146 507 q 156 322 146 378 q 188 225 166 267 q 244 157 210 183 q 326 123 278 131 l 326 762 m 437 123 q 518 159 484 132 q 575 229 553 186 q 608 325 597 271 q 619 440 619 379 q 609 563 619 507 q 577 661 599 618 q 520 729 555 703 q 437 762 486 755 l 437 123 m 0 886 z "},"\u03a7":{"ha":764,"x_min":12,"x_max":747,"o":"m 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 747 0 z "},"\u03a8":{"ha":764,"x_min":43,"x_max":721,"o":"m 440 0 l 323 0 l 323 262 q 197 291 250 269 q 110 350 144 313 q 59 438 76 387 q 43 553 43 490 l 43 886 l 161 886 l 161 562 q 201 424 161 472 q 323 364 241 376 l 323 886 l 440 886 l 440 364 q 561 427 519 378 q 603 564 603 477 l 603 886 l 721 886 l 721 571 q 702 452 721 505 q 647 360 683 399 q 558 296 610 321 q 440 264 506 272 l 440 0 z "},"\u03a9":{"ha":764,"x_min":29,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 z "},"\u0386":{"ha":764,"x_min":7,"x_max":854,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 186 972 l 123 790 l 25 790 l 57 972 l 186 972 m 854 886 z "},"\u0388":{"ha":764,"x_min":-72,"x_max":758,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 89 972 l 26 790 l -72 790 l -40 972 l 89 972 m 758 886 z "},"\u0389":{"ha":764,"x_min":-100,"x_max":730,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 61 972 l -1 790 l -100 790 l -68 972 l 61 972 m 730 886 z "},"\u038a":{"ha":764,"x_min":-86,"x_max":743,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 75 972 l 12 790 l -86 790 l -54 972 l 75 972 m 743 886 z "},"\u03aa":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u038c":{"ha":764,"x_min":-58,"x_max":771,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 102 972 l 40 790 l -58 790 l -26 972 l 102 972 m 771 886 z "},"\u038e":{"ha":764,"x_min":-132,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 29 972 l -33 790 l -132 790 l -100 972 l 29 972 m 698 886 z "},"\u03ab":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u038f":{"ha":764,"x_min":-44,"x_max":785,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m 117 972 l 54 790 l -44 790 l -12 972 l 117 972 m 785 886 z "},"\u03b1":{"ha":764,"x_min":54,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 z "},"\u03b2":{"ha":764,"x_min":109,"x_max":701,"o":"m 701 290 q 679 171 701 226 q 617 76 657 116 q 520 14 576 37 q 395 -8 463 -8 q 301 4 342 -8 q 227 35 260 17 l 227 -278 l 109 -278 l 109 693 q 126 798 109 748 q 178 885 143 848 q 266 944 213 922 q 389 966 318 966 q 498 948 450 966 q 578 897 546 929 q 628 821 611 864 q 644 728 644 777 q 634 659 644 692 q 607 599 625 626 q 566 554 590 572 q 515 532 543 536 q 591 507 557 527 q 650 454 625 486 q 688 380 674 422 q 701 290 701 338 m 227 145 q 307 108 264 122 q 396 94 349 94 q 470 105 436 94 q 528 139 504 116 q 567 198 553 163 q 581 285 581 234 q 570 356 581 323 q 536 412 559 389 q 475 450 513 436 q 383 463 437 463 l 326 463 l 326 565 l 368 565 q 439 577 410 565 q 488 610 469 589 q 516 659 507 631 q 525 718 525 686 q 515 777 525 749 q 487 824 505 804 q 442 855 469 844 q 382 866 416 866 q 316 853 345 866 q 267 818 287 841 q 237 762 248 795 q 227 688 227 728 l 227 145 z "},"\u03b3":{"ha":764,"x_min":43,"x_max":677,"o":"m 343 317 q 371 217 358 269 q 395 102 383 166 q 477 267 444 192 q 529 412 509 342 q 555 547 548 481 q 557 681 562 612 l 677 681 q 661 503 677 589 q 613 329 645 416 q 535 153 582 241 q 416 -45 488 64 q 419 -72 418 -54 q 422 -111 420 -90 q 424 -155 423 -132 q 425 -198 425 -178 l 425 -278 l 307 -278 l 307 -198 q 300 -71 307 -130 q 284 38 293 -12 q 262 145 275 87 q 227 286 250 203 q 174 443 197 384 q 133 534 151 503 q 100 574 115 565 q 66 583 86 583 q 54 582 58 583 q 43 581 50 582 l 43 681 q 102 685 77 685 q 145 680 125 685 q 183 661 165 675 q 218 622 201 647 q 255 555 235 596 q 297 456 275 515 q 343 317 319 397 z "},"\u03b4":{"ha":764,"x_min":74,"x_max":685,"o":"m 304 663 q 242 737 262 702 q 222 815 222 772 q 236 876 222 848 q 278 924 250 905 q 349 955 306 944 q 442 966 391 966 q 618 947 524 966 l 618 845 q 438 868 517 868 q 368 856 389 868 q 347 822 347 843 q 351 798 347 809 q 363 775 355 787 q 384 752 371 764 q 414 725 397 740 l 506 646 q 595 559 562 597 q 649 481 628 521 q 677 404 669 441 q 685 319 685 366 q 679 245 685 284 q 658 169 673 206 q 620 100 644 132 q 562 42 597 68 q 481 2 528 16 q 374 -12 434 -12 q 242 13 298 -12 q 149 83 186 38 q 93 187 111 127 q 74 313 74 247 q 94 441 74 383 q 146 544 113 498 q 220 617 180 589 q 304 663 261 646 m 385 593 q 317 565 350 583 q 256 515 285 547 q 211 436 228 483 q 195 325 195 390 q 208 228 195 272 q 245 154 220 184 q 306 106 270 123 q 387 89 341 89 q 464 105 431 89 q 518 151 496 122 q 550 219 539 180 q 561 313 561 257 q 556 371 561 343 q 535 430 551 399 q 495 490 519 460 q 433 553 471 520 l 385 593 z "},"\u03b5":{"ha":764,"x_min":87,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 z "},"\u03b6":{"ha":764,"x_min":107,"x_max":668,"o":"m 107 313 q 124 421 107 369 q 170 522 140 473 q 238 616 199 570 q 319 704 276 662 q 408 784 362 746 q 501 858 453 823 l 146 858 l 146 958 l 668 958 l 668 869 q 482 716 564 788 q 345 578 400 644 q 260 448 289 512 q 231 319 231 385 q 242 240 231 273 q 276 182 253 207 q 336 141 300 157 q 422 114 372 125 q 536 80 491 100 q 609 37 582 61 q 647 -19 636 12 q 659 -87 659 -50 q 652 -137 659 -114 q 635 -182 646 -161 q 612 -224 625 -203 q 586 -265 599 -244 l 473 -265 q 498 -225 486 -244 q 519 -186 510 -205 q 533 -146 528 -167 q 538 -102 538 -125 q 532 -67 538 -83 q 509 -39 526 -52 q 464 -17 493 -27 q 390 1 435 -7 q 259 42 313 16 q 172 108 205 68 q 122 198 138 147 q 107 313 107 249 z "},"\u03b7":{"ha":764,"x_min":93,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 z "},"\u03b8":{"ha":764,"x_min":66,"x_max":697,"o":"m 697 484 q 676 286 697 376 q 614 129 654 195 q 514 25 573 62 q 378 -12 454 -12 q 247 18 304 -12 q 149 107 189 47 q 88 258 109 168 q 66 469 66 349 q 88 667 66 576 q 150 825 109 758 q 250 929 191 891 q 386 966 309 966 q 517 936 459 966 q 614 846 574 906 q 676 695 654 785 q 697 484 697 604 m 576 543 q 557 689 572 628 q 517 790 542 751 q 458 849 492 830 q 382 867 424 867 q 301 842 336 867 q 243 771 267 816 q 207 668 220 727 q 189 543 193 609 l 576 543 m 186 444 q 202 282 188 350 q 242 172 217 215 q 302 107 267 128 q 382 87 338 87 q 467 116 431 87 q 527 194 503 145 q 563 308 551 243 q 578 444 575 372 l 186 444 z "},"\u03b9":{"ha":764,"x_min":93,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 z "},"\u03ba":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 z "},"\u03bb":{"ha":764,"x_min":45,"x_max":737,"o":"m 304 758 q 282 811 293 790 q 258 844 271 831 q 230 861 245 856 q 195 865 214 865 q 154 861 176 865 q 111 850 132 857 l 111 949 q 161 962 133 957 q 212 966 190 966 q 275 960 246 966 q 329 936 304 954 q 375 885 354 918 q 416 798 397 852 l 636 174 q 652 136 644 151 q 668 112 659 121 q 687 99 676 103 q 711 96 697 96 q 724 96 718 96 q 737 97 730 96 l 737 0 q 672 -8 701 -8 q 623 0 644 -8 q 584 24 602 7 q 553 68 567 41 q 525 134 538 96 l 418 437 l 386 533 l 350 437 l 174 0 l 45 0 l 332 681 l 304 758 z "},"\u03bc":{"ha":764,"x_min":109,"x_max":730,"o":"m 227 681 l 227 248 q 345 90 227 90 q 387 97 365 90 q 430 119 408 104 q 475 161 451 134 q 529 229 499 188 l 529 681 l 647 681 l 647 214 q 650 156 647 179 q 662 119 654 133 q 684 99 671 105 q 718 93 698 93 l 730 93 l 730 -1 q 709 -5 721 -3 q 684 -7 697 -7 q 626 2 650 -7 q 585 26 602 10 q 559 65 569 42 q 543 117 549 88 q 487 53 514 78 q 433 14 460 28 q 382 -5 406 0 q 336 -11 358 -11 q 270 2 300 -11 q 217 41 240 14 l 227 -77 l 227 -278 l 109 -278 l 109 681 l 227 681 z "},"\u03bd":{"ha":764,"x_min":47,"x_max":697,"o":"m 47 681 l 182 681 l 345 231 l 382 125 q 498 401 454 262 q 559 681 542 540 l 697 681 q 655 510 682 596 q 595 337 629 423 q 518 167 560 252 q 428 0 475 82 l 307 0 l 47 681 z "},"\u03be":{"ha":764,"x_min":98,"x_max":659,"o":"m 118 860 l 118 958 l 623 958 l 623 860 l 547 860 q 414 842 469 860 q 326 795 360 823 q 277 735 292 768 q 262 675 262 703 q 302 582 262 614 q 429 550 342 550 l 591 550 l 591 452 l 431 452 q 338 439 377 452 q 273 403 298 426 q 235 349 248 380 q 222 282 222 318 q 235 219 222 246 q 272 172 248 192 q 335 138 297 153 q 422 114 372 124 q 536 80 491 100 q 609 37 582 61 q 647 -19 636 12 q 659 -87 659 -50 q 652 -137 659 -114 q 635 -182 646 -161 q 612 -224 625 -203 q 586 -265 599 -244 l 473 -265 q 498 -225 486 -244 q 519 -186 510 -205 q 533 -146 528 -167 q 538 -102 538 -125 q 532 -67 538 -83 q 509 -39 526 -52 q 464 -17 493 -27 q 390 1 435 -7 q 258 40 313 16 q 167 99 203 64 q 115 177 132 133 q 98 275 98 221 q 113 355 98 317 q 150 422 127 392 q 203 472 174 452 q 265 503 233 493 q 214 522 236 507 q 176 559 191 537 q 154 606 161 581 q 146 659 146 632 q 156 720 146 689 q 183 778 165 750 q 226 826 201 805 q 279 860 250 848 l 118 860 z "},"\u03bf":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 z "},"\u03c0":{"ha":764,"x_min":29,"x_max":734,"o":"m 734 -3 q 698 -8 716 -6 q 663 -11 680 -11 q 597 -5 628 -11 q 541 21 567 1 q 499 85 515 41 q 479 181 483 128 q 475 257 475 233 q 475 582 475 281 l 275 582 q 271 437 275 508 q 257 294 267 366 q 228 150 247 222 q 176 0 210 77 l 43 0 q 106 150 83 77 q 140 294 129 223 q 155 437 151 366 q 159 582 159 508 l 29 582 l 29 681 l 728 681 l 728 582 l 593 582 q 593 305 593 327 q 594 238 593 283 q 602 161 596 193 q 620 114 608 130 q 646 94 632 98 q 680 90 661 90 q 708 92 694 90 q 734 97 722 94 l 734 -3 z "},"\u03c1":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 666 194 690 262 q 598 81 641 126 q 500 13 556 35 q 383 -10 445 -10 q 297 1 338 -10 q 227 30 255 13 l 227 -278 l 109 -278 l 109 368 q 126 494 109 435 q 180 598 144 553 q 273 668 217 642 q 406 693 329 693 q 536 667 482 693 q 624 596 590 642 q 674 488 659 551 q 690 353 690 426 m 570 350 q 561 445 570 401 q 532 523 552 490 q 479 574 511 555 q 400 593 447 593 q 273 536 319 593 q 227 358 227 479 l 227 141 q 302 106 260 120 q 384 92 345 92 q 520 156 471 92 q 570 350 570 220 z "},"\u03c3":{"ha":764,"x_min":62,"x_max":737,"o":"m 587 583 q 651 484 626 545 q 675 345 675 423 q 655 202 675 267 q 596 89 635 137 q 499 15 557 41 q 368 -12 442 -12 q 241 11 298 -12 q 145 77 184 33 q 84 185 105 121 q 62 335 62 250 q 84 481 62 415 q 149 594 106 547 q 251 667 191 642 q 389 693 311 693 q 472 691 429 693 q 561 687 516 689 q 650 683 606 685 q 737 681 695 681 l 737 578 q 669 579 702 578 q 587 583 635 581 m 454 589 q 434 590 444 590 q 413 591 424 591 q 396 591 403 591 q 382 591 389 591 q 287 569 325 591 q 226 510 249 546 q 193 429 203 474 q 183 339 183 384 q 197 230 183 277 q 236 151 211 182 q 296 103 261 119 q 375 87 332 87 q 460 109 425 87 q 516 165 494 130 q 547 245 537 200 q 556 339 556 291 q 529 485 556 420 q 454 589 503 551 z "},"\u03c2":{"ha":764,"x_min":107,"x_max":659,"o":"m 538 -102 q 532 -66 538 -83 q 507 -34 526 -50 q 458 -10 489 -18 q 381 4 427 -3 q 255 42 306 16 q 171 112 205 68 q 122 215 137 155 q 107 346 107 275 q 130 487 107 422 q 199 599 153 553 q 309 668 244 645 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 365 575 408 590 q 292 528 323 559 q 246 450 262 496 q 231 350 231 404 q 241 258 231 298 q 272 191 252 218 q 324 145 291 164 q 427 113 357 125 q 538 85 493 102 q 610 41 583 68 q 648 -18 637 13 q 659 -87 659 -50 q 652 -137 659 -114 q 635 -182 646 -161 q 612 -224 625 -203 q 586 -265 599 -244 l 473 -265 q 498 -225 486 -244 q 519 -186 510 -205 q 533 -146 528 -167 q 538 -102 538 -125 z "},"\u03c4":{"ha":764,"x_min":43,"x_max":663,"o":"m 635 7 q 565 -5 606 -1 q 479 -9 524 -9 q 370 5 416 -9 q 296 49 325 20 q 253 123 267 79 q 239 227 239 167 l 239 582 l 43 582 l 43 681 l 663 681 l 663 582 l 357 582 l 357 236 q 389 126 357 163 q 497 90 421 90 q 566 95 530 90 q 635 109 603 100 l 635 7 z "},"\u03c5":{"ha":764,"x_min":94,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 z "},"\u03c6":{"ha":764,"x_min":28,"x_max":737,"o":"m 437 -278 l 326 -278 l 326 -9 q 101 91 174 1 q 28 338 28 181 q 51 486 28 423 q 115 592 75 549 q 210 660 155 635 q 326 692 264 684 l 326 958 l 437 958 l 437 692 q 570 661 513 686 q 663 591 626 635 q 719 486 701 547 q 737 346 737 424 q 714 196 737 260 q 650 90 690 133 q 554 22 609 46 q 437 -9 500 -2 l 437 -278 m 326 595 q 245 566 279 588 q 189 510 212 543 q 156 433 167 476 q 146 343 146 391 q 156 246 146 290 q 188 169 166 201 q 244 115 210 136 q 326 87 278 94 l 326 595 m 437 87 q 518 116 484 94 q 575 172 553 138 q 608 248 597 205 q 619 339 619 291 q 609 436 619 392 q 577 513 599 480 q 520 568 555 547 q 437 595 486 589 l 437 87 z "},"\u03c7":{"ha":764,"x_min":37,"x_max":722,"o":"m 579 -96 q 599 -139 590 -122 q 618 -166 608 -156 q 641 -179 629 -176 q 671 -183 654 -183 q 699 -181 684 -183 q 722 -178 713 -180 l 722 -278 q 689 -283 707 -281 q 653 -285 671 -285 q 588 -277 615 -285 q 540 -251 561 -269 q 503 -207 519 -234 q 471 -143 486 -180 l 404 16 l 366 109 l 327 26 l 170 -278 l 37 -278 l 313 231 l 197 504 q 177 547 186 530 q 157 574 168 564 q 135 588 147 584 q 106 591 123 591 q 78 590 92 591 q 54 586 64 588 l 54 686 q 88 691 70 690 q 123 693 106 693 q 188 685 161 693 q 236 660 216 677 q 274 616 257 643 q 306 551 290 589 l 359 424 l 393 339 l 435 424 l 566 681 l 697 681 l 447 215 l 579 -96 z "},"\u03c8":{"ha":764,"x_min":58,"x_max":720,"o":"m 437 -278 l 326 -278 l 326 -11 q 211 12 261 -7 q 127 66 161 31 q 76 154 93 101 q 58 279 58 207 l 58 681 l 170 681 l 170 301 q 208 147 170 198 q 326 86 247 96 l 326 958 l 437 958 l 437 86 q 512 114 479 94 q 565 171 544 135 q 597 259 587 207 q 608 382 608 311 q 602 532 608 458 q 586 681 595 606 l 697 681 q 712 534 705 607 q 720 387 720 461 q 703 233 720 302 q 651 115 686 165 q 563 33 616 64 q 437 -8 510 2 l 437 -278 z "},"\u03c9":{"ha":764,"x_min":26,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 z "},"\u03ac":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u03ad":{"ha":764,"x_min":28,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 576 972 l 456 790 l 346 790 l 433 972 l 576 972 m 28 681 z "},"\u03ae":{"ha":764,"x_min":28,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 576 972 l 456 790 l 346 790 l 433 972 l 576 972 m 28 681 z "},"\u03af":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u03ca":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u0390":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 178 943 q 206 938 193 943 q 229 922 220 932 q 244 899 239 912 q 250 871 250 886 q 244 843 250 856 q 229 820 239 829 q 206 805 220 810 q 178 799 193 799 q 126 820 147 799 q 106 871 106 840 q 112 899 106 886 q 127 922 117 912 q 150 938 136 932 q 178 943 163 943 m 586 943 q 614 938 601 943 q 637 922 628 932 q 653 899 647 912 q 659 871 659 886 q 653 843 659 856 q 637 820 647 829 q 614 805 628 810 q 586 799 601 799 q 535 820 555 799 q 514 871 514 840 q 520 899 514 886 q 535 922 526 912 q 558 938 545 932 q 586 943 571 943 m 488 978 l 401 790 l 300 790 l 353 978 l 488 978 m 0 681 z "},"\u03cc":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u03cd":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u03b0":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 178 943 q 206 938 193 943 q 229 922 220 932 q 244 899 239 912 q 250 871 250 886 q 244 843 250 856 q 229 820 239 829 q 206 805 220 810 q 178 799 193 799 q 126 820 147 799 q 106 871 106 840 q 112 899 106 886 q 127 922 117 912 q 150 938 136 932 q 178 943 163 943 m 586 943 q 614 938 601 943 q 637 922 628 932 q 653 899 647 912 q 659 871 659 886 q 653 843 659 856 q 637 820 647 829 q 614 805 628 810 q 586 799 601 799 q 535 820 555 799 q 514 871 514 840 q 520 899 514 886 q 535 922 526 912 q 558 938 545 932 q 586 943 571 943 m 488 978 l 401 790 l 300 790 l 353 978 l 488 978 m 0 681 z "},"\u03cb":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u03ce":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u0384":{"ha":764,"x_min":0,"x_max":549,"o":"m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u0385":{"ha":764,"x_min":0,"x_max":659,"o":"m 178 943 q 206 938 193 943 q 229 922 220 932 q 244 899 239 912 q 250 871 250 886 q 244 843 250 856 q 229 820 239 829 q 206 805 220 810 q 178 799 193 799 q 126 820 147 799 q 106 871 106 840 q 112 899 106 886 q 127 922 117 912 q 150 938 136 932 q 178 943 163 943 m 586 943 q 614 938 601 943 q 637 922 628 932 q 653 899 647 912 q 659 871 659 886 q 653 843 659 856 q 637 820 647 829 q 614 805 628 810 q 586 799 601 799 q 535 820 555 799 q 514 871 514 840 q 520 899 514 886 q 535 922 526 912 q 558 938 545 932 q 586 943 571 943 m 488 978 l 401 790 l 300 790 l 353 978 l 488 978 m 0 681 z "},"\u0387":{"ha":764,"x_min":269,"x_max":494,"o":"m 382 808 q 426 799 405 808 q 461 774 446 789 q 486 738 477 759 q 494 694 494 717 q 486 650 494 671 q 461 615 477 630 q 426 590 446 600 q 382 581 405 581 q 338 590 358 581 q 302 615 317 600 q 278 650 287 630 q 269 694 269 671 q 278 738 269 717 q 302 774 287 759 q 338 799 317 789 q 382 808 358 808 z "},"\u037e":{"ha":764,"x_min":170,"x_max":497,"o":"m 170 -139 q 237 -133 204 -140 q 294 -111 269 -125 q 334 -75 319 -96 q 349 -25 349 -53 q 339 21 349 3 q 317 54 329 39 q 295 85 304 68 q 285 131 285 102 q 290 161 285 145 q 307 189 296 176 q 335 210 318 202 q 376 218 353 218 q 422 209 400 218 q 461 178 444 199 q 487 127 477 158 q 497 56 497 97 q 476 -53 497 -1 q 415 -144 456 -104 q 312 -208 374 -184 q 170 -232 251 -232 l 170 -139 m 382 693 q 422 685 403 693 q 455 662 441 676 q 478 629 469 648 q 486 589 486 610 q 478 548 486 567 q 455 515 469 530 q 422 493 441 501 q 382 485 403 485 q 341 493 360 485 q 309 515 323 501 q 286 548 294 530 q 278 589 278 567 q 286 629 278 610 q 309 662 294 648 q 341 685 323 676 q 382 693 360 693 z "},"\u0374":{"ha":764,"x_min":154,"x_max":497,"o":"m 154 568 q 239 616 204 591 q 295 668 273 640 q 327 727 317 695 q 336 798 336 760 q 333 840 336 821 q 330 882 330 860 q 352 942 330 918 q 410 966 373 966 q 449 956 433 966 q 476 930 466 946 q 492 892 487 913 q 497 848 497 871 q 476 743 497 795 q 417 642 456 690 q 323 553 378 594 q 197 484 267 513 l 154 568 z "},"\u0375":{"ha":764,"x_min":150,"x_max":492,"o":"m 489 220 q 488 108 492 162 q 469 5 484 54 q 431 -87 455 -43 q 370 -167 406 -130 q 300 -216 335 -201 q 233 -231 265 -231 q 197 -225 212 -231 q 171 -211 181 -220 q 155 -189 160 -201 q 150 -164 150 -177 q 171 -110 150 -130 q 201 -90 184 -97 q 240 -75 219 -83 q 283 -55 260 -67 q 328 -21 305 -43 q 358 18 345 -4 q 378 69 370 40 q 389 135 386 98 q 390 220 392 172 l 489 220 z "},"\u0410":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 z "},"\u0411":{"ha":764,"x_min":107,"x_max":703,"o":"m 228 522 l 371 522 q 514 503 452 522 q 618 450 576 484 q 681 370 660 416 q 703 272 703 325 q 678 158 703 209 q 608 73 653 108 q 499 19 563 37 q 358 0 436 0 l 107 0 l 107 886 l 640 886 l 640 785 l 228 785 l 228 522 m 575 264 q 563 329 575 300 q 525 379 551 358 q 459 411 499 400 q 363 422 419 422 l 228 422 l 228 102 l 367 102 q 523 144 470 102 q 575 264 575 186 z "},"\u0412":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 z "},"\u0413":{"ha":764,"x_min":158,"x_max":668,"o":"m 281 781 l 281 0 l 158 0 l 158 886 l 668 886 l 668 781 l 281 781 z "},"\u0414":{"ha":764,"x_min":8,"x_max":745,"o":"m 526 782 l 330 782 q 316 526 326 641 q 290 325 306 411 q 252 182 274 238 q 199 102 229 125 l 526 102 l 526 782 m 745 102 l 736 -192 l 628 -192 l 628 0 l 125 0 l 125 -192 l 17 -192 l 8 102 l 18 102 q 62 115 41 102 q 104 162 84 128 q 143 252 125 195 q 176 396 161 309 q 201 604 191 484 q 218 886 212 725 l 647 886 l 647 102 l 745 102 z "},"\u0415":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 z "},"\u0416":{"ha":764,"x_min":-7,"x_max":774,"o":"m 437 456 l 646 886 l 761 886 l 554 460 l 774 0 l 646 0 l 437 454 l 437 0 l 326 0 l 326 454 l 118 0 l -7 0 l 212 457 l 3 886 l 121 886 l 326 456 l 326 886 l 437 886 l 437 456 z "},"\u0417":{"ha":764,"x_min":74,"x_max":668,"o":"m 74 138 q 186 104 125 117 q 332 91 248 91 q 487 136 435 91 q 539 262 539 180 q 525 323 539 296 q 483 369 510 350 q 416 397 455 387 q 328 407 376 407 l 142 407 l 142 507 l 325 507 q 400 516 366 507 q 458 543 434 525 q 496 589 483 562 q 510 655 510 617 q 502 708 510 682 q 472 753 493 734 q 416 785 451 773 q 329 797 382 797 q 214 788 273 797 q 97 760 156 779 l 97 865 q 205 889 147 880 q 340 897 263 897 q 563 838 490 897 q 636 671 636 778 q 602 547 636 599 q 490 469 567 494 q 558 447 526 463 q 615 405 591 431 q 654 344 640 379 q 668 265 668 309 q 643 151 668 201 q 573 64 618 100 q 462 8 527 28 q 318 -11 397 -11 q 74 26 181 -11 l 74 138 z "},"\u0418":{"ha":764,"x_min":81,"x_max":683,"o":"m 201 886 l 201 216 l 568 886 l 683 886 l 683 0 l 562 0 l 562 669 l 196 0 l 81 0 l 81 886 l 201 886 z "},"\u0419":{"ha":764,"x_min":0,"x_max":683,"o":"m 201 886 l 201 216 l 568 886 l 683 886 l 683 0 l 562 0 l 562 669 l 196 0 l 81 0 l 81 886 l 201 886 m 593 1111 q 577 1041 593 1072 q 533 991 562 1011 q 466 960 505 970 q 380 950 427 950 q 223 991 272 950 q 174 1111 174 1032 l 281 1111 q 286 1076 281 1092 q 303 1049 291 1060 q 334 1031 315 1038 q 382 1025 353 1025 q 431 1031 411 1025 q 463 1049 450 1038 q 480 1076 475 1060 q 485 1111 485 1092 l 593 1111 m 0 886 z "},"\u041a":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 z "},"\u041b":{"ha":764,"x_min":18,"x_max":657,"o":"m 657 0 l 536 0 l 536 782 l 340 782 q 321 481 334 609 q 288 263 308 353 q 242 121 267 173 q 191 44 217 70 q 138 8 165 18 q 77 -3 111 -3 q 18 4 49 -3 l 24 107 q 89 127 61 102 q 138 200 117 151 q 174 319 159 248 q 198 477 188 389 q 215 668 208 565 q 228 886 222 772 l 657 886 l 657 0 z "},"\u041c":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 z "},"\u041d":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 z "},"\u041e":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 z "},"\u041f":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 0 l 564 0 l 564 779 l 200 779 l 200 0 l 79 0 l 79 886 l 684 886 l 684 0 z "},"\u0420":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 z "},"\u0421":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 z "},"\u0422":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 z "},"\u0423":{"ha":764,"x_min":39,"x_max":729,"o":"m 107 107 q 148 99 129 102 q 184 96 167 96 q 235 105 212 96 q 280 134 258 113 q 321 188 301 154 q 360 272 340 222 l 39 886 l 178 886 l 353 545 l 416 415 l 418 415 l 465 538 l 602 886 l 729 886 l 463 228 q 419 134 442 178 q 366 58 395 90 q 297 6 336 25 q 207 -12 258 -12 q 157 -9 183 -12 q 102 4 131 -5 l 107 107 z "},"\u0424":{"ha":764,"x_min":0,"x_max":737,"o":"m 437 -12 l 326 -12 l 326 77 q 205 103 260 81 q 111 166 151 124 q 50 276 71 209 q 28 439 28 342 q 51 603 28 536 q 115 712 75 669 q 210 778 156 755 q 326 808 264 800 l 326 899 l 437 899 l 437 808 q 564 778 509 803 q 658 709 620 753 q 717 600 696 665 q 737 449 737 534 q 712 284 737 352 q 645 173 687 217 q 550 107 604 130 q 437 77 496 84 l 437 -12 m 326 707 q 245 681 279 701 q 189 628 211 661 q 156 549 167 595 q 146 446 146 503 q 158 328 146 376 q 193 248 170 279 q 249 200 216 216 q 326 178 283 183 l 326 707 m 437 178 q 518 205 484 184 q 575 260 553 225 q 608 338 597 294 q 619 440 619 382 q 609 544 619 498 q 577 624 599 589 q 520 680 555 659 q 437 707 485 701 l 437 178 m 0 886 z "},"\u0425":{"ha":764,"x_min":12,"x_max":747,"o":"m 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 747 0 z "},"\u0426":{"ha":764,"x_min":86,"x_max":746,"o":"m 746 104 l 737 -192 l 629 -192 l 629 0 l 86 0 l 86 886 l 207 886 l 207 104 l 543 104 l 543 886 l 664 886 l 664 104 l 746 104 z "},"\u0427":{"ha":764,"x_min":68,"x_max":689,"o":"m 568 390 q 481 368 532 378 q 374 358 431 358 q 233 380 291 358 q 138 441 175 401 q 85 537 102 481 q 68 661 68 593 l 68 886 l 190 886 l 190 671 q 200 579 190 618 q 233 513 210 540 q 291 473 255 487 q 378 460 326 460 q 482 468 431 460 q 568 490 532 477 l 568 886 l 689 886 l 689 0 l 568 0 l 568 390 z "},"\u0428":{"ha":764,"x_min":57,"x_max":707,"o":"m 57 886 l 168 886 l 168 97 l 328 97 l 328 886 l 436 886 l 436 97 l 595 97 l 595 886 l 707 886 l 707 0 l 57 0 l 57 886 z "},"\u0429":{"ha":764,"x_min":50,"x_max":754,"o":"m 50 0 l 50 886 l 161 886 l 161 97 l 321 97 l 321 886 l 429 886 l 429 97 l 589 97 l 589 886 l 700 886 l 700 97 l 754 97 l 746 -192 l 643 -192 l 643 0 l 50 0 z "},"\u042a":{"ha":764,"x_min":24,"x_max":717,"o":"m 24 783 l 24 886 l 290 886 l 290 536 l 385 536 q 531 516 469 536 q 635 462 594 496 q 696 380 676 427 q 717 279 717 334 q 692 159 717 212 q 622 72 667 107 q 513 18 577 37 q 372 0 450 0 l 170 0 l 170 783 l 24 783 m 589 271 q 577 339 589 309 q 541 392 566 370 q 476 425 516 413 q 376 436 435 436 l 290 436 l 290 102 l 380 102 q 538 146 487 102 q 589 271 589 191 z "},"\u042b":{"ha":764,"x_min":56,"x_max":708,"o":"m 172 536 l 243 536 q 371 516 318 536 q 458 460 425 495 q 507 378 492 425 q 522 279 522 332 q 504 160 522 209 q 449 75 485 111 q 360 19 413 39 q 239 0 307 0 l 56 0 l 56 886 l 172 886 l 172 536 m 404 271 q 396 340 404 310 q 368 392 387 371 q 318 425 349 414 q 243 436 287 436 l 172 436 l 172 103 l 240 103 q 365 147 326 103 q 404 271 404 191 m 591 0 l 591 886 l 708 886 l 708 0 l 591 0 z "},"\u042c":{"ha":764,"x_min":107,"x_max":703,"o":"m 228 536 l 371 536 q 516 516 454 536 q 620 462 578 496 q 682 380 661 427 q 703 279 703 334 q 679 161 703 213 q 610 74 654 109 q 501 19 565 38 q 358 0 437 0 l 107 0 l 107 886 l 228 886 l 228 536 m 574 271 q 563 340 574 309 q 527 392 552 370 q 462 425 502 413 q 363 436 422 436 l 228 436 l 228 102 l 367 102 q 524 146 473 102 q 574 271 574 191 z "},"\u042d":{"ha":764,"x_min":89,"x_max":703,"o":"m 575 510 q 550 632 569 579 q 498 722 532 686 q 415 778 465 759 q 298 796 366 796 q 190 783 242 796 q 89 746 137 770 l 89 854 q 198 887 142 876 q 313 899 253 899 q 484 869 411 899 q 606 783 557 840 q 679 643 654 726 q 703 453 703 559 q 677 248 703 337 q 600 101 652 159 q 474 15 547 43 q 306 -12 400 -12 q 191 -2 244 -12 q 89 31 138 9 l 89 146 q 189 106 137 120 q 301 92 241 92 q 505 170 439 92 q 578 408 572 249 l 155 408 l 155 510 l 575 510 z "},"\u042e":{"ha":764,"x_min":57,"x_max":737,"o":"m 290 509 q 308 682 293 608 q 350 804 322 755 q 420 875 378 852 q 519 899 462 899 q 631 868 588 899 q 697 780 673 838 q 729 638 721 722 q 737 449 737 555 q 726 247 737 334 q 688 103 715 161 q 617 17 661 45 q 509 -12 574 -12 q 401 17 444 -12 q 335 101 359 46 q 301 234 311 155 q 290 410 291 312 l 170 410 l 170 0 l 57 0 l 57 886 l 170 886 l 170 509 l 290 509 m 624 443 q 620 599 624 531 q 604 712 616 667 q 571 781 593 758 q 514 804 549 804 q 460 781 481 804 q 426 711 439 757 q 408 598 414 665 q 403 443 403 530 q 407 289 403 356 q 423 175 411 221 q 456 106 435 130 q 514 82 478 82 q 569 107 548 82 q 603 178 591 132 q 620 292 615 225 q 624 443 624 359 z "},"\u042f":{"ha":764,"x_min":64,"x_max":648,"o":"m 161 264 q 190 323 176 301 q 220 359 205 345 q 251 384 235 374 q 281 397 267 393 q 210 425 241 405 q 158 475 179 446 q 127 543 138 505 q 117 621 117 581 q 134 727 117 679 q 188 811 151 776 q 284 866 225 846 q 428 886 342 886 l 648 886 l 648 0 l 526 0 l 526 367 l 435 367 q 386 362 408 367 q 346 345 364 357 q 314 311 328 332 q 288 256 299 289 l 199 0 l 64 0 l 161 264 m 243 628 q 255 557 243 587 q 289 506 267 527 q 345 474 311 485 q 422 464 378 464 l 526 464 l 526 785 l 418 785 q 287 744 331 785 q 243 628 243 703 z "},"\u0403":{"ha":764,"x_min":0,"x_max":668,"o":"m 281 781 l 281 0 l 158 0 l 158 886 l 668 886 l 668 781 l 281 781 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u0490":{"ha":764,"x_min":158,"x_max":668,"o":"m 574 1057 l 668 1057 l 668 781 l 279 781 l 279 0 l 158 0 l 158 886 l 567 886 l 574 1057 z "},"\u0402":{"ha":764,"x_min":3,"x_max":737,"o":"m 289 574 l 421 574 q 545 557 488 574 q 646 507 603 541 q 713 424 688 473 q 737 306 737 374 q 710 161 737 220 q 640 65 684 102 q 541 13 596 29 q 429 -1 486 -3 l 429 106 q 496 113 464 104 q 554 143 529 121 q 594 205 579 166 q 610 304 610 244 q 600 362 610 332 q 567 417 590 392 q 505 457 543 441 q 411 473 467 473 l 289 473 l 289 0 l 167 0 l 167 783 l 3 783 l 3 886 l 509 886 l 509 783 l 289 783 l 289 574 z "},"\u0404":{"ha":764,"x_min":61,"x_max":675,"o":"m 608 510 l 608 408 l 187 408 q 261 171 194 250 q 465 92 329 92 q 574 105 522 92 q 675 142 627 118 l 675 32 q 452 -12 568 -12 q 283 15 356 -12 q 159 97 210 41 q 85 237 109 153 q 61 433 61 321 q 88 634 61 547 q 166 780 115 721 q 291 869 218 839 q 458 899 365 899 q 573 888 520 899 q 675 856 626 878 l 675 742 q 575 782 627 768 q 463 796 524 796 q 352 777 400 796 q 270 722 304 758 q 215 632 236 685 q 187 510 195 578 l 608 510 z "},"\u0405":{"ha":764,"x_min":75,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 z "},"\u0400":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\u0401":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u0406":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 z "},"\u0407":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u0408":{"ha":764,"x_min":123,"x_max":595,"o":"m 595 886 l 595 271 q 578 162 595 214 q 526 73 561 111 q 439 13 492 35 q 317 -9 387 -9 q 263 -6 290 -9 q 210 4 235 -2 q 162 20 184 11 q 123 40 140 29 l 123 161 q 217 113 165 131 q 318 96 268 96 q 432 141 392 96 q 472 271 472 186 l 472 782 l 135 782 l 135 886 l 595 886 z "},"\u040d":{"ha":764,"x_min":0,"x_max":683,"o":"m 201 886 l 201 216 l 568 886 l 683 886 l 683 0 l 562 0 l 562 669 l 196 0 l 81 0 l 81 886 l 201 886 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\u040c":{"ha":764,"x_min":0,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u0409":{"ha":764,"x_min":-9,"x_max":758,"o":"m 514 525 q 628 506 581 525 q 703 452 674 486 q 745 370 732 417 q 758 267 758 322 q 697 66 758 132 q 515 0 635 0 l 338 0 l 338 789 l 253 789 q 239 539 246 652 q 221 335 232 427 q 192 175 210 243 q 151 67 175 107 q 99 12 127 28 q 44 -5 71 -5 q -9 4 17 -5 l -4 100 q 59 140 33 96 q 101 279 84 183 q 130 525 119 374 q 149 886 140 675 l 450 886 l 450 525 l 514 525 m 640 262 q 635 328 640 298 q 615 380 629 358 q 575 415 600 403 q 510 428 549 428 l 450 428 l 450 97 l 515 97 q 575 109 551 97 q 613 142 599 120 q 634 194 628 163 q 640 262 640 224 z "},"\u040a":{"ha":764,"x_min":56,"x_max":758,"o":"m 640 262 q 634 332 640 301 q 613 384 628 362 q 574 416 599 405 q 510 428 549 428 l 450 428 l 450 97 l 515 97 q 575 109 551 97 q 613 142 599 120 q 634 194 628 163 q 640 262 640 224 m 338 886 l 450 886 l 450 525 l 514 525 q 627 506 581 525 q 703 452 673 486 q 745 370 732 417 q 758 267 758 322 q 698 69 758 138 q 515 0 637 0 l 338 0 l 338 414 l 168 414 l 168 0 l 56 0 l 56 886 l 168 886 l 168 511 l 338 511 l 338 886 z "},"\u040b":{"ha":764,"x_min":3,"x_max":733,"o":"m 289 574 l 429 574 q 560 557 503 574 q 655 506 616 541 q 713 414 694 470 q 733 279 733 359 l 733 0 l 611 0 l 611 269 q 601 365 611 326 q 568 428 591 404 q 508 463 545 452 q 416 473 471 473 l 289 473 l 289 0 l 167 0 l 167 783 l 3 783 l 3 886 l 509 886 l 509 783 l 289 783 l 289 574 z "},"\u040e":{"ha":764,"x_min":0,"x_max":729,"o":"m 107 107 q 148 99 129 102 q 184 96 167 96 q 235 105 212 96 q 280 134 258 113 q 321 188 301 154 q 360 272 340 222 l 39 886 l 178 886 l 353 545 l 416 415 l 418 415 l 465 538 l 602 886 l 729 886 l 463 228 q 419 134 442 178 q 366 58 395 90 q 297 6 336 25 q 207 -12 258 -12 q 157 -9 183 -12 q 102 4 131 -5 l 107 107 m 593 1111 q 577 1041 593 1072 q 533 991 562 1011 q 466 960 505 970 q 380 950 427 950 q 223 991 272 950 q 174 1111 174 1032 l 281 1111 q 286 1076 281 1092 q 303 1049 291 1060 q 334 1031 315 1038 q 382 1025 353 1025 q 431 1031 411 1025 q 463 1049 450 1038 q 480 1076 475 1060 q 485 1111 485 1092 l 593 1111 m 0 886 z "},"\u040f":{"ha":764,"x_min":83,"x_max":680,"o":"m 435 -192 l 329 -192 l 323 0 l 83 0 l 83 886 l 204 886 l 204 104 l 559 104 l 559 886 l 680 886 l 680 0 l 440 0 l 435 -192 z "},"\u0462":{"ha":764,"x_min":3,"x_max":737,"o":"m 167 783 l 3 783 l 3 886 l 509 886 l 509 783 l 289 783 l 289 522 l 406 522 q 550 503 488 522 q 653 450 612 484 q 716 370 695 416 q 737 272 737 325 q 712 158 737 209 q 643 73 688 108 q 534 19 597 37 q 393 0 471 0 l 167 0 l 167 783 m 610 264 q 597 329 610 300 q 559 379 585 358 q 494 411 534 400 q 397 422 454 422 l 289 422 l 289 102 l 401 102 q 557 144 505 102 q 610 264 610 186 z "},"\u0472":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 382 93 q 476 117 436 93 q 543 184 515 142 q 584 284 570 227 q 601 408 597 342 l 164 408 q 181 279 167 337 q 221 179 195 220 q 287 116 248 138 q 382 93 327 93 m 382 793 q 292 771 330 793 q 228 710 254 749 q 186 619 201 671 q 165 507 172 567 l 600 507 q 578 627 593 574 q 535 716 562 680 q 471 773 509 753 q 382 793 433 793 z "},"\u0474":{"ha":764,"x_min":3,"x_max":760,"o":"m 708 892 q 733 891 720 892 q 760 888 747 890 l 760 781 q 745 782 752 782 q 733 782 739 782 q 705 778 718 782 q 683 763 693 774 q 665 735 673 753 q 650 692 657 718 l 458 0 l 289 0 l 3 886 l 139 886 l 325 289 l 376 114 l 419 289 l 534 741 q 556 800 543 772 q 591 848 570 827 q 641 880 612 868 q 708 892 669 892 z "},"\u0430":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 z "},"\u0431":{"ha":764,"x_min":85,"x_max":703,"o":"m 582 326 q 569 429 582 385 q 533 502 555 473 q 483 545 511 531 q 423 559 454 559 q 365 550 391 559 q 312 523 338 541 q 260 477 286 505 q 205 410 235 450 l 205 397 q 220 245 205 304 q 258 151 234 186 q 316 103 283 117 q 390 89 350 89 q 473 109 437 89 q 533 162 509 129 q 570 237 557 195 q 582 326 582 280 m 197 527 q 303 626 245 593 q 435 659 361 659 q 542 638 493 659 q 627 574 591 616 q 683 471 663 532 q 703 330 703 410 q 679 193 703 256 q 613 84 656 130 q 512 13 571 39 q 383 -12 454 -12 q 253 13 309 -12 q 160 91 197 39 q 104 224 123 144 q 85 415 85 304 q 108 646 85 551 q 175 803 131 741 q 284 901 219 866 q 432 951 349 936 q 483 959 456 956 q 536 965 510 962 q 587 971 563 968 q 631 978 612 974 l 631 869 q 600 864 617 866 q 563 860 583 862 q 523 856 544 858 q 484 851 503 854 q 353 818 404 841 q 271 755 302 795 q 224 659 240 715 q 197 527 208 602 z "},"\u0432":{"ha":764,"x_min":109,"x_max":693,"o":"m 693 199 q 673 113 693 152 q 612 47 654 75 q 508 4 571 20 q 357 -11 444 -11 q 234 -6 299 -11 q 109 5 169 -2 l 109 677 q 238 689 172 685 q 379 693 303 693 q 588 648 517 693 q 660 518 660 603 q 627 419 660 460 q 526 358 593 378 q 589 340 559 353 q 642 308 619 328 q 679 260 665 288 q 693 199 693 233 m 539 494 q 530 537 539 518 q 499 570 520 556 q 445 590 479 583 q 364 597 412 597 q 290 596 321 597 q 227 590 258 594 l 227 393 l 363 393 q 539 494 539 393 m 568 196 q 520 276 568 249 q 372 302 473 302 l 227 302 l 227 94 q 292 87 260 89 q 367 85 325 85 q 466 93 427 85 q 528 116 505 101 q 559 151 551 131 q 568 196 568 172 z "},"\u0433":{"ha":764,"x_min":164,"x_max":657,"o":"m 283 579 l 283 0 l 164 0 l 164 681 l 657 681 l 657 579 l 283 579 z "},"\u0434":{"ha":764,"x_min":16,"x_max":741,"o":"m 525 579 l 335 579 q 317 380 328 463 q 292 243 307 298 q 258 154 277 187 q 216 102 239 121 l 525 102 l 525 579 m 741 102 l 733 -174 l 625 -174 l 625 0 l 129 0 l 129 -174 l 22 -174 l 16 102 l 25 102 q 74 110 51 102 q 117 141 97 118 q 153 204 136 163 q 183 308 170 244 q 206 464 196 372 q 222 681 216 555 l 643 681 l 643 102 l 741 102 z "},"\u0435":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 z "},"\u0436":{"ha":764,"x_min":-1,"x_max":765,"o":"m 4 681 l 121 681 l 328 353 l 328 681 l 436 681 l 436 353 l 643 681 l 760 681 l 541 353 l 765 0 l 636 0 l 436 346 l 436 0 l 328 0 l 328 346 l 127 0 l -1 0 l 224 353 l 4 681 z "},"\u0437":{"ha":764,"x_min":90,"x_max":665,"o":"m 90 122 q 154 108 120 114 q 221 97 188 102 q 285 90 254 92 q 340 87 316 87 q 436 95 398 87 q 497 116 475 102 q 530 150 520 130 q 539 195 539 170 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 160 677 127 671 q 225 686 192 682 q 291 691 258 689 q 354 693 324 693 q 488 680 434 693 q 574 643 541 667 q 620 587 606 619 q 633 515 633 554 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 648 112 665 151 q 591 46 631 74 q 488 3 552 19 q 330 -12 423 -12 q 274 -11 304 -12 q 212 -6 244 -9 q 149 2 180 -3 q 90 12 117 6 l 90 122 z "},"\u0438":{"ha":764,"x_min":118,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 z "},"\u0439":{"ha":764,"x_min":0,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 m 590 943 q 575 872 590 903 q 532 819 559 841 q 466 785 505 797 q 380 774 427 774 q 288 785 326 774 q 224 819 249 797 q 188 872 199 841 q 176 943 176 903 l 283 943 q 288 907 283 924 q 304 877 293 890 q 334 856 315 863 q 382 848 353 848 q 430 856 411 848 q 461 877 450 863 q 477 907 473 890 q 482 943 482 924 l 590 943 m 0 681 z "},"\u043a":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 z "},"\u043b":{"ha":764,"x_min":22,"x_max":650,"o":"m 650 0 l 532 0 l 532 579 l 342 579 q 318 340 334 439 q 279 173 302 240 q 229 68 257 106 q 167 13 200 30 q 98 -4 134 -5 q 22 5 61 -4 l 28 103 q 79 106 55 100 q 123 132 102 111 q 160 192 143 153 q 190 296 176 231 q 213 455 203 361 q 229 681 223 550 l 650 681 l 650 0 z "},"\u043c":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 614 0 l 596 425 l 589 576 l 549 471 l 421 161 l 335 161 l 212 458 l 170 576 l 164 416 l 146 0 l 33 0 l 77 681 l 233 681 l 350 387 l 382 300 l 414 387 l 533 681 l 688 681 l 730 0 z "},"\u043d":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 538 0 l 538 301 l 227 301 l 227 0 l 109 0 l 109 681 l 227 681 l 227 404 l 538 404 l 538 681 l 656 681 l 656 0 z "},"\u043e":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 z "},"\u043f":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 538 0 l 538 578 l 227 578 l 227 0 l 109 0 l 109 681 l 656 681 l 656 0 z "},"\u0440":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 z "},"\u0441":{"ha":764,"x_min":107,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 z "},"\u0442":{"ha":764,"x_min":64,"x_max":700,"o":"m 700 579 l 441 579 l 441 0 l 322 0 l 322 579 l 64 579 l 64 681 l 700 681 l 700 579 z "},"\u0443":{"ha":764,"x_min":40,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 z "},"\u0444":{"ha":764,"x_min":28,"x_max":737,"o":"m 437 -278 l 326 -278 l 326 -9 q 102 81 176 -1 q 28 338 28 163 q 50 489 28 425 q 111 594 71 552 q 205 660 150 637 q 326 690 260 683 l 326 958 l 437 958 l 437 692 q 568 665 512 686 q 662 603 624 644 q 718 498 699 562 q 737 346 737 435 q 714 190 737 254 q 650 84 690 125 q 554 20 609 42 q 437 -8 500 -1 l 437 -278 m 326 595 q 243 567 279 588 q 186 513 208 547 q 155 435 164 479 q 146 343 146 392 q 156 238 146 283 q 188 162 166 193 q 244 112 210 130 q 326 87 278 94 l 326 595 m 437 87 q 519 115 484 94 q 576 168 555 135 q 609 245 598 201 q 619 339 619 288 q 607 451 619 405 q 572 527 595 497 q 515 573 549 557 q 437 595 481 589 l 437 87 z "},"\u0445":{"ha":764,"x_min":47,"x_max":722,"o":"m 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 722 0 z "},"\u0446":{"ha":764,"x_min":103,"x_max":732,"o":"m 732 102 l 725 -174 l 618 -174 l 618 0 l 103 0 l 103 681 l 221 681 l 221 102 l 532 102 l 532 681 l 650 681 l 650 102 l 732 102 z "},"\u0447":{"ha":764,"x_min":92,"x_max":656,"o":"m 538 264 l 397 264 q 165 323 239 264 q 92 494 92 382 l 92 681 l 211 681 l 211 510 q 222 441 211 469 q 257 396 233 414 q 318 372 281 379 q 410 364 356 364 l 538 364 l 538 681 l 656 681 l 656 0 l 538 0 l 538 264 z "},"\u0448":{"ha":764,"x_min":61,"x_max":703,"o":"m 61 681 l 170 681 l 170 97 l 328 97 l 328 681 l 436 681 l 436 97 l 594 97 l 594 681 l 703 681 l 703 0 l 61 0 l 61 681 z "},"\u0449":{"ha":764,"x_min":52,"x_max":751,"o":"m 52 0 l 52 681 l 160 681 l 160 97 l 318 97 l 318 681 l 427 681 l 427 97 l 585 97 l 585 681 l 693 681 l 693 97 l 751 97 l 745 -174 l 640 -174 l 640 0 l 52 0 z "},"\u044a":{"ha":764,"x_min":24,"x_max":704,"o":"m 583 212 q 538 300 583 272 q 401 328 493 328 q 341 327 372 328 q 282 325 309 326 l 282 96 q 340 92 309 93 q 399 91 370 91 q 479 97 444 91 q 537 117 513 102 q 572 154 560 131 q 583 212 583 178 m 282 424 q 341 426 309 425 q 405 427 373 427 q 628 373 553 427 q 704 214 704 319 q 682 114 704 156 q 620 45 661 72 q 522 5 579 18 q 393 -8 465 -8 q 272 -5 330 -8 q 164 5 214 -2 l 164 582 l 24 582 l 24 681 l 282 681 l 282 424 z "},"\u044b":{"ha":764,"x_min":56,"x_max":708,"o":"m 591 0 l 591 681 l 708 681 l 708 0 l 591 0 m 395 209 q 361 292 395 262 q 254 321 328 321 q 214 321 235 321 q 172 319 194 320 l 172 95 q 214 91 194 92 q 253 90 233 90 q 321 99 294 90 q 365 125 349 109 q 388 163 380 142 q 395 209 395 185 m 172 418 q 218 419 197 418 q 262 419 239 419 q 374 404 326 419 q 454 361 422 389 q 501 295 486 334 q 517 212 517 257 q 498 117 517 158 q 446 48 480 76 q 363 6 412 20 q 246 -8 314 -8 q 154 -6 203 -8 q 56 4 106 -3 l 56 681 l 172 681 l 172 418 z "},"\u044c":{"ha":764,"x_min":113,"x_max":689,"o":"m 567 212 q 556 262 567 241 q 523 298 546 283 q 463 320 500 313 q 375 328 427 328 q 304 327 342 328 q 231 325 265 326 l 231 98 q 297 93 265 94 q 368 91 330 91 q 463 98 425 91 q 524 120 501 105 q 557 157 547 134 q 567 212 567 180 m 231 424 q 264 425 248 425 q 299 426 281 425 q 336 426 317 426 q 379 427 356 427 q 613 373 536 427 q 689 215 689 319 q 608 48 689 104 q 364 -8 528 -8 q 230 -5 290 -8 q 113 5 170 -2 l 113 681 l 231 681 l 231 424 z "},"\u044d":{"ha":764,"x_min":106,"x_max":676,"o":"m 550 393 q 527 483 545 441 q 477 549 508 524 q 402 585 446 574 q 309 596 358 596 q 203 585 254 596 q 106 553 152 574 l 106 659 q 210 685 156 676 q 321 693 264 693 q 476 670 409 693 q 587 603 543 647 q 654 493 631 558 q 676 345 676 429 q 653 190 676 257 q 583 77 629 123 q 469 10 536 32 q 315 -12 401 -12 q 204 -5 256 -12 q 106 20 152 3 l 106 129 q 205 95 154 106 q 310 85 256 85 q 486 140 427 85 q 553 300 545 195 l 146 300 l 146 393 l 550 393 z "},"\u044e":{"ha":764,"x_min":57,"x_max":737,"o":"m 292 393 q 311 529 296 473 q 355 622 326 586 q 425 676 383 659 q 521 693 466 693 q 624 672 583 693 q 690 609 665 652 q 726 500 715 566 q 737 345 737 435 q 683 75 737 161 q 507 -12 629 -12 q 401 9 443 -12 q 336 73 360 31 q 302 173 311 114 q 292 307 292 232 l 168 307 l 168 0 l 57 0 l 57 681 l 168 681 l 168 393 l 292 393 m 625 340 q 601 542 625 481 q 514 602 576 602 q 466 589 486 602 q 431 545 445 576 q 410 465 417 515 q 403 340 403 414 q 410 209 403 260 q 431 130 417 159 q 466 90 446 100 q 514 79 487 79 q 564 92 543 79 q 599 136 585 105 q 619 216 612 166 q 625 340 625 267 z "},"\u044f":{"ha":764,"x_min":58,"x_max":647,"o":"m 151 197 q 200 269 174 244 q 268 301 227 293 q 197 328 225 309 q 153 370 170 346 q 130 421 136 394 q 123 475 123 448 q 138 559 123 519 q 186 627 153 598 q 274 673 220 656 q 428 690 328 690 q 539 687 484 690 q 647 677 594 683 l 647 0 l 529 0 l 529 264 l 427 264 q 378 259 403 264 q 333 243 353 255 q 296 212 313 231 q 267 164 279 193 l 192 0 l 58 0 l 151 197 m 244 476 q 284 389 244 418 q 401 359 323 359 l 529 359 l 529 587 q 473 591 500 590 q 416 593 446 593 q 327 585 357 593 q 279 563 296 577 q 253 527 261 548 q 244 476 244 506 z "},"\u0453":{"ha":764,"x_min":0,"x_max":657,"o":"m 283 579 l 283 0 l 164 0 l 164 681 l 657 681 l 657 579 l 283 579 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0491":{"ha":764,"x_min":164,"x_max":657,"o":"m 574 856 l 657 856 l 657 579 l 283 579 l 283 0 l 164 0 l 164 681 l 566 681 l 574 856 z "},"\u0452":{"ha":764,"x_min":0,"x_max":671,"o":"m 440 868 l 440 772 l 227 772 l 227 653 l 222 542 q 274 595 248 572 q 326 632 299 618 q 381 654 352 647 q 443 661 410 661 q 539 642 497 661 q 611 575 582 623 q 655 447 640 528 q 671 244 671 366 l 671 243 q 662 40 671 125 q 636 -104 653 -45 q 593 -198 618 -162 q 536 -253 568 -234 q 466 -278 505 -272 q 383 -285 427 -285 l 383 -183 q 432 -179 410 -183 q 474 -162 455 -176 q 508 -121 493 -149 q 532 -47 522 -94 q 548 71 543 1 q 553 243 553 142 l 553 244 q 545 394 553 334 q 522 492 537 455 q 481 544 506 528 q 424 559 457 559 q 379 553 400 559 q 336 531 359 547 q 288 488 314 515 q 227 419 261 460 l 227 0 l 109 0 l 109 772 l 0 772 l 0 868 l 109 868 l 109 958 l 227 958 l 227 868 l 440 868 m 0 693 z "},"\u0454":{"ha":764,"x_min":107,"x_max":677,"o":"m 637 393 l 637 300 l 231 300 q 296 138 237 192 q 479 85 355 85 q 677 127 587 85 l 677 22 q 576 -4 629 5 q 468 -12 524 -12 q 195 74 283 -12 q 107 334 107 161 q 133 490 107 422 q 205 603 158 557 q 321 670 253 648 q 473 693 389 693 q 583 686 533 693 q 677 661 633 678 l 677 551 q 578 585 629 574 q 471 596 528 596 q 377 584 419 596 q 303 546 334 571 q 253 481 272 520 q 231 393 235 441 l 637 393 z "},"\u0455":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 z "},"\u0450":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\u0451":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u0456":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 z "},"\u0457":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u0458":{"ha":764,"x_min":89,"x_max":591,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 498 966 q 535 959 518 966 q 565 939 552 952 q 584 909 577 926 q 591 873 591 892 q 584 837 591 854 q 565 808 577 821 q 535 788 552 795 q 498 781 518 781 q 462 788 479 781 q 432 808 445 795 q 413 837 420 821 q 406 873 406 854 q 413 909 406 892 q 432 939 420 926 q 462 959 445 952 q 498 966 479 966 z "},"\u045d":{"ha":764,"x_min":0,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\u045c":{"ha":764,"x_min":0,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u0459":{"ha":764,"x_min":0,"x_max":758,"o":"m 640 210 q 635 251 640 231 q 616 291 631 272 q 576 318 602 309 q 517 326 551 326 q 484 326 498 326 q 449 323 469 325 l 449 92 q 483 87 469 88 q 515 86 496 86 q 576 96 552 86 q 614 121 600 105 q 634 160 629 138 q 640 210 640 183 m 449 419 q 487 421 469 420 q 525 422 505 422 q 631 407 587 422 q 703 363 675 391 q 745 296 732 335 q 758 212 758 258 q 698 50 758 109 q 521 -9 638 -9 q 431 -6 476 -9 q 338 4 386 -3 l 338 581 l 248 581 q 231 345 241 444 q 207 180 220 247 q 174 75 193 113 q 129 18 155 36 q 72 -2 104 -1 q 0 4 40 -4 l 5 103 q 43 106 26 101 q 73 131 60 111 q 95 190 85 151 q 113 293 105 228 q 128 453 121 357 q 142 681 135 548 l 449 681 l 449 419 z "},"\u045a":{"ha":764,"x_min":61,"x_max":758,"o":"m 640 210 q 634 258 640 236 q 613 294 628 279 q 575 317 599 309 q 517 326 551 326 q 484 325 498 326 q 449 323 469 324 l 449 93 q 483 89 469 90 q 515 87 496 87 q 578 98 554 87 q 616 124 602 108 q 635 163 630 141 q 640 210 640 186 m 338 681 l 449 681 l 449 419 q 487 421 469 420 q 525 422 505 422 q 631 407 587 422 q 703 364 675 392 q 745 298 732 336 q 758 212 758 259 q 698 50 758 109 q 521 -9 638 -9 q 431 -6 476 -9 q 338 4 386 -3 l 338 305 l 170 305 l 170 0 l 61 0 l 61 681 l 170 681 l 170 402 l 338 402 l 338 681 z "},"\u045b":{"ha":764,"x_min":0,"x_max":656,"o":"m 227 653 l 222 541 q 277 596 250 574 q 331 633 304 619 q 385 654 357 648 q 443 660 413 660 q 600 598 545 660 q 656 411 656 536 l 656 0 l 538 0 l 538 401 q 508 519 538 479 q 424 558 479 558 q 379 552 400 558 q 336 529 359 545 q 288 486 314 513 q 227 418 261 459 l 227 0 l 109 0 l 109 772 l 0 772 l 0 868 l 109 868 l 109 958 l 227 958 l 227 868 l 440 868 l 440 772 l 227 772 l 227 653 m 0 681 z "},"\u045e":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 590 943 q 575 872 590 903 q 532 819 559 841 q 466 785 505 797 q 380 774 427 774 q 288 785 326 774 q 224 819 249 797 q 188 872 199 841 q 176 943 176 903 l 283 943 q 288 907 283 924 q 304 877 293 890 q 334 856 315 863 q 382 848 353 848 q 430 856 411 848 q 461 877 450 863 q 477 907 473 890 q 482 943 482 924 l 590 943 m 0 681 z "},"\u045f":{"ha":764,"x_min":109,"x_max":655,"o":"m 433 -173 l 330 -173 l 325 0 l 109 0 l 109 681 l 227 681 l 227 104 l 537 104 l 537 681 l 655 681 l 655 0 l 439 0 l 433 -173 z "},"\u0463":{"ha":764,"x_min":24,"x_max":704,"o":"m 583 208 q 573 254 583 234 q 540 289 562 275 q 482 311 517 303 q 396 318 446 318 q 327 317 358 318 q 268 315 296 317 l 268 96 q 325 91 296 92 q 382 90 353 90 q 478 100 439 90 q 541 125 517 109 q 573 163 564 142 q 583 208 583 184 m 268 414 q 327 416 296 415 q 397 416 359 416 q 534 401 477 416 q 630 357 592 385 q 686 292 667 330 q 704 210 704 254 q 682 117 704 157 q 618 49 660 77 q 515 6 576 21 q 376 -8 454 -8 q 257 -5 313 -8 q 150 5 200 -2 l 150 582 l 24 582 l 24 681 l 150 681 l 150 868 l 268 899 l 268 681 l 574 681 l 574 582 l 268 582 l 268 414 z "},"\u0473":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 382 87 q 465 104 430 87 q 523 151 500 121 q 561 219 547 180 q 578 302 575 258 l 185 302 q 241 144 189 200 q 382 87 294 87 m 382 593 q 300 577 335 593 q 242 532 266 560 q 203 468 218 505 q 185 393 189 432 l 578 393 q 513 544 566 495 q 382 593 461 593 z "},"\u0475":{"ha":764,"x_min":45,"x_max":739,"o":"m 519 543 q 544 602 530 576 q 576 646 557 628 q 624 675 596 665 q 692 685 652 685 q 713 684 700 685 q 739 681 726 683 l 739 576 q 725 578 732 578 q 713 578 718 578 q 685 575 697 578 q 664 564 673 572 q 647 543 654 556 q 632 509 640 529 l 452 0 l 311 0 l 45 681 l 179 681 l 346 231 l 382 121 l 416 233 l 519 543 z "},"^":{"ha":764,"x_min":82,"x_max":688,"o":"m 688 453 l 570 453 l 374 793 l 189 453 l 82 453 l 330 886 l 427 886 l 688 453 z "},"~":{"ha":764,"x_min":43,"x_max":720,"o":"m 720 472 q 709 377 720 420 q 673 301 697 333 q 612 251 648 269 q 528 233 576 233 q 460 246 490 233 q 405 277 431 258 q 358 319 380 296 q 316 360 337 341 q 275 392 296 379 q 232 404 255 404 q 173 372 192 404 q 153 272 153 340 l 45 272 q 55 367 43 323 q 91 443 67 411 q 152 493 115 475 q 236 511 188 511 q 303 499 273 511 q 358 467 333 486 q 405 426 384 448 q 447 385 427 404 q 488 353 468 366 q 532 340 509 340 q 593 372 574 340 q 611 472 611 403 l 720 472 z "},"\xa6":{"ha":764,"x_min":326,"x_max":437,"o":"m 437 -278 l 326 -278 l 326 289 l 437 289 l 437 -278 m 326 561 l 326 1111 l 437 1111 l 437 561 l 326 561 z "},"\\\\":{"ha":764,"x_min":109,"x_max":686,"o":"m 686 -146 l 574 -146 l 109 958 l 221 958 l 686 -146 z "},"_":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 -278 l 0 -278 l 0 -180 l 764 -180 l 764 -278 z "},"\'":{"ha":764,"x_min":304,"x_max":460,"o":"m 460 958 l 440 640 l 323 640 l 304 958 l 460 958 z "},"\\"":{"ha":764,"x_min":175,"x_max":589,"o":"m 325 958 l 306 640 l 195 640 l 175 958 l 325 958 m 589 958 l 570 640 l 458 640 l 439 958 l 589 958 z "},"@":{"ha":764,"x_min":6,"x_max":754,"o":"m 529 277 q 522 205 523 233 q 526 160 522 176 q 540 137 530 144 q 564 131 549 131 q 600 151 583 131 q 630 213 616 171 q 651 318 643 254 q 659 469 659 382 q 646 644 659 567 q 608 774 634 720 q 539 856 581 827 q 436 884 496 884 q 347 860 390 884 q 267 794 304 837 q 200 693 230 752 q 148 562 170 633 q 115 407 127 490 q 103 235 103 324 q 169 -91 103 16 q 354 -199 235 -199 q 467 -185 414 -199 q 575 -143 519 -171 l 575 -231 q 464 -269 519 -256 q 347 -282 408 -282 q 91 -153 174 -282 q 7 233 8 -23 q 20 430 6 336 q 61 605 35 524 q 126 753 88 686 q 213 867 165 820 q 319 940 262 914 q 440 966 376 966 q 580 933 521 966 q 678 839 640 901 q 735 686 717 777 q 754 481 754 596 q 739 281 753 364 q 698 145 724 198 q 634 67 671 92 q 550 43 596 43 q 471 70 497 43 q 446 143 446 97 q 390 67 420 91 q 318 43 360 43 q 222 91 254 43 q 191 241 191 138 q 195 321 191 279 q 210 407 199 364 q 237 490 220 450 q 279 560 254 530 q 338 608 304 590 q 415 627 372 627 q 463 621 441 627 q 496 608 486 614 l 583 629 l 529 277 m 460 518 q 441 533 454 526 q 410 539 429 539 q 373 525 389 539 q 344 487 357 511 q 323 433 332 463 q 309 371 315 403 q 301 308 303 339 q 298 253 298 277 q 307 159 298 188 q 338 131 315 131 q 354 134 346 131 q 371 148 362 138 q 391 175 380 157 q 415 221 402 193 l 460 518 z "},"\xa9":{"ha":764,"x_min":8,"x_max":755,"o":"m 383 897 q 540 862 471 897 q 657 766 609 827 q 730 622 705 705 q 755 443 755 538 q 729 259 755 342 q 652 116 702 176 q 534 22 603 56 q 380 -11 465 -11 q 224 24 293 -11 q 107 120 155 59 q 34 264 59 181 q 8 443 8 347 q 35 627 8 543 q 111 770 62 710 q 230 864 161 830 q 383 897 298 897 m 382 808 q 270 782 321 808 q 184 708 220 756 q 128 593 148 661 q 109 443 109 526 q 128 299 109 366 q 183 183 147 232 q 269 106 218 134 q 382 78 319 78 q 494 104 444 78 q 581 178 545 130 q 636 293 616 226 q 655 443 655 360 q 636 587 655 520 q 582 703 617 654 q 495 780 546 752 q 382 808 444 808 m 522 239 q 404 216 466 216 q 203 439 203 216 q 217 534 203 492 q 259 607 232 576 q 323 653 286 637 q 408 669 361 669 q 522 648 471 669 l 522 557 q 473 577 498 570 q 422 584 448 584 q 336 547 367 584 q 306 441 306 510 q 336 335 306 369 q 424 302 366 302 q 522 327 475 302 l 522 239 z "},"\u2117":{"ha":764,"x_min":8,"x_max":755,"o":"m 383 897 q 540 862 471 897 q 657 766 609 827 q 730 622 705 705 q 755 443 755 538 q 729 259 755 342 q 652 116 702 176 q 534 22 603 56 q 380 -11 465 -11 q 224 24 293 -11 q 107 120 155 59 q 34 264 59 181 q 8 443 8 347 q 35 627 8 543 q 111 770 62 710 q 230 864 161 830 q 383 897 298 897 m 382 808 q 270 782 321 808 q 184 708 220 756 q 128 593 148 661 q 109 443 109 526 q 128 299 109 366 q 183 183 147 232 q 269 106 218 134 q 382 78 319 78 q 494 104 444 78 q 580 178 544 130 q 635 293 616 226 q 655 443 655 360 q 636 587 655 520 q 581 703 616 654 q 495 780 545 752 q 382 808 444 808 m 574 524 q 562 467 574 495 q 525 416 550 439 q 461 380 500 394 q 370 367 422 367 l 339 367 l 339 221 l 241 221 l 241 665 l 380 665 q 453 657 418 665 q 515 633 488 650 q 558 589 542 616 q 574 524 574 562 m 471 518 q 447 572 471 555 q 380 589 423 589 l 339 589 l 339 443 l 375 443 q 446 461 422 443 q 471 518 471 479 z "},"\xae":{"ha":764,"x_min":72,"x_max":692,"o":"m 450 481 l 400 595 q 381 618 393 610 q 351 627 369 627 l 338 627 l 338 481 l 269 481 l 269 833 l 375 833 q 470 812 435 833 q 505 736 505 790 q 483 675 505 697 q 428 648 461 654 q 451 633 440 645 q 473 599 462 622 l 529 481 l 450 481 m 435 729 q 418 766 435 755 q 368 778 401 778 l 338 778 l 338 679 l 366 679 q 416 691 397 679 q 435 729 435 704 m 382 897 q 291 878 334 897 q 217 827 249 859 q 168 750 186 794 q 150 657 150 707 q 168 563 150 607 q 217 487 186 519 q 291 435 249 454 q 382 416 334 416 q 473 435 431 416 q 546 487 515 454 q 596 563 578 519 q 614 657 614 607 q 596 750 614 707 q 546 827 578 794 q 473 878 515 859 q 382 897 431 897 m 382 966 q 502 942 446 966 q 601 876 559 918 q 667 778 643 834 q 692 657 692 721 q 667 536 692 593 q 601 438 643 480 q 502 372 559 396 q 382 347 446 347 q 261 372 317 347 q 163 438 205 396 q 96 536 121 480 q 72 657 72 593 q 96 778 72 721 q 163 876 121 834 q 261 942 205 918 q 382 966 317 966 z "},"\u2122":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 528 l 665 528 l 640 721 l 632 779 l 619 728 l 564 528 l 476 528 l 422 732 l 410 779 l 408 741 l 379 528 l 300 528 l 351 886 l 458 886 l 513 693 l 525 635 l 536 686 l 595 886 l 703 886 l 757 528 m 282 815 l 192 815 l 192 528 l 100 528 l 100 815 l 7 815 l 7 886 l 282 886 l 282 815 z "},"\u212e":{"ha":764,"x_min":17,"x_max":746,"o":"m 599 494 q 382 595 524 595 q 170 494 240 595 l 170 335 l 599 335 l 599 494 m 170 121 q 387 26 252 26 q 603 122 524 26 l 696 122 q 380 -12 587 -12 q 124 77 231 -12 q 17 311 17 165 q 124 545 17 457 q 387 633 231 633 q 646 542 546 633 q 746 294 746 450 l 170 294 l 170 121 z "},"\xa4":{"ha":764,"x_min":58,"x_max":705,"o":"m 501 197 q 444 175 475 182 q 376 167 413 167 q 256 192 307 167 l 160 41 l 58 103 l 176 258 q 139 339 153 293 q 126 444 126 386 q 140 544 126 497 q 182 629 155 591 l 58 794 l 163 856 l 262 700 q 319 723 288 715 q 387 730 351 730 q 509 705 456 730 l 604 856 l 705 794 l 587 639 q 624 558 611 604 q 637 453 637 511 q 623 353 637 400 q 582 268 609 306 l 705 103 l 602 41 l 501 197 m 515 449 q 479 582 515 538 q 382 627 444 627 q 321 611 347 627 q 280 569 296 595 q 256 512 263 544 q 248 449 248 480 q 284 315 248 360 q 382 271 320 271 q 443 287 417 271 q 484 329 468 303 q 508 386 500 354 q 515 449 515 418 z "},"\u20ac":{"ha":764,"x_min":35,"x_max":679,"o":"m 271 286 q 346 141 292 189 q 493 93 400 93 q 590 106 543 93 q 679 143 636 119 l 679 32 q 583 -1 632 10 q 481 -12 534 -12 q 253 62 338 -12 q 143 286 169 137 l 35 286 l 35 378 l 132 378 q 131 404 131 391 q 131 433 131 417 q 132 466 131 450 q 134 499 132 483 l 35 499 l 35 591 l 147 591 q 193 720 163 663 q 267 816 224 777 q 366 877 311 856 q 488 899 421 899 q 588 888 542 899 q 679 856 635 877 l 679 740 q 590 780 636 766 q 490 793 545 793 q 352 742 406 793 q 272 591 298 690 l 545 591 l 545 499 l 258 499 q 256 470 257 485 q 256 441 256 456 q 256 409 256 424 q 257 378 257 394 l 545 378 l 545 286 l 271 286 z "},"$":{"ha":764,"x_min":75,"x_max":681,"o":"m 401 1014 l 500 1014 l 482 882 q 553 873 517 878 q 619 860 589 867 l 619 755 q 544 772 582 765 q 469 782 506 779 l 431 492 q 521 453 476 474 q 601 405 566 433 q 659 338 637 376 q 681 245 681 299 q 658 144 681 189 q 593 70 635 100 q 494 22 552 39 q 366 1 435 5 l 343 -160 l 244 -160 l 267 1 q 162 13 212 5 q 75 31 112 21 l 75 143 q 169 119 118 128 q 281 106 219 109 l 321 411 q 234 448 277 428 q 158 495 191 467 q 103 559 124 522 q 82 648 82 597 q 100 731 82 690 q 155 805 117 772 q 249 860 192 838 q 385 885 306 881 l 401 1014 m 371 783 q 247 744 286 776 q 208 661 208 711 q 240 584 208 614 q 336 529 273 554 l 371 783 m 379 106 q 512 146 471 113 q 554 239 554 180 q 545 282 554 263 q 519 317 536 302 q 475 347 501 333 q 414 374 449 360 l 379 106 z "},"\xa2":{"ha":764,"x_min":85,"x_max":615,"o":"m 435 215 q 528 225 483 215 q 615 256 572 235 l 615 149 q 422 115 524 115 l 383 -170 l 285 -170 l 323 123 q 146 228 208 147 q 85 446 85 309 q 109 584 85 522 q 176 690 132 646 q 279 761 219 735 q 412 789 340 786 l 441 1014 l 542 1014 l 511 783 q 564 773 538 780 q 615 758 590 767 l 615 647 q 557 670 587 661 q 498 685 528 680 l 435 215 m 399 688 q 324 664 359 682 q 263 616 289 646 q 223 545 237 586 q 208 452 208 503 q 242 308 208 363 q 338 229 276 252 l 399 688 z "},"\xa3":{"ha":764,"x_min":62,"x_max":682,"o":"m 587 490 l 587 393 l 292 393 l 292 100 l 676 100 l 676 0 l 62 0 l 62 100 l 171 100 l 171 393 l 62 393 l 62 490 l 171 490 l 171 612 q 191 733 171 680 q 248 823 211 787 q 337 879 285 860 q 456 899 390 899 q 585 873 528 899 q 682 810 642 848 l 616 735 q 581 762 599 750 q 544 782 564 774 q 503 794 525 790 q 453 798 480 798 q 387 787 416 798 q 336 753 357 775 q 303 697 315 730 q 292 621 292 665 l 292 490 l 587 490 z "},"\u0192":{"ha":764,"x_min":29,"x_max":696,"o":"m 415 431 l 372 118 q 349 0 363 52 q 308 -86 335 -51 q 236 -140 280 -121 q 122 -158 191 -158 q 76 -155 99 -158 q 29 -147 53 -153 l 29 -50 q 73 -55 50 -53 q 123 -56 96 -56 q 207 -21 179 -56 q 244 81 235 15 l 292 431 l 94 431 l 94 528 l 304 528 l 329 713 q 409 902 347 840 q 586 965 471 965 q 642 962 612 965 q 696 956 672 959 l 696 850 q 646 860 674 856 q 589 863 617 863 q 495 828 527 863 q 454 724 464 793 l 428 528 l 652 528 l 652 431 l 415 431 z "},"\xa5":{"ha":764,"x_min":37,"x_max":730,"o":"m 730 886 l 443 408 l 443 389 l 652 389 l 652 297 l 443 297 l 443 187 l 652 187 l 652 96 l 443 96 l 443 0 l 321 0 l 321 96 l 113 96 l 113 187 l 321 187 l 321 297 l 111 297 l 111 389 l 321 389 l 321 408 l 37 886 l 176 886 l 318 637 l 386 510 l 458 640 l 597 886 l 730 886 z "},"\xaa":{"ha":764,"x_min":153,"x_max":611,"o":"m 611 243 l 153 243 l 153 335 l 611 335 l 611 243 m 479 428 l 472 490 q 402 438 441 458 q 311 418 364 418 q 205 453 244 418 q 165 557 165 488 q 222 663 165 623 q 392 703 278 703 l 463 703 l 463 736 q 439 791 463 770 q 359 812 416 812 q 285 803 326 812 q 201 777 243 793 l 201 867 q 281 888 236 880 q 372 896 326 896 q 463 885 425 896 q 524 854 500 874 q 558 805 547 833 q 570 741 570 776 l 570 428 l 479 428 m 463 629 l 382 629 q 334 624 354 629 q 302 609 315 618 q 284 586 290 599 q 278 559 278 574 q 294 516 278 531 q 343 501 311 501 q 400 516 370 501 q 463 561 430 532 l 463 629 z "},"\xba":{"ha":764,"x_min":150,"x_max":614,"o":"m 611 243 l 153 243 l 153 335 l 611 335 l 611 243 m 614 661 q 598 566 614 610 q 551 489 582 522 q 477 437 521 456 q 378 418 433 418 q 282 433 325 418 q 211 477 240 448 q 165 551 181 507 q 150 654 150 595 q 166 750 150 706 q 213 827 182 794 q 288 878 243 859 q 389 896 332 896 q 483 881 441 896 q 554 837 525 866 q 598 763 583 807 q 614 661 614 719 m 503 659 q 472 768 503 732 q 382 804 441 804 q 329 792 351 804 q 291 761 307 781 q 269 714 276 741 q 261 657 261 687 q 294 547 261 583 q 382 510 327 510 q 435 521 412 510 q 472 552 457 532 q 495 600 488 572 q 503 659 503 627 z "},"\u2116":{"ha":764,"x_min":25,"x_max":755,"o":"m 407 0 l 317 0 l 115 602 l 115 0 l 25 0 l 25 886 l 115 886 l 317 285 l 317 886 l 407 886 l 407 0 m 750 367 l 498 367 l 498 443 l 750 443 l 750 367 m 755 710 q 746 633 755 669 q 719 570 737 597 q 675 528 701 543 q 616 513 650 513 q 519 560 553 513 q 485 704 485 607 q 494 782 485 746 q 522 843 504 817 q 565 884 539 869 q 623 899 590 899 q 721 851 686 899 q 755 710 755 803 m 669 708 q 656 792 669 764 q 619 821 643 821 q 584 789 596 821 q 571 707 571 758 q 584 621 571 652 q 619 591 596 591 q 656 622 643 591 q 669 708 669 653 z "},"#":{"ha":764,"x_min":29,"x_max":734,"o":"m 699 249 l 547 249 l 522 0 l 422 0 l 447 249 l 274 249 l 249 0 l 149 0 l 174 249 l 29 249 l 29 337 l 182 337 l 207 574 l 64 574 l 64 663 l 216 663 l 239 886 l 338 886 l 315 663 l 489 663 l 512 886 l 612 886 l 589 663 l 734 663 l 734 574 l 580 574 l 556 337 l 699 337 l 699 249 m 456 337 l 480 574 l 307 574 l 283 337 l 456 337 z "},"\u2070":{"ha":764,"x_min":139,"x_max":625,"o":"m 625 697 q 607 577 625 629 q 556 489 589 525 q 478 435 524 454 q 375 417 432 417 q 282 432 325 417 q 207 480 239 448 q 157 565 175 513 q 139 689 139 616 q 157 809 139 757 q 207 898 174 862 q 286 951 239 933 q 389 970 332 970 q 482 955 439 970 q 556 906 525 939 q 606 822 588 873 q 625 697 625 770 m 504 693 q 494 783 504 748 q 467 839 484 819 q 428 867 450 859 q 382 875 406 875 q 334 865 356 875 q 295 832 312 854 q 269 776 279 810 q 260 693 260 742 q 270 603 260 638 q 296 547 279 568 q 335 519 313 527 q 382 511 357 511 q 430 522 408 511 q 469 554 452 532 q 494 611 485 576 q 504 693 504 645 z "},"\xb9":{"ha":764,"x_min":154,"x_max":596,"o":"m 596 428 l 180 428 l 180 526 l 342 526 l 342 843 l 193 770 l 154 859 l 366 964 l 460 964 l 460 526 l 596 526 l 596 428 z "},"\xb2":{"ha":764,"x_min":167,"x_max":599,"o":"m 167 428 l 167 525 l 314 639 q 378 691 353 669 q 417 730 403 713 q 436 763 431 747 q 441 796 441 778 q 419 848 441 827 q 351 868 396 868 q 286 856 317 868 q 229 821 254 843 l 171 893 q 258 950 208 930 q 366 970 309 970 q 445 959 408 970 q 509 928 482 949 q 551 876 536 907 q 567 804 567 845 q 557 745 567 772 q 529 691 548 717 q 481 640 509 665 q 415 588 452 614 l 338 532 l 599 532 l 599 428 l 167 428 z "},"\xb3":{"ha":764,"x_min":186,"x_max":585,"o":"m 585 589 q 568 519 585 551 q 518 465 551 488 q 435 430 485 442 q 321 417 386 417 q 281 418 301 417 q 244 420 262 418 q 212 423 227 421 q 186 428 197 425 l 186 523 q 247 515 209 517 q 325 512 284 512 q 423 531 387 512 q 460 586 460 551 q 453 615 460 602 q 430 638 446 629 q 388 652 414 647 q 322 657 361 657 l 267 657 l 267 745 l 318 745 q 374 750 351 745 q 410 766 396 756 q 429 789 423 776 q 435 817 435 802 q 430 840 435 829 q 414 858 425 850 q 385 870 404 866 q 339 875 366 875 q 265 869 302 875 q 197 853 228 863 l 197 949 q 234 957 214 954 q 275 964 254 961 q 318 968 296 966 q 361 970 340 970 q 509 933 461 970 q 557 838 557 897 q 534 759 557 789 q 472 711 512 729 q 518 694 498 705 q 554 670 539 684 q 577 635 569 655 q 585 589 585 616 z "},"\u2074":{"ha":764,"x_min":143,"x_max":624,"o":"m 624 526 l 532 526 l 532 428 l 422 428 l 422 526 l 143 526 l 143 624 l 376 958 l 532 958 l 532 628 l 624 628 l 624 526 m 425 864 l 261 628 l 425 628 l 425 864 z "},"\u2075":{"ha":764,"x_min":199,"x_max":587,"o":"m 587 596 q 568 519 587 552 q 514 463 549 486 q 431 429 479 440 q 325 417 382 417 q 267 420 300 417 q 199 429 234 424 l 199 528 q 265 517 232 522 q 330 513 298 513 q 433 533 400 513 q 467 591 467 554 q 459 624 467 610 q 435 645 452 637 q 392 656 418 653 q 328 660 366 660 l 210 660 l 210 958 l 558 958 l 558 854 l 315 854 l 315 751 l 363 751 q 451 745 410 751 q 522 723 492 739 q 570 675 552 706 q 587 596 587 645 z "},"\u2076":{"ha":764,"x_min":161,"x_max":602,"o":"m 602 595 q 585 519 602 553 q 539 464 568 486 q 469 429 509 441 q 379 417 428 417 q 217 475 272 417 q 161 654 161 534 q 176 779 161 723 q 227 875 191 836 q 321 937 262 915 q 468 958 380 958 l 547 958 l 547 863 l 460 863 q 381 855 413 863 q 330 832 350 847 q 300 797 310 818 q 288 749 290 775 l 288 742 q 337 753 307 748 q 400 758 368 758 q 551 716 500 758 q 602 595 602 674 m 484 591 q 460 644 484 623 q 385 665 436 665 q 356 664 371 665 q 328 660 342 662 q 303 654 315 657 q 283 648 292 650 q 309 544 283 574 q 386 513 334 513 q 458 535 432 513 q 484 591 484 557 z "},"\u2077":{"ha":764,"x_min":174,"x_max":586,"o":"m 586 868 l 353 428 l 224 428 l 456 854 l 174 854 l 174 958 l 586 958 l 586 868 z "},"\u2078":{"ha":764,"x_min":171,"x_max":593,"o":"m 593 568 q 576 502 593 530 q 532 454 560 473 q 464 426 503 435 q 379 417 425 417 q 224 453 277 417 q 171 557 171 489 q 180 604 171 583 q 204 642 189 625 q 238 672 219 659 q 279 696 258 685 q 242 717 260 705 q 211 744 224 728 q 189 780 197 760 q 180 827 180 800 q 193 883 180 857 q 232 929 206 909 q 295 959 257 948 q 385 970 334 970 q 531 935 479 970 q 583 838 583 901 q 556 762 583 793 q 486 709 529 730 q 529 686 509 699 q 563 656 549 673 q 585 618 577 640 q 593 568 593 596 m 475 833 q 382 884 475 884 q 313 871 337 884 q 289 833 289 859 q 297 807 289 819 q 319 785 304 795 q 352 766 333 774 q 395 749 372 757 q 453 784 431 764 q 475 833 475 805 m 482 564 q 473 594 482 581 q 447 618 463 608 q 411 636 431 628 q 368 653 390 645 q 335 637 351 646 q 307 618 319 629 q 289 594 296 607 q 282 564 282 581 q 309 519 282 534 q 382 505 335 505 q 421 508 403 505 q 453 518 440 511 q 474 536 467 525 q 482 564 482 548 z "},"\u2079":{"ha":764,"x_min":158,"x_max":599,"o":"m 599 726 q 572 571 599 630 q 501 481 545 513 q 399 438 456 449 q 282 428 342 428 l 197 428 l 197 525 l 296 525 q 376 532 344 525 q 429 553 408 539 q 459 589 449 568 q 472 637 469 610 l 473 643 q 450 637 463 640 q 421 632 436 634 q 390 629 406 630 q 359 628 374 628 q 284 635 321 628 q 220 661 248 642 q 175 711 192 680 q 158 792 158 743 q 175 866 158 833 q 221 922 191 899 q 291 958 250 945 q 379 970 331 970 q 468 959 427 970 q 537 920 508 947 q 583 845 566 892 q 599 726 599 798 m 374 873 q 302 851 327 873 q 277 796 277 829 q 284 762 277 776 q 305 740 292 748 q 336 727 318 731 q 376 724 355 724 q 401 725 387 724 q 430 729 416 726 q 457 734 444 731 q 476 742 469 738 q 472 794 476 770 q 456 836 467 818 q 424 863 444 853 q 374 873 404 873 z "},"\u207a":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 643 l 440 643 l 440 450 l 323 450 l 323 643 l 113 643 l 113 746 l 323 746 l 323 938 l 440 938 l 440 746 l 652 746 l 652 643 z "},"\u207b":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 643 l 113 643 l 113 746 l 652 746 l 652 643 z "},"\u207c":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 756 l 113 756 l 113 856 l 652 856 l 652 756 m 652 521 l 113 521 l 113 621 l 652 621 l 652 521 z "},"\u207d":{"ha":764,"x_min":233,"x_max":603,"o":"m 546 254 q 409 334 468 286 q 312 440 351 382 q 253 562 273 498 q 233 690 233 626 q 250 811 233 749 q 303 932 266 873 q 400 1043 340 991 q 547 1132 460 1095 l 602 1044 q 489 979 536 1017 q 412 896 442 941 q 368 800 382 851 q 354 696 354 749 q 369 585 354 637 q 415 487 384 532 q 492 405 446 441 q 603 342 539 368 l 546 254 z "},"\u207e":{"ha":764,"x_min":161,"x_max":530,"o":"m 218 1132 q 355 1053 296 1101 q 453 946 414 1004 q 511 824 492 888 q 530 696 530 760 q 514 575 530 637 q 460 454 498 513 q 363 343 423 395 q 216 254 304 292 l 163 342 q 275 407 229 370 q 352 490 322 445 q 396 586 382 535 q 410 690 410 637 q 395 802 410 749 q 349 900 380 854 q 271 982 318 945 q 161 1044 224 1019 l 218 1132 z "},"\u2080":{"ha":764,"x_min":139,"x_max":625,"o":"m 625 123 q 607 3 625 56 q 556 -84 589 -49 q 478 -138 524 -120 q 375 -157 432 -157 q 282 -141 325 -157 q 207 -93 239 -126 q 157 -9 175 -60 q 139 115 139 43 q 157 236 139 183 q 207 324 174 288 q 286 378 239 359 q 389 396 332 396 q 482 381 439 396 q 556 333 525 366 q 606 248 588 300 q 625 123 625 197 m 504 119 q 494 210 504 174 q 467 265 484 245 q 428 293 450 286 q 382 301 406 301 q 334 291 356 301 q 295 259 312 281 q 269 202 279 237 q 260 119 260 168 q 270 29 260 64 q 296 -26 279 -6 q 335 -55 313 -47 q 382 -62 357 -62 q 430 -52 408 -62 q 469 -19 452 -41 q 494 37 485 3 q 504 119 504 71 z "},"\u2081":{"ha":764,"x_min":154,"x_max":596,"o":"m 596 -146 l 180 -146 l 180 -47 l 342 -47 l 342 269 l 193 196 l 154 285 l 366 391 l 460 391 l 460 -47 l 596 -47 l 596 -146 z "},"\u2082":{"ha":764,"x_min":167,"x_max":599,"o":"m 167 -146 l 167 -49 l 314 65 q 378 117 353 96 q 417 156 403 139 q 436 189 431 174 q 441 222 441 204 q 419 274 441 254 q 351 294 396 294 q 286 282 317 294 q 229 248 254 269 l 171 319 q 258 376 208 356 q 366 396 309 396 q 445 386 408 396 q 509 354 482 375 q 551 302 536 333 q 567 231 567 271 q 557 171 567 199 q 529 117 548 143 q 481 66 509 91 q 415 14 452 41 l 338 -41 l 599 -41 l 599 -146 l 167 -146 z "},"\u2083":{"ha":764,"x_min":186,"x_max":585,"o":"m 585 16 q 568 -54 585 -22 q 518 -109 551 -86 q 435 -144 485 -132 q 321 -157 386 -157 q 281 -156 301 -157 q 244 -154 262 -155 q 212 -151 227 -153 q 186 -146 197 -149 l 186 -51 q 247 -59 209 -56 q 325 -62 284 -62 q 423 -42 387 -62 q 460 12 460 -23 q 453 42 460 28 q 430 64 446 55 q 388 78 414 73 q 322 83 361 83 l 267 83 l 267 171 l 318 171 q 374 177 351 171 q 410 192 396 182 q 429 215 423 202 q 435 243 435 229 q 430 266 435 256 q 414 284 425 277 q 385 297 404 292 q 339 301 366 301 q 265 295 302 301 q 197 279 228 289 l 197 375 q 234 384 214 380 q 275 390 254 387 q 318 394 296 393 q 361 396 340 396 q 509 360 461 396 q 557 264 557 323 q 534 185 557 216 q 472 138 512 155 q 518 121 498 131 q 554 96 539 111 q 577 62 569 81 q 585 16 585 42 z "},"\u2084":{"ha":764,"x_min":143,"x_max":624,"o":"m 624 -47 l 532 -47 l 532 -146 l 422 -146 l 422 -47 l 143 -47 l 143 50 l 376 385 l 532 385 l 532 54 l 624 54 l 624 -47 m 425 290 l 261 54 l 425 54 l 425 290 z "},"\u2085":{"ha":764,"x_min":199,"x_max":587,"o":"m 587 22 q 568 -55 587 -22 q 514 -111 549 -88 q 431 -145 479 -134 q 325 -157 382 -157 q 267 -153 300 -157 q 199 -144 234 -150 l 199 -46 q 265 -57 232 -52 q 330 -61 298 -61 q 433 -40 400 -61 q 467 17 467 -20 q 459 50 467 37 q 435 71 452 63 q 392 83 418 79 q 328 86 366 86 l 210 86 l 210 385 l 558 385 l 558 281 l 315 281 l 315 178 l 363 178 q 451 172 410 178 q 522 149 492 165 q 570 102 552 132 q 587 22 587 71 z "},"\u2086":{"ha":764,"x_min":161,"x_max":602,"o":"m 602 21 q 585 -54 602 -21 q 539 -110 568 -87 q 469 -145 509 -133 q 379 -157 428 -157 q 217 -98 272 -157 q 161 81 161 -40 q 176 205 161 149 q 227 301 191 262 q 321 363 262 341 q 468 385 380 385 l 547 385 l 547 289 l 460 289 q 381 281 413 289 q 330 259 350 273 q 300 223 310 244 q 288 175 290 201 l 288 168 q 337 179 307 174 q 400 184 368 184 q 551 142 500 184 q 602 21 602 100 m 484 17 q 460 71 484 50 q 385 92 436 92 q 356 90 371 92 q 328 86 342 88 q 303 80 315 83 q 283 74 292 77 q 309 -30 283 1 q 386 -61 334 -61 q 458 -39 432 -61 q 484 17 484 -17 z "},"\u2087":{"ha":764,"x_min":174,"x_max":586,"o":"m 586 294 l 353 -146 l 224 -146 l 456 281 l 174 281 l 174 385 l 586 385 l 586 294 z "},"\u2088":{"ha":764,"x_min":171,"x_max":593,"o":"m 593 -5 q 576 -72 593 -43 q 532 -119 560 -100 q 464 -148 503 -138 q 379 -157 425 -157 q 224 -121 277 -157 q 171 -17 171 -85 q 180 31 171 9 q 204 68 189 52 q 238 98 219 85 q 279 122 258 111 q 242 143 260 132 q 211 170 224 155 q 189 206 197 186 q 180 253 180 227 q 193 310 180 283 q 232 355 206 336 q 295 385 257 374 q 385 396 334 396 q 531 361 479 396 q 583 264 583 327 q 556 188 583 219 q 486 135 529 157 q 529 112 509 125 q 563 82 549 99 q 585 44 577 66 q 593 -5 593 22 m 475 260 q 382 310 475 310 q 313 297 337 310 q 289 260 289 285 q 297 233 289 245 q 319 211 304 221 q 352 192 333 201 q 395 175 372 183 q 453 211 431 190 q 475 260 475 231 m 482 -9 q 473 21 482 7 q 447 44 463 34 q 411 63 431 54 q 368 79 390 71 q 335 63 351 72 q 307 44 319 55 q 289 20 296 33 q 282 -9 282 7 q 309 -55 282 -40 q 382 -69 335 -69 q 421 -66 403 -69 q 453 -56 440 -63 q 474 -37 467 -49 q 482 -9 482 -26 z "},"\u2089":{"ha":764,"x_min":158,"x_max":599,"o":"m 599 153 q 572 -2 599 56 q 501 -93 545 -61 q 399 -135 456 -125 q 282 -146 342 -146 l 197 -146 l 197 -49 l 296 -49 q 376 -42 344 -49 q 429 -20 408 -35 q 459 15 449 -6 q 472 64 469 36 l 473 69 q 450 63 463 66 q 421 58 436 60 q 390 55 406 56 q 359 54 374 54 q 284 61 321 54 q 220 87 248 68 q 175 138 192 106 q 158 218 158 170 q 175 293 158 260 q 221 349 191 326 q 291 384 250 372 q 379 396 331 396 q 468 385 427 396 q 537 346 508 374 q 583 271 566 318 q 599 153 599 224 m 374 300 q 302 278 327 300 q 277 222 277 256 q 284 188 277 202 q 305 166 292 174 q 336 154 318 157 q 376 150 355 150 q 401 151 387 150 q 430 155 416 153 q 457 161 444 157 q 476 168 469 164 q 472 220 476 196 q 456 262 467 244 q 424 290 444 279 q 374 300 404 300 z "},"\u208a":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 69 l 440 69 l 440 -123 l 323 -123 l 323 69 l 113 69 l 113 172 l 323 172 l 323 364 l 440 364 l 440 172 l 652 172 l 652 69 z "},"\u208b":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 69 l 113 69 l 113 172 l 652 172 l 652 69 z "},"\u208c":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 182 l 113 182 l 113 282 l 652 282 l 652 182 m 652 -53 l 113 -53 l 113 47 l 652 47 l 652 -53 z "},"\u208d":{"ha":764,"x_min":233,"x_max":603,"o":"m 546 -319 q 409 -240 468 -288 q 312 -134 351 -192 q 253 -12 273 -76 q 233 117 233 52 q 250 238 233 176 q 303 359 266 300 q 400 469 340 418 q 547 558 460 521 l 602 471 q 489 405 536 443 q 412 322 442 368 q 368 227 382 277 q 354 122 354 176 q 369 11 354 64 q 415 -87 384 -42 q 492 -169 446 -132 q 603 -232 539 -206 l 546 -319 z "},"\u208e":{"ha":764,"x_min":161,"x_max":530,"o":"m 218 558 q 355 479 296 527 q 453 373 414 431 q 511 250 492 315 q 530 122 530 186 q 514 1 530 63 q 460 -120 498 -61 q 363 -231 423 -179 q 216 -319 304 -282 l 163 -232 q 275 -166 229 -204 q 352 -84 322 -129 q 396 12 382 -39 q 410 117 410 63 q 395 228 410 175 q 349 326 380 281 q 271 408 318 371 q 161 471 224 445 l 218 558 z "},"\u2044":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 z "},"\xbc":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 167 572 l 167 861 l 54 800 l 17 879 l 179 966 l 273 966 l 273 572 l 167 572 m 730 74 l 669 74 l 669 0 l 566 0 l 566 74 l 363 74 l 363 157 l 511 386 l 669 386 l 669 157 l 730 157 l 730 74 m 566 310 l 467 157 l 566 157 l 566 310 z "},"\xbd":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 732 0 l 433 0 l 433 85 l 559 184 q 603 225 591 208 q 614 262 614 243 q 611 281 614 273 q 603 297 609 290 q 586 309 597 304 q 559 313 576 313 q 519 303 538 313 q 475 272 500 294 l 429 340 q 460 364 444 353 q 493 381 475 374 q 530 392 510 389 q 574 396 550 396 q 630 388 604 396 q 676 363 656 379 q 708 322 696 347 q 720 267 720 298 q 713 228 720 246 q 693 192 707 210 q 657 155 679 174 q 603 114 635 136 l 561 85 l 732 85 l 732 0 m 167 572 l 167 861 l 54 800 l 17 879 l 179 966 l 273 966 l 273 572 l 167 572 z "},"\xbe":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 730 74 l 669 74 l 669 0 l 566 0 l 566 74 l 363 74 l 363 157 l 511 386 l 669 386 l 669 157 l 730 157 l 730 74 m 566 310 l 467 157 l 566 157 l 566 310 m 332 693 q 319 641 332 665 q 283 600 307 617 q 223 572 259 582 q 140 562 188 562 q 98 565 119 562 q 58 571 76 567 l 58 652 q 95 646 74 648 q 135 644 115 644 q 196 657 178 644 q 214 690 214 669 q 197 723 214 713 q 144 732 181 732 l 83 732 l 83 808 l 140 808 q 184 820 172 808 q 196 850 196 832 q 183 877 196 865 q 140 888 171 888 q 101 884 119 888 q 65 876 83 880 l 65 953 q 114 964 88 961 q 170 968 139 968 q 273 942 237 968 q 309 872 309 916 q 296 815 309 837 q 254 782 283 793 q 312 752 292 774 q 332 693 332 730 z "},"%":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 389 768 q 376 687 389 724 q 339 622 363 649 q 280 578 315 594 q 204 562 246 562 q 130 575 163 562 q 74 613 97 588 q 38 676 50 639 q 25 762 25 713 q 38 843 25 806 q 75 909 51 881 q 133 952 99 937 q 210 968 168 968 q 284 955 251 968 q 340 917 317 942 q 376 854 363 892 q 389 768 389 817 m 289 765 q 267 853 289 825 q 207 882 245 882 q 172 873 187 882 q 146 848 157 864 q 130 811 136 833 q 125 765 125 790 q 146 677 125 705 q 207 648 168 648 q 242 657 227 648 q 268 682 257 666 q 283 719 278 697 q 289 765 289 740 m 739 196 q 726 115 739 152 q 689 50 713 77 q 630 6 665 22 q 554 -9 596 -9 q 480 3 513 -9 q 424 41 447 16 q 388 104 400 66 q 375 191 375 142 q 388 272 375 234 q 425 337 401 309 q 483 380 449 365 q 559 396 517 396 q 634 383 601 396 q 691 345 667 370 q 727 282 714 319 q 739 196 739 245 m 640 193 q 617 281 640 253 q 557 310 595 310 q 522 301 537 310 q 496 277 507 292 q 480 240 486 261 q 475 193 475 218 q 496 105 475 134 q 557 77 518 77 q 592 85 576 77 q 618 110 607 94 q 634 147 629 125 q 640 193 640 168 z "},"\u2030":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 618 l 0 359 l 0 459 l 764 718 l 764 618 m 378 182 q 366 103 378 139 q 332 42 354 68 q 279 2 310 16 q 211 -12 248 -12 q 145 -1 174 -12 q 94 34 115 11 q 62 93 73 58 q 50 176 50 128 q 62 255 50 219 q 96 316 74 290 q 149 357 118 342 q 216 371 179 371 q 283 359 253 371 q 334 325 313 348 q 366 266 355 301 q 378 182 378 230 m 283 179 q 266 262 283 236 q 214 288 248 288 q 162 257 180 288 q 144 179 144 226 q 162 97 144 123 q 214 71 180 71 q 266 101 248 71 q 283 179 283 132 m 345 778 q 333 700 345 735 q 299 638 321 664 q 246 597 277 612 q 178 583 215 583 q 112 595 141 583 q 61 630 82 606 q 28 689 40 653 q 17 772 17 724 q 29 851 17 815 q 63 912 41 886 q 115 952 85 938 q 183 966 146 966 q 300 920 256 966 q 345 778 345 873 m 250 775 q 232 858 250 831 q 180 884 214 884 q 129 853 146 884 q 111 775 111 822 q 129 692 111 718 q 180 666 147 666 q 233 697 215 666 q 250 775 250 728 m 747 182 q 735 103 747 139 q 702 42 724 68 q 649 2 680 16 q 581 -12 618 -12 q 514 -1 544 -12 q 464 34 485 11 q 431 93 442 58 q 420 176 420 128 q 432 255 420 219 q 465 316 444 290 q 518 357 487 342 q 586 371 549 371 q 652 359 623 371 q 703 325 682 348 q 736 266 724 301 q 747 182 747 230 m 653 179 q 635 262 653 236 q 583 288 617 288 q 532 257 549 288 q 514 179 514 226 q 532 97 514 123 q 583 71 550 71 q 635 101 618 71 q 653 179 653 132 z "},"+":{"ha":764,"x_min":57,"x_max":707,"o":"m 707 318 l 440 318 l 440 41 l 323 41 l 323 318 l 57 318 l 57 421 l 323 421 l 323 696 l 440 696 l 440 421 l 707 421 l 707 318 z "},"\u2212":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 318 l 90 318 l 90 421 l 673 421 l 673 318 z "},"\xb1":{"ha":764,"x_min":71,"x_max":693,"o":"m 693 464 l 439 464 l 439 200 l 325 200 l 325 464 l 71 464 l 71 564 l 325 564 l 325 827 l 439 827 l 439 564 l 693 564 l 693 464 m 673 0 l 90 0 l 90 98 l 673 98 l 673 0 z "},"\xd7":{"ha":764,"x_min":100,"x_max":664,"o":"m 661 576 l 457 372 l 664 167 l 585 87 l 379 294 l 175 90 l 103 163 l 307 367 l 100 572 l 179 652 l 385 444 l 589 648 l 661 576 z "},"\xf7":{"ha":764,"x_min":57,"x_max":707,"o":"m 707 318 l 57 318 l 57 421 l 707 421 l 707 318 m 380 195 q 415 188 399 195 q 443 168 431 180 q 462 139 455 156 q 469 104 469 123 q 462 70 469 86 q 443 42 455 54 q 415 23 431 30 q 380 16 399 16 q 345 23 361 16 q 317 42 329 30 q 297 70 304 54 q 290 104 290 86 q 297 139 290 123 q 317 168 304 156 q 345 188 329 180 q 380 195 361 195 m 380 545 q 345 552 361 545 q 317 571 329 559 q 297 600 304 583 q 290 635 290 616 q 297 669 290 653 q 317 697 304 686 q 345 716 329 709 q 380 724 361 724 q 415 716 399 724 q 443 697 431 709 q 462 669 455 686 q 469 635 469 653 q 462 600 469 616 q 443 571 455 583 q 415 552 431 559 q 380 545 399 545 z "},"=":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 438 l 90 438 l 90 538 l 673 538 l 673 438 m 673 202 l 90 202 l 90 302 l 673 302 l 673 202 z "},"\u2260":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 538 l 673 438 l 464 438 l 410 302 l 673 302 l 673 202 l 371 202 l 290 0 l 182 0 l 262 202 l 90 202 l 90 302 l 301 302 l 355 438 l 90 438 l 90 538 l 395 538 l 475 741 l 583 741 l 503 538 l 673 538 z "},"\u2248":{"ha":764,"x_min":86,"x_max":679,"o":"m 679 482 q 601 428 642 448 q 511 408 559 408 q 441 419 474 408 q 376 445 408 431 q 313 470 345 458 q 245 481 281 481 q 184 466 213 481 q 132 431 156 450 l 86 507 q 164 561 123 541 q 254 582 206 582 q 324 571 291 582 q 389 546 357 559 q 453 521 420 532 q 519 509 485 509 q 581 524 552 509 q 633 559 610 538 l 679 482 m 679 232 q 601 177 642 197 q 511 157 559 157 q 441 168 474 157 q 376 193 408 179 q 313 218 345 207 q 245 229 281 229 q 184 215 213 229 q 132 179 156 200 l 86 257 q 164 310 123 290 q 254 330 206 330 q 324 319 291 330 q 389 294 357 308 q 453 269 420 281 q 519 258 485 258 q 581 273 552 258 q 633 309 610 288 l 679 232 z "},"<":{"ha":764,"x_min":93,"x_max":623,"o":"m 623 64 l 549 -11 l 93 370 l 549 750 l 623 675 l 253 371 l 623 64 z "},">":{"ha":764,"x_min":142,"x_max":671,"o":"m 142 675 l 215 750 l 671 370 l 215 -11 l 142 64 l 511 368 l 142 675 z "},"\u2264":{"ha":764,"x_min":90,"x_max":673,"o":"m 632 293 l 566 214 l 111 528 l 566 842 l 632 762 l 273 528 l 632 293 m 673 0 l 90 0 l 90 98 l 673 98 l 673 0 z "},"\u2265":{"ha":764,"x_min":90,"x_max":673,"o":"m 132 762 l 199 842 l 653 528 l 199 214 l 132 293 l 490 528 l 132 762 m 673 0 l 90 0 l 90 98 l 673 98 l 673 0 z "},"\xac":{"ha":764,"x_min":79,"x_max":659,"o":"m 659 118 l 543 118 l 543 318 l 79 318 l 79 421 l 659 421 l 659 118 z "},"\xb0":{"ha":764,"x_min":144,"x_max":619,"o":"m 619 743 q 602 652 619 694 q 552 578 584 610 q 476 529 520 547 q 378 511 431 511 q 278 528 321 511 q 205 573 235 544 q 160 644 175 603 q 144 734 144 685 q 162 826 144 783 q 212 899 180 868 q 288 948 243 930 q 386 966 332 966 q 486 950 442 966 q 559 904 530 934 q 604 834 589 875 q 619 743 619 793 m 509 739 q 502 793 509 768 q 479 836 494 818 q 440 865 464 854 q 382 875 416 875 q 328 865 351 875 q 288 838 304 855 q 263 795 271 820 q 254 739 254 770 q 261 685 254 710 q 284 642 269 660 q 324 613 300 623 q 382 603 348 603 q 476 640 443 603 q 509 739 509 677 z "},"\u2113":{"ha":764,"x_min":41,"x_max":686,"o":"m 41 387 l 201 467 l 201 732 q 217 833 201 789 q 260 906 232 877 q 327 951 288 936 q 415 966 367 966 q 557 919 507 966 q 607 770 607 871 q 585 660 607 711 q 525 566 564 610 q 434 486 486 523 q 319 419 381 450 l 319 260 q 331 178 319 211 q 363 125 342 145 q 411 97 383 105 q 472 89 439 89 q 521 95 497 89 q 565 110 545 100 q 603 132 586 120 q 631 157 619 144 l 686 77 q 585 13 644 36 q 460 -9 527 -9 q 407 -5 435 -9 q 349 11 378 0 q 293 41 320 22 q 246 89 267 60 q 214 157 226 118 q 201 249 201 197 l 201 359 l 41 281 l 41 387 m 319 526 q 445 625 401 566 q 488 751 488 684 q 468 844 488 817 q 408 871 448 871 q 373 864 389 871 q 345 841 357 857 q 326 798 333 825 q 319 732 319 771 l 319 526 z "},"\u221e":{"ha":764,"x_min":8,"x_max":755,"o":"m 755 375 q 744 287 755 328 q 711 216 733 246 q 656 170 689 186 q 582 153 624 153 q 527 161 551 153 q 478 188 502 170 q 431 231 455 205 q 379 293 408 258 q 322 228 348 255 q 274 185 297 201 q 226 160 250 168 q 174 153 202 153 q 106 168 136 153 q 54 211 75 183 q 20 277 32 239 q 8 363 8 316 q 21 451 8 410 q 56 522 33 492 q 111 569 79 551 q 182 586 143 586 q 225 581 204 586 q 270 561 247 576 q 321 518 294 546 q 385 446 349 490 q 440 508 415 481 q 489 552 465 534 q 537 577 513 569 q 589 586 561 586 q 654 574 623 586 q 707 536 684 562 q 742 470 729 510 q 755 375 755 430 m 651 368 q 574 478 651 478 q 546 472 559 478 q 516 453 532 466 q 482 420 500 440 q 440 372 463 400 q 487 315 466 337 q 524 281 507 293 q 554 264 541 269 q 578 260 568 260 q 651 368 651 260 m 323 367 q 184 481 234 481 q 113 370 113 481 q 189 258 113 258 q 212 262 201 258 q 237 276 222 265 q 272 309 252 288 q 323 367 293 331 z "},"\u2202":{"ha":764,"x_min":77,"x_max":659,"o":"m 659 421 q 580 96 659 204 q 351 -12 501 -12 q 234 9 286 -12 q 148 68 183 30 q 95 161 113 107 q 77 282 77 216 q 98 404 77 350 q 158 496 119 458 q 250 554 197 534 q 368 574 304 574 q 456 562 415 574 q 528 526 497 549 q 496 655 516 594 q 444 761 476 715 q 368 833 412 807 q 262 860 323 860 q 217 858 243 860 q 170 850 191 855 l 170 957 q 218 964 191 961 q 273 966 245 966 q 430 931 359 966 q 551 828 500 897 q 630 657 602 760 q 659 421 659 555 m 372 473 q 296 460 328 473 q 242 421 264 446 q 211 362 221 397 q 200 286 200 328 q 210 211 200 247 q 239 149 219 176 q 289 106 258 122 q 361 90 319 90 q 436 107 404 90 q 490 161 468 123 q 522 260 511 199 q 533 410 533 321 q 501 433 519 422 q 463 454 483 445 q 419 468 442 463 q 372 473 397 473 z "},"\u222b":{"ha":764,"x_min":83,"x_max":681,"o":"m 441 -31 q 381 -220 441 -155 q 199 -285 321 -285 q 138 -281 170 -285 q 83 -271 107 -277 l 83 -168 q 203 -184 149 -184 q 292 -146 262 -184 q 322 -43 322 -108 l 322 713 q 382 901 322 836 q 566 966 443 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 615 866 q 472 828 502 866 q 441 725 441 789 l 441 -31 z "},"\u221a":{"ha":764,"x_min":41,"x_max":732,"o":"m 732 958 l 429 0 l 283 0 l 41 539 l 160 593 l 313 237 l 354 132 l 389 260 l 603 958 l 732 958 z "},"\u2206":{"ha":764,"x_min":37,"x_max":726,"o":"m 37 103 l 304 886 l 467 886 l 726 103 l 726 0 l 37 0 l 37 103 m 589 113 l 379 775 l 168 113 l 589 113 z "},"\u2126":{"ha":764,"x_min":29,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 z "},"\xb5":{"ha":764,"x_min":109,"x_max":730,"o":"m 227 681 l 227 248 q 345 90 227 90 q 387 97 365 90 q 430 119 408 104 q 475 161 451 134 q 529 229 499 188 l 529 681 l 647 681 l 647 214 q 650 156 647 179 q 662 119 654 133 q 684 99 671 105 q 718 93 698 93 l 730 93 l 730 -1 q 709 -5 721 -3 q 684 -7 697 -7 q 626 2 650 -7 q 585 26 602 10 q 559 65 569 42 q 543 117 549 88 q 487 53 514 78 q 433 14 460 28 q 382 -5 406 0 q 336 -11 358 -11 q 270 2 300 -11 q 217 41 240 14 l 227 -77 l 227 -278 l 109 -278 l 109 681 l 227 681 z "},"\u220f":{"ha":764,"x_min":28,"x_max":736,"o":"m 647 -146 l 526 -146 l 526 854 l 237 854 l 237 -146 l 117 -146 l 117 854 l 28 854 l 28 958 l 736 958 l 736 854 l 647 854 l 647 -146 z "},"\u2211":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 -146 l 79 -146 l 79 -58 l 406 425 l 100 871 l 100 958 l 664 958 l 664 859 l 245 859 l 538 433 l 221 -36 l 684 -36 l 684 -146 z "},"\u25ca":{"ha":764,"x_min":56,"x_max":708,"o":"m 443 0 l 328 0 l 56 447 l 321 886 l 436 886 l 708 439 l 443 0 m 191 453 l 389 119 l 574 433 l 375 766 l 191 453 z "},"\u0309":{"ha":764,"x_min":293,"x_max":491,"o":"m 491 943 q 465 868 491 896 q 390 838 439 841 l 386 774 l 325 774 l 315 897 l 349 897 q 387 909 376 897 q 397 940 397 920 q 370 982 397 967 q 300 998 343 998 l 293 998 l 293 1070 l 302 1070 q 386 1058 351 1070 q 445 1028 421 1046 q 480 987 469 1010 q 491 943 491 964 z "},"\u0323":{"ha":764,"x_min":292,"x_max":472,"o":"m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ea0":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ea2":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 504 1141 q 478 1067 504 1095 q 403 1037 452 1040 l 399 973 l 338 973 l 328 1096 l 361 1096 q 399 1107 389 1096 q 410 1139 410 1119 q 383 1181 410 1166 q 313 1196 356 1196 l 306 1196 l 306 1269 l 315 1269 q 399 1257 363 1269 q 458 1227 434 1245 q 493 1186 481 1208 q 504 1141 504 1163 z "},"\u1ea4":{"ha":764,"x_min":7,"x_max":766,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 766 1217 l 615 1083 l 519 1083 l 628 1217 l 766 1217 z "},"\u1ea6":{"ha":764,"x_min":-5,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 422 1145 l 571 981 l 467 981 l 380 1063 l 294 981 l 186 981 l 335 1145 l 422 1145 m 133 1217 l 241 1083 l 146 1083 l -5 1217 l 133 1217 z "},"\u1ea8":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 667 1218 q 646 1158 667 1180 q 585 1133 625 1136 l 582 1084 l 526 1084 l 517 1181 l 545 1181 q 575 1191 566 1181 q 584 1216 584 1200 q 564 1240 584 1232 q 511 1249 543 1249 l 507 1249 l 507 1321 l 513 1321 q 582 1312 553 1321 q 630 1287 610 1302 q 658 1254 649 1272 q 667 1218 667 1236 z "},"\u1eaa":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 136 1244 q 202 1302 165 1282 q 286 1322 239 1322 q 353 1313 326 1322 q 401 1295 380 1305 q 440 1277 422 1286 q 482 1269 459 1269 q 530 1282 509 1269 q 570 1315 551 1295 l 628 1257 q 562 1198 598 1218 q 478 1179 525 1179 q 411 1187 438 1179 q 363 1205 385 1195 q 324 1223 342 1215 q 282 1232 305 1232 q 234 1219 254 1232 q 195 1185 214 1206 l 136 1244 m 431 1145 l 596 981 l 476 981 l 380 1063 l 285 981 l 168 981 l 334 1145 l 431 1145 z "},"\u1eac":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u1eae":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 576 1292 l 425 1158 l 329 1158 l 437 1292 l 576 1292 m 562 1130 q 548 1059 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 973 418 973 q 313 982 346 973 q 256 1010 281 991 q 216 1059 231 1029 q 201 1130 201 1088 l 294 1130 q 317 1078 294 1095 q 382 1061 340 1061 q 447 1078 424 1061 q 469 1130 469 1095 l 562 1130 z "},"\u1eb0":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 330 1291 l 438 1157 l 342 1157 l 191 1291 l 330 1291 m 562 1130 q 548 1059 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 973 418 973 q 313 982 346 973 q 256 1010 281 991 q 216 1059 231 1029 q 201 1130 201 1088 l 294 1130 q 317 1078 294 1095 q 382 1061 340 1061 q 447 1078 424 1061 q 469 1130 469 1095 l 562 1130 z "},"\u1eb2":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 482 1220 q 461 1161 482 1183 q 400 1137 441 1139 l 397 1118 l 342 1118 l 332 1183 l 360 1183 q 391 1192 382 1183 q 399 1217 399 1201 q 379 1242 399 1233 q 327 1251 359 1251 l 322 1251 l 322 1322 l 329 1322 q 397 1313 368 1322 q 445 1289 426 1303 q 473 1256 465 1274 q 482 1220 482 1238 m 562 1130 q 548 1059 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 973 418 973 q 313 982 346 973 q 256 1010 281 991 q 216 1059 231 1029 q 201 1130 201 1088 l 294 1130 q 317 1078 294 1095 q 382 1061 340 1061 q 447 1078 424 1061 q 469 1130 469 1095 l 562 1130 z "},"\u1eb4":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 136 1237 q 202 1295 165 1276 q 286 1315 239 1315 q 353 1306 326 1315 q 401 1289 380 1298 q 440 1271 422 1279 q 482 1262 459 1262 q 530 1275 509 1262 q 570 1308 551 1288 l 628 1250 q 562 1192 598 1211 q 478 1172 525 1172 q 411 1180 438 1172 q 363 1198 385 1188 q 324 1216 342 1208 q 282 1225 305 1225 q 234 1212 254 1225 q 195 1179 214 1199 l 136 1237 m 562 1130 q 548 1059 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 973 418 973 q 313 982 346 973 q 256 1010 281 991 q 216 1059 231 1029 q 201 1130 201 1088 l 294 1130 q 317 1078 294 1095 q 382 1061 340 1061 q 447 1078 424 1061 q 469 1130 469 1095 l 562 1130 z "},"\u1eb6":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u1eb8":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1eba":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 491 1141 q 465 1067 491 1095 q 390 1037 439 1040 l 386 973 l 325 973 l 315 1096 l 349 1096 q 387 1107 376 1096 q 397 1139 397 1119 q 370 1181 397 1166 q 300 1196 343 1196 l 293 1196 l 293 1269 l 302 1269 q 386 1257 351 1269 q 445 1227 421 1245 q 480 1186 469 1208 q 491 1141 491 1163 z "},"\u1ebc":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\u1ebe":{"ha":764,"x_min":136,"x_max":766,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 766 1217 l 615 1083 l 519 1083 l 628 1217 l 766 1217 z "},"\u1ec0":{"ha":764,"x_min":-5,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 422 1145 l 571 981 l 467 981 l 380 1063 l 294 981 l 186 981 l 335 1145 l 422 1145 m 133 1217 l 241 1083 l 146 1083 l -5 1217 l 133 1217 z "},"\u1ec2":{"ha":764,"x_min":136,"x_max":667,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 667 1218 q 646 1158 667 1180 q 585 1133 625 1136 l 582 1084 l 526 1084 l 517 1181 l 545 1181 q 575 1191 566 1181 q 584 1216 584 1200 q 564 1240 584 1232 q 511 1249 543 1249 l 507 1249 l 507 1321 l 513 1321 q 582 1312 553 1321 q 630 1287 610 1302 q 658 1254 649 1272 q 667 1218 667 1236 z "},"\u1ec4":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 136 1244 q 202 1302 165 1282 q 286 1322 239 1322 q 353 1313 326 1322 q 401 1295 380 1305 q 440 1277 422 1286 q 482 1269 459 1269 q 530 1282 509 1269 q 570 1315 551 1295 l 628 1257 q 562 1198 598 1218 q 478 1179 525 1179 q 411 1187 438 1179 q 363 1205 385 1195 q 324 1223 342 1215 q 282 1232 305 1232 q 234 1219 254 1232 q 195 1185 214 1206 l 136 1244 m 431 1145 l 596 981 l 476 981 l 380 1063 l 285 981 l 168 981 l 334 1145 l 431 1145 z "},"\u1ec6":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u1ec8":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 504 1141 q 478 1067 504 1095 q 403 1037 452 1040 l 399 973 l 338 973 l 328 1096 l 361 1096 q 399 1107 389 1096 q 410 1139 410 1119 q 383 1181 410 1166 q 313 1196 356 1196 l 306 1196 l 306 1269 l 315 1269 q 399 1257 363 1269 q 458 1227 434 1245 q 493 1186 481 1208 q 504 1141 504 1163 z "},"\u1eca":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ecc":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ece":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 491 1141 q 465 1067 491 1095 q 390 1037 439 1040 l 386 973 l 325 973 l 315 1096 l 349 1096 q 387 1107 376 1096 q 397 1139 397 1119 q 370 1181 397 1166 q 300 1196 343 1196 l 293 1196 l 293 1269 l 302 1269 q 386 1257 351 1269 q 445 1227 421 1245 q 480 1186 469 1208 q 491 1141 491 1163 z "},"\u1ed0":{"ha":764,"x_min":39,"x_max":766,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 766 1217 l 615 1083 l 519 1083 l 628 1217 l 766 1217 z "},"\u1ed2":{"ha":764,"x_min":-5,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 422 1145 l 571 981 l 467 981 l 380 1063 l 294 981 l 186 981 l 335 1145 l 422 1145 m 133 1217 l 241 1083 l 146 1083 l -5 1217 l 133 1217 z "},"\u1ed4":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 426 1145 l 574 981 l 467 981 l 380 1063 l 294 981 l 190 981 l 338 1145 l 426 1145 m 667 1218 q 646 1158 667 1180 q 585 1133 625 1136 l 582 1084 l 526 1084 l 517 1181 l 545 1181 q 575 1191 566 1181 q 584 1216 584 1200 q 564 1240 584 1232 q 511 1249 543 1249 l 507 1249 l 507 1321 l 513 1321 q 582 1312 553 1321 q 630 1287 610 1302 q 658 1254 649 1272 q 667 1218 667 1236 z "},"\u1ed6":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1244 q 202 1302 165 1282 q 286 1322 239 1322 q 353 1313 326 1322 q 401 1295 380 1305 q 440 1277 422 1286 q 482 1269 459 1269 q 530 1282 509 1269 q 570 1315 551 1295 l 628 1257 q 562 1198 598 1218 q 478 1179 525 1179 q 411 1187 438 1179 q 363 1205 385 1195 q 324 1223 342 1215 q 282 1232 305 1232 q 234 1219 254 1232 q 195 1185 214 1206 l 136 1244 m 431 1145 l 596 981 l 476 981 l 380 1063 l 285 981 l 168 981 l 334 1145 l 431 1145 z "},"\u1ed8":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u01a0":{"ha":764,"x_min":39,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 z "},"\u1eda":{"ha":764,"x_min":0,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1edc":{"ha":764,"x_min":0,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 453 981 l 332 981 l 139 1125 l 310 1125 l 453 981 m 0 886 z "},"\u1ede":{"ha":764,"x_min":39,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 491 1141 q 465 1067 491 1095 q 390 1037 439 1040 l 386 973 l 325 973 l 315 1096 l 349 1096 q 387 1107 376 1096 q 397 1139 397 1119 q 370 1181 397 1166 q 300 1196 343 1196 l 293 1196 l 293 1269 l 302 1269 q 386 1257 351 1269 q 445 1227 421 1245 q 480 1186 469 1208 q 491 1141 491 1163 z "},"\u1ee0":{"ha":764,"x_min":0,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\u1ee2":{"ha":764,"x_min":39,"x_max":805,"o":"m 663 743 q 687 694 675 721 q 705 637 698 668 q 726 449 726 555 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 518 874 457 899 q 624 802 580 850 q 669 821 652 805 q 685 871 685 836 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 794 852 805 882 q 765 800 784 822 q 720 764 746 779 q 663 743 694 750 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ee4":{"ha":764,"x_min":74,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ee6":{"ha":764,"x_min":74,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 491 1141 q 465 1067 491 1095 q 390 1037 439 1040 l 386 973 l 325 973 l 315 1096 l 349 1096 q 387 1107 376 1096 q 397 1139 397 1119 q 370 1181 397 1166 q 300 1196 343 1196 l 293 1196 l 293 1269 l 302 1269 q 386 1257 351 1269 q 445 1227 421 1245 q 480 1186 469 1208 q 491 1141 491 1163 z "},"\u01af":{"ha":764,"x_min":73,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 z "},"\u1ee8":{"ha":764,"x_min":-44,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 m 581 1125 l 388 981 l 267 981 l 410 1125 l 581 1125 m -44 886 z "},"\u1eea":{"ha":764,"x_min":-33,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 m 420 981 l 298 981 l 106 1125 l 277 1125 l 420 981 m -33 886 z "},"\u1eec":{"ha":764,"x_min":73,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 m 444 1141 q 418 1067 444 1095 q 343 1037 393 1040 l 339 973 l 278 973 l 268 1096 l 302 1096 q 340 1107 329 1096 q 351 1139 351 1119 q 323 1181 351 1166 q 253 1196 296 1196 l 246 1196 l 246 1269 l 255 1269 q 339 1257 304 1269 q 398 1227 374 1245 q 433 1186 422 1208 q 444 1141 444 1163 z "},"\u1eee":{"ha":764,"x_min":-47,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 m 90 1035 q 156 1108 119 1084 q 239 1133 193 1133 q 306 1122 279 1133 q 354 1097 333 1110 q 394 1072 375 1083 q 435 1060 412 1060 q 483 1079 463 1060 q 523 1126 504 1097 l 581 1071 q 515 997 551 1022 q 431 972 478 972 q 365 984 391 972 q 317 1009 338 996 q 277 1034 296 1023 q 235 1046 258 1046 q 187 1027 208 1046 q 148 979 167 1008 l 90 1035 m -47 886 z "},"\u1ef0":{"ha":764,"x_min":73,"x_max":805,"o":"m 614 309 q 596 176 614 235 q 543 75 578 117 q 457 11 508 33 q 340 -12 406 -12 q 217 9 267 -12 q 134 71 166 31 q 88 166 102 111 q 73 290 73 222 l 73 886 l 194 886 l 194 300 q 202 208 194 248 q 228 142 210 169 q 274 102 245 116 q 344 89 302 89 q 457 144 420 89 q 494 301 494 200 l 494 886 l 614 886 l 614 801 q 666 818 647 802 q 685 871 685 834 q 682 904 685 887 q 680 935 680 922 q 694 978 680 960 q 743 996 709 996 q 790 977 776 996 q 805 922 805 958 q 790 843 805 877 q 750 786 776 809 q 690 751 724 764 q 614 735 655 738 l 614 309 m 342 -87 q 377 -94 361 -87 q 406 -113 394 -101 q 425 -142 418 -125 q 432 -177 432 -158 q 425 -212 432 -196 q 406 -241 418 -229 q 377 -260 394 -253 q 342 -267 361 -267 q 306 -260 322 -267 q 277 -241 290 -253 q 258 -212 265 -229 q 252 -177 252 -196 q 258 -142 252 -158 q 277 -113 265 -125 q 306 -94 290 -101 q 342 -87 322 -87 z "},"\u1ef4":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ef8":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\u1ea1":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ea3":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 513 943 q 487 868 513 896 q 412 838 461 841 l 408 774 l 347 774 l 336 897 l 370 897 q 408 909 397 897 q 419 940 419 920 q 392 982 419 967 q 321 998 365 998 l 315 998 l 315 1070 l 323 1070 q 408 1058 372 1070 q 467 1028 443 1046 q 502 987 490 1010 q 513 943 513 964 z "},"\u1ea5":{"ha":764,"x_min":90,"x_max":766,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 766 1031 l 615 897 l 519 897 l 628 1031 l 766 1031 z "},"\u1ea7":{"ha":764,"x_min":-5,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 422 958 l 571 794 l 467 794 l 380 876 l 294 794 l 186 794 l 335 958 l 422 958 m 133 1031 l 241 897 l 146 897 l -5 1031 l 133 1031 z "},"\u1ea9":{"ha":764,"x_min":90,"x_max":667,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 667 1034 q 646 974 667 996 q 585 949 625 951 l 582 898 l 526 898 l 517 997 l 545 997 q 575 1006 566 997 q 584 1031 584 1015 q 564 1056 584 1047 q 511 1065 543 1065 l 507 1065 l 507 1137 l 513 1137 q 582 1127 553 1137 q 630 1103 610 1118 q 658 1069 649 1088 q 667 1034 667 1051 z "},"\u1eab":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 136 1057 q 202 1131 165 1106 q 286 1156 239 1156 q 353 1144 326 1156 q 401 1119 380 1133 q 440 1094 422 1105 q 482 1082 459 1082 q 530 1101 509 1082 q 570 1149 551 1120 l 628 1090 q 562 1017 598 1042 q 478 992 525 992 q 411 1003 438 992 q 363 1028 385 1015 q 324 1054 342 1042 q 282 1065 305 1065 q 234 1047 254 1065 q 195 999 214 1028 l 136 1057 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 z "},"\u1ead":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u1eaf":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 576 1120 l 425 986 l 329 986 l 437 1120 l 576 1120 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 z "},"\u1eb1":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 330 1120 l 438 986 l 342 986 l 191 1120 l 330 1120 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 z "},"\u1eb3":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 489 1094 q 468 1034 489 1056 q 407 1009 448 1012 l 404 958 l 349 958 l 339 1057 l 367 1057 q 397 1066 389 1057 q 406 1092 406 1076 q 386 1116 406 1107 q 334 1125 366 1125 l 329 1125 l 329 1197 l 336 1197 q 404 1187 375 1197 q 452 1163 433 1178 q 480 1130 471 1148 q 489 1094 489 1112 z "},"\u1eb5":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 136 1057 q 202 1131 165 1106 q 286 1156 239 1156 q 353 1144 326 1156 q 401 1119 380 1133 q 440 1094 422 1105 q 482 1082 459 1082 q 530 1101 509 1082 q 570 1149 551 1120 l 628 1090 q 562 1017 598 1042 q 478 992 525 992 q 411 1003 438 992 q 363 1028 385 1015 q 324 1054 342 1042 q 282 1065 305 1065 q 234 1047 254 1065 q 195 999 214 1028 l 136 1057 z "},"\u1eb7":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u1eb9":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ebb":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 505 943 q 479 868 505 896 q 404 838 453 841 l 399 774 l 338 774 l 328 897 l 362 897 q 400 909 389 897 q 411 940 411 920 q 384 982 411 967 q 313 998 357 998 l 307 998 l 307 1070 l 315 1070 q 399 1058 364 1070 q 458 1028 435 1046 q 493 987 482 1010 q 505 943 505 964 z "},"\u1ebd":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u1ebf":{"ha":764,"x_min":79,"x_max":766,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 766 1031 l 615 897 l 519 897 l 628 1031 l 766 1031 z "},"\u1ec1":{"ha":764,"x_min":-5,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 422 958 l 571 794 l 467 794 l 380 876 l 294 794 l 186 794 l 335 958 l 422 958 m 133 1031 l 241 897 l 146 897 l -5 1031 l 133 1031 z "},"\u1ec3":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 667 1034 q 646 974 667 996 q 585 949 625 951 l 582 898 l 526 898 l 517 997 l 545 997 q 575 1006 566 997 q 584 1031 584 1015 q 564 1056 584 1047 q 511 1065 543 1065 l 507 1065 l 507 1137 l 513 1137 q 582 1127 553 1137 q 630 1103 610 1118 q 658 1069 649 1088 q 667 1034 667 1051 z "},"\u1ec5":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 136 1057 q 202 1131 165 1106 q 286 1156 239 1156 q 353 1144 326 1156 q 401 1119 380 1133 q 440 1094 422 1105 q 482 1082 459 1082 q 530 1101 509 1082 q 570 1149 551 1120 l 628 1090 q 562 1017 598 1042 q 478 992 525 992 q 411 1003 438 992 q 363 1028 385 1015 q 324 1054 342 1042 q 282 1065 305 1065 q 234 1047 254 1065 q 195 999 214 1028 l 136 1057 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 z "},"\u1ec7":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u1ec9":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 513 943 q 487 868 513 896 q 412 838 461 841 l 408 774 l 347 774 l 336 897 l 370 897 q 408 909 397 897 q 419 940 419 920 q 392 982 419 967 q 321 998 365 998 l 315 998 l 315 1070 l 323 1070 q 408 1058 372 1070 q 467 1028 443 1046 q 502 987 490 1010 q 513 943 513 964 z "},"\u1ecb":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ecd":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ecf":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 491 943 q 465 868 491 896 q 390 838 439 841 l 386 774 l 325 774 l 315 897 l 349 897 q 387 909 376 897 q 397 940 397 920 q 370 982 397 967 q 300 998 343 998 l 293 998 l 293 1070 l 302 1070 q 386 1058 351 1070 q 445 1028 421 1046 q 480 987 469 1010 q 491 943 491 964 z "},"\u1ed1":{"ha":764,"x_min":62,"x_max":766,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 766 1031 l 615 897 l 519 897 l 628 1031 l 766 1031 z "},"\u1ed3":{"ha":764,"x_min":-5,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 422 958 l 571 794 l 467 794 l 380 876 l 294 794 l 186 794 l 335 958 l 422 958 m 133 1031 l 241 897 l 146 897 l -5 1031 l 133 1031 z "},"\u1ed5":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 426 958 l 574 794 l 467 794 l 380 876 l 294 794 l 190 794 l 338 958 l 426 958 m 667 1034 q 646 974 667 996 q 585 949 625 951 l 582 898 l 526 898 l 517 997 l 545 997 q 575 1006 566 997 q 584 1031 584 1015 q 564 1056 584 1047 q 511 1065 543 1065 l 507 1065 l 507 1137 l 513 1137 q 582 1127 553 1137 q 630 1103 610 1118 q 658 1069 649 1088 q 667 1034 667 1051 z "},"\u1ed7":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 136 1057 q 202 1131 165 1106 q 286 1156 239 1156 q 353 1144 326 1156 q 401 1119 380 1133 q 440 1094 422 1105 q 482 1082 459 1082 q 530 1101 509 1082 q 570 1149 551 1120 l 628 1090 q 562 1017 598 1042 q 478 992 525 992 q 411 1003 438 992 q 363 1028 385 1015 q 324 1054 342 1042 q 282 1065 305 1065 q 234 1047 254 1065 q 195 999 214 1028 l 136 1057 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 z "},"\u1ed9":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u01a1":{"ha":764,"x_min":49,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 z "},"\u1edb":{"ha":764,"x_min":-13,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 m 633 958 l 416 794 l 298 794 l 462 958 l 633 958 m -13 681 z "},"\u1edd":{"ha":764,"x_min":0,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\u1edf":{"ha":764,"x_min":49,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 m 491 943 q 465 868 491 896 q 390 838 439 841 l 386 774 l 325 774 l 315 897 l 349 897 q 387 909 376 897 q 397 940 397 920 q 370 982 397 967 q 300 998 343 998 l 293 998 l 293 1070 l 302 1070 q 386 1058 351 1070 q 445 1028 421 1046 q 480 987 469 1010 q 491 943 491 964 z "},"\u1ee1":{"ha":764,"x_min":0,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u1ee3":{"ha":764,"x_min":49,"x_max":785,"o":"m 648 538 q 677 452 667 499 q 688 346 688 404 q 665 200 688 267 q 601 87 643 134 q 498 14 559 40 q 361 -12 437 -12 q 230 11 288 -12 q 132 77 172 33 q 70 186 92 121 q 49 336 49 252 q 71 481 49 416 q 136 594 94 547 q 238 667 178 641 q 375 693 298 693 q 510 669 451 693 q 610 597 570 644 q 651 616 637 601 q 665 665 665 631 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 774 648 785 678 q 746 597 764 618 q 703 561 728 575 q 648 538 678 547 m 567 340 q 553 451 567 404 q 513 529 539 498 q 451 577 488 561 q 368 593 414 593 q 278 572 315 593 q 216 517 240 551 q 181 436 192 482 q 170 340 170 391 q 183 230 170 277 q 223 151 197 182 q 286 103 249 119 q 368 87 322 87 q 459 108 421 87 q 520 163 496 129 q 556 244 545 198 q 567 340 567 290 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ee5":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1ee7":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 491 943 q 465 868 491 896 q 390 838 439 841 l 386 774 l 325 774 l 315 897 l 349 897 q 387 909 376 897 q 397 940 397 920 q 370 982 397 967 q 300 998 343 998 l 293 998 l 293 1070 l 302 1070 q 386 1058 351 1070 q 445 1028 421 1046 q 480 987 469 1010 q 491 943 491 964 z "},"\u01b0":{"ha":764,"x_min":74,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 z "},"\u1ee9":{"ha":764,"x_min":-61,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 m 585 958 l 368 794 l 250 794 l 414 958 l 585 958 m -61 681 z "},"\u1eeb":{"ha":764,"x_min":-37,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 m 416 794 l 298 794 l 81 958 l 252 958 l 416 794 m -37 681 z "},"\u1eed":{"ha":764,"x_min":74,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 m 437 943 q 412 868 437 896 q 336 838 386 841 l 332 774 l 271 774 l 261 897 l 295 897 q 333 909 322 897 q 344 940 344 920 q 317 982 344 967 q 246 998 290 998 l 239 998 l 239 1070 l 248 1070 q 332 1058 297 1070 q 391 1028 368 1046 q 426 987 415 1010 q 437 943 437 964 z "},"\u1eef":{"ha":764,"x_min":-54,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 m 83 860 q 149 933 112 909 q 233 958 186 958 q 299 947 272 958 q 347 922 326 935 q 387 897 368 908 q 429 885 406 885 q 476 904 456 885 q 516 951 497 922 l 574 893 q 508 820 545 844 q 425 795 471 795 q 358 806 385 795 q 310 831 331 817 q 270 857 289 845 q 229 868 252 868 q 180 849 201 868 q 141 802 160 831 l 83 860 m -54 681 z "},"\u1ef1":{"ha":764,"x_min":74,"x_max":785,"o":"m 594 595 q 646 613 627 597 q 665 665 665 629 q 662 699 665 682 q 659 730 659 716 q 674 772 659 754 q 723 791 689 791 q 770 772 755 791 q 785 717 785 753 q 770 637 785 671 q 730 581 755 604 q 669 545 704 558 q 594 530 635 532 l 594 0 l 488 0 l 484 110 q 436 51 460 75 q 387 14 412 28 q 336 -6 362 -1 q 279 -12 309 -12 q 125 49 177 -12 q 74 236 74 111 l 74 681 l 192 681 l 192 245 q 304 89 192 89 q 345 95 326 89 q 385 118 365 102 q 428 161 406 134 q 476 229 450 188 l 476 681 l 594 681 l 594 595 m 328 -87 q 364 -94 347 -87 q 393 -113 380 -101 q 412 -142 405 -125 q 418 -177 418 -158 q 412 -212 418 -196 q 393 -241 405 -229 q 364 -260 380 -253 q 328 -267 347 -267 q 292 -260 309 -267 q 264 -241 276 -253 q 245 -212 252 -229 q 238 -177 238 -196 q 245 -142 238 -158 q 264 -113 252 -125 q 292 -94 276 -101 q 328 -87 309 -87 z "},"\u1ef5":{"ha":764,"x_min":40,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 587 -87 q 622 -94 606 -87 q 651 -113 639 -101 q 670 -142 663 -125 q 677 -177 677 -158 q 670 -212 677 -196 q 651 -241 663 -229 q 622 -260 639 -253 q 587 -267 606 -267 q 551 -260 567 -267 q 522 -241 534 -253 q 503 -212 510 -229 q 496 -177 496 -196 q 503 -142 496 -158 q 522 -113 510 -125 q 551 -94 534 -101 q 587 -87 567 -87 z "},"\u1ef6":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 504 1122 q 478 1048 504 1076 q 403 1018 452 1021 l 399 954 l 338 954 l 328 1077 l 361 1077 q 399 1088 389 1077 q 410 1120 410 1100 q 383 1162 410 1147 q 313 1177 356 1177 l 306 1177 l 306 1250 l 315 1250 q 399 1238 363 1250 q 458 1208 434 1226 q 493 1167 481 1190 q 504 1122 504 1144 z "},"\u1ef7":{"ha":764,"x_min":40,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 513 943 q 487 868 513 896 q 412 838 461 841 l 408 774 l 347 774 l 336 897 l 370 897 q 408 909 397 897 q 419 940 419 920 q 392 982 419 967 q 321 998 365 998 l 315 998 l 315 1070 l 323 1070 q 408 1058 372 1070 q 467 1028 443 1046 q 502 987 490 1010 q 513 943 513 964 z "},"\u1ef9":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u20ab":{"ha":764,"x_min":66,"x_max":764,"o":"m 323 869 l 519 869 l 519 958 l 637 958 l 637 869 l 764 869 l 764 771 l 637 771 l 637 0 l 532 0 l 528 129 q 421 22 479 57 q 297 -12 364 -12 q 195 12 239 -12 q 123 81 152 37 q 81 188 95 125 q 66 326 66 250 q 90 480 66 413 q 155 594 113 548 q 259 665 198 641 q 395 689 319 689 q 519 672 460 689 l 519 771 l 323 771 l 323 869 m 187 334 q 221 149 187 210 q 321 89 255 89 q 415 129 366 89 q 519 248 464 169 l 519 564 q 455 584 490 577 q 386 591 420 591 q 239 529 290 591 q 187 334 187 467 m 696 -176 l 68 -176 l 68 -79 l 696 -79 l 696 -176 z "},"\u25cb":{"ha":764,"x_min":38,"x_max":726,"o":"m 382 623 q 286 603 331 623 q 208 551 241 584 q 156 472 175 517 q 136 376 136 427 q 156 281 136 326 q 208 203 175 236 q 286 150 241 170 q 382 131 331 131 q 478 150 433 131 q 556 203 523 170 q 609 281 589 236 q 628 376 628 326 q 609 472 628 427 q 556 551 589 517 q 478 603 523 584 q 382 623 433 623 m 382 721 q 516 694 453 721 q 625 620 578 667 q 699 510 672 573 q 726 376 726 448 q 699 242 726 305 q 625 133 672 180 q 516 60 578 87 q 382 33 453 33 q 248 60 311 33 q 139 133 185 87 q 65 242 92 180 q 38 376 38 305 q 65 510 38 448 q 139 620 92 573 q 248 694 185 667 q 382 721 311 721 z "},"\u2017":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 -349 l 0 -349 l 0 -262 l 764 -262 l 764 -349 m 764 -187 l 0 -187 l 0 -101 l 764 -101 l 764 -187 z "},"\u215b":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 167 572 l 167 861 l 54 800 l 17 879 l 179 966 l 273 966 l 273 572 l 167 572 m 728 101 q 715 52 728 73 q 682 17 703 31 q 632 -4 661 3 q 570 -11 603 -11 q 455 16 494 -11 q 416 93 416 42 q 434 156 416 132 q 484 195 453 179 q 439 231 456 209 q 422 293 422 253 q 432 335 422 315 q 460 368 441 354 q 508 391 479 382 q 574 399 536 399 q 682 373 644 399 q 721 300 721 347 q 706 245 721 268 q 661 206 691 222 q 689 188 677 198 q 710 166 702 178 q 723 138 719 154 q 728 101 728 122 m 626 291 q 571 321 626 321 q 530 314 545 321 q 516 291 516 307 q 533 260 516 272 q 578 238 550 248 q 613 260 600 247 q 626 291 626 273 m 630 106 q 624 123 630 115 q 609 137 618 131 q 588 149 600 144 q 563 159 576 155 q 528 137 543 151 q 513 106 513 124 q 528 78 513 87 q 571 68 543 68 q 613 77 595 68 q 630 106 630 85 z "},"\u215c":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 332 693 q 319 641 332 665 q 283 600 307 617 q 223 572 259 582 q 140 562 188 562 q 98 565 119 562 q 58 571 76 567 l 58 652 q 95 646 74 648 q 135 644 115 644 q 196 657 178 644 q 214 690 214 669 q 197 723 214 713 q 144 732 181 732 l 83 732 l 83 808 l 140 808 q 184 820 172 808 q 196 850 196 832 q 183 877 196 865 q 140 888 171 888 q 101 884 119 888 q 65 876 83 880 l 65 953 q 114 964 88 961 q 170 968 139 968 q 273 942 237 968 q 309 872 309 916 q 296 815 309 837 q 254 782 283 793 q 312 752 292 774 q 332 693 332 730 m 728 101 q 715 52 728 73 q 682 17 703 31 q 632 -4 661 3 q 570 -11 603 -11 q 455 16 494 -11 q 416 93 416 42 q 434 156 416 132 q 484 195 453 179 q 439 231 456 209 q 422 293 422 253 q 432 335 422 315 q 460 368 441 354 q 508 391 479 382 q 574 399 536 399 q 682 373 644 399 q 721 300 721 347 q 706 245 721 268 q 661 206 691 222 q 689 188 677 198 q 710 166 702 178 q 723 138 719 154 q 728 101 728 122 m 626 291 q 571 321 626 321 q 530 314 545 321 q 516 291 516 307 q 533 260 516 272 q 578 238 550 248 q 613 260 600 247 q 626 291 626 273 m 630 106 q 624 123 630 115 q 609 137 618 131 q 588 149 600 144 q 563 159 576 155 q 528 137 543 151 q 513 106 513 124 q 528 78 513 87 q 571 68 543 68 q 613 77 595 68 q 630 106 630 85 z "},"\u215d":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 728 101 q 715 52 728 73 q 682 17 703 31 q 632 -4 661 3 q 570 -11 603 -11 q 455 16 494 -11 q 416 93 416 42 q 434 156 416 132 q 484 195 453 179 q 439 231 456 209 q 422 293 422 253 q 432 335 422 315 q 460 368 441 354 q 508 391 479 382 q 574 399 536 399 q 682 373 644 399 q 721 300 721 347 q 706 245 721 268 q 661 206 691 222 q 710 166 693 190 q 728 101 728 143 m 626 291 q 571 321 626 321 q 530 314 545 321 q 516 291 516 307 q 533 260 516 272 q 578 238 550 248 q 613 260 600 247 q 626 291 626 273 m 630 106 q 624 123 630 115 q 609 137 618 131 q 588 149 600 144 q 563 159 576 155 q 528 137 543 151 q 513 106 513 124 q 571 68 513 68 q 613 77 595 68 q 630 106 630 85 m 332 696 q 287 596 332 631 q 163 562 243 562 q 115 564 143 562 q 56 572 87 567 l 56 655 q 99 648 78 651 q 140 644 119 644 q 177 647 163 644 q 199 656 191 650 q 211 671 208 663 q 214 690 214 680 q 197 723 214 714 q 139 732 180 732 l 64 732 l 64 958 l 311 958 l 311 871 l 158 871 l 158 814 l 181 814 q 240 809 212 814 q 288 792 267 805 q 320 756 308 779 q 332 696 332 733 z "},"\u215e":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 728 101 q 715 52 728 73 q 682 17 703 31 q 632 -4 661 3 q 570 -11 603 -11 q 455 16 494 -11 q 416 93 416 42 q 434 156 416 132 q 484 195 453 179 q 439 231 456 209 q 422 293 422 253 q 432 335 422 315 q 460 368 441 354 q 508 391 479 382 q 574 399 536 399 q 682 373 644 399 q 721 300 721 347 q 706 245 721 268 q 661 206 691 222 q 710 166 693 190 q 728 101 728 143 m 626 291 q 571 321 626 321 q 530 314 545 321 q 516 291 516 307 q 533 260 516 272 q 578 238 550 248 q 613 260 600 247 q 626 291 626 273 m 630 106 q 624 123 630 115 q 609 137 618 131 q 588 149 600 144 q 563 159 576 155 q 528 137 543 151 q 513 106 513 124 q 571 68 513 68 q 613 77 595 68 q 630 106 630 85 m 347 882 l 210 572 l 107 572 l 242 871 l 61 871 l 61 958 l 347 958 l 347 882 z "},"\u207f":{"ha":764,"x_min":185,"x_max":578,"o":"m 185 884 l 281 884 l 286 823 q 324 858 306 844 q 360 880 342 871 q 397 892 378 888 q 436 895 416 895 q 542 853 506 895 q 578 727 578 812 l 578 428 l 471 428 l 471 703 q 454 778 471 754 q 403 801 437 801 q 379 798 391 801 q 354 786 367 794 q 326 764 341 778 q 293 728 311 750 l 293 428 l 185 428 l 185 884 z "},"\u203c":{"ha":764,"x_min":133,"x_max":631,"o":"m 294 958 l 276 260 l 172 260 l 151 958 l 294 958 m 223 167 q 258 160 241 167 q 286 140 274 153 q 305 112 298 128 q 312 77 312 95 q 305 42 312 58 q 286 14 298 26 q 258 -5 274 2 q 223 -12 241 -12 q 188 -5 204 -12 q 159 14 172 2 q 140 42 147 26 q 133 77 133 58 q 140 112 133 95 q 159 140 147 128 q 188 160 172 153 q 223 167 204 167 m 613 958 l 595 260 l 490 260 l 470 958 l 613 958 m 542 167 q 576 160 560 167 q 605 140 593 153 q 624 112 616 128 q 631 77 631 95 q 624 42 631 58 q 605 14 616 26 q 576 -5 593 2 q 542 -12 560 -12 q 507 -5 523 -12 q 478 14 490 2 q 459 42 466 26 q 452 77 452 58 q 459 112 452 95 q 478 140 466 128 q 507 160 490 153 q 542 167 523 167 z "},"\u20a3":{"ha":764,"x_min":62,"x_max":671,"o":"m 671 783 l 292 783 l 292 591 l 587 591 l 587 499 l 292 499 l 292 378 l 587 378 l 587 286 l 292 286 l 292 0 l 171 0 l 171 286 l 62 286 l 62 378 l 171 378 l 171 499 l 62 499 l 62 591 l 171 591 l 171 886 l 671 886 l 671 783 z "},"\u20a4":{"ha":764,"x_min":72,"x_max":692,"o":"m 180 259 l 72 259 l 72 351 l 180 351 l 180 472 l 72 472 l 72 564 l 180 564 l 180 612 q 200 733 180 680 q 257 823 220 787 q 347 879 294 860 q 465 899 399 899 q 594 873 537 899 q 692 810 651 848 l 626 735 q 591 762 608 750 q 554 782 573 774 q 512 794 534 790 q 463 798 490 798 q 396 787 426 798 q 345 753 366 775 q 313 697 324 730 q 301 621 301 665 l 301 564 l 597 564 l 597 472 l 301 472 l 301 351 l 597 351 l 597 259 l 301 259 l 301 100 l 686 100 l 686 0 l 72 0 l 72 100 l 180 100 l 180 259 z "},"\u20a7":{"ha":764,"x_min":46,"x_max":734,"o":"m 460 682 q 446 600 460 640 q 404 529 433 560 q 331 478 376 497 q 224 459 286 459 l 160 459 l 160 0 l 46 0 l 46 886 l 216 886 q 309 876 264 886 q 386 841 353 865 q 440 778 420 817 q 460 682 460 739 m 535 80 q 562 73 548 76 q 589 70 576 70 q 610 72 600 70 q 628 80 620 75 q 640 95 635 86 q 644 119 644 104 q 631 154 644 138 q 599 188 617 170 q 562 226 581 205 q 532 275 543 246 l 437 275 l 437 113 q 449 83 437 91 q 482 75 460 75 q 491 76 486 75 q 501 77 496 76 l 501 -7 q 479 -9 490 -9 q 460 -10 469 -10 q 335 106 335 -10 l 335 275 l 231 275 l 231 353 l 335 353 l 335 443 l 437 472 l 437 353 l 523 353 q 534 395 526 375 q 557 430 543 415 q 594 453 572 444 q 645 462 616 462 q 682 459 662 462 q 723 448 701 456 l 723 367 q 693 377 709 374 q 664 381 678 381 q 626 370 642 381 q 610 333 610 359 q 616 308 610 319 q 630 286 621 296 q 650 264 639 275 q 673 242 661 254 q 695 218 684 231 q 715 190 707 205 q 729 156 724 174 q 734 115 734 138 q 724 54 734 79 q 695 15 713 30 q 654 -6 677 0 q 606 -13 631 -13 q 570 -10 588 -13 q 535 -3 551 -7 l 535 80 m 341 677 q 310 762 341 734 q 220 789 278 789 l 160 789 l 160 557 l 214 557 q 309 586 276 557 q 341 677 341 615 z "},"\u2310":{"ha":764,"x_min":105,"x_max":684,"o":"m 105 421 l 684 421 l 684 318 l 220 318 l 220 118 l 105 118 l 105 421 z "},"\u2229":{"ha":764,"x_min":77,"x_max":686,"o":"m 77 372 q 98 505 77 446 q 158 606 118 564 q 254 670 197 648 q 386 693 311 693 q 524 671 467 693 q 617 610 581 650 q 669 515 653 570 q 686 391 686 459 l 686 0 l 569 0 l 569 385 q 559 477 569 437 q 527 543 549 516 q 469 583 505 569 q 382 596 433 596 q 240 541 286 596 q 194 384 194 485 l 194 0 l 77 0 l 77 372 z "},"\u2261":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 542 l 90 542 l 90 642 l 673 642 l 673 542 m 673 319 l 90 319 l 90 419 l 673 419 l 673 319 m 673 97 l 90 97 l 90 197 l 673 197 l 673 97 z "},"\u2320":{"ha":764,"x_min":322,"x_max":681,"o":"m 441 -349 l 322 -349 l 322 1024 q 382 1213 322 1147 q 566 1278 443 1278 q 626 1274 595 1278 q 681 1264 656 1270 l 681 1160 q 561 1177 615 1177 q 472 1139 502 1177 q 441 1036 441 1101 l 441 -349 z "},"\u2321":{"ha":764,"x_min":83,"x_max":441,"o":"m 441 -94 q 381 -283 441 -218 q 199 -349 321 -349 q 138 -345 170 -349 q 83 -334 107 -341 l 83 -232 q 203 -248 149 -248 q 292 -210 262 -248 q 322 -106 322 -172 l 322 1278 l 441 1278 l 441 -94 z "},"\u263a":{"ha":764,"x_min":31,"x_max":732,"o":"m 277 593 q 303 587 291 593 q 325 569 315 581 q 339 544 334 558 q 345 513 345 529 q 339 481 345 496 q 325 455 334 466 q 303 438 315 444 q 277 432 291 432 q 251 438 263 432 q 230 455 239 444 q 215 481 220 466 q 210 513 210 496 q 215 544 210 529 q 230 569 220 558 q 251 587 239 581 q 277 593 263 593 m 31 450 q 54 626 31 544 q 122 768 77 708 q 233 864 167 829 q 385 899 299 899 q 536 864 471 899 q 645 769 601 829 q 710 626 688 708 q 732 450 732 545 q 710 272 732 356 q 642 125 687 188 q 532 25 597 62 q 380 -12 466 -12 q 229 24 294 -12 q 120 124 163 61 q 54 271 76 187 q 31 450 31 355 m 133 448 q 149 306 133 373 q 197 189 165 239 q 275 110 229 139 q 382 81 321 81 q 488 110 441 81 q 566 190 534 139 q 614 307 598 240 q 631 449 631 374 q 614 589 631 524 q 566 703 598 654 q 488 778 534 751 q 382 806 441 806 q 275 778 321 806 q 197 702 229 750 q 149 589 165 654 q 133 448 133 524 m 526 258 q 461 193 498 216 q 382 169 425 169 q 302 193 339 169 q 237 258 265 216 l 237 354 q 301 305 264 323 q 382 287 338 287 q 463 305 425 287 q 526 354 500 323 l 526 258 m 486 432 q 460 438 473 432 q 439 456 448 445 q 425 482 430 467 q 419 513 419 496 q 425 545 419 530 q 439 570 430 559 q 460 587 448 581 q 486 593 473 593 q 513 587 500 593 q 534 570 525 581 q 548 545 543 559 q 553 513 553 530 q 548 482 553 496 q 534 456 543 467 q 513 438 525 445 q 486 432 500 432 z "},"\u263b":{"ha":764,"x_min":53,"x_max":711,"o":"m 263 606 q 234 598 248 606 q 212 579 221 591 q 196 552 202 568 q 191 518 191 536 q 196 484 191 500 q 212 456 202 468 q 234 438 221 445 q 263 431 248 431 q 291 438 278 431 q 314 456 304 445 q 329 484 323 468 q 335 518 335 500 q 329 552 335 536 q 314 579 323 568 q 291 598 304 591 q 263 606 278 606 m 53 450 q 74 626 53 544 q 137 768 96 708 q 240 864 179 829 q 382 899 302 899 q 523 864 462 899 q 626 769 585 829 q 689 627 668 709 q 711 451 711 545 q 689 272 711 356 q 626 125 668 188 q 523 25 585 62 q 382 -12 462 -12 q 240 24 302 -12 q 137 124 179 61 q 74 271 96 187 q 53 450 53 355 m 537 333 q 469 280 509 299 q 382 261 429 261 q 295 280 335 261 q 227 333 255 299 l 227 229 q 296 159 257 184 q 382 134 336 134 q 467 159 427 134 q 537 229 507 184 l 537 333 m 500 431 q 529 438 515 431 q 552 457 543 446 q 567 485 562 469 q 573 518 573 500 q 567 553 573 536 q 552 581 562 569 q 529 599 543 592 q 500 606 515 606 q 473 599 486 606 q 450 581 460 592 q 434 553 440 569 q 429 518 429 536 q 434 485 429 500 q 450 457 440 469 q 473 438 460 446 q 500 431 486 431 z "},"\u2642":{"ha":764,"x_min":9,"x_max":753,"o":"m 342 828 l 682 966 l 753 606 l 652 586 l 623 745 l 518 548 q 606 441 573 505 q 638 302 638 377 q 613 179 638 237 q 546 79 589 122 q 446 12 503 37 q 323 -12 389 -12 q 201 12 258 -12 q 101 79 144 37 q 34 179 59 122 q 9 302 9 237 q 34 424 9 367 q 101 524 59 481 q 201 591 144 566 q 323 615 258 615 q 422 599 376 615 l 530 796 l 381 733 l 342 828 m 118 302 q 134 221 118 258 q 178 155 150 183 q 243 111 206 127 q 323 95 281 95 q 404 111 366 95 q 470 155 441 127 q 514 221 498 183 q 530 302 530 258 q 514 382 530 345 q 470 448 498 420 q 404 493 441 477 q 323 509 366 509 q 243 493 281 509 q 178 448 206 477 q 134 382 150 420 q 118 302 118 345 z "},"\u2640":{"ha":764,"x_min":68,"x_max":696,"o":"m 585 128 l 437 128 l 437 0 l 327 0 l 327 128 l 179 128 l 179 228 l 327 228 l 327 344 q 223 381 271 354 q 142 450 176 409 q 87 543 107 491 q 68 653 68 595 q 93 775 68 718 q 160 875 117 832 q 259 942 202 918 q 382 966 317 966 q 504 942 447 966 q 604 875 562 918 q 672 775 647 832 q 696 653 696 718 q 677 543 696 595 q 622 450 657 491 q 540 381 587 409 q 437 344 493 354 l 437 228 l 585 228 l 585 128 m 176 653 q 192 572 176 610 q 236 506 208 534 q 302 462 264 478 q 382 446 339 446 q 462 462 425 446 q 528 506 500 478 q 572 572 556 534 q 588 653 588 610 q 572 733 588 696 q 528 800 556 771 q 462 844 500 828 q 382 861 425 861 q 302 844 339 861 q 236 800 264 828 q 192 733 208 771 q 176 653 176 696 z "},"\u2665":{"ha":764,"x_min":21,"x_max":743,"o":"m 382 752 q 469 854 418 822 q 573 886 520 886 q 637 873 606 886 q 691 836 668 861 q 729 775 715 811 q 743 692 743 739 q 732 616 743 654 q 702 535 722 578 q 651 440 682 492 q 581 322 621 388 q 491 174 541 256 q 382 -12 441 92 q 273 174 322 92 q 183 322 223 256 q 112 440 142 388 q 62 535 82 492 q 31 616 41 578 q 21 692 21 654 q 35 775 21 739 q 72 836 49 811 q 126 873 96 861 q 191 886 157 886 q 294 854 243 886 q 382 752 345 822 z "},"\u2666":{"ha":764,"x_min":22,"x_max":741,"o":"m 741 437 q 551 223 643 334 q 382 -12 460 112 q 212 223 304 112 q 22 437 121 334 q 212 652 121 541 q 382 886 304 763 q 551 652 460 763 q 741 437 643 541 z "},"\u2663":{"ha":764,"x_min":24,"x_max":739,"o":"m 382 886 q 454 873 422 886 q 508 839 486 861 q 541 788 530 817 q 552 726 552 758 q 530 641 552 685 q 471 553 507 596 q 527 573 500 564 q 574 583 553 583 q 641 570 610 583 q 693 534 671 557 q 727 481 715 511 q 739 415 739 450 q 727 347 739 378 q 693 295 714 317 q 643 262 671 274 q 583 251 614 251 q 504 271 543 251 q 425 329 466 291 l 454 0 l 310 0 l 339 329 q 259 271 298 291 q 181 251 221 251 q 121 262 149 251 q 71 295 92 274 q 37 347 50 317 q 24 415 24 378 q 37 480 24 450 q 71 533 50 511 q 122 568 93 555 q 184 581 151 581 q 239 572 212 581 q 293 553 266 564 q 234 641 256 596 q 212 726 212 685 q 223 788 212 758 q 256 839 234 817 q 310 873 278 861 q 382 886 341 886 z "},"\u2660":{"ha":764,"x_min":28,"x_max":736,"o":"m 382 886 q 537 687 471 768 q 648 547 604 606 q 714 445 692 488 q 736 358 736 401 q 724 295 736 322 q 691 249 711 267 q 643 220 670 230 q 587 210 616 210 q 502 236 541 210 q 425 304 463 262 l 454 0 l 310 0 l 339 304 q 262 236 301 262 q 176 210 222 210 q 120 220 147 210 q 73 249 94 230 q 40 295 52 267 q 28 358 28 322 q 50 445 28 401 q 116 547 72 488 q 227 687 160 606 q 382 886 293 768 z "},"\u266a":{"ha":764,"x_min":114,"x_max":659,"o":"m 555 235 q 572 270 564 250 q 586 313 580 290 q 596 362 593 336 q 600 416 600 388 q 592 492 600 453 q 563 567 583 530 q 509 635 543 603 q 424 694 475 668 l 424 229 q 410 134 424 178 q 370 58 396 90 q 304 6 343 25 q 217 -13 266 -13 q 141 13 169 -13 q 114 84 114 39 q 126 140 114 112 q 162 191 139 168 q 216 228 184 214 q 286 242 248 242 q 362 227 322 242 l 362 966 l 423 966 l 423 955 q 433 904 423 928 q 459 854 443 880 q 497 803 475 829 q 541 748 518 777 q 584 685 563 718 q 622 614 606 652 q 649 532 639 576 q 659 437 659 488 q 640 322 659 376 q 591 218 621 267 l 555 235 z "},"\u266b":{"ha":764,"x_min":14,"x_max":750,"o":"m 262 871 l 750 966 l 750 297 q 736 202 750 246 q 696 125 722 158 q 631 74 669 93 q 543 55 592 55 q 468 81 495 55 q 440 152 440 107 q 453 208 440 180 q 488 259 465 236 q 542 296 511 281 q 612 310 574 310 q 688 294 648 310 l 688 670 l 323 599 l 323 229 q 310 134 323 178 q 269 58 296 90 q 204 6 243 25 q 117 -13 165 -13 q 41 13 68 -13 q 14 84 14 39 q 26 140 14 112 q 61 191 39 168 q 116 228 84 214 q 186 242 147 242 q 262 227 222 242 l 262 871 m 688 859 l 323 789 l 323 694 l 688 765 l 688 859 z "},"\u263c":{"ha":764,"x_min":42,"x_max":721,"o":"m 172 618 l 229 561 q 279 588 252 576 q 334 604 305 599 l 334 681 l 429 681 l 429 604 q 484 588 458 599 q 534 560 511 576 l 591 617 l 659 549 l 602 492 q 630 442 618 469 q 646 387 641 416 l 721 387 l 721 292 l 646 292 q 602 187 635 235 l 659 131 l 591 63 l 534 119 q 429 76 487 86 l 429 0 l 334 0 l 334 76 q 279 92 305 81 q 229 119 253 103 l 174 63 l 106 131 l 161 186 q 134 236 145 210 q 117 292 122 262 l 42 292 l 42 387 l 117 387 q 133 443 122 416 q 161 493 144 469 l 104 551 l 172 618 m 200 340 q 214 269 200 302 q 253 211 229 236 q 311 172 278 186 q 381 158 344 158 q 452 172 418 158 q 510 211 485 186 q 549 269 534 236 q 563 340 563 302 q 549 411 563 378 q 510 469 534 444 q 452 508 485 494 q 381 523 418 523 q 311 508 344 523 q 253 469 278 494 q 214 411 229 444 q 200 340 200 378 z "},"\u2736":{"ha":764,"x_min":29,"x_max":734,"o":"m 384 804 l 447 513 l 731 603 l 734 600 l 513 399 l 734 198 l 732 194 l 447 285 l 384 -7 l 379 -7 l 315 285 l 32 194 l 29 197 l 250 398 l 29 599 l 31 603 l 315 513 l 379 804 l 384 804 z "},"\u2302":{"ha":764,"x_min":71,"x_max":693,"o":"m 71 446 l 382 711 l 693 446 l 693 0 l 71 0 l 71 446 m 186 115 l 578 115 l 578 395 l 382 562 l 186 395 l 186 115 z "},"\u2043":{"ha":764,"x_min":179,"x_max":585,"o":"m 585 271 l 179 271 l 179 497 l 585 497 l 585 271 z "},"\u25d8":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 1031 l 764 1031 l 764 -349 l 0 -349 l 0 1031 m 382 590 q 301 574 339 590 q 236 529 264 557 q 191 464 208 501 q 175 383 175 426 q 191 303 175 340 q 236 237 208 265 q 301 193 264 209 q 382 176 339 176 q 462 193 425 176 q 528 237 500 209 q 572 303 556 265 q 589 383 589 340 q 572 464 589 426 q 528 529 556 501 q 462 574 500 557 q 382 590 425 590 z "},"\u25d9":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 0 l 0 764 l 764 764 l 764 0 l 0 0 m 12 381 q 41 237 12 304 q 121 120 71 170 q 238 41 171 70 q 381 12 305 12 q 526 41 458 12 q 644 120 593 70 q 723 237 694 170 q 751 381 751 304 q 723 526 751 458 q 644 644 694 593 q 526 723 593 694 q 381 751 458 751 q 283 738 330 751 q 195 701 236 725 q 120 643 154 677 q 63 569 87 610 q 25 480 39 528 q 12 381 12 433 m 80 381 q 103 500 80 445 q 168 597 127 556 q 263 663 208 639 q 381 687 318 687 q 499 663 444 687 q 596 597 555 639 q 660 500 637 556 q 684 381 684 445 q 660 263 684 319 q 596 166 637 208 q 499 101 555 125 q 381 77 444 77 q 263 101 318 77 q 168 166 208 125 q 103 263 127 208 q 80 381 80 319 z "},"\u25a0":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 0 l 0 764 l 764 764 l 764 0 l 0 0 z "},"\u25b2":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 0 l 382 764 l 764 0 l 0 0 z "},"\u25bc":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 764 l 382 0 l 0 764 l 764 764 z "},"\u25aa":{"ha":764,"x_min":185,"x_max":579,"o":"m 579 581 l 579 186 l 185 186 l 185 581 l 579 581 z "},"\u25b4":{"ha":764,"x_min":138,"x_max":626,"o":"m 626 172 l 138 172 l 382 595 l 626 172 z "},"\u25be":{"ha":764,"x_min":138,"x_max":626,"o":"m 138 595 l 626 595 l 382 172 l 138 595 z "},"\u25c2":{"ha":764,"x_min":170,"x_max":593,"o":"m 593 627 l 593 139 l 170 383 l 593 627 z "},"\u25b8":{"ha":764,"x_min":170,"x_max":593,"o":"m 170 139 l 170 627 l 593 383 l 170 139 z "},"\u25c4":{"ha":764,"x_min":34,"x_max":730,"o":"m 730 139 l 34 383 l 730 627 l 730 139 z "},"\u25ba":{"ha":764,"x_min":34,"x_max":730,"o":"m 34 139 l 34 627 l 730 383 l 34 139 z "},"\u2191":{"ha":764,"x_min":114,"x_max":650,"o":"m 189 591 l 114 657 l 382 966 l 650 657 l 574 591 l 429 774 l 433 648 l 433 0 l 330 0 l 330 648 l 334 774 l 189 591 z "},"\u2193":{"ha":764,"x_min":114,"x_max":650,"o":"m 574 363 l 650 297 l 382 -12 l 114 297 l 189 363 l 335 180 l 330 306 l 330 954 l 433 954 l 433 306 l 429 180 l 574 363 z "},"\u2195":{"ha":764,"x_min":114,"x_max":650,"o":"m 575 349 l 650 283 l 382 -12 l 114 283 l 189 349 l 335 178 l 330 304 l 330 650 l 334 776 l 189 606 l 114 671 l 382 966 l 650 671 l 575 606 l 429 776 l 433 650 l 433 304 l 429 178 l 575 349 z "},"\u21a8":{"ha":764,"x_min":114,"x_max":650,"o":"m 577 450 l 650 387 l 382 112 l 114 387 l 186 450 l 335 298 l 330 423 l 330 655 l 334 781 l 186 628 l 114 691 l 382 966 l 650 691 l 577 628 l 429 781 l 433 655 l 433 423 l 429 298 l 577 450 m 142 102 l 622 102 l 622 0 l 142 0 l 142 102 z "},"\u2190":{"ha":764,"x_min":14,"x_max":750,"o":"m 389 191 l 323 115 l 14 383 l 323 651 l 389 576 l 206 430 l 332 435 l 750 435 l 750 332 l 332 332 l 206 336 l 389 191 z "},"\u2192":{"ha":764,"x_min":14,"x_max":750,"o":"m 375 576 l 441 651 l 750 383 l 441 115 l 375 191 l 557 336 l 432 332 l 14 332 l 14 435 l 432 435 l 557 431 l 375 576 z "},"\u2194":{"ha":764,"x_min":7,"x_max":757,"o":"m 444 585 l 509 651 l 757 383 l 509 115 l 444 182 l 581 336 l 456 334 l 308 334 l 182 336 l 320 182 l 255 115 l 7 383 l 255 651 l 320 585 l 182 430 l 308 433 l 456 433 l 581 431 l 444 585 z "},"\u221f":{"ha":764,"x_min":34,"x_max":730,"o":"m 730 0 l 34 0 l 34 696 l 137 696 l 137 103 l 730 103 l 730 0 z "},"\u25ac":{"ha":764,"x_min":34,"x_max":730,"o":"m 34 382 l 34 682 l 730 682 l 730 382 l 34 382 z "},"\u2588":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 -349 l 0 1278 l 764 1278 l 764 -349 l 0 -349 z "},"\u2580":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 465 l 0 1278 l 764 1278 l 764 465 l 0 465 z "},"\u258c":{"ha":764,"x_min":0,"x_max":382,"o":"m 382 -349 l 0 -349 l 0 1278 l 382 1278 l 382 -349 z "},"\u2590":{"ha":764,"x_min":382,"x_max":764,"o":"m 382 1278 l 764 1278 l 764 -349 l 382 -349 l 382 1278 z "},"\u2584":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 465 l 764 -349 l 0 -349 l 0 465 l 764 465 z "},"\u2591":{"ha":764,"x_min":0,"x_max":701,"o":"m 510 1278 l 574 1278 l 574 1215 l 510 1215 l 510 1278 m 255 1278 l 319 1278 l 319 1215 l 255 1215 l 255 1278 m 0 1278 l 64 1278 l 64 1215 l 0 1215 l 0 1278 m 637 1153 l 701 1153 l 701 1090 l 637 1090 l 637 1153 m 382 1153 l 446 1153 l 446 1090 l 382 1090 l 382 1153 m 127 1153 l 191 1153 l 191 1090 l 127 1090 l 127 1153 m 510 1028 l 574 1028 l 574 966 l 510 966 l 510 1028 m 255 1028 l 319 1028 l 319 966 l 255 966 l 255 1028 m 0 1028 l 64 1028 l 64 966 l 0 966 l 0 1028 m 637 903 l 701 903 l 701 841 l 637 841 l 637 903 m 382 903 l 446 903 l 446 841 l 382 841 l 382 903 m 127 903 l 191 903 l 191 841 l 127 841 l 127 903 m 510 779 l 574 779 l 574 716 l 510 716 l 510 779 m 255 779 l 319 779 l 319 716 l 255 716 l 255 779 m 0 779 l 64 779 l 64 716 l 0 716 l 0 779 m 637 654 l 701 654 l 701 591 l 637 591 l 637 654 m 382 654 l 446 654 l 446 591 l 382 591 l 382 654 m 127 654 l 191 654 l 191 591 l 127 591 l 127 654 m 510 529 l 574 529 l 574 467 l 510 467 l 510 529 m 255 529 l 319 529 l 319 467 l 255 467 l 255 529 m 0 529 l 64 529 l 64 467 l 0 467 l 0 529 m 637 404 l 701 404 l 701 342 l 637 342 l 637 404 m 382 404 l 446 404 l 446 342 l 382 342 l 382 404 m 127 404 l 191 404 l 191 342 l 127 342 l 127 404 m 510 279 l 574 279 l 574 217 l 510 217 l 510 279 m 255 279 l 319 279 l 319 217 l 255 217 l 255 279 m 0 279 l 64 279 l 64 217 l 0 217 l 0 279 m 637 155 l 701 155 l 701 92 l 637 92 l 637 155 m 382 155 l 446 155 l 446 92 l 382 92 l 382 155 m 127 155 l 191 155 l 191 92 l 127 92 l 127 155 m 510 30 l 574 30 l 574 -33 l 510 -33 l 510 30 m 255 30 l 319 30 l 319 -33 l 255 -33 l 255 30 m 0 30 l 64 30 l 64 -33 l 0 -33 l 0 30 m 637 -95 l 701 -95 l 701 -157 l 637 -157 l 637 -95 m 382 -95 l 446 -95 l 446 -157 l 382 -157 l 382 -95 m 127 -95 l 191 -95 l 191 -157 l 127 -157 l 127 -95 m 510 -220 l 574 -220 l 574 -282 l 510 -282 l 510 -220 m 255 -220 l 319 -220 l 319 -282 l 255 -282 l 255 -220 m 0 -220 l 64 -220 l 64 -282 l 0 -282 l 0 -220 z "},"\u2592":{"ha":764,"x_min":0,"x_max":764,"o":"m 637 1278 l 701 1278 l 701 1215 l 637 1215 l 637 1278 m 382 1278 l 446 1278 l 446 1215 l 382 1215 l 382 1278 m 510 1278 l 574 1278 l 574 1215 l 510 1215 l 510 1278 m 255 1278 l 319 1278 l 319 1215 l 255 1215 l 255 1278 m 0 1278 l 64 1278 l 64 1215 l 0 1215 l 0 1278 m 127 1278 l 191 1278 l 191 1215 l 127 1215 l 127 1278 m 701 1153 l 764 1153 l 764 1090 l 701 1090 l 701 1153 m 446 1153 l 510 1153 l 510 1090 l 446 1090 l 446 1153 m 574 1153 l 637 1153 l 637 1090 l 574 1090 l 574 1153 m 319 1153 l 382 1153 l 382 1090 l 319 1090 l 319 1153 m 64 1153 l 127 1153 l 127 1090 l 64 1090 l 64 1153 m 191 1153 l 255 1153 l 255 1090 l 191 1090 l 191 1153 m 637 1028 l 701 1028 l 701 966 l 637 966 l 637 1028 m 382 1028 l 446 1028 l 446 966 l 382 966 l 382 1028 m 510 1028 l 574 1028 l 574 966 l 510 966 l 510 1028 m 255 1028 l 319 1028 l 319 966 l 255 966 l 255 1028 m 0 1028 l 64 1028 l 64 966 l 0 966 l 0 1028 m 127 1028 l 191 1028 l 191 966 l 127 966 l 127 1028 m 701 903 l 764 903 l 764 841 l 701 841 l 701 903 m 446 903 l 510 903 l 510 841 l 446 841 l 446 903 m 574 903 l 637 903 l 637 841 l 574 841 l 574 903 m 319 903 l 382 903 l 382 841 l 319 841 l 319 903 m 64 903 l 127 903 l 127 841 l 64 841 l 64 903 m 191 903 l 255 903 l 255 841 l 191 841 l 191 903 m 637 779 l 701 779 l 701 716 l 637 716 l 637 779 m 382 779 l 446 779 l 446 716 l 382 716 l 382 779 m 510 779 l 574 779 l 574 716 l 510 716 l 510 779 m 255 779 l 319 779 l 319 716 l 255 716 l 255 779 m 0 779 l 64 779 l 64 716 l 0 716 l 0 779 m 127 779 l 191 779 l 191 716 l 127 716 l 127 779 m 701 654 l 764 654 l 764 591 l 701 591 l 701 654 m 446 654 l 510 654 l 510 591 l 446 591 l 446 654 m 574 654 l 637 654 l 637 591 l 574 591 l 574 654 m 319 654 l 382 654 l 382 591 l 319 591 l 319 654 m 64 654 l 127 654 l 127 591 l 64 591 l 64 654 m 191 654 l 255 654 l 255 591 l 191 591 l 191 654 m 637 529 l 701 529 l 701 467 l 637 467 l 637 529 m 382 529 l 446 529 l 446 467 l 382 467 l 382 529 m 510 529 l 574 529 l 574 467 l 510 467 l 510 529 m 255 529 l 319 529 l 319 467 l 255 467 l 255 529 m 0 529 l 64 529 l 64 467 l 0 467 l 0 529 m 127 529 l 191 529 l 191 467 l 127 467 l 127 529 m 701 404 l 764 404 l 764 342 l 701 342 l 701 404 m 446 404 l 510 404 l 510 342 l 446 342 l 446 404 m 574 404 l 637 404 l 637 342 l 574 342 l 574 404 m 319 404 l 382 404 l 382 342 l 319 342 l 319 404 m 64 404 l 127 404 l 127 342 l 64 342 l 64 404 m 191 404 l 255 404 l 255 342 l 191 342 l 191 404 m 637 279 l 701 279 l 701 217 l 637 217 l 637 279 m 382 279 l 446 279 l 446 217 l 382 217 l 382 279 m 510 279 l 574 279 l 574 217 l 510 217 l 510 279 m 255 279 l 319 279 l 319 217 l 255 217 l 255 279 m 0 279 l 64 279 l 64 217 l 0 217 l 0 279 m 127 279 l 191 279 l 191 217 l 127 217 l 127 279 m 701 155 l 764 155 l 764 92 l 701 92 l 701 155 m 446 155 l 510 155 l 510 92 l 446 92 l 446 155 m 574 155 l 637 155 l 637 92 l 574 92 l 574 155 m 319 155 l 382 155 l 382 92 l 319 92 l 319 155 m 64 155 l 127 155 l 127 92 l 64 92 l 64 155 m 191 155 l 255 155 l 255 92 l 191 92 l 191 155 m 637 30 l 701 30 l 701 -33 l 637 -33 l 637 30 m 382 30 l 446 30 l 446 -33 l 382 -33 l 382 30 m 510 30 l 574 30 l 574 -33 l 510 -33 l 510 30 m 255 30 l 319 30 l 319 -33 l 255 -33 l 255 30 m 0 30 l 64 30 l 64 -33 l 0 -33 l 0 30 m 127 30 l 191 30 l 191 -33 l 127 -33 l 127 30 m 701 -95 l 764 -95 l 764 -157 l 701 -157 l 701 -95 m 446 -95 l 510 -95 l 510 -157 l 446 -157 l 446 -95 m 574 -95 l 637 -95 l 637 -157 l 574 -157 l 574 -95 m 319 -95 l 382 -95 l 382 -157 l 319 -157 l 319 -95 m 64 -95 l 127 -95 l 127 -157 l 64 -157 l 64 -95 m 191 -95 l 255 -95 l 255 -157 l 191 -157 l 191 -95 m 637 -220 l 701 -220 l 701 -282 l 637 -282 l 637 -220 m 382 -220 l 446 -220 l 446 -282 l 382 -282 l 382 -220 m 510 -220 l 574 -220 l 574 -282 l 510 -282 l 510 -220 m 255 -220 l 319 -220 l 319 -282 l 255 -282 l 255 -220 m 0 -220 l 64 -220 l 64 -282 l 0 -282 l 0 -220 m 127 -220 l 191 -220 l 191 -282 l 127 -282 l 127 -220 z "},"\u2593":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 -282 l 0 1278 l 764 1278 l 764 1215 l 701 1215 l 701 1153 l 764 1153 l 764 1090 l 701 1090 l 701 1028 l 764 1028 l 764 966 l 701 966 l 701 903 l 764 903 l 764 841 l 701 841 l 701 779 l 764 779 l 764 716 l 701 716 l 701 654 l 764 654 l 764 591 l 701 591 l 701 529 l 764 529 l 764 467 l 701 467 l 701 404 l 764 404 l 764 342 l 701 342 l 701 279 l 764 279 l 764 217 l 701 217 l 701 155 l 764 155 l 764 92 l 701 92 l 701 30 l 764 30 l 764 -33 l 701 -33 l 701 -95 l 764 -95 l 764 -157 l 701 -157 l 701 -220 l 764 -220 l 764 -282 l 701 -282 l 701 -349 l 637 -349 l 637 -282 l 574 -282 l 574 -349 l 510 -349 l 510 -282 l 446 -282 l 446 -349 l 382 -349 l 382 -282 l 319 -282 l 319 -349 l 255 -349 l 255 -282 l 191 -282 l 191 -349 l 127 -349 l 127 -282 l 64 -282 l 64 -349 l 0 -349 l 0 -282 m 574 1090 l 574 1028 l 637 1028 l 637 1090 l 574 1090 m 574 1153 l 637 1153 l 637 1215 l 574 1215 l 574 1153 m 446 1090 l 446 1028 l 510 1028 l 510 1090 l 446 1090 m 574 591 l 574 529 l 637 529 l 637 591 l 574 591 m 319 591 l 319 529 l 382 529 l 382 591 l 319 591 m 64 591 l 64 529 l 127 529 l 127 591 l 64 591 m 446 1153 l 510 1153 l 510 1215 l 446 1215 l 446 1153 m 191 841 l 191 779 l 255 779 l 255 841 l 191 841 m 191 1090 l 191 1028 l 255 1028 l 255 1090 l 191 1090 m 191 903 l 255 903 l 255 966 l 191 966 l 191 903 m 191 404 l 255 404 l 255 467 l 191 467 l 191 404 m 446 155 l 510 155 l 510 217 l 446 217 l 446 155 m 319 155 l 382 155 l 382 217 l 319 217 l 319 155 m 191 155 l 255 155 l 255 217 l 191 217 l 191 155 m 446 654 l 510 654 l 510 716 l 446 716 l 446 654 m 446 591 l 446 529 l 510 529 l 510 591 l 446 591 m 574 654 l 637 654 l 637 716 l 574 716 l 574 654 m 446 -95 l 510 -95 l 510 -33 l 446 -33 l 446 -95 m 319 654 l 382 654 l 382 716 l 319 716 l 319 654 m 319 -95 l 382 -95 l 382 -33 l 319 -33 l 319 -95 m 64 654 l 127 654 l 127 716 l 64 716 l 64 654 m 191 -95 l 255 -95 l 255 -33 l 191 -33 l 191 -95 m 191 654 l 255 654 l 255 716 l 191 716 l 191 654 m 191 591 l 191 529 l 255 529 l 255 591 l 191 591 m 64 841 l 64 779 l 127 779 l 127 841 l 64 841 m 191 1153 l 255 1153 l 255 1215 l 191 1215 l 191 1153 m 64 903 l 127 903 l 127 966 l 64 966 l 64 903 m 319 841 l 319 779 l 382 779 l 382 841 l 319 841 m 64 1090 l 64 1028 l 127 1028 l 127 1090 l 64 1090 m 574 404 l 637 404 l 637 467 l 574 467 l 574 404 m 319 903 l 382 903 l 382 966 l 319 966 l 319 903 m 446 342 l 446 279 l 510 279 l 510 342 l 446 342 m 446 404 l 510 404 l 510 467 l 446 467 l 446 404 m 574 841 l 574 779 l 637 779 l 637 841 l 574 841 m 574 342 l 574 279 l 637 279 l 637 342 l 574 342 m 319 404 l 382 404 l 382 467 l 319 467 l 319 404 m 319 342 l 319 279 l 382 279 l 382 342 l 319 342 m 64 404 l 127 404 l 127 467 l 64 467 l 64 404 m 64 342 l 64 279 l 127 279 l 127 342 l 64 342 m 64 1153 l 127 1153 l 127 1215 l 64 1215 l 64 1153 m 191 342 l 191 279 l 255 279 l 255 342 l 191 342 m 574 903 l 637 903 l 637 966 l 574 966 l 574 903 m 446 841 l 446 779 l 510 779 l 510 841 l 446 841 m 446 92 l 446 30 l 510 30 l 510 92 l 446 92 m 574 155 l 637 155 l 637 217 l 574 217 l 574 155 m 574 92 l 574 30 l 637 30 l 637 92 l 574 92 m 319 1090 l 319 1028 l 382 1028 l 382 1090 l 319 1090 m 319 92 l 319 30 l 382 30 l 382 92 l 319 92 m 64 155 l 127 155 l 127 217 l 64 217 l 64 155 m 64 92 l 64 30 l 127 30 l 127 92 l 64 92 m 191 92 l 191 30 l 255 30 l 255 92 l 191 92 m 446 903 l 510 903 l 510 966 l 446 966 l 446 903 m 446 -157 l 446 -220 l 510 -220 l 510 -157 l 446 -157 m 574 -95 l 637 -95 l 637 -33 l 574 -33 l 574 -95 m 574 -157 l 574 -220 l 637 -220 l 637 -157 l 574 -157 m 319 -157 l 319 -220 l 382 -220 l 382 -157 l 319 -157 m 64 -95 l 127 -95 l 127 -33 l 64 -33 l 64 -95 m 64 -157 l 64 -220 l 127 -220 l 127 -157 l 64 -157 m 191 -157 l 191 -220 l 255 -220 l 255 -157 l 191 -157 m 319 1153 l 382 1153 l 382 1215 l 319 1215 l 319 1153 z "},"\u2502":{"ha":764,"x_min":331,"x_max":433,"o":"m 331 -349 l 331 1278 l 433 1278 l 433 -349 l 331 -349 z "},"\u253c":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 414 l 433 414 l 433 -349 l 331 -349 l 331 414 l 0 414 l 0 515 l 331 515 l 331 1278 l 433 1278 l 433 515 l 764 515 l 764 414 z "},"\u2524":{"ha":764,"x_min":0,"x_max":433,"o":"m 331 -349 l 331 414 l 0 414 l 0 515 l 331 515 l 331 1278 l 433 1278 l 433 -349 l 331 -349 z "},"\u251c":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 414 l 433 414 l 433 -349 l 331 -349 l 331 1278 l 433 1278 l 433 515 l 764 515 l 764 414 z "},"\u2534":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 414 l 0 414 l 0 515 l 331 515 l 331 1278 l 433 1278 l 433 515 l 764 515 l 764 414 z "},"\u2518":{"ha":764,"x_min":0,"x_max":433,"o":"m 433 414 l 0 414 l 0 515 l 331 515 l 331 1278 l 433 1278 l 433 414 z "},"\u2514":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 414 l 331 414 l 331 1278 l 433 1278 l 433 515 l 764 515 l 764 414 z "},"\u252c":{"ha":764,"x_min":0,"x_max":764,"o":"m 331 -349 l 331 414 l 0 414 l 0 515 l 764 515 l 764 414 l 433 414 l 433 -349 l 331 -349 z "},"\u2510":{"ha":764,"x_min":0,"x_max":433,"o":"m 331 -349 l 331 414 l 0 414 l 0 515 l 433 515 l 433 -349 l 331 -349 z "},"\u250c":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 414 l 433 414 l 433 -349 l 331 -349 l 331 515 l 764 515 l 764 414 z "},"\u2500":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 414 l 0 414 l 0 515 l 764 515 l 764 414 z "},"\u256a":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 515 l 0 515 l 0 617 l 331 617 l 331 1278 l 433 1278 l 433 617 l 764 617 l 764 515 m 764 312 l 433 312 l 433 -349 l 331 -349 l 331 312 l 0 312 l 0 414 l 764 414 l 764 312 z "},"\u2561":{"ha":764,"x_min":0,"x_max":433,"o":"m 433 515 l 0 515 l 0 617 l 331 617 l 331 1278 l 433 1278 l 433 515 m 433 414 l 433 -349 l 331 -349 l 331 312 l 0 312 l 0 414 l 433 414 z "},"\u255e":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 515 l 331 515 l 331 1278 l 433 1278 l 433 617 l 764 617 l 764 515 m 764 312 l 433 312 l 433 -349 l 331 -349 l 331 414 l 764 414 l 764 312 z "},"\u2567":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 515 l 0 515 l 0 617 l 331 617 l 331 1278 l 433 1278 l 433 617 l 764 617 l 764 515 m 764 312 l 0 312 l 0 414 l 764 414 l 764 312 z "},"\u255b":{"ha":764,"x_min":0,"x_max":433,"o":"m 433 515 l 0 515 l 0 617 l 331 617 l 331 1278 l 433 1278 l 433 515 m 433 312 l 0 312 l 0 414 l 433 414 l 433 312 z "},"\u2558":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 515 l 331 515 l 331 1278 l 433 1278 l 433 617 l 764 617 l 764 515 m 764 312 l 331 312 l 331 414 l 764 414 l 764 312 z "},"\u2564":{"ha":764,"x_min":0,"x_max":764,"o":"m 331 -349 l 331 312 l 0 312 l 0 414 l 764 414 l 764 312 l 433 312 l 433 -349 l 331 -349 m 764 515 l 0 515 l 0 617 l 764 617 l 764 515 z "},"\u2555":{"ha":764,"x_min":0,"x_max":433,"o":"m 331 -349 l 331 312 l 0 312 l 0 414 l 433 414 l 433 -349 l 331 -349 m 433 515 l 0 515 l 0 617 l 433 617 l 433 515 z "},"\u2552":{"ha":764,"x_min":331,"x_max":764,"o":"m 764 312 l 433 312 l 433 -349 l 331 -349 l 331 414 l 764 414 l 764 312 m 764 515 l 331 515 l 331 617 l 764 617 l 764 515 z "},"\u2551":{"ha":764,"x_min":229,"x_max":534,"o":"m 229 1278 l 331 1278 l 331 -349 l 229 -349 l 229 1278 m 433 -349 l 433 1278 l 534 1278 l 534 -349 l 433 -349 z "},"\u256c":{"ha":764,"x_min":0,"x_max":764,"o":"m 331 515 l 0 515 l 0 617 l 229 617 l 229 1278 l 331 1278 l 331 515 m 433 515 l 433 1278 l 534 1278 l 534 617 l 764 617 l 764 515 l 433 515 m 433 414 l 764 414 l 764 312 l 534 312 l 534 -349 l 433 -349 l 433 414 m 331 414 l 331 -349 l 229 -349 l 229 312 l 0 312 l 0 414 l 331 414 z "},"\u2563":{"ha":764,"x_min":0,"x_max":534,"o":"m 433 1278 l 534 1278 l 534 -349 l 433 -349 l 433 1278 m 331 414 l 331 -349 l 229 -349 l 229 312 l 0 312 l 0 414 l 331 414 m 331 515 l 0 515 l 0 617 l 229 617 l 229 1278 l 331 1278 l 331 515 z "},"\u2560":{"ha":764,"x_min":229,"x_max":764,"o":"m 331 1278 l 331 -349 l 229 -349 l 229 1278 l 331 1278 m 764 515 l 433 515 l 433 1278 l 534 1278 l 534 617 l 764 617 l 764 515 m 764 312 l 534 312 l 534 -349 l 433 -349 l 433 414 l 764 414 l 764 312 z "},"\u2569":{"ha":764,"x_min":0,"x_max":764,"o":"m 331 515 l 0 515 l 0 617 l 229 617 l 229 1278 l 331 1278 l 331 515 m 433 515 l 433 1278 l 534 1278 l 534 617 l 764 617 l 764 515 l 433 515 m 0 414 l 764 414 l 764 312 l 0 312 l 0 414 z "},"\u255d":{"ha":764,"x_min":0,"x_max":534,"o":"m 0 312 l 0 414 l 433 414 l 433 1278 l 534 1278 l 534 312 l 0 312 m 331 515 l 0 515 l 0 617 l 229 617 l 229 1278 l 331 1278 l 331 515 z "},"\u255a":{"ha":764,"x_min":229,"x_max":764,"o":"m 229 312 l 229 1278 l 331 1278 l 331 414 l 764 414 l 764 312 l 229 312 m 433 515 l 433 1278 l 534 1278 l 534 617 l 764 617 l 764 515 l 433 515 z "},"\u2566":{"ha":764,"x_min":0,"x_max":764,"o":"m 331 414 l 331 -349 l 229 -349 l 229 312 l 0 312 l 0 414 l 331 414 m 433 414 l 764 414 l 764 312 l 534 312 l 534 -349 l 433 -349 l 433 414 m 0 617 l 764 617 l 764 515 l 0 515 l 0 617 z "},"\u2557":{"ha":764,"x_min":0,"x_max":534,"o":"m 534 617 l 534 -349 l 433 -349 l 433 515 l 0 515 l 0 617 l 534 617 m 331 414 l 331 -349 l 229 -349 l 229 312 l 0 312 l 0 414 l 331 414 z "},"\u2554":{"ha":764,"x_min":229,"x_max":764,"o":"m 764 617 l 764 515 l 331 515 l 331 -349 l 229 -349 l 229 617 l 764 617 m 433 414 l 764 414 l 764 312 l 534 312 l 534 -349 l 433 -349 l 433 414 z "},"\u2550":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 617 l 764 617 l 764 515 l 0 515 l 0 617 m 0 414 l 764 414 l 764 312 l 0 312 l 0 414 z "},"\u256b":{"ha":764,"x_min":0,"x_max":764,"o":"m 229 1278 l 331 1278 l 331 -349 l 229 -349 l 229 414 l 0 414 l 0 515 l 229 515 l 229 1278 m 433 -349 l 433 1278 l 534 1278 l 534 515 l 764 515 l 764 414 l 534 414 l 534 -349 l 433 -349 z "},"\u2562":{"ha":764,"x_min":0,"x_max":534,"o":"m 229 1278 l 331 1278 l 331 -349 l 229 -349 l 229 414 l 0 414 l 0 515 l 229 515 l 229 1278 m 433 -349 l 433 1278 l 534 1278 l 534 -349 l 433 -349 z "},"\u255f":{"ha":764,"x_min":229,"x_max":764,"o":"m 433 -349 l 433 1278 l 534 1278 l 534 515 l 764 515 l 764 414 l 534 414 l 534 -349 l 433 -349 m 229 1278 l 331 1278 l 331 -349 l 229 -349 l 229 1278 z "},"\u2568":{"ha":764,"x_min":0,"x_max":764,"o":"m 229 1278 l 331 1278 l 331 515 l 433 515 l 433 1278 l 534 1278 l 534 515 l 764 515 l 764 414 l 0 414 l 0 515 l 229 515 l 229 1278 z "},"\u255c":{"ha":764,"x_min":0,"x_max":534,"o":"m 229 1278 l 331 1278 l 331 414 l 0 414 l 0 515 l 229 515 l 229 1278 m 433 414 l 433 1278 l 534 1278 l 534 414 l 433 414 z "},"\u2559":{"ha":764,"x_min":229,"x_max":764,"o":"m 433 414 l 433 1278 l 534 1278 l 534 515 l 764 515 l 764 414 l 433 414 m 229 1278 l 331 1278 l 331 414 l 229 414 l 229 1278 z "},"\u2565":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 515 l 764 515 l 764 414 l 534 414 l 534 -349 l 433 -349 l 433 414 l 331 414 l 331 -349 l 229 -349 l 229 414 l 0 414 l 0 515 z "},"\u2556":{"ha":764,"x_min":0,"x_max":534,"o":"m 0 515 l 331 515 l 331 -349 l 229 -349 l 229 414 l 0 414 l 0 515 m 433 -349 l 433 515 l 534 515 l 534 -349 l 433 -349 z "},"\u2553":{"ha":764,"x_min":229,"x_max":764,"o":"m 433 515 l 764 515 l 764 414 l 534 414 l 534 -349 l 433 -349 l 433 515 m 229 515 l 331 515 l 331 -349 l 229 -349 l 229 515 z "},"\u25cc":{"ha":764,"x_min":34,"x_max":730,"o":"m 382 593 q 363 597 372 593 q 348 608 354 601 q 337 623 341 614 q 334 642 334 631 q 337 660 334 652 q 348 675 341 669 q 363 686 354 682 q 382 690 372 690 q 401 686 392 690 q 416 675 410 682 q 426 660 422 669 q 430 642 430 652 q 426 623 430 631 q 416 608 422 614 q 401 597 410 601 q 382 593 392 593 m 279 77 q 276 59 279 67 q 266 43 272 50 q 250 33 259 37 q 231 29 241 29 q 212 33 221 29 q 197 43 203 37 q 187 59 191 50 q 183 77 183 67 q 187 96 183 87 q 197 111 191 104 q 212 122 203 118 q 231 125 221 125 q 250 122 241 125 q 266 111 259 118 q 276 96 272 104 q 279 77 279 87 m 168 189 q 164 171 168 179 q 154 155 160 162 q 138 145 147 149 q 119 141 130 141 q 100 145 109 141 q 85 155 92 149 q 75 171 79 162 q 71 189 71 179 q 75 208 71 199 q 85 223 79 216 q 100 234 92 230 q 119 237 109 237 q 138 234 130 237 q 154 223 147 230 q 164 208 160 216 q 168 189 168 199 m 130 340 q 126 322 130 330 q 116 307 123 313 q 101 296 110 300 q 82 292 92 292 q 63 296 72 292 q 48 307 54 300 q 38 322 41 313 q 34 340 34 330 q 38 359 34 351 q 48 374 41 368 q 63 385 54 381 q 82 389 72 389 q 101 385 92 389 q 116 374 110 381 q 126 359 123 368 q 130 340 130 351 m 168 492 q 164 473 168 481 q 154 458 160 465 q 138 447 147 451 q 119 444 130 444 q 100 447 109 444 q 85 458 92 451 q 75 473 79 465 q 71 492 71 481 q 75 510 71 502 q 85 526 79 519 q 100 536 92 532 q 119 540 109 540 q 138 536 130 540 q 154 526 147 532 q 164 510 160 519 q 168 492 168 502 m 280 604 q 276 585 280 593 q 266 570 273 576 q 251 559 260 563 q 232 555 242 555 q 213 559 222 555 q 198 570 204 563 q 188 585 191 576 q 184 604 184 593 q 188 622 184 614 q 198 637 191 631 q 213 648 204 644 q 232 652 222 652 q 251 648 242 652 q 266 637 260 644 q 276 622 273 631 q 280 604 280 614 m 484 604 q 487 622 484 614 q 497 637 491 631 q 513 648 504 644 q 532 652 522 652 q 551 648 542 652 q 566 637 559 644 q 576 622 572 631 q 580 604 580 614 q 576 585 580 593 q 566 570 572 576 q 551 559 559 563 q 532 555 542 555 q 513 559 522 555 q 497 570 504 563 q 487 585 491 576 q 484 604 484 593 m 484 77 q 488 96 484 87 q 498 111 492 104 q 513 122 505 118 q 532 125 522 125 q 551 122 543 125 q 567 111 560 118 q 577 96 573 104 q 581 77 581 87 q 577 59 581 67 q 567 43 573 50 q 551 33 560 37 q 532 29 543 29 q 513 33 522 29 q 498 43 505 37 q 488 59 492 50 q 484 77 484 67 m 596 189 q 600 208 596 199 q 610 223 604 216 q 625 234 616 230 q 644 237 634 237 q 663 234 654 237 q 679 223 672 230 q 689 208 685 216 q 692 189 692 199 q 689 171 692 179 q 679 155 685 162 q 663 145 672 149 q 644 141 654 141 q 625 145 634 141 q 610 155 616 149 q 600 171 604 162 q 596 189 596 179 m 633 340 q 637 359 633 351 q 647 374 641 368 q 663 385 654 381 q 682 389 671 389 q 701 385 692 389 q 716 374 709 381 q 726 359 722 368 q 730 340 730 351 q 726 322 730 330 q 716 307 722 313 q 701 296 709 300 q 682 292 692 292 q 663 296 671 292 q 647 307 654 300 q 637 322 641 313 q 633 340 633 330 m 596 492 q 600 510 596 502 q 610 526 604 519 q 625 536 616 532 q 644 540 634 540 q 663 536 654 540 q 679 526 672 532 q 689 510 685 519 q 692 492 692 502 q 689 473 692 481 q 679 458 685 465 q 663 447 672 451 q 644 444 654 444 q 625 447 634 444 q 610 458 616 451 q 600 473 604 465 q 596 492 596 481 m 382 -8 q 363 -4 372 -8 q 348 6 354 -1 q 337 21 341 13 q 334 40 334 30 q 337 59 334 50 q 348 74 341 67 q 363 84 354 81 q 382 88 372 88 q 401 84 392 88 q 416 74 410 81 q 426 59 422 67 q 430 40 430 50 q 426 21 430 30 q 416 6 422 13 q 401 -4 410 -1 q 382 -8 392 -8 z "},"\u0162":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 441 0 l 383 -200 l 280 -200 l 325 0 l 441 0 z "},"\u0163":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 515 0 l 457 -200 l 354 -200 l 399 0 l 515 0 z "},"\u0305":{"ha":764,"x_min":1,"x_max":762,"o":"m 762 846 l 1 846 l 1 936 l 762 936 l 762 846 z "},"\u030d":{"ha":764,"x_min":0,"x_max":427,"o":"m 427 1087 l 427 755 l 337 755 l 337 1087 l 427 1087 m 0 681 z "},"\u030e":{"ha":764,"x_min":0,"x_max":536,"o":"m 536 1087 l 536 755 l 447 755 l 447 1087 l 536 1087 m 316 1087 l 316 755 l 227 755 l 227 1087 l 316 1087 m 0 681 z "},"\u030f":{"ha":764,"x_min":0,"x_max":607,"o":"m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0310":{"ha":764,"x_min":140,"x_max":623,"o":"m 623 996 q 595 901 616 940 q 544 839 575 863 q 472 804 513 815 q 382 793 431 793 q 291 804 332 793 q 219 839 250 815 q 168 901 188 863 q 140 996 147 940 l 240 996 q 283 909 250 938 q 382 881 315 881 q 481 909 448 881 q 524 996 513 938 l 623 996 m 379 1102 q 407 1097 394 1102 q 429 1082 420 1091 q 444 1060 438 1072 q 449 1033 449 1047 q 444 1006 449 1019 q 429 983 438 993 q 407 968 420 974 q 379 963 394 963 q 329 983 349 963 q 310 1033 310 1004 q 315 1060 310 1047 q 329 1082 320 1072 q 351 1097 338 1091 q 379 1102 364 1102 z "},"\u0311":{"ha":764,"x_min":0,"x_max":550,"o":"m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u0313":{"ha":764,"x_min":295,"x_max":469,"o":"m 298 770 q 356 785 341 774 q 371 813 371 795 q 365 831 371 825 q 351 842 359 838 q 333 849 343 846 q 315 860 323 853 q 301 877 307 866 q 295 905 295 887 q 299 928 295 917 q 313 948 304 939 q 338 961 323 956 q 374 966 353 966 q 411 961 394 966 q 441 943 429 955 q 461 913 454 932 q 469 870 469 895 q 460 814 469 840 q 431 767 451 787 q 378 733 411 746 q 298 720 346 721 l 298 770 z "},"\u0314":{"ha":764,"x_min":295,"x_max":469,"o":"m 465 733 q 385 747 418 734 q 333 780 353 760 q 304 827 313 801 q 295 884 295 854 q 302 927 295 909 q 322 957 310 945 q 352 974 335 968 q 390 980 370 980 q 450 961 431 980 q 469 918 469 943 q 463 890 469 901 q 449 873 457 880 q 431 863 441 867 q 412 855 420 859 q 398 845 404 851 q 393 827 393 838 q 408 798 393 809 q 465 783 422 787 l 465 733 z "},"\u0316":{"ha":764,"x_min":96,"x_max":549,"o":"m 549 -216 l 431 -216 l 214 -52 l 385 -52 l 549 -216 m 96 -329 z "},"\u0317":{"ha":764,"x_min":-96,"x_max":549,"o":"m 549 -52 l 333 -216 l 215 -216 l 378 -52 l 549 -52 m -96 -329 z "},"\u0318":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 -307 l 450 -307 l 450 -218 l 239 -218 l 239 -146 l 450 -146 l 450 -56 l 525 -56 l 525 -307 z "},"\u0319":{"ha":764,"x_min":239,"x_max":525,"o":"m 239 -56 l 313 -56 l 313 -146 l 525 -146 l 525 -218 l 313 -218 l 313 -307 l 239 -307 l 239 -56 z "},"\u031a":{"ha":764,"x_min":254,"x_max":510,"o":"m 254 924 l 254 995 l 510 995 l 510 740 l 438 740 l 438 924 l 254 924 z "},"\u031c":{"ha":764,"x_min":315,"x_max":449,"o":"m 447 -305 q 391 -296 415 -305 q 349 -270 366 -287 q 323 -230 332 -253 q 315 -180 315 -208 q 350 -93 315 -125 q 449 -60 386 -60 l 449 -118 q 401 -137 416 -118 q 387 -184 387 -156 q 401 -230 387 -212 q 447 -248 416 -248 l 447 -305 z "},"\u031d":{"ha":764,"x_min":239,"x_max":525,"o":"m 239 -307 l 239 -235 l 345 -235 l 345 -56 l 419 -56 l 419 -235 l 525 -235 l 525 -307 l 239 -307 z "},"\u031e":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 -56 l 525 -129 l 419 -129 l 419 -307 l 345 -307 l 345 -129 l 239 -129 l 239 -56 l 525 -56 z "},"\u031f":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 -146 l 525 -218 l 419 -218 l 419 -307 l 345 -307 l 345 -218 l 239 -218 l 239 -146 l 345 -146 l 345 -56 l 419 -56 l 419 -146 l 525 -146 z "},"\u0320":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 -146 l 525 -218 l 239 -218 l 239 -146 l 525 -146 z "},"\u0321":{"ha":764,"x_min":252,"x_max":511,"o":"m 511 -14 l 511 -123 q 502 -193 511 -165 q 477 -237 492 -221 q 441 -260 462 -254 q 400 -267 421 -267 q 356 -262 376 -267 q 319 -247 336 -257 q 285 -221 301 -237 q 252 -186 269 -206 l 309 -125 l 334 -151 q 362 -172 350 -167 q 387 -177 375 -177 q 410 -169 399 -177 q 420 -140 420 -160 l 420 -14 l 511 -14 z "},"\u0322":{"ha":764,"x_min":252,"x_max":511,"o":"m 343 -14 l 343 -140 q 353 -169 343 -160 q 376 -177 363 -177 q 400 -172 388 -177 q 429 -151 413 -167 l 454 -125 l 511 -186 q 478 -221 494 -206 q 444 -247 462 -237 q 407 -262 427 -257 q 363 -267 387 -267 q 321 -260 341 -267 q 286 -237 301 -254 q 261 -193 271 -221 q 252 -123 252 -165 l 252 -14 l 343 -14 z "},"\u0324":{"ha":764,"x_min":160,"x_max":604,"o":"m 236 -58 q 266 -64 252 -58 q 290 -80 279 -70 q 307 -105 300 -91 q 313 -134 313 -119 q 307 -164 313 -150 q 290 -188 300 -178 q 266 -204 279 -198 q 236 -210 252 -210 q 207 -204 220 -210 q 182 -188 193 -198 q 166 -164 172 -178 q 160 -134 160 -150 q 166 -105 160 -119 q 182 -80 172 -91 q 207 -64 193 -70 q 236 -58 220 -58 m 528 -58 q 557 -64 543 -58 q 582 -80 571 -70 q 598 -105 592 -91 q 604 -134 604 -119 q 598 -164 604 -150 q 582 -188 592 -178 q 557 -204 571 -198 q 528 -210 543 -210 q 498 -204 512 -210 q 474 -188 484 -198 q 458 -164 464 -178 q 452 -134 452 -150 q 458 -105 452 -119 q 474 -80 464 -91 q 498 -64 484 -70 q 528 -58 512 -58 z "},"\u0325":{"ha":764,"x_min":248,"x_max":515,"o":"m 515 -176 q 505 -226 515 -203 q 478 -266 496 -249 q 435 -292 460 -283 q 378 -301 410 -301 q 320 -292 345 -301 q 280 -268 296 -283 q 256 -230 264 -252 q 248 -180 248 -208 q 257 -130 248 -153 q 283 -91 266 -107 q 326 -65 300 -74 q 384 -56 351 -56 q 480 -89 446 -56 q 515 -176 515 -121 m 443 -180 q 428 -133 443 -153 q 380 -114 414 -114 q 335 -131 351 -114 q 320 -176 320 -149 q 334 -225 320 -206 q 382 -243 348 -243 q 428 -225 412 -243 q 443 -180 443 -208 z "},"\u0329":{"ha":764,"x_min":337,"x_max":427,"o":"m 427 -74 l 427 -349 l 337 -349 l 337 -74 l 427 -74 z "},"\u032a":{"ha":764,"x_min":163,"x_max":600,"o":"m 600 -218 l 525 -218 l 525 -129 l 238 -129 l 238 -218 l 163 -218 l 163 -56 l 600 -56 l 600 -218 z "},"\u032b":{"ha":764,"x_min":163,"x_max":600,"o":"m 475 -205 q 417 -192 438 -205 q 382 -155 395 -179 q 346 -192 368 -178 q 288 -205 324 -205 q 231 -195 254 -205 q 192 -168 208 -185 q 170 -126 177 -150 q 163 -75 163 -102 l 163 -56 l 238 -56 l 238 -71 q 240 -99 238 -86 q 248 -120 242 -111 q 263 -134 253 -129 q 288 -138 273 -138 q 334 -120 321 -138 q 346 -75 346 -102 l 346 -56 l 417 -56 l 417 -75 q 429 -120 417 -102 q 475 -138 441 -138 q 500 -134 490 -138 q 515 -120 510 -129 q 523 -99 521 -111 q 525 -71 525 -86 l 525 -56 l 600 -56 l 600 -75 q 593 -126 600 -102 q 571 -168 586 -150 q 532 -195 555 -185 q 475 -205 508 -205 z "},"\u032c":{"ha":764,"x_min":0,"x_max":596,"o":"m 334 -216 l 168 -52 l 288 -52 l 383 -134 l 479 -52 l 596 -52 l 431 -216 l 334 -216 m 0 -329 z "},"\u032d":{"ha":764,"x_min":0,"x_max":596,"o":"m 431 -52 l 596 -216 l 476 -216 l 380 -134 l 285 -216 l 168 -216 l 334 -52 l 431 -52 m 0 -329 z "},"\u032e":{"ha":764,"x_min":0,"x_max":550,"o":"m 550 -52 q 536 -124 550 -93 q 500 -175 523 -155 q 447 -205 477 -195 q 382 -216 416 -216 q 317 -205 347 -216 q 263 -175 286 -195 q 227 -124 241 -155 q 214 -52 214 -93 l 306 -52 q 325 -107 306 -86 q 382 -128 344 -128 q 439 -107 420 -128 q 458 -52 458 -86 l 550 -52 m 0 -329 z "},"\u032f":{"ha":764,"x_min":0,"x_max":550,"o":"m 214 -216 q 227 -143 214 -174 q 263 -92 241 -113 q 317 -62 286 -72 q 382 -52 347 -52 q 447 -62 416 -52 q 500 -92 477 -72 q 536 -143 523 -113 q 550 -216 550 -174 l 458 -216 q 439 -160 458 -181 q 382 -139 420 -139 q 325 -160 343 -139 q 306 -216 306 -181 l 214 -216 m 0 -329 z "},"\u0330":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 -150 q 202 -76 165 -101 q 286 -52 239 -52 q 353 -63 326 -52 q 401 -88 380 -75 q 440 -113 422 -102 q 482 -125 459 -125 q 530 -106 509 -125 q 570 -58 551 -87 l 628 -117 q 562 -190 598 -165 q 478 -215 525 -215 q 411 -204 438 -215 q 363 -179 385 -193 q 324 -153 342 -165 q 282 -142 305 -142 q 234 -160 254 -142 q 195 -208 214 -179 l 136 -150 m 0 -329 z "},"\u0331":{"ha":764,"x_min":204,"x_max":559,"o":"m 559 -138 l 204 -138 l 204 -48 l 559 -48 l 559 -138 z "},"\u0332":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 -278 l 0 -278 l 0 -180 l 764 -180 l 764 -278 z "},"\u0333":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 -181 l 0 -181 l 0 -83 l 764 -83 l 764 -181 m 764 -348 l 0 -348 l 0 -250 l 764 -250 l 764 -348 z "},"\u0334":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 355 q 202 429 165 404 q 286 454 239 454 q 353 442 326 454 q 401 417 380 431 q 440 392 422 404 q 482 380 459 380 q 530 399 509 380 q 570 447 551 418 l 628 389 q 562 315 598 340 q 478 290 525 290 q 411 301 438 290 q 363 327 385 313 q 324 352 342 340 q 282 363 305 363 q 234 345 254 363 q 195 297 214 326 l 136 355 m 0 176 z "},"\u0335":{"ha":764,"x_min":164,"x_max":604,"o":"m 164 397 l 604 397 l 604 298 l 164 298 l 164 397 z "},"\u0336":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 283 l 90 283 l 90 386 l 673 386 l 673 283 z "},"\u0337":{"ha":764,"x_min":28,"x_max":735,"o":"m 735 722 l 155 -117 l 28 -117 l 610 722 l 735 722 z "},"\u0338":{"ha":764,"x_min":-61,"x_max":822,"o":"m 822 969 l 66 -117 l -61 -117 l 696 969 l 822 969 z "},"\u0339":{"ha":764,"x_min":315,"x_max":449,"o":"m 317 -248 q 362 -230 347 -248 q 377 -184 377 -212 q 362 -137 377 -156 q 315 -118 348 -118 l 315 -60 q 413 -93 378 -60 q 449 -180 449 -125 q 440 -230 449 -208 q 414 -270 431 -253 q 373 -296 397 -287 q 317 -305 348 -305 l 317 -248 z "},"\u033a":{"ha":764,"x_min":163,"x_max":600,"o":"m 600 -56 l 600 -218 l 163 -218 l 163 -56 l 238 -56 l 238 -146 l 524 -146 l 525 -56 l 600 -56 z "},"\u033b":{"ha":764,"x_min":248,"x_max":515,"o":"m 248 -56 l 515 -56 l 515 -323 l 248 -323 l 248 -56 m 320 -251 l 443 -251 l 443 -128 l 320 -128 l 320 -251 z "},"\u033c":{"ha":764,"x_min":165,"x_max":598,"o":"m 524 -176 q 513 -138 523 -153 q 475 -123 503 -123 q 429 -141 441 -123 q 417 -186 417 -159 l 417 -205 l 346 -205 l 346 -186 q 334 -141 346 -159 q 288 -123 321 -123 q 250 -138 260 -123 q 239 -176 240 -152 l 165 -161 q 176 -120 168 -139 q 200 -86 184 -100 q 237 -64 215 -73 q 288 -56 258 -56 q 346 -70 324 -56 q 382 -106 368 -83 q 417 -70 395 -83 q 475 -56 438 -56 q 527 -64 505 -56 q 564 -86 549 -72 q 587 -119 578 -100 q 598 -161 595 -138 l 524 -176 z "},"\u033d":{"ha":764,"x_min":250,"x_max":513,"o":"m 462 997 l 513 945 l 434 866 l 513 786 l 460 733 l 381 813 l 302 733 l 250 785 l 330 864 l 250 944 l 303 997 l 382 917 l 462 997 z "},"\u033e":{"ha":764,"x_min":294,"x_max":469,"o":"m 296 740 l 296 820 l 311 820 q 363 831 344 820 q 383 869 383 842 q 369 910 383 891 q 338 949 355 928 q 308 997 321 970 q 294 1060 294 1023 q 332 1156 294 1121 q 441 1191 370 1191 l 467 1191 l 467 1112 l 451 1112 q 380 1062 380 1112 q 394 1022 380 1040 q 425 982 408 1003 q 455 934 441 960 q 469 871 469 907 q 429 774 469 808 q 322 740 389 740 l 296 740 z "},"\u033f":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 1088 l 0 1088 l 0 1185 l 764 1185 l 764 1088 m 764 920 l 0 920 l 0 1018 l 764 1018 l 764 920 z "},"\u0340":{"ha":764,"x_min":96,"x_max":549,"o":"m 549 794 l 431 794 l 214 958 l 385 958 l 549 794 m 96 681 z "},"\u0341":{"ha":764,"x_min":-96,"x_max":549,"o":"m 549 958 l 333 794 l 215 794 l 378 958 l 549 958 m -96 681 z "},"\u0346":{"ha":764,"x_min":163,"x_max":600,"o":"m 600 740 l 525 740 l 525 829 l 238 829 l 238 740 l 163 740 l 163 902 l 600 902 l 600 740 z "},"\u0347":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 -181 l 0 -181 l 0 -83 l 764 -83 l 764 -181 m 764 -348 l 0 -348 l 0 -250 l 764 -250 l 764 -348 z "},"\u0348":{"ha":764,"x_min":0,"x_max":536,"o":"m 536 11 l 536 -321 l 447 -321 l 447 11 l 536 11 m 316 11 l 316 -321 l 227 -321 l 227 11 l 316 11 m 0 -395 z "},"\u0349":{"ha":764,"x_min":254,"x_max":510,"o":"m 254 -85 l 254 -15 l 510 -15 l 510 -270 l 438 -270 l 438 -85 l 254 -85 z "},"\u034a":{"ha":764,"x_min":137,"x_max":629,"o":"m 490 1044 l 452 962 q 483 957 467 957 q 531 976 510 957 q 570 1023 551 994 l 629 965 q 562 891 599 916 q 479 867 526 867 q 413 878 439 867 l 374 795 l 294 833 l 335 922 q 324 928 330 925 q 283 940 306 940 q 235 921 255 940 q 195 873 214 903 l 137 932 q 203 1005 166 981 q 287 1030 240 1030 q 353 1019 326 1030 q 375 1008 365 1013 l 410 1082 l 490 1044 z "},"\u034b":{"ha":764,"x_min":136,"x_max":628,"o":"m 136 983 q 202 1057 165 1032 q 286 1082 239 1082 q 353 1070 326 1082 q 401 1045 380 1059 q 440 1020 422 1031 q 482 1008 459 1008 q 530 1027 509 1008 q 570 1075 551 1046 l 628 1017 q 562 943 598 968 q 478 918 525 918 q 411 929 438 918 q 363 955 385 941 q 324 980 342 968 q 282 991 305 991 q 234 973 254 991 q 195 925 214 954 l 136 983 m 382 915 q 408 910 395 915 q 429 896 420 905 q 443 874 438 886 q 448 849 448 863 q 443 823 448 835 q 429 803 438 812 q 408 788 420 793 q 382 783 395 783 q 356 788 368 783 q 335 803 344 793 q 321 823 326 812 q 316 849 316 835 q 321 874 316 863 q 335 896 326 886 q 356 910 344 905 q 382 915 368 915 m 382 1218 q 408 1213 395 1218 q 429 1199 420 1208 q 443 1178 438 1190 q 448 1152 448 1166 q 443 1126 448 1138 q 429 1106 438 1115 q 408 1092 420 1097 q 382 1086 395 1086 q 356 1092 368 1086 q 335 1106 344 1097 q 321 1126 326 1115 q 316 1152 316 1138 q 321 1178 316 1166 q 335 1199 326 1190 q 356 1213 344 1208 q 382 1218 368 1218 z "},"\u034c":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 m 136 1064 q 202 1138 165 1113 q 286 1162 239 1162 q 353 1151 326 1162 q 401 1126 380 1139 q 440 1101 422 1112 q 482 1089 459 1089 q 530 1108 509 1089 q 570 1156 551 1126 l 628 1097 q 562 1024 598 1048 q 478 999 525 999 q 411 1010 438 999 q 363 1035 385 1021 q 324 1061 342 1049 q 282 1072 305 1072 q 234 1054 254 1072 q 195 1006 214 1035 l 136 1064 m 0 885 z "},"\u034d":{"ha":764,"x_min":47,"x_max":715,"o":"m 562 -56 l 715 -166 l 715 -198 l 562 -307 l 562 -218 l 201 -218 l 201 -307 l 47 -198 l 47 -166 l 201 -56 l 201 -146 l 562 -146 l 562 -56 z "},"\u034e":{"ha":764,"x_min":256,"x_max":507,"o":"m 346 -333 l 346 -197 l 256 -197 l 366 -57 l 398 -57 l 507 -197 l 418 -197 l 418 -333 l 346 -333 z "},"\u034f":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u0350":{"ha":764,"x_min":287,"x_max":477,"o":"m 287 812 l 402 880 l 287 947 l 287 1020 l 477 897 l 477 862 l 287 740 l 287 812 z "},"\u0351":{"ha":764,"x_min":0,"x_max":449,"o":"m 447 705 q 391 714 415 705 q 349 740 366 723 q 323 780 332 757 q 315 830 315 802 q 350 917 315 885 q 449 949 386 949 l 449 892 q 401 873 416 892 q 387 825 387 854 q 401 780 387 798 q 447 762 416 762 l 447 705 m 0 681 z "},"\u0352":{"ha":764,"x_min":140,"x_max":623,"o":"m 140 849 q 168 944 148 905 q 219 1006 189 983 q 291 1041 250 1030 q 382 1052 332 1052 q 472 1041 431 1052 q 545 1006 513 1030 q 596 944 576 983 q 623 849 616 905 l 524 849 q 481 936 513 907 q 382 964 448 964 q 283 936 315 964 q 240 849 250 907 l 140 849 m 385 743 q 357 749 370 743 q 335 764 344 754 q 320 786 326 773 q 315 812 315 798 q 320 840 315 827 q 335 862 326 852 q 357 877 344 871 q 385 882 370 882 q 434 862 415 882 q 454 812 454 842 q 449 786 454 798 q 434 764 444 773 q 412 749 425 754 q 385 743 399 743 z "},"\u0353":{"ha":764,"x_min":250,"x_max":513,"o":"m 462 -56 l 513 -108 l 434 -187 l 513 -267 l 460 -320 l 381 -240 l 302 -320 l 250 -269 l 330 -189 l 250 -109 l 303 -56 l 382 -136 l 462 -56 z "},"\u0354":{"ha":764,"x_min":287,"x_max":477,"o":"m 477 -232 l 477 -304 l 287 -182 l 287 -146 l 477 -24 l 477 -96 l 361 -164 l 477 -232 z "},"\u0355":{"ha":764,"x_min":287,"x_max":477,"o":"m 287 -232 l 402 -164 l 287 -96 l 287 -24 l 477 -146 l 477 -182 l 287 -304 l 287 -232 z "},"\u0356":{"ha":764,"x_min":153,"x_max":610,"o":"m 153 -232 l 269 -164 l 153 -96 l 153 -24 l 343 -146 l 343 -182 l 153 -304 l 153 -232 m 402 -259 l 330 -259 l 452 -69 l 488 -69 l 610 -259 l 538 -259 l 470 -144 l 402 -259 z "},"\u0357":{"ha":764,"x_min":0,"x_max":454,"o":"m 309 810 q 357 829 337 810 q 376 878 376 849 q 371 904 376 892 q 356 926 366 917 q 335 941 347 935 q 309 946 323 946 l 309 1018 q 366 1007 339 1018 q 412 977 392 996 q 443 932 431 958 q 454 878 454 907 q 443 823 454 848 q 412 779 431 798 q 366 749 392 760 q 309 738 339 738 l 309 810 m 0 681 z "},"\u0358":{"ha":764,"x_min":0,"x_max":472,"o":"m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0359":{"ha":764,"x_min":247,"x_max":517,"o":"m 517 -242 l 494 -282 l 399 -219 l 406 -335 l 358 -335 l 366 -219 l 268 -282 l 247 -243 l 351 -191 l 247 -139 l 270 -100 l 366 -163 l 358 -47 l 406 -47 l 398 -163 l 494 -99 l 517 -140 l 413 -192 l 517 -242 z "},"\u035a":{"ha":764,"x_min":151,"x_max":612,"o":"m 612 -176 q 603 -226 612 -203 q 576 -266 593 -249 q 533 -292 558 -283 q 476 -301 508 -301 q 418 -292 443 -301 q 378 -268 394 -283 q 338 -292 361 -283 q 281 -301 313 -301 q 223 -292 248 -301 q 182 -268 198 -283 q 158 -230 166 -252 q 151 -180 151 -208 q 159 -130 151 -153 q 185 -91 168 -107 q 228 -65 203 -74 q 286 -56 254 -56 q 382 -88 349 -56 q 423 -65 399 -73 q 481 -56 449 -56 q 578 -89 544 -56 q 612 -176 612 -121 m 541 -180 q 526 -133 541 -153 q 478 -114 511 -114 q 433 -131 448 -114 q 418 -176 418 -149 q 432 -225 418 -206 q 480 -243 446 -243 q 525 -225 510 -243 q 541 -180 541 -208 m 345 -180 q 331 -133 345 -153 q 283 -114 316 -114 q 238 -131 253 -114 q 222 -176 222 -149 q 236 -225 222 -206 q 285 -243 250 -243 q 330 -225 315 -243 q 345 -180 345 -208 z "},"\u035b":{"ha":764,"x_min":254,"x_max":510,"o":"m 414 871 l 254 871 l 314 1072 l 389 1072 l 350 941 l 510 941 l 450 740 l 374 740 l 414 871 z "},"\u035c":{"ha":764,"x_min":2,"x_max":766,"o":"m 766 -120 q 388 -304 595 -304 q 292 -294 340 -304 q 195 -263 243 -285 q 98 -206 146 -241 q 2 -120 50 -171 l 38 -58 q 381 -189 193 -189 q 562 -156 475 -189 q 725 -58 648 -123 l 766 -120 z "},"\u035d":{"ha":764,"x_min":2,"x_max":766,"o":"m 766 873 q 388 690 595 690 q 292 699 340 690 q 195 730 243 709 q 98 787 146 752 q 2 873 50 823 l 38 935 q 381 804 193 804 q 562 837 475 804 q 725 935 648 870 l 766 873 z "},"\u035e":{"ha":764,"x_min":26,"x_max":737,"o":"m 737 831 l 26 831 l 26 921 l 737 921 l 737 831 m 26 681 z "},"\u035f":{"ha":764,"x_min":26,"x_max":737,"o":"m 737 -270 l 26 -270 l 26 -180 l 737 -180 l 737 -270 m 26 -420 z "},"\u0360":{"ha":764,"x_min":43,"x_max":720,"o":"m 720 918 q 709 841 720 876 q 673 773 697 805 q 612 723 648 741 q 528 705 576 705 q 460 713 490 705 q 405 734 431 722 q 358 762 380 747 q 316 790 337 777 q 275 811 296 803 q 232 820 255 820 q 173 794 192 820 q 153 714 153 768 l 45 714 q 55 791 43 755 q 91 859 67 827 q 152 909 115 891 q 236 927 188 927 q 303 919 273 927 q 358 898 333 910 q 405 870 384 885 q 447 842 427 854 q 488 820 468 829 q 532 812 509 812 q 593 837 574 812 q 611 918 611 862 l 720 918 z "},"\u0361":{"ha":764,"x_min":2,"x_max":766,"o":"m 725 690 q 562 788 648 755 q 381 821 475 821 q 38 690 193 821 l 2 751 q 98 838 50 802 q 195 895 146 873 q 292 926 243 916 q 388 935 340 935 q 766 751 595 935 l 725 690 z "},"\u0362":{"ha":764,"x_min":4,"x_max":760,"o":"m 606 -56 l 760 -166 l 760 -198 l 606 -307 l 606 -218 l 4 -218 l 4 -146 l 606 -146 l 606 -56 z "},"\u0363":{"ha":764,"x_min":224,"x_max":539,"o":"m 475 709 l 474 755 q 410 714 444 726 q 343 702 376 702 q 290 710 312 702 q 253 731 267 718 q 231 762 238 744 q 224 802 224 781 q 266 885 224 854 q 387 916 307 916 l 469 916 l 469 939 q 448 989 469 970 q 385 1007 427 1007 q 325 1001 354 1007 q 263 982 296 994 l 263 1039 q 320 1055 287 1048 q 390 1061 353 1061 q 451 1055 423 1061 q 498 1034 478 1048 q 528 998 517 1019 q 539 947 539 977 l 539 709 l 475 709 m 469 867 l 389 867 q 320 849 341 867 q 298 803 298 832 q 312 769 298 783 q 359 755 326 755 q 409 767 381 755 q 469 807 437 780 l 469 867 z "},"\u0364":{"ha":764,"x_min":214,"x_max":549,"o":"m 549 900 q 549 877 549 888 q 549 859 549 867 l 286 859 q 295 813 286 833 q 320 781 304 793 q 358 762 336 768 q 407 756 380 756 q 473 762 439 756 q 530 774 507 768 l 530 721 q 469 708 505 714 q 398 702 433 702 q 259 749 304 702 q 214 881 214 797 q 226 950 214 918 q 260 1008 238 983 q 314 1047 283 1032 q 385 1061 346 1061 q 454 1050 423 1061 q 506 1017 484 1038 q 538 966 527 996 q 549 900 549 937 m 478 909 q 456 982 480 955 q 383 1010 431 1010 q 315 983 341 1010 q 286 909 290 956 l 478 909 z "},"\u0365":{"ha":764,"x_min":233,"x_max":531,"o":"m 349 1002 l 245 1002 l 245 1055 l 419 1055 l 419 762 l 531 762 l 531 709 l 233 709 l 233 762 l 349 762 l 349 1002 m 370 1209 q 406 1195 391 1209 q 421 1160 421 1181 q 406 1125 421 1139 q 370 1111 391 1111 q 332 1125 347 1111 q 317 1160 317 1139 q 332 1195 317 1181 q 370 1209 347 1209 z "},"\u0366":{"ha":764,"x_min":205,"x_max":559,"o":"m 559 884 q 546 811 559 844 q 509 753 533 777 q 452 715 486 729 q 378 702 419 702 q 307 713 339 702 q 252 748 275 725 q 217 804 229 770 q 205 880 205 837 q 218 953 205 920 q 254 1011 231 987 q 311 1048 278 1035 q 385 1061 345 1061 q 457 1050 425 1061 q 512 1016 489 1038 q 547 960 534 994 q 559 884 559 927 m 488 882 q 459 977 488 947 q 382 1007 431 1007 q 334 997 354 1007 q 301 970 314 987 q 282 930 288 953 q 276 882 276 907 q 304 787 276 818 q 382 757 332 757 q 430 767 410 757 q 463 793 450 777 q 481 833 475 810 q 488 882 488 857 z "},"\u0367":{"ha":764,"x_min":229,"x_max":534,"o":"m 534 709 l 471 709 l 469 765 q 409 715 436 729 q 349 702 381 702 q 260 734 292 702 q 229 829 229 766 l 229 1055 l 298 1055 l 298 837 q 361 758 298 758 q 384 761 373 758 q 407 772 395 764 q 433 794 419 780 q 465 829 447 808 l 465 1055 l 534 1055 l 534 709 z "},"\u0368":{"ha":764,"x_min":233,"x_max":524,"o":"m 524 722 q 471 708 498 712 q 416 704 444 704 q 281 748 329 704 q 233 879 233 792 q 247 953 233 920 q 286 1010 260 987 q 345 1047 311 1034 q 420 1060 379 1060 q 474 1056 448 1060 q 524 1044 500 1053 l 524 983 q 473 1000 500 994 q 421 1006 447 1006 q 375 998 397 1006 q 339 974 354 989 q 315 934 323 958 q 306 880 306 911 q 336 788 306 817 q 423 758 366 758 q 475 764 449 758 q 524 781 500 769 l 524 722 z "},"\u0369":{"ha":764,"x_min":220,"x_max":543,"o":"m 220 875 q 234 954 220 919 q 273 1011 248 988 q 332 1047 298 1035 q 406 1059 366 1059 q 440 1057 423 1059 q 473 1050 457 1055 l 473 1196 l 543 1196 l 543 709 l 479 709 l 478 774 q 354 702 426 702 q 297 714 322 702 q 256 750 273 727 q 230 804 239 772 q 220 875 220 836 m 293 879 q 312 786 293 815 q 367 758 331 758 q 417 777 391 758 q 473 836 444 795 l 473 991 q 438 1003 457 999 q 401 1006 420 1006 q 321 976 350 1006 q 293 879 293 946 z "},"\u036a":{"ha":764,"x_min":229,"x_max":534,"o":"m 534 709 l 465 709 l 465 926 q 449 987 465 967 q 404 1006 433 1006 q 380 1003 391 1006 q 357 991 370 1000 q 331 969 345 983 q 298 935 317 956 l 298 709 l 229 709 l 229 1196 l 298 1196 l 298 1055 l 296 1001 q 354 1048 326 1035 q 414 1061 381 1061 q 501 1030 468 1061 q 534 935 534 998 l 534 709 z "},"\u036b":{"ha":764,"x_min":193,"x_max":570,"o":"m 505 709 l 505 958 q 497 1000 505 989 q 476 1011 489 1011 q 463 1007 469 1011 q 449 994 456 1003 q 434 969 442 984 q 414 931 425 954 l 414 709 l 350 709 l 350 951 q 348 982 350 970 q 341 1000 345 994 q 331 1009 336 1006 q 319 1011 326 1011 q 307 1008 313 1011 q 294 996 301 1004 q 279 971 288 987 q 258 931 270 956 l 258 709 l 193 709 l 193 1055 l 249 1055 l 252 989 q 288 1045 270 1029 q 332 1061 306 1061 q 360 1057 347 1061 q 383 1043 373 1053 q 399 1019 393 1034 q 405 986 405 1005 q 440 1042 422 1023 q 488 1061 458 1061 q 520 1055 505 1061 q 546 1036 535 1048 q 564 1005 557 1023 q 570 961 570 986 l 570 709 l 505 709 z "},"\u036c":{"ha":764,"x_min":224,"x_max":533,"o":"m 224 1055 l 290 1055 l 292 991 q 352 1045 324 1029 q 411 1061 380 1061 q 500 1026 468 1061 q 530 923 533 991 l 460 923 q 447 986 461 968 q 403 1003 432 1003 q 378 1000 390 1003 q 354 988 366 996 q 327 966 341 980 q 296 931 313 952 l 296 709 l 224 709 l 224 1055 z "},"\u036d":{"ha":764,"x_min":214,"x_max":549,"o":"m 549 713 q 503 706 527 708 q 455 704 479 704 q 351 733 386 704 q 316 824 316 762 l 316 1002 l 214 1002 l 214 1055 l 316 1055 l 316 1151 l 386 1166 l 386 1055 l 549 1055 l 549 1002 l 386 1002 l 386 833 q 468 758 386 758 q 549 769 502 758 l 549 713 z "},"\u036e":{"ha":764,"x_min":196,"x_max":567,"o":"m 196 1055 l 275 1055 l 363 826 l 383 770 l 404 827 l 491 1055 l 567 1055 l 421 709 l 342 709 l 196 1055 z "},"\u036f":{"ha":764,"x_min":194,"x_max":569,"o":"m 569 709 l 478 709 l 380 840 l 282 709 l 194 709 l 335 883 l 201 1055 l 288 1055 l 384 922 l 478 1055 l 562 1055 l 426 881 l 569 709 z "},"\u1dc0":{"ha":764,"x_min":5,"x_max":615,"o":"m 533 1120 q 565 1113 549 1120 q 591 1095 580 1107 q 609 1069 602 1084 q 615 1036 615 1054 q 609 1005 615 1020 q 591 979 602 990 q 565 961 580 968 q 533 955 549 955 q 501 961 515 955 q 475 979 486 968 q 458 1005 464 990 q 452 1036 452 1020 q 458 1069 452 1054 q 475 1095 464 1084 q 501 1113 486 1107 q 533 1120 515 1120 m 261 1105 l 559 809 l 494 745 l 197 1041 l 261 1105 m 231 888 q 262 881 248 888 q 288 863 277 875 q 306 837 299 852 q 312 804 312 822 q 306 773 312 788 q 288 747 299 758 q 262 729 277 736 q 231 723 248 723 q 198 729 214 723 q 172 747 183 736 q 155 773 161 758 q 149 804 149 788 q 155 837 149 822 q 172 863 161 852 q 198 881 183 875 q 231 888 214 888 m 5 681 z "},"\u1dc1":{"ha":764,"x_min":1,"x_max":615,"o":"m 231 1120 q 263 1113 248 1120 q 288 1095 277 1107 q 306 1069 299 1084 q 312 1036 312 1054 q 306 1005 312 1020 q 288 979 299 990 q 263 961 277 968 q 231 955 248 955 q 198 961 214 955 q 172 979 183 968 q 155 1005 161 990 q 149 1036 149 1020 q 155 1069 149 1054 q 172 1095 161 1084 q 198 1113 183 1107 q 231 1120 214 1120 m 567 1041 l 269 745 l 205 809 l 503 1105 l 567 1041 m 533 888 q 565 881 550 888 q 591 863 580 875 q 609 837 602 852 q 615 804 615 822 q 609 773 615 788 q 591 747 602 758 q 565 729 580 736 q 533 723 550 723 q 501 729 516 723 q 475 747 486 736 q 458 773 464 758 q 452 804 452 788 q 458 837 452 822 q 475 863 464 852 q 501 881 486 875 q 533 888 516 888 m 1 681 z "},"\u1dc2":{"ha":764,"x_min":323,"x_max":440,"o":"m 323 -50 q 344 -38 328 -45 q 380 -31 360 -31 q 425 -43 410 -31 q 440 -75 440 -56 q 432 -98 440 -89 q 414 -115 424 -107 q 395 -132 404 -123 q 387 -151 387 -140 q 393 -163 387 -159 q 407 -173 399 -168 q 421 -183 415 -177 q 427 -199 427 -189 q 421 -218 427 -210 q 408 -231 415 -225 q 395 -243 401 -237 q 389 -256 389 -249 q 394 -269 389 -264 q 407 -278 399 -274 q 424 -284 414 -281 q 440 -290 433 -288 l 439 -299 q 404 -298 421 -299 q 372 -292 386 -296 q 350 -281 358 -288 q 342 -263 342 -275 q 348 -245 342 -253 q 360 -231 353 -237 q 374 -218 368 -224 q 380 -205 380 -212 q 374 -194 380 -198 q 360 -185 368 -190 q 348 -173 353 -180 q 342 -153 342 -166 q 350 -128 342 -138 q 368 -110 358 -118 q 386 -96 378 -102 q 394 -82 394 -90 q 388 -71 394 -75 q 372 -66 382 -66 q 343 -75 354 -66 q 325 -88 332 -84 l 323 -50 z "},"\u1dc3":{"ha":764,"x_min":0,"x_max":645,"o":"m 645 1033 q 549 852 619 911 q 377 794 479 794 q 255 834 297 794 q 214 958 214 875 l 306 958 q 309 928 307 942 q 320 903 312 913 q 343 887 328 893 q 385 882 359 882 q 446 892 420 882 q 493 922 473 902 q 528 969 513 941 q 553 1033 543 997 l 645 1033 m 0 681 z "},"\u1dc4":{"ha":764,"x_min":96,"x_max":667,"o":"m 667 995 l 451 831 l 96 831 l 96 921 l 422 921 l 496 995 l 667 995 z "},"\u1dc5":{"ha":764,"x_min":96,"x_max":668,"o":"m 668 831 l 313 831 l 96 995 l 267 995 l 340 921 l 668 921 l 668 831 z "},"\u1dc6":{"ha":764,"x_min":122,"x_max":642,"o":"m 642 880 l 524 880 l 426 954 l 122 954 l 122 1044 l 477 1044 l 642 880 z "},"\u1dc7":{"ha":764,"x_min":122,"x_max":641,"o":"m 641 954 l 337 954 l 240 880 l 122 880 l 286 1044 l 641 1044 l 641 954 z "},"\u1dc8":{"ha":764,"x_min":24,"x_max":739,"o":"m 739 844 l 621 844 l 490 943 l 359 844 l 241 844 l 24 1008 l 195 1008 l 300 903 l 404 1008 l 575 1008 l 739 844 z "},"\u1dc9":{"ha":764,"x_min":24,"x_max":739,"o":"m 739 1008 l 523 844 l 405 844 l 273 943 l 142 844 l 24 844 l 188 1008 l 359 1008 l 464 903 l 568 1008 l 739 1008 z "},"\u1dca":{"ha":764,"x_min":224,"x_max":533,"o":"m 224 13 l 290 13 l 292 -52 q 352 3 324 -14 q 411 19 380 19 q 500 -16 468 19 q 530 -119 533 -51 l 460 -119 q 447 -57 461 -74 q 403 -39 432 -39 q 378 -43 390 -39 q 354 -54 366 -46 q 327 -76 341 -62 q 296 -111 313 -90 l 296 -334 l 224 -334 l 224 13 z "},"\u1dfe":{"ha":764,"x_min":0,"x_max":477,"o":"m 477 740 l 287 862 l 287 897 l 477 1020 l 477 947 l 361 880 l 477 812 l 477 740 m 0 681 z "},"\u1dff":{"ha":764,"x_min":153,"x_max":610,"o":"m 153 -232 l 269 -164 l 153 -96 l 153 -24 l 343 -146 l 343 -182 l 153 -304 l 153 -232 m 470 -184 l 538 -69 l 610 -69 l 488 -259 l 452 -259 l 330 -69 l 402 -69 l 470 -184 z "},"\u0181":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 182 0 l 182 781 q 138 769 155 777 q 112 749 121 760 q 99 724 102 738 q 96 696 96 710 q 102 649 96 670 q 109 622 107 629 l 12 622 q 4 656 8 633 q 0 700 0 678 q 56 839 0 791 q 218 886 111 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 302 407 l 302 102 l 355 102 q 510 140 459 102 q 561 261 561 179 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 302 785 l 302 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 z "},"\u0182":{"ha":764,"x_min":107,"x_max":703,"o":"m 228 522 l 371 522 q 514 503 452 522 q 618 450 576 484 q 681 370 660 416 q 703 272 703 325 q 678 158 703 209 q 608 73 653 108 q 499 19 563 37 q 358 0 436 0 l 107 0 l 107 886 l 640 886 l 640 785 l 228 785 l 228 522 m 575 264 q 563 329 575 300 q 525 379 551 358 q 459 411 499 400 q 363 422 419 422 l 228 422 l 228 102 l 367 102 q 523 144 470 102 q 575 264 575 186 z "},"\u0184":{"ha":764,"x_min":22,"x_max":703,"o":"m 228 522 l 371 522 q 514 503 452 522 q 618 450 576 484 q 681 370 660 416 q 703 272 703 325 q 678 158 703 209 q 608 73 653 108 q 499 19 563 37 q 358 0 436 0 l 107 0 l 107 692 q 80 706 95 698 q 53 723 66 713 q 31 744 39 733 q 22 766 22 755 q 42 811 22 789 q 93 850 63 833 q 157 877 123 867 q 218 886 191 886 l 228 886 l 228 522 m 575 264 q 563 329 575 300 q 525 379 551 358 q 459 411 499 400 q 363 422 418 422 l 228 422 l 228 102 l 367 102 q 523 144 471 102 q 575 264 575 186 z "},"\u0186":{"ha":764,"x_min":89,"x_max":701,"o":"m 104 859 q 203 888 153 880 q 312 897 253 897 q 478 871 406 897 q 600 790 551 845 q 675 652 650 736 q 701 453 701 568 q 673 248 701 335 q 594 103 646 160 q 469 17 543 45 q 305 -11 396 -11 q 191 -1 243 -11 q 89 31 138 9 l 89 147 q 189 107 138 121 q 301 94 239 94 q 414 116 363 94 q 500 181 465 138 q 554 290 535 225 q 573 442 573 355 q 503 708 573 621 q 298 794 433 794 q 245 791 270 794 q 197 783 220 789 q 151 769 174 777 q 104 748 128 760 l 104 859 z "},"\u0187":{"ha":764,"x_min":62,"x_max":796,"o":"m 675 33 q 452 -11 567 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 513 895 487 897 q 564 888 539 892 q 578 976 567 940 q 610 1034 590 1011 q 660 1066 631 1056 q 728 1076 689 1076 q 766 1074 749 1076 q 796 1069 782 1072 l 796 974 q 786 978 791 976 q 776 981 782 979 q 762 983 770 982 q 743 983 754 983 q 716 979 729 983 q 695 963 704 975 q 680 930 686 951 q 675 877 675 909 l 675 736 q 575 776 626 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 271 q 465 97 330 97 q 574 110 523 97 q 675 147 626 123 l 675 33 z "},"\u0189":{"ha":764,"x_min":0,"x_max":714,"o":"m 94 886 l 310 886 q 615 780 517 886 q 714 453 714 673 q 705 331 714 389 q 675 222 696 273 q 620 131 654 172 q 537 61 586 90 q 421 16 488 32 q 271 0 355 0 l 94 0 l 94 408 l 0 408 l 0 510 l 94 510 l 94 886 m 215 104 l 292 104 q 515 190 443 104 q 587 444 587 275 q 571 604 587 538 q 519 709 554 669 q 432 767 485 749 q 306 785 378 785 l 215 785 l 215 510 l 368 510 l 368 408 l 215 408 l 215 104 z "},"\u018a":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 453 q 705 331 714 389 q 674 222 695 273 q 618 131 652 172 q 535 61 585 90 q 421 16 486 32 q 273 0 356 0 l 182 0 l 182 781 q 158 776 168 779 q 140 770 147 773 q 118 755 126 763 q 104 737 109 747 q 98 717 100 728 q 96 696 96 707 q 102 649 96 670 q 109 622 107 629 l 12 622 q 4 656 8 633 q 0 700 0 678 q 56 839 0 791 q 228 886 111 886 l 311 886 q 614 780 514 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 519 709 553 669 q 432 767 484 749 q 309 785 380 785 l 302 785 l 302 104 l 309 104 q 587 444 587 104 z "},"\u018b":{"ha":764,"x_min":61,"x_max":656,"o":"m 536 785 l 123 785 l 123 886 l 656 886 l 656 0 l 406 0 q 264 19 328 0 q 156 73 201 37 q 86 158 111 108 q 61 272 61 209 q 82 370 61 325 q 145 450 104 416 q 249 503 187 484 q 393 522 311 522 l 536 522 l 536 785 m 189 264 q 241 144 189 186 q 397 102 294 102 l 536 102 l 536 422 l 401 422 q 304 411 345 422 q 239 379 264 400 q 201 329 213 358 q 189 264 189 300 z "},"\u018e":{"ha":764,"x_min":123,"x_max":627,"o":"m 123 103 l 507 103 l 507 408 l 138 408 l 138 510 l 507 510 l 507 785 l 123 785 l 123 886 l 627 886 l 627 0 l 123 0 l 123 103 z "},"\u018f":{"ha":764,"x_min":40,"x_max":725,"o":"m 40 417 q 41 470 40 449 q 43 510 41 492 l 599 510 q 529 725 599 652 q 328 798 458 798 q 260 794 294 798 q 192 784 225 790 q 130 770 159 778 q 76 755 100 763 l 76 854 q 194 884 130 871 q 332 897 259 897 q 507 866 433 897 q 629 776 581 835 q 701 632 677 717 q 725 439 725 547 q 703 265 725 347 q 637 122 681 183 q 529 24 594 60 q 378 -12 464 -12 q 227 20 290 -12 q 121 110 163 52 q 60 246 80 168 q 40 417 40 324 m 161 410 q 177 261 161 322 q 222 161 193 199 q 293 105 252 122 q 383 87 334 87 q 466 105 427 87 q 535 160 505 122 q 582 260 564 199 q 599 410 599 321 l 161 410 z "},"\u0190":{"ha":764,"x_min":74,"x_max":668,"o":"m 668 26 q 548 -2 614 7 q 412 -11 481 -11 q 158 59 243 -11 q 74 256 74 129 q 88 334 74 298 q 127 398 102 370 q 183 443 151 425 q 252 468 216 461 q 140 542 174 493 q 106 662 106 590 q 125 759 106 715 q 182 833 144 802 q 275 881 220 864 q 401 897 330 897 q 537 889 479 897 q 645 865 595 880 l 645 760 q 528 788 585 779 q 413 797 470 797 q 326 785 360 797 q 270 753 291 773 q 240 708 249 734 q 232 655 232 682 q 245 589 232 617 q 283 543 259 562 q 342 516 308 525 q 417 507 376 507 l 600 507 l 600 407 l 414 407 q 326 397 366 407 q 259 369 287 387 q 217 323 232 350 q 203 262 203 296 q 254 136 203 180 q 410 91 306 91 q 556 104 494 91 q 668 138 617 117 l 668 26 z "},"\u0191":{"ha":764,"x_min":-36,"x_max":639,"o":"m 639 783 l 262 783 l 262 496 l 619 496 l 619 395 l 262 395 l 262 9 q 253 -87 262 -43 q 220 -165 243 -132 q 158 -217 197 -198 q 59 -236 119 -236 q 31 -235 45 -236 q 4 -233 17 -234 q -19 -229 -9 -231 q -36 -225 -30 -227 l -36 -112 q 11 -124 -9 -121 q 49 -127 31 -127 q 89 -119 72 -127 q 117 -93 106 -111 q 134 -43 128 -74 q 139 36 139 -12 l 139 886 l 639 886 l 639 783 z "},"\u0193":{"ha":764,"x_min":45,"x_max":804,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 627 18 659 28 q 564 1 596 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 519 896 493 899 q 572 889 546 894 q 586 976 574 940 q 618 1034 597 1011 q 667 1066 638 1056 q 735 1076 696 1076 q 773 1074 757 1076 q 804 1069 789 1072 l 804 974 q 794 978 798 976 q 784 981 789 979 q 770 983 778 982 q 750 983 762 983 q 724 979 736 983 q 702 963 711 975 q 688 930 693 951 q 682 877 682 909 l 682 734 z "},"\u0194":{"ha":764,"x_min":3,"x_max":761,"o":"m 761 886 l 447 342 l 646 0 l 113 0 l 308 328 l 3 886 l 139 886 l 380 422 l 632 886 l 761 886 m 278 89 l 474 89 l 380 260 l 278 89 z "},"\u0196":{"ha":764,"x_min":300,"x_max":626,"o":"m 300 958 l 422 958 l 422 239 q 426 177 422 206 q 446 129 430 149 q 475 106 457 115 q 524 98 494 98 q 584 101 557 98 q 626 107 610 104 l 626 4 q 600 0 616 2 q 567 -4 585 -2 q 534 -6 550 -5 q 505 -7 517 -7 q 425 3 458 -7 q 368 28 392 13 q 315 97 330 54 q 300 201 300 139 l 300 958 z "},"\u0197":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 164 510 l 604 510 l 604 408 l 164 408 l 164 510 z "},"\u0198":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 442 774 q 478 822 461 800 q 515 859 496 844 q 559 882 535 874 q 618 890 584 890 q 653 889 636 890 q 686 883 669 887 l 686 785 q 665 790 678 787 q 627 793 651 793 q 603 788 614 793 q 581 774 591 784 q 557 748 570 764 q 528 710 545 732 l 345 465 l 710 0 z "},"\u019c":{"ha":764,"x_min":61,"x_max":703,"o":"m 170 886 l 170 192 q 172 140 170 160 q 179 107 174 119 q 192 91 184 96 q 212 86 200 86 q 236 91 224 86 q 261 111 248 96 q 291 152 275 125 q 328 223 307 179 l 328 886 l 436 886 l 436 205 q 438 144 436 168 q 446 109 441 121 q 459 91 451 96 q 479 86 467 86 q 502 90 491 86 q 526 107 513 94 q 555 148 539 121 q 594 223 572 176 l 594 886 l 703 886 l 703 0 l 612 0 l 607 109 q 541 17 576 47 q 456 -12 505 -12 q 376 19 401 -12 q 345 115 350 51 q 315 65 330 88 q 281 25 300 42 q 240 -2 262 7 q 189 -12 218 -12 q 61 185 61 -12 l 61 886 l 170 886 z "},"\u019d":{"ha":764,"x_min":-38,"x_max":684,"o":"m -38 -180 q -28 -181 -33 -181 q -18 -181 -23 -181 q 37 -170 17 -181 q 66 -140 57 -159 q 78 -94 76 -121 q 81 -37 81 -68 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 -57 q 147 -227 193 -168 q -2 -286 100 -286 q -38 -283 -19 -286 l -38 -180 z "},"\u019f":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 382 93 q 476 117 436 93 q 543 184 515 142 q 584 284 570 227 q 601 408 597 342 l 164 408 q 181 279 167 337 q 221 179 195 220 q 287 116 248 138 q 382 93 327 93 m 382 793 q 292 771 330 793 q 228 710 254 749 q 186 619 201 671 q 165 507 172 567 l 600 507 q 578 627 593 574 q 535 716 562 680 q 471 773 509 753 q 382 793 433 793 z "},"\u01a2":{"ha":764,"x_min":69,"x_max":694,"o":"m 586 0 l 586 765 l 463 749 l 463 179 q 449 87 463 123 q 413 28 436 50 q 359 -2 390 7 q 292 -11 328 -11 q 189 15 231 -11 q 120 94 146 40 q 81 232 94 148 q 69 433 69 316 q 80 634 69 548 q 116 779 90 721 q 184 866 142 837 q 291 895 227 895 q 335 893 315 895 q 370 886 354 891 q 401 874 387 882 q 431 857 416 867 l 694 886 l 694 0 l 586 0 m 187 444 q 190 291 187 358 q 203 179 193 224 q 234 110 214 134 q 290 87 254 87 q 317 92 305 87 q 337 109 329 97 q 350 141 345 121 q 354 191 354 161 l 354 703 q 337 773 354 753 q 290 793 319 793 q 237 769 257 793 q 206 701 217 746 q 191 592 195 656 q 187 444 187 527 z "},"\u01a4":{"ha":764,"x_min":-14,"x_max":702,"o":"m 576 610 q 526 741 576 696 q 374 786 475 786 l 315 786 l 315 421 l 363 421 q 576 610 576 421 m 195 785 q 148 780 169 785 q 113 765 127 775 q 90 737 98 754 q 82 696 82 720 q 87 649 82 670 q 95 622 93 629 l -3 622 q -10 656 -6 633 q -14 700 -14 678 q 40 839 -14 791 q 210 886 94 886 l 380 886 q 504 872 446 886 q 607 825 563 857 q 676 741 651 792 q 702 615 702 689 q 683 508 702 561 q 624 412 665 454 q 518 344 583 370 q 361 318 453 318 l 315 318 l 315 0 l 195 0 l 195 785 z "},"\u01a6":{"ha":764,"x_min":115,"x_max":713,"o":"m 713 -111 l 576 -111 l 444 172 q 414 226 429 205 q 380 260 398 248 q 341 278 362 273 q 293 283 319 283 l 236 283 l 236 0 l 115 0 l 115 886 l 236 886 l 236 775 l 353 775 q 486 758 430 775 q 577 711 541 741 q 629 637 612 680 q 646 542 646 594 q 633 464 646 500 q 597 396 621 427 q 537 344 573 366 q 456 311 502 322 q 519 266 493 298 q 572 180 545 234 l 713 -111 m 519 532 q 475 638 519 603 q 350 673 431 673 l 236 673 l 236 380 l 334 380 q 411 390 376 380 q 469 419 445 400 q 506 467 493 439 q 519 532 519 495 z "},"\u01a7":{"ha":764,"x_min":89,"x_max":676,"o":"m 89 240 q 108 329 89 291 q 159 398 127 368 q 231 451 191 428 q 314 494 272 474 q 397 534 356 515 q 469 574 437 553 q 520 622 500 596 q 539 682 539 648 q 496 769 539 743 q 363 794 454 794 q 304 792 332 794 q 250 785 277 789 q 196 774 222 781 q 140 760 169 768 l 140 868 q 247 890 191 882 q 363 899 303 899 q 499 881 442 899 q 594 833 557 864 q 648 761 631 803 q 665 670 665 719 q 646 586 665 623 q 595 520 627 549 q 524 469 564 492 q 441 425 484 446 q 359 385 399 404 q 288 342 319 365 q 237 294 256 320 q 218 233 218 267 q 226 174 218 200 q 256 131 235 149 q 312 103 277 113 q 401 94 348 94 q 554 105 483 94 q 676 135 625 116 l 676 18 q 622 7 653 12 q 555 -3 591 1 q 483 -10 520 -7 q 410 -12 446 -12 q 172 51 254 -12 q 89 240 89 113 z "},"\u01a9":{"ha":764,"x_min":75,"x_max":688,"o":"m 232 113 l 688 113 l 688 0 l 75 0 l 75 95 l 372 460 l 87 793 l 87 886 l 679 886 l 679 777 l 259 777 l 522 469 l 232 113 z "},"\u01ac":{"ha":764,"x_min":4,"x_max":705,"o":"m 705 886 l 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 201 783 q 129 760 155 783 q 102 698 102 736 q 107 653 102 672 q 115 624 112 633 l 16 624 q 8 658 12 635 q 4 702 4 680 q 236 886 4 886 l 705 886 z "},"\u01ae":{"ha":764,"x_min":58,"x_max":705,"o":"m 443 783 l 443 -47 q 447 -103 443 -78 q 461 -145 450 -127 q 491 -172 471 -163 q 543 -182 511 -182 q 595 -178 574 -182 q 631 -172 616 -175 l 631 -275 q 582 -283 611 -279 q 522 -286 552 -286 q 429 -272 467 -286 q 367 -230 391 -258 q 332 -163 342 -203 q 321 -71 321 -123 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 l 443 783 z "},"\u01b1":{"ha":764,"x_min":29,"x_max":734,"o":"m 29 887 l 322 887 l 322 798 q 247 733 277 770 q 198 649 216 696 q 172 547 180 603 q 163 423 163 490 q 175 291 163 351 q 213 186 187 230 q 281 118 239 142 q 382 93 322 93 q 480 119 439 93 q 547 189 521 144 q 587 294 574 234 q 600 423 600 355 q 591 543 600 488 q 564 644 583 598 q 515 728 545 690 q 441 795 486 766 l 441 887 l 734 887 l 734 789 l 564 789 q 686 644 647 734 q 725 426 725 553 q 697 231 725 313 q 623 95 670 149 q 512 15 575 41 q 378 -12 449 -12 q 225 19 289 -12 q 119 106 161 50 q 58 242 78 163 q 39 418 39 321 q 76 637 39 544 q 201 789 114 730 l 29 789 l 29 887 z "},"\u01b2":{"ha":764,"x_min":74,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 637 q 566 704 570 675 q 552 752 563 733 q 522 782 541 772 q 471 791 503 791 q 431 788 449 791 q 397 782 412 785 l 397 885 q 442 892 417 889 q 492 896 467 896 q 584 881 546 896 q 646 837 622 866 q 680 763 669 807 q 690 661 690 719 l 690 309 z "},"\u01b3":{"ha":764,"x_min":14,"x_max":764,"o":"m 443 317 l 443 0 l 321 0 l 321 319 l 14 886 l 159 886 l 387 432 l 547 779 q 609 865 575 839 q 692 892 644 892 q 726 890 709 892 q 764 886 744 889 l 764 783 q 741 787 752 785 q 719 788 730 788 q 683 779 697 788 q 656 746 668 769 l 443 317 z "},"\u01b5":{"ha":764,"x_min":75,"x_max":688,"o":"m 111 520 l 360 520 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 l 498 520 l 674 520 l 674 418 l 430 418 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 293 418 l 111 418 l 111 520 z "},"\u01b7":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 276 q 633 165 652 218 q 571 74 614 113 q 457 11 528 34 q 284 -12 387 -12 q 191 -9 231 -12 q 113 0 150 -5 l 113 106 q 201 94 156 98 q 295 90 246 90 q 407 103 361 90 q 479 140 452 116 q 517 196 506 163 q 529 269 529 229 q 516 342 529 311 q 475 396 503 374 q 400 430 446 418 q 286 441 353 441 l 239 441 l 239 522 l 475 785 l 130 785 l 130 886 l 616 886 l 616 788 l 376 529 q 472 509 423 524 q 561 465 521 494 q 627 390 602 435 q 652 276 652 344 z "},"\u01b8":{"ha":764,"x_min":111,"x_max":650,"o":"m 111 269 q 137 384 111 337 q 202 461 162 431 q 292 508 243 492 q 387 529 340 524 l 147 788 l 147 886 l 634 886 l 634 785 l 288 785 l 524 522 l 524 441 l 477 441 q 364 429 410 441 q 289 393 317 416 q 248 337 260 370 q 235 262 235 304 q 246 191 235 222 q 285 136 258 159 q 357 102 312 114 q 469 90 402 90 q 563 94 517 90 q 650 106 608 98 l 650 0 q 573 -9 614 -5 q 479 -12 532 -12 q 307 10 377 -12 q 193 70 236 32 q 130 160 149 109 q 111 269 111 211 z "},"\u01bc":{"ha":764,"x_min":33,"x_max":661,"o":"m 661 283 q 633 163 661 218 q 554 70 604 109 q 437 9 505 31 q 290 -12 369 -12 q 248 -11 271 -12 q 203 -9 225 -10 q 159 -5 180 -7 q 121 0 138 -3 l 121 107 q 204 94 157 98 q 300 90 251 90 q 397 103 354 90 q 471 140 441 116 q 518 198 502 164 q 534 275 534 233 q 475 396 534 358 q 304 433 416 433 l 136 433 l 195 783 l 33 783 l 33 886 l 614 886 l 614 783 l 307 783 l 264 534 l 325 534 q 449 523 389 534 q 556 483 509 511 q 632 405 604 454 q 661 283 661 357 z "},"\u01c4":{"ha":764,"x_min":54,"x_max":755,"o":"m 425 453 q 411 275 425 356 q 362 131 396 194 q 338 93 351 111 q 309 61 324 76 q 274 35 292 47 q 234 16 256 24 q 184 4 212 8 q 123 0 157 0 l 54 0 l 54 886 l 148 886 q 360 779 295 886 q 425 453 425 672 m 315 444 q 306 604 315 538 q 279 709 297 669 q 233 767 260 749 q 168 785 205 785 l 161 785 l 161 104 l 168 104 q 315 444 315 104 m 736 791 l 541 104 l 745 104 l 745 0 l 431 0 l 431 90 l 628 785 l 443 785 l 443 886 l 736 886 l 736 791 m 412 1125 l 511 1125 l 585 1055 l 658 1125 l 755 1125 l 629 981 l 538 981 l 412 1125 z "},"\u01c5":{"ha":764,"x_min":54,"x_max":754,"o":"m 425 453 q 411 275 425 356 q 362 131 396 194 q 338 93 351 111 q 309 61 324 76 q 274 35 292 47 q 234 16 256 24 q 184 4 212 8 q 123 0 157 0 l 54 0 l 54 886 l 148 886 q 360 779 295 886 q 425 453 425 672 m 315 444 q 306 604 315 538 q 279 709 297 669 q 233 767 260 749 q 168 785 205 785 l 161 785 l 161 104 l 168 104 q 315 444 315 104 m 736 586 l 547 102 l 745 102 l 745 0 l 436 0 l 436 90 l 628 582 l 452 582 l 452 681 l 736 681 l 736 586 m 545 794 l 412 958 l 507 958 l 584 876 l 661 958 l 754 958 l 622 794 l 545 794 z "},"\u01c7":{"ha":764,"x_min":85,"x_max":679,"o":"m 679 886 l 679 250 q 666 147 679 193 q 625 68 654 100 q 548 18 596 35 q 430 0 500 0 l 430 105 q 492 112 467 105 q 533 135 517 119 q 555 180 548 152 q 562 250 562 208 l 562 782 l 401 782 l 401 886 l 679 886 m 357 0 l 85 0 l 85 886 l 205 886 l 205 103 l 357 103 l 357 0 z "},"\u01c8":{"ha":764,"x_min":85,"x_max":701,"o":"m 357 0 l 85 0 l 85 886 l 205 886 l 205 103 l 357 103 l 357 0 m 679 681 l 679 12 q 612 -208 679 -130 q 409 -285 546 -285 q 350 -281 378 -285 q 309 -275 323 -278 l 309 -162 q 329 -170 317 -165 q 356 -177 341 -174 q 387 -182 371 -180 q 420 -184 404 -184 q 530 -136 498 -184 q 562 8 562 -87 l 562 583 l 391 583 l 391 681 l 679 681 m 608 966 q 644 959 627 966 q 674 939 661 952 q 693 909 686 926 q 701 873 701 892 q 693 837 701 854 q 674 808 686 821 q 644 788 661 795 q 608 781 627 781 q 571 788 588 781 q 542 808 554 795 q 522 837 529 821 q 515 873 515 854 q 522 909 515 892 q 542 939 529 926 q 571 959 554 952 q 608 966 588 966 z "},"\u01ca":{"ha":764,"x_min":41,"x_max":723,"o":"m 427 0 l 295 0 l 134 649 l 148 425 l 148 0 l 41 0 l 41 886 l 170 886 l 333 228 l 319 458 l 319 886 l 427 886 l 427 0 m 723 886 l 723 250 q 712 147 723 193 q 675 68 702 100 q 604 18 649 35 q 488 0 558 0 l 488 105 q 548 112 524 105 q 585 135 572 119 q 604 180 599 152 q 609 250 609 208 l 609 782 l 488 782 l 488 886 l 723 886 z "},"\u01cb":{"ha":764,"x_min":41,"x_max":734,"o":"m 427 0 l 295 0 l 134 649 l 148 425 l 148 0 l 41 0 l 41 886 l 170 886 l 333 228 l 319 458 l 319 886 l 427 886 l 427 0 m 722 681 l 722 12 q 710 -114 722 -59 q 672 -207 699 -170 q 601 -264 645 -245 q 494 -283 557 -283 q 439 -281 461 -283 q 406 -276 418 -279 l 406 -171 q 445 -181 424 -178 q 491 -184 466 -184 q 553 -172 530 -184 q 588 -136 576 -160 q 605 -75 601 -111 q 608 8 608 -39 l 608 583 l 488 583 l 488 681 l 722 681 m 641 966 q 677 959 661 966 q 707 939 694 952 q 727 909 720 926 q 734 873 734 892 q 727 837 734 854 q 707 808 720 821 q 677 788 694 795 q 641 781 661 781 q 604 788 621 781 q 575 808 587 795 q 555 837 562 821 q 548 873 548 854 q 555 909 548 892 q 575 939 562 926 q 604 959 587 952 q 641 966 621 966 z "},"\u01cd":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u01cf":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u01d1":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u01d3":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u01d5":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 574 1200 l 191 1200 l 191 1291 l 574 1291 l 574 1200 m 0 886 z "},"\u01d7":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 574 1307 l 423 1173 l 328 1173 l 436 1307 l 574 1307 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u01d9":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 338 1158 l 190 1322 l 294 1322 l 380 1240 l 467 1322 l 574 1322 l 426 1158 l 338 1158 m 0 886 z "},"\u01db":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 328 1307 l 437 1173 l 341 1173 l 190 1307 l 328 1307 m 531 1125 q 559 1119 546 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 582 1001 603 1022 q 531 981 562 981 q 503 986 516 981 q 480 1002 490 992 q 464 1024 470 1011 q 458 1053 458 1038 q 464 1081 458 1067 q 480 1104 470 1095 q 503 1119 490 1114 q 531 1125 516 1125 m 234 1125 q 262 1119 249 1125 q 285 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 285 1001 306 1022 q 234 981 264 981 q 205 986 219 981 q 182 1002 192 992 q 167 1024 173 1011 q 161 1053 161 1038 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 234 1125 219 1125 m 0 886 z "},"\u01de":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 574 1200 l 191 1200 l 191 1291 l 574 1291 l 574 1200 m 0 886 z "},"\u01e0":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 574 1226 l 191 1226 l 191 1316 l 574 1316 l 574 1226 m 382 1150 q 417 1143 401 1150 q 446 1124 434 1136 q 465 1095 458 1112 q 472 1060 472 1079 q 465 1025 472 1041 q 446 996 458 1008 q 417 977 434 984 q 382 970 401 970 q 346 977 362 970 q 317 996 330 984 q 298 1025 305 1008 q 292 1060 292 1041 q 298 1095 292 1079 q 317 1124 305 1112 q 346 1143 330 1136 q 382 1150 362 1150 m 0 886 z "},"\u01e2":{"ha":764,"x_min":-29,"x_max":736,"o":"m 736 0 l 396 0 l 396 191 l 164 191 l 90 0 l -29 0 l 332 886 l 726 886 l 726 790 l 509 790 l 509 507 l 717 507 l 717 411 l 509 411 l 509 97 l 736 97 l 736 0 m 396 288 l 396 791 l 201 288 l 396 288 m 714 1006 l 331 1006 l 331 1096 l 714 1096 l 714 1006 m 140 886 z "},"\u01e4":{"ha":764,"x_min":45,"x_max":763,"o":"m 384 302 l 567 302 l 567 395 l 386 395 l 386 494 l 686 494 l 686 302 l 763 302 l 763 207 l 686 207 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 207 l 384 207 l 384 302 z "},"\u01e6":{"ha":764,"x_min":20,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 189 1125 l 312 1125 l 404 1055 l 495 1125 l 616 1125 l 459 981 l 345 981 l 189 1125 m 20 886 z "},"\u01e8":{"ha":764,"x_min":-9,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 159 1125 l 282 1125 l 374 1055 l 465 1125 l 587 1125 l 429 981 l 315 981 l 159 1125 m -9 886 z "},"\u01ea":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 494 -254 q 457 -259 477 -258 q 419 -261 436 -261 q 308 -230 346 -261 q 271 -150 271 -199 q 274 -119 271 -134 q 286 -85 277 -103 q 310 -47 294 -68 q 353 0 326 -26 l 458 0 q 419 -43 434 -24 q 396 -77 404 -62 q 385 -105 388 -92 q 382 -131 382 -118 q 396 -166 382 -153 q 447 -180 411 -180 q 470 -180 456 -180 q 494 -178 483 -179 l 494 -254 z "},"\u01ec":{"ha":764,"x_min":1,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 494 -254 q 457 -259 477 -258 q 419 -261 436 -261 q 308 -230 346 -261 q 271 -150 271 -199 q 274 -119 271 -134 q 286 -85 277 -103 q 310 -47 294 -68 q 353 0 326 -26 l 458 0 q 419 -43 434 -24 q 396 -77 404 -62 q 385 -105 388 -92 q 382 -131 382 -118 q 396 -166 382 -153 q 447 -180 411 -180 q 470 -180 456 -180 q 494 -178 483 -179 l 494 -254 m 575 1006 l 192 1006 l 192 1096 l 575 1096 l 575 1006 m 1 886 z "},"\u01ee":{"ha":764,"x_min":-6,"x_max":652,"o":"m 652 276 q 633 165 652 218 q 571 74 614 113 q 457 11 528 34 q 284 -12 387 -12 q 191 -9 231 -12 q 113 0 150 -5 l 113 106 q 201 94 156 98 q 295 90 246 90 q 407 103 361 90 q 479 140 452 116 q 517 196 506 163 q 529 269 529 229 q 516 342 529 311 q 475 396 503 374 q 400 430 446 418 q 286 441 353 441 l 239 441 l 239 522 l 475 785 l 130 785 l 130 886 l 616 886 l 616 788 l 376 529 q 472 509 423 524 q 561 465 521 494 q 627 390 602 435 q 652 276 652 344 m 162 1125 l 286 1125 l 377 1055 l 469 1125 l 590 1125 l 433 981 l 319 981 l 162 1125 m -6 886 z "},"\u01f1":{"ha":764,"x_min":54,"x_max":745,"o":"m 425 453 q 419 331 425 389 q 399 222 413 273 q 362 131 385 172 q 309 61 340 90 q 234 16 277 32 q 123 0 191 0 l 54 0 l 54 886 l 148 886 q 360 780 295 886 q 425 453 425 673 m 315 444 q 306 604 315 538 q 279 709 297 669 q 233 767 260 749 q 168 785 205 785 l 161 785 l 161 104 l 168 104 q 315 444 315 104 m 736 791 l 541 104 l 745 104 l 745 0 l 431 0 l 431 90 l 628 785 l 443 785 l 443 886 l 736 886 l 736 791 z "},"\u01f2":{"ha":764,"x_min":54,"x_max":745,"o":"m 425 453 q 419 331 425 389 q 399 222 413 273 q 362 131 385 172 q 309 61 340 90 q 234 16 277 32 q 123 0 191 0 l 54 0 l 54 886 l 148 886 q 360 780 295 886 q 425 453 425 673 m 315 444 q 306 604 315 538 q 279 709 297 669 q 233 767 260 749 q 168 785 205 785 l 161 785 l 161 104 l 168 104 q 315 444 315 104 m 736 586 l 547 102 l 745 102 l 745 0 l 436 0 l 436 90 l 628 582 l 452 582 l 452 681 l 736 681 l 736 586 z "},"\u01f4":{"ha":764,"x_min":0,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u01f6":{"ha":764,"x_min":61,"x_max":703,"o":"m 452 886 l 452 229 q 459 153 452 182 q 476 110 465 125 q 500 90 487 94 q 526 85 513 85 q 554 91 542 85 q 575 113 567 98 q 588 152 584 127 q 593 212 593 176 l 593 681 l 703 681 l 703 222 q 694 125 703 168 q 664 51 685 81 q 610 4 644 20 q 527 -12 576 -12 q 429 9 466 -12 q 371 62 391 30 q 345 134 351 95 q 338 208 338 172 l 338 407 l 174 407 l 174 0 l 61 0 l 61 886 l 174 886 l 174 511 l 338 511 l 338 886 l 452 886 z "},"\u01f7":{"ha":764,"x_min":70,"x_max":694,"o":"m 192 796 q 228 826 207 810 q 276 857 248 843 q 340 881 304 871 q 420 890 376 890 q 538 871 487 890 q 624 814 589 851 q 676 726 659 778 q 694 608 694 673 q 657 396 694 493 q 554 220 621 299 q 395 79 488 141 q 192 -27 302 18 l 192 -278 l 70 -278 l 70 886 l 192 886 l 192 796 m 192 84 q 351 179 281 128 q 469 293 420 231 q 543 432 517 356 q 568 603 568 509 q 529 746 568 701 q 413 791 489 791 q 336 781 370 791 q 276 757 302 772 q 229 725 249 743 q 192 692 208 708 l 192 84 z "},"\u01f8":{"ha":764,"x_min":34,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 487 981 l 366 981 l 173 1125 l 344 1125 l 487 981 m 34 886 z "},"\u0200":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u0202":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u0204":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u0206":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u0208":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u020a":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u020c":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u020e":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u0210":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u0212":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u0214":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u0216":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 469 972 q 447 1024 469 1007 q 382 1042 424 1042 q 317 1024 340 1042 q 294 972 294 1007 l 201 972 q 216 1043 201 1014 q 256 1092 231 1073 q 313 1120 281 1111 q 382 1129 346 1129 q 451 1120 418 1129 q 508 1092 484 1111 q 548 1043 533 1073 q 562 972 562 1014 l 469 972 m 0 886 z "},"\u021c":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 276 q 633 165 652 218 q 571 74 614 113 q 457 11 528 34 q 284 -12 387 -12 q 191 -9 231 -12 q 113 0 150 -5 l 113 106 q 201 94 156 98 q 295 90 246 90 q 407 103 361 90 q 479 140 452 116 q 517 196 506 163 q 529 269 529 229 q 516 342 529 311 q 475 396 503 374 q 400 430 446 418 q 286 441 353 441 l 239 441 l 239 522 l 475 785 l 130 785 l 130 886 l 616 886 l 616 788 l 376 529 q 472 509 423 524 q 561 465 521 494 q 627 390 602 435 q 652 276 652 344 z "},"\u021e":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u0220":{"ha":764,"x_min":81,"x_max":684,"o":"m 571 -278 l 571 640 q 559 713 571 683 q 528 763 548 744 q 482 791 509 782 q 427 800 456 800 q 378 793 405 800 q 321 771 351 787 q 258 728 291 755 q 193 660 226 701 l 193 0 l 81 0 l 81 886 l 186 886 l 191 777 q 253 835 220 812 q 320 873 286 859 q 387 893 354 887 q 450 899 420 899 q 546 883 503 899 q 620 837 589 867 q 667 759 650 806 q 684 650 684 712 l 684 -278 l 571 -278 z "},"\u0222":{"ha":764,"x_min":71,"x_max":692,"o":"m 629 886 q 655 831 648 857 q 662 774 662 806 q 648 694 662 730 q 609 628 633 658 q 550 571 584 597 q 477 517 516 544 q 557 463 518 491 q 626 400 596 434 q 674 327 656 367 q 692 237 692 287 q 678 144 692 190 q 628 62 663 98 q 532 4 592 26 q 381 -18 472 -18 q 231 3 290 -18 q 135 60 171 24 q 85 142 100 96 q 71 237 71 188 q 89 325 71 285 q 136 399 106 365 q 205 462 166 433 q 286 517 243 491 q 213 571 246 544 q 154 628 179 597 q 115 694 130 658 q 101 774 101 730 q 108 831 101 806 q 134 886 115 857 l 259 886 q 241 853 248 867 q 231 826 234 838 q 226 803 227 814 q 225 781 225 792 q 237 713 225 743 q 269 660 248 684 q 318 614 289 635 q 381 571 347 593 q 445 614 416 593 q 494 660 473 635 q 526 713 515 684 q 538 781 538 743 q 537 803 538 792 q 532 826 536 814 q 522 853 529 838 q 504 886 515 867 l 629 886 m 568 239 q 554 299 568 270 q 515 355 540 328 q 455 408 490 382 q 381 457 421 433 q 304 407 338 433 q 245 355 269 382 q 208 299 221 328 q 195 239 195 270 q 239 121 195 159 q 381 83 283 83 q 524 121 479 83 q 568 239 568 159 z "},"\u0224":{"ha":764,"x_min":75,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 -56 q 677 -157 688 -117 q 648 -220 667 -197 q 598 -253 628 -243 q 530 -262 568 -262 q 480 -261 504 -262 q 441 -257 457 -259 l 441 -162 q 476 -168 456 -165 q 513 -171 495 -171 q 539 -167 528 -171 q 560 -151 551 -163 q 574 -120 569 -140 q 578 -67 578 -100 l 578 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 z "},"\u0226":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u0228":{"ha":764,"x_min":136,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 457 0 l 399 -200 l 296 -200 l 340 0 l 457 0 z "},"\u022a":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 574 1200 l 191 1200 l 191 1291 l 574 1291 l 574 1200 m 0 886 z "},"\u022c":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 574 1208 l 191 1208 l 191 1298 l 574 1298 l 574 1208 m 0 886 z "},"\u022e":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u0230":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 574 1226 l 191 1226 l 191 1316 l 574 1316 l 574 1226 m 382 1150 q 417 1143 401 1150 q 446 1124 434 1136 q 465 1095 458 1112 q 472 1060 472 1079 q 465 1025 472 1041 q 446 996 458 1008 q 417 977 434 984 q 382 970 401 970 q 346 977 362 970 q 317 996 330 984 q 298 1025 305 1008 q 292 1060 292 1041 q 298 1095 292 1079 q 317 1124 305 1112 q 346 1143 330 1136 q 382 1150 362 1150 m 0 886 z "},"\u0232":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u023a":{"ha":764,"x_min":-61,"x_max":822,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 822 969 l 66 -117 l -61 -117 l 696 969 l 822 969 z "},"\u023b":{"ha":764,"x_min":-45,"x_max":838,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 838 969 l 81 -117 l -45 -117 l 712 969 l 838 969 z "},"\u023d":{"ha":764,"x_min":33,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 33 510 l 473 510 l 473 408 l 33 408 l 33 510 z "},"\u023e":{"ha":764,"x_min":-33,"x_max":850,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 850 969 l 94 -117 l -33 -117 l 725 969 l 850 969 z "},"\u0241":{"ha":764,"x_min":197,"x_max":616,"o":"m 616 598 q 602 481 616 537 q 557 382 587 426 q 481 309 527 338 q 372 271 435 279 l 372 0 l 256 0 l 256 363 l 308 363 q 394 381 359 363 q 450 431 429 399 q 479 506 471 463 q 488 600 488 549 q 468 721 488 672 q 411 799 448 769 q 324 840 374 828 q 214 852 273 852 l 197 852 l 197 958 l 215 958 q 394 931 318 958 q 519 857 469 905 q 592 743 568 809 q 616 598 616 677 z "},"\u0243":{"ha":764,"x_min":-1,"x_max":689,"o":"m -1 298 l 107 298 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 196 l -1 196 l -1 298 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 298 l 362 298 l 362 196 l 228 196 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 z "},"\u0244":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 520 l 74 520 l 74 886 l 195 886 l 195 520 l 570 520 l 570 886 l 690 886 l 690 520 l 764 520 l 764 418 l 690 418 l 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 418 l 0 418 l 0 520 m 204 208 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 418 l 195 418 l 195 300 q 204 208 195 248 z "},"\u0245":{"ha":764,"x_min":3,"x_max":761,"o":"m 3 0 l 304 886 l 467 886 l 761 0 l 625 0 l 433 597 l 379 772 l 323 597 l 132 0 l 3 0 z "},"\u0246":{"ha":764,"x_min":-61,"x_max":822,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 822 969 l 66 -117 l -61 -117 l 696 969 l 822 969 z "},"\u0248":{"ha":764,"x_min":123,"x_max":726,"o":"m 595 886 l 595 271 q 578 162 595 214 q 526 73 561 111 q 439 13 492 35 q 317 -9 387 -9 q 263 -6 290 -9 q 210 4 235 -2 q 162 20 184 11 q 123 40 140 29 l 123 161 q 217 113 165 131 q 318 96 268 96 q 432 141 392 96 q 472 271 472 186 l 472 782 l 135 782 l 135 886 l 595 886 m 286 510 l 726 510 l 726 408 l 286 408 l 286 510 z "},"\u024a":{"ha":764,"x_min":39,"x_max":797,"o":"m 675 -85 q 681 -138 675 -118 q 695 -168 686 -157 q 717 -181 705 -178 q 743 -184 730 -184 q 772 -181 757 -184 q 797 -174 787 -178 l 797 -277 q 761 -283 783 -281 q 718 -285 739 -285 q 647 -274 677 -285 q 595 -239 616 -263 q 564 -178 574 -216 q 553 -85 553 -140 l 553 88 q 513 50 534 68 q 468 18 492 31 q 412 -4 443 4 q 342 -12 381 -12 q 220 16 276 -12 q 124 100 165 44 q 61 241 84 157 q 39 439 39 326 q 65 644 39 557 q 139 787 92 730 q 248 871 185 844 q 381 899 310 899 q 483 888 443 899 q 551 863 523 877 l 675 886 l 675 -85 m 386 793 q 283 765 325 793 q 214 691 241 738 q 176 580 188 644 q 164 446 164 517 q 176 302 164 367 q 210 191 187 237 q 267 119 233 144 q 347 93 301 93 q 421 106 388 93 q 479 141 454 120 q 523 188 505 162 q 553 239 541 214 l 553 744 q 484 778 528 762 q 386 793 441 793 z "},"\u024c":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 395 l 0 395 l 0 492 l 115 492 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 z "},"\u024e":{"ha":764,"x_min":-1,"x_max":764,"o":"m -1 703 l 104 703 l 0 886 l 146 886 l 243 703 l 529 703 l 625 886 l 764 886 l 661 703 l 764 703 l 764 602 l 603 602 l 443 317 l 443 0 l 321 0 l 321 319 l 161 602 l -1 602 l -1 703 m 387 432 l 476 602 l 297 602 l 387 432 z "},"\u1e00":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 515 -176 q 505 -226 515 -203 q 478 -266 496 -249 q 435 -292 460 -283 q 378 -301 410 -301 q 320 -292 345 -301 q 280 -268 296 -283 q 256 -230 264 -252 q 248 -180 248 -208 q 257 -130 248 -153 q 283 -91 266 -107 q 326 -65 300 -74 q 384 -56 351 -56 q 480 -89 446 -56 q 515 -176 515 -121 m 443 -180 q 428 -133 443 -153 q 380 -114 414 -114 q 335 -131 351 -114 q 320 -176 320 -149 q 334 -225 320 -206 q 382 -243 348 -243 q 428 -225 412 -243 q 443 -180 443 -208 z "},"\u1e02":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e04":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e06":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 265 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 339 0 418 0 l 107 0 l 107 886 l 361 886 q 657 671 657 886 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 353 785 406 785 l 228 785 l 228 507 l 349 507 q 424 516 390 507 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 351 407 400 407 l 228 407 l 228 102 l 355 102 q 510 140 459 102 q 561 261 561 179 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e08":{"ha":764,"x_min":0,"x_max":675,"o":"m 675 33 q 458 -11 567 -11 l 403 -200 l 300 -200 l 345 0 q 135 139 208 28 q 62 433 62 250 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 185 191 273 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1e0a":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e0c":{"ha":764,"x_min":74,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e0e":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e10":{"ha":764,"x_min":74,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 298 -264 q 356 -249 341 -260 q 371 -220 371 -238 q 365 -202 371 -209 q 351 -192 359 -196 q 333 -184 343 -188 q 315 -174 323 -180 q 301 -157 307 -168 q 295 -129 295 -146 q 299 -105 295 -117 q 313 -86 304 -94 q 338 -72 323 -77 q 374 -67 353 -67 q 411 -73 394 -67 q 441 -90 429 -79 q 461 -120 454 -102 q 469 -163 469 -138 q 460 -220 469 -193 q 431 -267 451 -246 q 378 -300 411 -288 q 298 -314 346 -313 l 298 -264 z "},"\u1e12":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 453 q 704 331 714 389 q 673 222 694 273 q 616 131 651 172 q 532 61 582 90 q 415 16 481 32 q 264 0 349 0 l 74 0 l 74 886 l 302 886 q 612 780 510 886 q 714 453 714 673 m 587 444 q 570 604 587 538 q 516 709 552 669 q 426 767 480 749 q 298 785 372 785 l 195 785 l 195 104 l 285 104 q 587 444 587 104 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e14":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 191 1096 l 574 1096 l 574 1006 l 191 1006 l 191 1096 m 329 1301 l 437 1167 l 342 1167 l 191 1301 l 329 1301 m 0 886 z "},"\u1e16":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 574 1301 l 423 1167 l 328 1167 l 436 1301 l 574 1301 m 0 886 z "},"\u1e18":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e1a":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 136 -157 q 202 -83 165 -108 q 286 -58 239 -58 q 353 -70 326 -58 q 401 -95 380 -81 q 440 -120 422 -109 q 482 -132 459 -132 q 530 -113 509 -132 q 570 -65 551 -94 l 628 -123 q 562 -197 598 -172 q 478 -222 525 -222 q 411 -211 438 -222 q 363 -185 385 -199 q 324 -160 342 -172 q 282 -149 305 -149 q 234 -167 254 -149 q 195 -215 214 -186 l 136 -157 m 0 -336 z "},"\u1e1c":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 457 0 l 399 -200 l 296 -200 l 340 0 l 457 0 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u1e1e":{"ha":764,"x_min":0,"x_max":639,"o":"m 639 783 l 262 783 l 262 496 l 619 496 l 619 395 l 262 395 l 262 0 l 139 0 l 139 886 l 639 886 l 639 783 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e20":{"ha":764,"x_min":34,"x_max":686,"o":"m 682 734 q 581 775 633 761 q 467 790 528 790 q 341 765 396 790 q 249 694 286 740 q 191 584 211 648 q 171 441 171 519 q 187 296 171 360 q 238 186 203 231 q 327 118 273 142 q 456 94 380 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 386 395 l 386 494 l 686 494 l 686 41 q 628 18 659 28 q 565 1 597 8 q 500 -9 532 -5 q 439 -12 469 -12 q 275 16 348 -12 q 151 101 202 45 q 72 240 100 157 q 45 433 45 323 q 75 629 45 543 q 161 775 106 715 q 294 867 216 836 q 465 899 372 899 q 579 888 525 899 q 682 854 633 878 l 682 734 m 608 1006 l 224 1006 l 224 1096 l 608 1096 l 608 1006 m 34 886 z "},"\u1e22":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e24":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e26":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u1e28":{"ha":764,"x_min":35,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 197 0 l 138 -200 l 35 -200 l 80 0 l 197 0 z "},"\u1e2a":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 550 -52 q 536 -124 550 -93 q 500 -175 523 -155 q 447 -205 477 -195 q 382 -216 416 -216 q 317 -205 347 -216 q 263 -175 286 -195 q 227 -124 241 -155 q 214 -52 214 -93 l 306 -52 q 325 -107 306 -86 q 382 -128 344 -128 q 439 -107 420 -128 q 458 -52 458 -86 l 550 -52 m 0 -329 z "},"\u1e2c":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 136 -157 q 202 -83 165 -108 q 286 -58 239 -58 q 353 -70 326 -58 q 401 -95 380 -81 q 440 -120 422 -109 q 482 -132 459 -132 q 530 -113 509 -132 q 570 -65 551 -94 l 628 -123 q 562 -197 598 -172 q 478 -222 525 -222 q 411 -211 438 -222 q 363 -185 385 -199 q 324 -160 342 -172 q 282 -149 305 -149 q 234 -167 254 -149 q 195 -215 214 -186 l 136 -157 m 0 -336 z "},"\u1e2e":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 574 1307 l 423 1173 l 328 1173 l 436 1307 l 574 1307 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u1e30":{"ha":764,"x_min":0,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1e32":{"ha":764,"x_min":106,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e34":{"ha":764,"x_min":0,"x_max":710,"o":"m 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e36":{"ha":764,"x_min":158,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 422 -87 q 458 -94 441 -87 q 487 -113 475 -101 q 506 -142 499 -125 q 513 -177 513 -158 q 506 -212 513 -196 q 487 -241 499 -229 q 458 -260 475 -253 q 422 -267 441 -267 q 387 -260 403 -267 q 358 -241 370 -253 q 339 -212 346 -229 q 332 -177 332 -196 q 339 -142 332 -158 q 358 -113 346 -125 q 387 -94 370 -101 q 422 -87 403 -87 z "},"\u1e38":{"ha":764,"x_min":27,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 422 -87 q 458 -94 441 -87 q 487 -113 475 -101 q 506 -142 499 -125 q 513 -177 513 -158 q 506 -212 513 -196 q 487 -241 499 -229 q 458 -260 475 -253 q 422 -267 441 -267 q 387 -260 403 -267 q 358 -241 370 -253 q 339 -212 346 -229 q 332 -177 332 -196 q 339 -142 332 -158 q 358 -113 346 -125 q 387 -94 370 -101 q 422 -87 403 -87 m 601 1006 l 218 1006 l 218 1096 l 601 1096 l 601 1006 m 27 886 z "},"\u1e3a":{"ha":764,"x_min":34,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 593 -186 l 238 -186 l 238 -96 l 593 -96 l 593 -186 m 34 -336 z "},"\u1e3c":{"ha":764,"x_min":34,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 465 -58 l 630 -222 l 510 -222 l 414 -140 l 319 -222 l 202 -222 l 368 -58 l 465 -58 m 34 -336 z "},"\u1e3e":{"ha":764,"x_min":0,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1e40":{"ha":764,"x_min":0,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e42":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 612 0 l 595 553 l 587 765 l 546 642 l 415 289 l 332 289 l 207 628 l 165 765 l 163 543 l 147 0 l 33 0 l 77 886 l 220 886 l 339 553 l 378 440 l 415 553 l 541 886 l 688 886 l 730 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e44":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e46":{"ha":764,"x_min":81,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e48":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e4a":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 0 l 526 0 l 268 553 l 193 730 l 193 283 l 193 0 l 81 0 l 81 886 l 236 886 l 482 363 l 571 160 l 571 635 l 571 886 l 684 886 l 684 0 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e4c":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 574 1298 l 423 1164 l 328 1164 l 436 1298 l 574 1298 m 0 886 z "},"\u1e4e":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 233 1322 q 261 1317 248 1322 q 284 1301 275 1311 q 300 1278 294 1292 q 306 1250 306 1265 q 300 1222 306 1235 q 284 1199 294 1208 q 261 1184 275 1190 q 233 1178 248 1178 q 182 1199 203 1178 q 161 1250 161 1219 q 167 1278 161 1265 q 182 1301 173 1292 q 205 1317 192 1311 q 233 1322 218 1322 m 530 1322 q 559 1317 545 1322 q 582 1301 572 1311 q 597 1278 591 1292 q 603 1250 603 1265 q 597 1222 603 1235 q 582 1199 591 1208 q 559 1184 572 1190 q 530 1178 545 1178 q 479 1199 500 1178 q 458 1250 458 1219 q 464 1278 458 1265 q 479 1301 470 1292 q 502 1317 489 1311 q 530 1322 515 1322 m 0 886 z "},"\u1e50":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 191 1096 l 574 1096 l 574 1006 l 191 1006 l 191 1096 m 329 1301 l 437 1167 l 342 1167 l 191 1301 l 329 1301 m 0 886 z "},"\u1e52":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 574 1301 l 423 1167 l 328 1167 l 436 1301 l 574 1301 m 0 886 z "},"\u1e54":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1e56":{"ha":764,"x_min":0,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e58":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e5a":{"ha":764,"x_min":115,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e5c":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u1e5e":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 l 236 0 l 115 0 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 m 519 643 q 475 749 519 714 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e60":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e62":{"ha":764,"x_min":75,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e64":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 234 1198 q 241 1232 234 1216 q 259 1259 248 1247 q 286 1278 271 1271 q 320 1284 302 1284 q 354 1278 338 1284 q 381 1259 370 1271 q 400 1232 393 1247 q 406 1198 406 1216 q 400 1165 406 1181 q 381 1138 393 1149 q 354 1119 370 1126 q 320 1112 338 1112 q 286 1119 302 1112 q 259 1138 271 1126 q 241 1165 248 1149 q 234 1198 234 1181 m 0 886 z "},"\u1e66":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 295 1236 q 302 1270 295 1254 q 320 1297 309 1285 q 347 1316 332 1309 q 381 1322 363 1322 q 415 1316 399 1322 q 443 1297 431 1309 q 461 1270 454 1285 q 467 1236 467 1254 q 461 1203 467 1219 q 443 1176 454 1187 q 415 1157 431 1164 q 381 1150 399 1150 q 347 1157 363 1150 q 320 1176 332 1164 q 302 1203 309 1187 q 295 1236 295 1219 m 0 886 z "},"\u1e68":{"ha":764,"x_min":0,"x_max":676,"o":"m 676 240 q 650 130 676 177 q 578 51 625 82 q 468 3 532 19 q 325 -12 403 -12 q 255 -9 290 -12 q 188 -3 220 -7 q 127 7 155 1 q 75 18 98 12 l 75 135 q 190 105 126 116 q 334 94 253 94 q 433 103 392 94 q 500 131 474 113 q 538 174 526 149 q 550 233 550 200 q 530 295 550 269 q 477 340 510 320 q 403 377 445 360 q 318 411 361 393 q 233 449 275 429 q 159 498 191 470 q 106 564 126 526 q 86 654 86 602 q 105 744 86 700 q 164 822 124 788 q 267 878 204 857 q 416 899 330 899 q 465 897 439 899 q 518 891 491 895 q 571 882 545 887 q 619 872 597 878 l 619 764 q 515 786 567 779 q 414 794 463 794 q 261 760 310 794 q 212 667 212 725 q 232 605 212 631 q 285 559 252 579 q 359 522 317 538 q 444 488 401 505 q 529 449 488 470 q 604 399 571 428 q 656 332 636 370 q 676 240 676 293 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e6a":{"ha":764,"x_min":0,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e6c":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e6e":{"ha":764,"x_min":0,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e70":{"ha":764,"x_min":0,"x_max":705,"o":"m 705 783 l 443 783 l 443 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e72":{"ha":764,"x_min":74,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 236 -58 q 266 -64 252 -58 q 290 -80 279 -70 q 307 -105 300 -91 q 313 -134 313 -119 q 307 -164 313 -150 q 290 -188 300 -178 q 266 -204 279 -198 q 236 -210 252 -210 q 207 -204 220 -210 q 182 -188 193 -198 q 166 -164 172 -178 q 160 -134 160 -150 q 166 -105 160 -119 q 182 -80 172 -91 q 207 -64 193 -70 q 236 -58 220 -58 m 528 -58 q 557 -64 543 -58 q 582 -80 571 -70 q 598 -105 592 -91 q 604 -134 604 -119 q 598 -164 604 -150 q 582 -188 592 -178 q 557 -204 571 -198 q 528 -210 543 -210 q 498 -204 512 -210 q 474 -188 484 -198 q 458 -164 464 -178 q 452 -134 452 -150 q 458 -105 452 -119 q 474 -80 464 -91 q 498 -64 484 -70 q 528 -58 512 -58 z "},"\u1e74":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 136 -157 q 202 -83 165 -108 q 286 -58 239 -58 q 353 -70 326 -58 q 401 -95 380 -81 q 440 -120 422 -109 q 482 -132 459 -132 q 530 -113 509 -132 q 570 -65 551 -94 l 628 -123 q 562 -197 598 -172 q 478 -222 525 -222 q 411 -211 438 -222 q 363 -185 385 -199 q 324 -160 342 -172 q 282 -149 305 -149 q 234 -167 254 -149 q 195 -215 214 -186 l 136 -157 m 0 -336 z "},"\u1e76":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e78":{"ha":764,"x_min":-1,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 352 1122 325 1133 q 400 1097 379 1110 q 440 1072 421 1083 q 481 1060 458 1060 q 529 1079 509 1060 q 569 1126 550 1097 l 627 1071 q 561 997 597 1022 q 477 972 524 972 q 411 984 437 972 q 363 1009 384 996 q 323 1034 342 1023 q 281 1046 304 1046 q 233 1027 254 1046 q 194 979 213 1008 l 136 1035 m 574 1298 l 422 1164 l 327 1164 l 435 1298 l 574 1298 m -1 886 z "},"\u1e7a":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 309 q 670 176 690 235 q 609 75 649 117 q 511 11 569 33 q 378 -12 453 -12 q 237 9 295 -12 q 143 71 180 31 q 91 166 107 111 q 74 290 74 222 l 74 886 l 195 886 l 195 300 q 204 208 195 248 q 237 142 214 169 q 295 102 259 116 q 382 89 330 89 q 524 144 478 89 q 570 301 570 200 l 570 886 l 690 886 l 690 309 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 233 1318 q 261 1312 248 1318 q 284 1297 275 1306 q 300 1274 294 1287 q 306 1245 306 1260 q 300 1217 306 1230 q 284 1194 294 1204 q 261 1179 275 1185 q 233 1173 248 1173 q 182 1194 203 1173 q 161 1245 161 1215 q 167 1274 161 1260 q 182 1297 173 1287 q 205 1312 192 1306 q 233 1318 218 1318 m 530 1318 q 559 1312 545 1318 q 582 1297 572 1306 q 597 1274 591 1287 q 603 1245 603 1260 q 597 1217 603 1230 q 582 1194 591 1204 q 559 1179 572 1185 q 530 1173 545 1173 q 479 1194 500 1173 q 458 1245 458 1215 q 464 1274 458 1260 q 479 1297 470 1287 q 502 1312 489 1306 q 530 1318 515 1318 m 0 886 z "},"\u1e7c":{"ha":764,"x_min":0,"x_max":761,"o":"m 761 886 l 460 0 l 297 0 l 3 886 l 139 886 l 330 289 l 385 114 l 440 289 l 632 886 l 761 886 m 136 1035 q 202 1108 165 1084 q 286 1133 239 1133 q 353 1122 326 1133 q 401 1097 380 1110 q 440 1072 422 1083 q 482 1060 459 1060 q 530 1079 509 1060 q 570 1126 551 1097 l 628 1071 q 562 997 598 1022 q 478 972 525 972 q 411 984 438 972 q 363 1009 385 996 q 324 1034 342 1023 q 282 1046 305 1046 q 234 1027 254 1046 q 195 979 214 1008 l 136 1035 m 0 886 z "},"\u1e7e":{"ha":764,"x_min":3,"x_max":761,"o":"m 761 886 l 460 0 l 297 0 l 3 886 l 139 886 l 330 289 l 385 114 l 440 289 l 632 886 l 761 886 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e86":{"ha":764,"x_min":0,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e88":{"ha":764,"x_min":31,"x_max":733,"o":"m 733 886 l 673 0 l 517 0 l 407 315 l 376 416 l 345 307 l 243 0 l 92 0 l 31 886 l 144 886 l 179 283 l 189 118 l 232 258 l 339 587 l 422 587 l 546 235 l 587 118 l 590 240 l 625 886 l 733 886 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e8a":{"ha":764,"x_min":0,"x_max":747,"o":"m 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 747 0 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e8c":{"ha":764,"x_min":0,"x_max":747,"o":"m 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 747 0 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u1e8e":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 296 1053 q 302 1086 296 1070 q 321 1113 309 1101 q 348 1132 332 1125 q 382 1139 363 1139 q 416 1132 400 1139 q 443 1113 431 1125 q 461 1086 455 1101 q 468 1053 468 1070 q 461 1019 468 1035 q 443 992 455 1004 q 416 973 431 980 q 382 966 400 966 q 348 973 363 966 q 321 992 332 980 q 302 1019 309 1004 q 296 1053 296 1035 m 0 886 z "},"\u1e90":{"ha":764,"x_min":0,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 596 981 l 472 981 l 380 1050 l 289 981 l 168 981 l 325 1125 l 439 1125 l 596 981 m 0 886 z "},"\u1e92":{"ha":764,"x_min":75,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e94":{"ha":764,"x_min":0,"x_max":688,"o":"m 679 791 l 227 113 l 688 113 l 688 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u2c60":{"ha":764,"x_min":13,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m 13 414 l 453 414 l 453 313 l 13 313 l 13 414 m 13 606 l 453 606 l 453 505 l 13 505 l 13 606 z "},"\u2c62":{"ha":764,"x_min":-157,"x_max":668,"o":"m 668 0 l 158 0 l 158 886 l 281 886 l 281 103 l 668 103 l 668 0 m -20 479 q 46 552 9 528 q 130 577 83 577 q 196 566 169 577 q 244 541 223 554 q 284 515 265 527 q 326 504 302 504 q 373 523 353 504 q 413 570 394 541 l 471 512 q 405 438 441 463 q 321 414 368 414 q 255 425 281 414 q 207 450 228 436 q 167 475 186 464 q 125 487 149 487 q 77 468 98 487 q 38 420 57 450 l -20 479 m -157 300 z "},"\u2c63":{"ha":764,"x_min":-45,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 m -45 654 l 395 654 l 395 552 l -45 552 l -45 654 z "},"\u2c64":{"ha":764,"x_min":115,"x_max":713,"o":"m 236 395 l 236 -38 q 241 -114 236 -85 q 258 -157 247 -142 q 285 -176 269 -172 q 325 -180 302 -180 q 357 -178 340 -180 q 392 -170 375 -176 l 392 -277 q 359 -282 379 -280 q 315 -283 338 -283 q 216 -268 255 -283 q 155 -223 178 -252 q 124 -152 133 -193 q 115 -58 115 -111 l 115 886 l 353 886 q 486 869 430 886 q 577 822 541 852 q 629 748 612 791 q 646 653 646 705 q 633 575 646 612 q 597 508 621 538 q 537 455 573 477 q 456 422 502 433 q 519 377 493 410 q 572 292 545 345 l 713 0 l 576 0 l 444 283 q 414 337 429 316 q 380 371 398 359 q 341 389 362 384 q 293 395 319 395 l 236 395 m 519 643 q 475 750 519 715 q 350 785 431 785 l 236 785 l 236 492 l 334 492 q 411 502 376 492 q 469 531 445 511 q 506 578 493 550 q 519 643 519 606 z "},"\u2c67":{"ha":764,"x_min":75,"x_max":743,"o":"m 632 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 97 l 743 97 l 735 -192 l 632 -192 l 632 0 z "},"\u2c69":{"ha":764,"x_min":106,"x_max":730,"o":"m 613 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 627 104 l 730 104 l 721 -192 l 613 -192 l 613 0 z "},"\u2c6b":{"ha":764,"x_min":75,"x_max":696,"o":"m 696 113 l 688 -192 l 580 -192 l 580 0 l 75 0 l 75 90 l 530 777 l 87 777 l 87 886 l 679 886 l 679 791 l 227 113 l 696 113 z "},"\u2183":{"ha":764,"x_min":89,"x_max":701,"o":"m 89 853 q 312 897 195 897 q 601 785 500 897 q 701 453 701 673 q 673 260 701 347 q 594 114 646 174 q 469 22 543 54 q 305 -11 396 -11 q 191 0 243 -11 q 89 32 138 10 l 89 151 q 189 110 137 124 q 301 96 240 96 q 414 120 363 96 q 500 188 465 143 q 554 296 535 232 q 573 442 573 360 q 503 702 573 614 q 298 789 433 789 q 189 776 241 789 q 89 739 137 763 l 89 853 z "},"\u2132":{"ha":764,"x_min":125,"x_max":625,"o":"m 125 103 l 501 103 l 501 391 l 144 391 l 144 492 l 501 492 l 501 886 l 625 886 l 625 0 l 125 0 l 125 103 z "},"\u2c75":{"ha":764,"x_min":122,"x_max":663,"o":"m 663 407 l 243 407 l 243 0 l 122 0 l 122 886 l 243 886 l 243 511 l 663 511 l 663 407 z "},"\u0180":{"ha":764,"x_min":0,"x_max":690,"o":"m 0 869 l 109 869 l 109 958 l 227 958 l 227 869 l 422 869 l 422 771 l 227 771 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 771 l 0 771 l 0 869 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"\u0183":{"ha":764,"x_min":109,"x_max":690,"o":"m 109 958 l 606 958 l 606 860 l 227 860 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"\u0185":{"ha":764,"x_min":22,"x_max":690,"o":"m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m 109 692 q 81 706 96 698 q 53 723 66 713 q 31 744 40 733 q 22 766 22 755 q 42 811 22 789 q 93 850 63 833 q 157 877 123 867 q 218 886 191 886 l 227 886 l 227 568 q 332 665 277 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 692 z "},"\u0188":{"ha":764,"x_min":107,"x_max":759,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 300 13 362 -9 q 195 78 237 35 q 130 185 152 121 q 107 334 107 250 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 493 689 471 690 q 534 685 515 688 q 551 760 538 730 q 586 809 565 790 q 635 836 607 827 q 695 844 663 844 q 759 838 730 844 l 759 741 q 738 747 748 745 q 711 749 728 749 q 683 745 696 749 q 659 730 669 741 q 643 701 649 719 q 637 656 637 684 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 637 135 553 92 l 637 25 z "},"\u018c":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 860 l 154 860 l 154 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 z "},"\u018d":{"ha":764,"x_min":74,"x_max":685,"o":"m 454 291 q 517 217 497 252 q 536 139 536 182 q 523 78 536 106 q 481 30 509 50 q 410 -1 453 10 q 317 -12 368 -12 q 141 7 235 -12 l 141 109 q 321 86 242 86 q 391 99 370 86 q 412 132 412 111 q 408 156 412 145 q 396 179 404 168 q 375 202 388 190 q 345 229 361 214 l 253 309 q 164 395 197 357 q 110 473 131 433 q 82 550 90 513 q 74 635 74 588 q 80 709 74 670 q 101 785 86 748 q 139 854 115 822 q 197 912 162 886 q 278 952 231 938 q 385 966 325 966 q 516 941 460 966 q 610 871 572 916 q 666 767 648 827 q 685 642 685 707 q 665 513 685 571 q 612 411 646 456 q 538 337 579 366 q 454 291 498 309 m 374 361 q 441 389 409 371 q 503 439 474 408 q 548 518 531 471 q 564 629 564 564 q 551 726 564 682 q 514 801 538 770 q 453 848 489 831 q 372 865 418 865 q 295 849 328 865 q 241 803 262 832 q 209 735 220 774 q 198 642 198 697 q 203 583 198 611 q 224 525 208 555 q 264 464 239 494 q 326 401 288 434 l 374 361 z "},"\u0195":{"ha":764,"x_min":61,"x_max":703,"o":"m 340 474 q 335 532 340 509 q 321 568 330 555 q 299 586 312 581 q 271 591 286 591 q 174 505 219 591 l 174 0 l 61 0 l 61 958 l 174 958 l 174 681 l 170 614 q 231 675 199 658 q 302 693 263 693 q 364 681 336 693 q 411 644 392 669 q 441 579 431 618 q 452 486 452 540 l 452 229 q 458 153 452 182 q 475 110 465 125 q 499 90 486 94 q 526 85 512 85 q 554 91 541 85 q 575 113 566 98 q 588 152 583 127 q 592 212 592 176 l 592 681 l 703 681 l 703 222 q 693 125 703 168 q 664 51 684 81 q 609 4 643 20 q 526 -12 575 -12 q 428 9 465 -12 q 372 62 391 30 q 346 134 352 95 q 340 208 340 172 l 340 474 z "},"\u01bf":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 422 q 672 278 690 340 q 620 170 653 216 q 542 92 587 123 q 446 41 498 61 q 338 11 395 21 q 227 -3 282 1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 273 626 246 602 q 330 665 300 650 q 390 686 359 680 q 454 693 420 693 q 557 670 513 693 q 631 609 601 647 q 675 522 661 570 q 690 422 690 473 m 570 399 q 537 543 570 496 q 431 590 505 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 96 q 354 116 292 100 q 464 168 416 133 q 541 260 511 203 q 570 399 570 317 z "},"\u0199":{"ha":764,"x_min":123,"x_max":721,"o":"m 241 725 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 724 q 135 831 123 786 q 174 907 147 877 q 242 952 200 937 q 346 966 285 966 q 406 963 375 966 q 461 953 437 959 l 461 849 q 341 866 396 866 q 292 856 311 866 q 262 828 273 846 q 246 784 250 810 q 241 725 241 758 z "},"\u019a":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 178 545 l 618 545 l 618 446 l 178 446 l 178 545 z "},"\u019b":{"ha":764,"x_min":45,"x_max":737,"o":"m 146 751 l 270 829 q 237 860 254 852 q 195 867 219 867 q 111 850 157 867 l 111 949 q 161 962 133 957 q 212 966 190 966 q 258 963 236 966 q 300 952 280 960 q 337 930 319 944 q 370 892 355 916 l 473 958 l 520 880 l 411 811 l 636 174 q 652 136 644 151 q 668 112 659 121 q 687 99 676 103 q 711 96 697 96 q 724 96 718 96 q 737 97 730 96 l 737 0 q 672 -8 701 -8 q 623 0 644 -8 q 584 24 602 7 q 553 68 567 41 q 525 134 538 96 l 418 437 l 386 533 l 350 437 l 174 0 l 45 0 l 332 681 l 309 746 l 193 673 l 146 751 z "},"\u019e":{"ha":764,"x_min":93,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 z "},"\u01a3":{"ha":764,"x_min":68,"x_max":696,"o":"m 353 515 q 335 572 353 553 q 283 591 317 591 q 238 574 257 591 q 205 525 218 557 q 185 447 192 493 q 179 343 179 401 q 184 235 179 282 q 202 154 189 187 q 235 103 214 121 q 286 86 255 86 q 338 107 323 86 q 353 178 353 129 l 353 515 m 696 681 l 696 0 l 585 0 l 585 570 l 456 552 l 456 154 q 410 33 456 76 q 282 -9 364 -9 q 183 14 224 -9 q 117 82 142 37 q 79 192 91 127 q 68 339 68 256 q 79 483 68 418 q 117 594 91 548 q 183 665 142 640 q 283 690 224 690 q 410 651 355 690 l 696 681 z "},"\u01a5":{"ha":764,"x_min":109,"x_max":690,"o":"m 454 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 724 q 120 831 109 786 q 159 907 132 877 q 228 952 185 937 q 331 966 270 966 q 391 963 360 966 q 446 953 422 959 l 446 849 q 326 866 381 866 q 277 856 296 866 q 246 828 258 846 q 229 784 234 810 q 224 725 224 758 l 224 574 q 332 666 275 640 q 454 693 389 693 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 z "},"\u01a8":{"ha":764,"x_min":138,"x_max":647,"o":"m 138 184 q 154 255 138 225 q 196 309 170 286 q 255 349 222 332 q 323 380 288 366 q 391 408 357 394 q 450 438 424 422 q 492 475 476 454 q 508 525 508 496 q 478 577 508 559 q 382 594 448 594 q 277 586 328 594 q 165 562 225 578 l 161 667 q 216 678 189 673 q 270 686 243 683 q 327 691 298 689 q 389 692 356 692 q 503 677 456 692 q 577 636 549 661 q 617 580 605 612 q 629 515 629 548 q 613 441 629 473 q 572 385 597 410 q 513 342 546 361 q 445 307 479 323 q 377 277 410 292 q 318 248 344 263 q 276 214 292 232 q 260 172 260 196 q 293 110 260 132 q 395 87 325 87 q 519 99 458 87 q 643 130 580 111 l 647 22 q 519 -3 587 5 q 390 -12 452 -12 q 288 -1 334 -12 q 209 34 242 10 q 156 95 175 58 q 138 184 138 132 z "},"\u01ab":{"ha":764,"x_min":43,"x_max":657,"o":"m 488 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 162 q 505 90 429 90 q 576 95 538 90 q 657 111 614 100 l 657 -117 q 648 -193 657 -162 q 620 -243 640 -224 q 569 -272 600 -263 q 493 -281 538 -281 q 464 -279 479 -281 q 433 -276 448 -278 q 405 -272 418 -274 q 385 -269 392 -270 l 385 -175 q 427 -186 402 -181 q 478 -191 451 -191 q 505 -190 492 -191 q 529 -180 519 -188 q 546 -155 540 -172 q 553 -110 553 -139 l 553 -7 q 520 -9 536 -8 q 488 -9 504 -9 z "},"\u01ad":{"ha":764,"x_min":43,"x_max":657,"o":"m 351 725 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 162 q 505 90 429 90 q 576 95 538 90 q 657 111 614 100 l 657 9 q 574 -5 616 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 724 q 245 831 233 786 q 283 907 256 877 q 352 952 309 937 q 455 966 394 966 q 515 963 484 966 q 570 953 546 959 l 570 849 q 450 866 505 866 q 401 856 420 866 q 371 828 382 846 q 355 784 359 810 q 351 725 351 758 z "},"\u01b4":{"ha":764,"x_min":40,"x_max":758,"o":"m 547 574 q 601 661 569 635 q 682 686 633 686 q 719 685 699 686 q 758 681 739 684 l 758 576 q 736 580 747 578 q 713 581 725 581 q 679 572 692 581 q 657 539 666 563 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 547 574 z "},"\u01b6":{"ha":764,"x_min":111,"x_max":660,"o":"m 144 397 l 352 397 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 489 397 l 638 397 l 638 298 l 413 298 l 260 100 l 660 100 l 660 0 l 111 0 l 111 85 l 276 298 l 144 298 l 144 397 z "},"\u01b9":{"ha":764,"x_min":111,"x_max":637,"o":"m 111 62 q 137 177 111 130 q 202 254 162 224 q 292 301 243 285 q 387 322 340 317 l 151 581 l 151 680 l 625 680 l 625 581 l 288 581 l 515 315 l 515 234 l 477 234 q 364 222 410 234 q 289 186 317 210 q 248 130 260 163 q 235 56 235 97 q 246 -17 235 16 q 285 -72 258 -49 q 357 -106 312 -94 q 469 -119 402 -119 q 556 -115 517 -119 q 637 -103 595 -111 l 637 -207 q 602 -212 618 -210 q 566 -216 585 -214 q 527 -218 548 -217 q 479 -219 506 -219 q 307 -197 377 -219 q 193 -137 236 -175 q 130 -47 149 -98 q 111 62 111 4 z "},"\u01ba":{"ha":764,"x_min":107,"x_max":637,"o":"m 637 167 q 619 72 637 110 q 572 11 601 35 q 505 -26 543 -14 q 429 -46 468 -39 q 353 -58 390 -54 q 286 -68 315 -62 q 239 -86 257 -75 q 221 -120 221 -98 q 226 -149 221 -135 q 244 -172 231 -162 q 281 -189 257 -182 q 342 -195 304 -195 q 414 -191 386 -195 q 456 -184 441 -187 l 456 -277 q 438 -279 447 -278 q 416 -281 429 -280 q 389 -282 404 -281 q 353 -282 374 -282 q 257 -274 302 -282 q 179 -247 212 -266 q 126 -198 146 -229 q 107 -123 107 -168 q 125 -54 107 -80 q 171 -13 142 -28 q 237 10 200 3 q 312 23 273 18 q 387 35 351 28 q 453 56 424 42 q 499 94 481 70 q 517 159 517 118 q 504 223 517 197 q 461 266 490 250 q 385 288 431 281 q 271 295 338 295 l 233 295 l 233 376 l 460 581 l 123 581 l 123 680 l 597 680 l 597 581 l 361 383 q 425 374 392 379 q 488 360 457 370 q 546 337 519 351 q 593 300 572 323 q 625 244 613 277 q 637 167 637 212 z "},"\u01bd":{"ha":764,"x_min":102,"x_max":644,"o":"m 644 244 q 623 131 644 178 q 557 53 602 83 q 443 7 512 22 q 279 -7 374 -7 q 198 -6 234 -7 q 134 -2 163 -4 l 134 104 q 166 100 149 102 q 202 97 183 98 q 241 96 221 96 q 279 95 260 95 q 385 101 339 95 q 460 122 430 106 q 506 165 490 138 q 521 235 521 193 q 505 301 521 277 q 460 339 488 326 q 393 356 431 353 q 311 360 355 360 l 170 360 l 218 578 l 102 578 l 102 682 l 614 682 l 614 578 l 326 578 l 301 458 l 328 458 q 450 450 393 458 q 551 418 508 441 q 619 353 594 395 q 644 244 644 311 z "},"\u01c6":{"ha":764,"x_min":30,"x_max":749,"o":"m 736 586 l 551 102 l 745 102 l 745 0 l 441 0 l 441 90 l 628 582 l 457 582 l 457 681 l 736 681 l 736 586 m 30 326 q 40 480 30 413 q 73 594 50 548 q 136 665 97 641 q 234 689 176 689 q 265 687 252 689 q 289 683 278 686 l 289 958 l 401 958 l 401 0 l 309 0 l 302 44 q 283 20 294 30 q 258 4 271 10 q 232 -5 245 -2 q 209 -7 219 -7 q 122 16 157 -7 q 67 83 88 40 q 38 189 47 127 q 30 326 30 250 m 147 334 q 150 226 147 272 q 162 149 153 180 q 186 104 170 119 q 229 89 202 89 q 262 96 247 89 q 289 115 277 104 l 289 584 q 270 589 281 587 q 250 591 260 591 q 195 576 216 591 q 164 529 175 561 q 151 449 154 497 q 147 334 147 400 m 565 794 l 450 958 l 533 958 l 600 876 l 667 958 l 749 958 l 633 794 l 565 794 z "},"\u01c9":{"ha":764,"x_min":28,"x_max":701,"o":"m 679 681 l 679 12 q 612 -208 679 -130 q 409 -285 546 -285 q 350 -281 378 -285 q 309 -275 323 -278 l 309 -162 q 329 -170 317 -165 q 356 -177 341 -174 q 387 -182 371 -180 q 420 -184 404 -184 q 530 -136 498 -184 q 562 8 562 -87 l 562 583 l 404 583 l 404 681 l 679 681 m 608 966 q 644 959 627 966 q 674 939 661 952 q 693 909 686 926 q 701 873 701 892 q 693 837 701 854 q 674 808 686 821 q 644 788 661 795 q 608 781 627 781 q 571 788 588 781 q 542 808 554 795 q 522 837 529 821 q 515 873 515 854 q 522 909 515 892 q 542 939 529 926 q 571 959 554 952 q 608 966 588 966 m 171 861 l 31 861 l 31 958 l 287 958 l 287 98 l 429 98 l 429 0 l 28 0 l 28 98 l 171 98 l 171 861 z "},"\u01cc":{"ha":764,"x_min":41,"x_max":734,"o":"m 722 681 l 722 12 q 710 -114 722 -59 q 672 -207 699 -170 q 601 -264 645 -245 q 494 -283 557 -283 q 439 -281 461 -283 q 406 -276 418 -279 l 406 -171 q 445 -181 424 -178 q 491 -184 466 -184 q 553 -172 530 -184 q 588 -136 576 -160 q 605 -75 601 -111 q 608 8 608 -39 l 608 583 l 488 583 l 488 681 l 722 681 m 641 966 q 677 959 661 966 q 707 939 694 952 q 727 909 720 926 q 734 873 734 892 q 727 837 734 854 q 707 808 720 821 q 677 788 694 795 q 641 781 661 781 q 604 788 621 781 q 575 808 587 795 q 555 837 562 821 q 548 873 548 854 q 555 909 548 892 q 575 939 562 926 q 604 959 587 952 q 641 966 621 966 m 41 681 l 146 681 l 151 612 q 174 640 161 626 q 203 666 186 654 q 242 686 220 678 q 294 693 264 693 q 377 678 347 693 q 422 636 407 663 q 441 570 437 608 q 446 484 446 532 l 446 0 l 328 0 l 328 493 q 326 533 328 515 q 318 564 324 551 q 301 584 313 577 q 270 591 290 591 q 237 584 252 591 q 207 564 221 576 q 181 536 193 551 q 159 507 169 521 l 159 0 l 41 0 l 41 681 z "},"\u01ce":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01d0":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01d2":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01d4":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01d6":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 236 913 q 266 907 252 913 q 290 891 279 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 279 773 q 236 761 252 761 q 207 767 220 761 q 182 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 182 891 172 880 q 207 907 193 901 q 236 913 220 913 m 528 913 q 557 907 543 913 q 582 891 571 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 557 767 571 773 q 528 761 543 761 q 498 767 512 761 q 474 783 484 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 498 907 484 901 q 528 913 512 913 m 559 991 l 204 991 l 204 1081 l 559 1081 l 559 991 m 0 681 z "},"\u01d8":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 572 1095 l 421 961 l 326 961 l 434 1095 l 572 1095 m 236 913 q 266 907 252 913 q 290 891 279 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 279 773 q 236 761 252 761 q 207 767 220 761 q 182 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 182 891 172 880 q 207 907 193 901 q 236 913 220 913 m 528 913 q 557 907 543 913 q 582 891 571 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 557 767 571 773 q 528 761 543 761 q 498 767 512 761 q 474 783 484 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 498 907 484 901 q 528 913 512 913 m 0 681 z "},"\u01da":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 338 1001 l 190 1165 l 294 1165 l 380 1083 l 467 1165 l 574 1165 l 426 1001 l 338 1001 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u01dc":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 330 1095 l 439 961 l 343 961 l 192 1095 l 330 1095 m 528 913 q 558 907 544 913 q 582 891 572 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 558 767 572 773 q 528 761 544 761 q 499 767 513 761 q 474 783 485 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 499 907 485 901 q 528 913 513 913 m 237 913 q 266 907 252 913 q 290 891 280 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 280 773 q 237 761 252 761 q 207 767 221 761 q 183 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 183 891 172 880 q 207 907 193 901 q 237 913 221 913 m 0 681 z "},"\u01dd":{"ha":764,"x_min":80,"x_max":684,"o":"m 80 304 q 81 347 80 330 q 83 378 81 363 l 561 378 q 503 537 561 484 q 334 591 445 591 q 217 583 274 591 q 117 562 160 574 l 117 663 q 225 685 165 676 q 351 693 286 693 q 502 669 439 693 q 605 601 565 646 q 665 490 646 555 q 684 342 684 425 q 664 206 684 270 q 605 93 644 142 q 509 16 566 45 q 378 -12 452 -12 q 252 10 307 -12 q 158 74 196 33 q 100 173 120 115 q 80 304 80 232 m 203 288 q 212 204 201 242 q 245 138 222 165 q 302 94 268 110 q 380 79 336 79 q 451 94 419 79 q 506 137 483 110 q 544 203 530 165 q 561 288 557 241 l 203 288 z "},"\u01df":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 236 913 q 266 907 252 913 q 290 891 279 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 279 773 q 236 761 252 761 q 207 767 220 761 q 182 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 182 891 172 880 q 207 907 193 901 q 236 913 220 913 m 528 913 q 557 907 543 913 q 582 891 571 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 557 767 571 773 q 528 761 543 761 q 498 767 512 761 q 474 783 484 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 498 907 484 901 q 528 913 512 913 m 559 991 l 204 991 l 204 1081 l 559 1081 l 559 991 m 0 681 z "},"\u01e1":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 937 q 417 930 401 937 q 446 911 434 923 q 465 882 458 899 q 472 847 472 866 q 465 812 472 828 q 446 783 458 795 q 417 764 434 771 q 382 757 401 757 q 346 764 362 757 q 317 783 330 771 q 298 812 305 795 q 292 847 292 828 q 298 882 292 866 q 317 911 305 899 q 346 930 330 923 q 382 937 362 937 m 559 1013 l 204 1013 l 204 1103 l 559 1103 l 559 1013 m 0 681 z "},"\u01e3":{"ha":764,"x_min":0,"x_max":737,"o":"m 231 693 q 334 673 292 693 q 393 611 376 653 q 455 671 417 649 q 542 693 492 693 q 632 671 595 693 q 692 610 669 650 q 726 516 715 571 q 737 393 737 460 q 736 338 737 357 q 734 310 736 320 l 433 310 q 465 143 433 201 q 570 85 496 85 q 646 93 608 85 q 713 113 684 101 l 713 18 q 677 6 697 12 q 634 -4 656 0 q 589 -10 612 -8 q 545 -12 566 -12 q 363 106 413 -12 q 283 19 328 50 q 187 -12 239 -12 q 63 37 106 -12 q 21 182 21 87 q 34 273 21 233 q 75 341 47 313 q 145 383 102 368 q 248 397 188 397 l 329 397 l 329 454 q 306 560 329 523 q 225 597 282 597 q 143 584 186 597 q 58 547 100 571 l 58 650 q 95 666 75 658 q 138 680 116 673 q 184 689 161 686 q 231 693 208 693 m 244 310 q 159 276 185 310 q 132 186 132 242 q 150 110 132 135 q 200 85 168 85 q 260 108 229 85 q 329 191 292 131 l 329 310 l 244 310 m 538 599 q 492 583 511 599 q 459 541 473 568 q 440 477 446 514 q 433 397 433 440 l 627 397 q 623 476 627 439 q 608 541 618 513 q 580 583 597 568 q 538 599 563 599 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u01e5":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 -41 l 76 -41 q 87 -22 81 -31 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -41 701 -10 l 764 -41 l 764 -130 l 692 -130 q 686 -146 689 -138 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -130 68 -156 l 0 -130 l 0 -41 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 545 -11 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -39 212 -25 q 203 -41 203 -41 l 573 -41 q 545 -11 565 -22 m 239 -168 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -153 512 -170 q 561 -130 551 -142 l 195 -130 q 239 -168 207 -154 z "},"\u01e7":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01e9":{"ha":764,"x_min":34,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 202 1152 l 326 1152 l 417 1082 l 509 1152 l 630 1152 l 473 1008 l 359 1008 l 202 1152 m 34 913 z "},"\u01eb":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 500 -254 q 463 -259 484 -258 q 425 -261 442 -261 q 314 -230 352 -261 q 277 -150 277 -199 q 280 -119 277 -134 q 292 -85 283 -103 q 316 -47 300 -68 q 359 0 332 -26 l 465 0 q 425 -43 440 -24 q 402 -77 410 -62 q 391 -105 394 -92 q 388 -131 388 -118 q 402 -166 388 -153 q 453 -180 417 -180 q 476 -180 463 -180 q 500 -178 489 -179 l 500 -254 z "},"\u01ed":{"ha":764,"x_min":8,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 500 -254 q 463 -259 484 -258 q 425 -261 442 -261 q 314 -230 352 -261 q 277 -150 277 -199 q 280 -119 277 -134 q 292 -85 283 -103 q 316 -47 300 -68 q 359 0 332 -26 l 465 0 q 425 -43 440 -24 q 402 -77 410 -62 q 391 -105 394 -92 q 388 -131 388 -118 q 402 -166 388 -153 q 453 -180 417 -180 q 476 -180 463 -180 q 500 -178 489 -179 l 500 -254 m 568 831 l 212 831 l 212 921 l 568 921 l 568 831 m 8 681 z "},"\u01ef":{"ha":764,"x_min":0,"x_max":652,"o":"m 652 62 q 633 -47 652 4 q 571 -137 614 -98 q 457 -197 528 -175 q 284 -219 387 -219 q 237 -218 258 -219 q 197 -216 216 -217 q 162 -212 179 -214 q 127 -207 145 -210 l 127 -103 q 208 -115 169 -111 q 295 -119 246 -119 q 407 -106 361 -119 q 479 -72 452 -94 q 517 -17 506 -49 q 529 56 529 16 q 516 130 529 97 q 475 186 503 163 q 400 222 446 210 q 286 234 353 234 l 248 234 l 248 315 l 478 582 l 138 582 l 138 681 l 612 681 l 612 596 l 376 322 q 472 301 423 317 q 561 254 521 285 q 627 177 602 224 q 652 62 652 130 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u01f0":{"ha":764,"x_min":-33,"x_max":570,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 300 794 l 135 958 l 254 958 l 350 876 l 446 958 l 563 958 l 397 794 l 300 794 m -33 681 z "},"\u01f3":{"ha":764,"x_min":30,"x_max":745,"o":"m 736 586 l 551 102 l 745 102 l 745 0 l 441 0 l 441 90 l 628 582 l 457 582 l 457 681 l 736 681 l 736 586 m 30 326 q 40 480 30 413 q 73 594 50 548 q 136 665 97 641 q 234 689 176 689 q 265 687 252 689 q 289 683 278 686 l 289 958 l 401 958 l 401 0 l 309 0 l 302 44 q 283 20 294 30 q 258 4 271 10 q 232 -5 245 -2 q 209 -7 219 -7 q 122 16 157 -7 q 67 83 88 40 q 38 189 47 127 q 30 326 30 250 m 147 334 q 150 226 147 272 q 162 149 153 180 q 186 104 170 119 q 229 89 202 89 q 262 96 247 89 q 289 115 277 104 l 289 584 q 270 589 281 587 q 250 591 260 591 q 195 576 216 591 q 164 529 175 561 q 151 449 154 497 q 147 334 147 400 z "},"\u01f5":{"ha":764,"x_min":-55,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 591 958 l 374 794 l 256 794 l 420 958 l 591 958 m -55 681 z "},"\u01f9":{"ha":764,"x_min":35,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 488 794 l 370 794 l 153 958 l 324 958 l 488 794 m 35 681 z "},"\u0201":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0203":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u0205":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0207":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u0209":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u020b":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u020d":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u020f":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u0211":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0213":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u0215":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0217":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 214 794 q 227 866 214 836 q 263 918 241 897 q 317 948 286 938 q 382 958 347 958 q 447 948 416 958 q 500 918 477 938 q 536 866 523 897 q 550 794 550 836 l 458 794 q 439 850 458 829 q 382 871 420 871 q 325 850 343 871 q 306 794 306 829 l 214 794 m 0 681 z "},"\u021d":{"ha":764,"x_min":127,"x_max":652,"o":"m 652 62 q 633 -47 652 4 q 571 -137 614 -98 q 457 -197 528 -175 q 284 -219 387 -219 q 237 -218 258 -219 q 197 -216 216 -217 q 162 -212 179 -214 q 127 -207 145 -210 l 127 -103 q 208 -115 169 -111 q 295 -119 246 -119 q 407 -106 361 -119 q 479 -72 452 -94 q 517 -17 506 -49 q 529 56 529 16 q 516 130 529 97 q 475 186 503 163 q 400 222 446 210 q 286 234 353 234 l 248 234 l 248 315 l 478 582 l 138 582 l 138 681 l 612 681 l 612 596 l 376 322 q 472 301 423 317 q 561 254 521 285 q 627 177 602 224 q 652 62 652 130 z "},"\u021f":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 168 1125 l 292 1125 l 383 1055 l 475 1125 l 596 1125 l 439 981 l 325 981 l 168 1125 m 0 886 z "},"\u0221":{"ha":764,"x_min":74,"x_max":937,"o":"m 542 129 q 435 22 492 57 q 310 -12 378 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 533 672 473 689 l 533 958 l 652 958 l 652 11 q 652 -9 652 -1 q 652 -22 652 -16 q 654 -32 653 -27 q 656 -41 654 -36 q 717 0 683 -11 q 785 10 751 10 q 846 0 818 10 q 894 -30 873 -11 q 925 -75 914 -48 q 937 -134 937 -102 q 925 -194 937 -167 q 893 -240 913 -220 q 843 -270 872 -259 q 781 -280 814 -280 q 696 -262 732 -280 q 633 -220 660 -245 q 623 -245 628 -230 q 618 -278 618 -260 l 526 -278 q 529 -243 526 -262 q 538 -205 532 -224 q 552 -169 545 -186 q 568 -138 560 -151 q 555 -104 560 -121 q 547 -70 550 -87 q 544 -32 545 -52 q 543 11 543 -12 l 542 129 m 195 334 q 231 149 195 210 q 334 89 267 89 q 533 248 422 89 l 533 564 q 469 584 504 577 q 399 591 433 591 q 313 576 351 591 q 249 529 275 561 q 209 449 222 497 q 195 334 195 400 m 680 -134 q 695 -155 686 -144 q 715 -175 703 -166 q 742 -191 727 -184 q 776 -197 757 -197 q 821 -181 802 -197 q 840 -136 840 -165 q 824 -91 840 -106 q 775 -75 808 -75 q 721 -91 742 -75 q 680 -134 700 -107 z "},"\u0223":{"ha":764,"x_min":71,"x_max":692,"o":"m 629 958 q 655 903 648 928 q 662 846 662 878 q 648 767 662 802 q 609 704 633 732 q 550 650 584 675 q 477 598 516 625 q 557 534 518 572 q 626 452 596 496 q 674 357 656 407 q 692 258 692 307 q 678 161 692 210 q 628 73 663 113 q 532 7 592 33 q 381 -18 472 -18 q 274 -7 321 -18 q 193 24 227 4 q 135 70 159 43 q 97 127 112 97 q 77 192 83 158 q 71 258 71 225 q 89 355 71 305 q 136 450 106 404 q 205 534 166 495 q 286 598 243 572 q 213 650 246 625 q 154 704 179 675 q 115 767 130 732 q 101 846 101 802 q 108 903 101 878 q 134 958 115 928 l 259 958 q 241 925 248 939 q 231 898 234 910 q 226 875 227 886 q 225 852 225 864 q 237 787 225 814 q 269 736 248 759 q 318 694 289 714 q 381 652 347 674 q 445 694 416 674 q 494 736 473 714 q 526 787 515 759 q 538 852 538 814 q 537 875 538 864 q 532 898 536 886 q 522 925 529 910 q 504 958 515 939 l 629 958 m 568 260 q 554 329 568 290 q 515 406 540 368 q 455 480 490 445 q 381 538 421 515 q 304 479 338 514 q 245 406 269 444 q 208 329 221 367 q 195 260 195 290 q 205 187 195 220 q 239 131 216 154 q 297 95 262 108 q 381 83 332 83 q 465 95 430 83 q 524 131 500 108 q 557 187 547 154 q 568 260 568 220 z "},"\u0225":{"ha":764,"x_min":108,"x_max":656,"o":"m 656 100 l 656 -54 q 643 -161 656 -117 q 605 -232 630 -205 q 544 -271 580 -259 q 463 -283 508 -283 q 423 -282 443 -283 q 383 -278 404 -281 l 383 -171 q 419 -179 401 -176 q 455 -181 437 -181 q 486 -177 470 -181 q 516 -161 503 -173 q 538 -130 530 -150 q 547 -77 547 -110 l 547 0 l 108 0 l 108 85 l 492 582 l 117 582 l 117 681 l 634 681 l 634 589 l 256 100 l 656 100 z "},"\u0227":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0229":{"ha":764,"x_min":79,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 457 0 l 399 -200 l 296 -200 l 340 0 l 457 0 z "},"\u022b":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 236 913 q 266 907 252 913 q 290 891 279 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 279 773 q 236 761 252 761 q 207 767 220 761 q 182 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 182 891 172 880 q 207 907 193 901 q 236 913 220 913 m 528 913 q 557 907 543 913 q 582 891 571 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 557 767 571 773 q 528 761 543 761 q 498 767 512 761 q 474 783 484 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 498 907 484 901 q 528 913 512 913 m 559 991 l 204 991 l 204 1081 l 559 1081 l 559 991 m 0 681 z "},"\u022d":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 m 559 1035 l 204 1035 l 204 1125 l 559 1125 l 559 1035 m 0 885 z "},"\u022f":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0231":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 382 937 q 417 930 401 937 q 446 911 434 923 q 465 882 458 899 q 472 847 472 866 q 465 812 472 828 q 446 783 458 795 q 417 764 434 771 q 382 757 401 757 q 346 764 362 757 q 317 783 330 771 q 298 812 305 795 q 292 847 292 828 q 298 882 292 866 q 317 911 305 899 q 346 930 330 923 q 382 937 362 937 m 559 1013 l 204 1013 l 204 1103 l 559 1103 l 559 1013 m 0 681 z "},"\u0233":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u0234":{"ha":764,"x_min":139,"x_max":745,"o":"m 460 958 l 460 11 q 460 -9 460 -1 q 460 -22 460 -16 q 462 -32 461 -27 q 464 -41 463 -36 q 525 0 491 -11 q 593 10 559 10 q 654 0 626 10 q 702 -30 682 -11 q 733 -75 722 -48 q 745 -134 745 -102 q 733 -194 745 -167 q 701 -240 722 -220 q 651 -270 680 -259 q 589 -280 623 -280 q 504 -262 541 -280 q 441 -220 468 -245 q 431 -245 436 -230 q 427 -278 427 -260 l 334 -278 q 337 -243 334 -262 q 345 -205 340 -224 q 357 -169 350 -186 q 373 -138 365 -152 q 356 -104 363 -121 q 347 -70 350 -87 q 342 -32 343 -52 q 340 11 340 -12 l 340 861 l 139 861 l 139 958 l 460 958 m 488 -134 q 503 -155 494 -144 q 523 -175 511 -166 q 550 -191 535 -184 q 584 -197 565 -197 q 629 -181 610 -197 q 648 -136 648 -165 q 632 -91 648 -106 q 583 -75 616 -75 q 529 -91 550 -75 q 488 -134 508 -107 z "},"\u0235":{"ha":764,"x_min":109,"x_max":941,"o":"m 656 444 l 656 11 q 656 -9 656 -1 q 656 -22 656 -16 q 658 -32 657 -27 q 660 -41 659 -36 q 721 0 687 -11 q 789 10 755 10 q 850 0 822 10 q 898 -30 878 -11 q 929 -75 918 -48 q 941 -134 941 -102 q 929 -194 941 -167 q 897 -240 918 -220 q 847 -270 876 -259 q 785 -280 819 -280 q 700 -262 736 -280 q 637 -220 664 -245 q 627 -245 632 -230 q 623 -278 623 -260 l 530 -278 q 533 -243 530 -262 q 542 -205 536 -224 q 555 -169 547 -186 q 571 -138 563 -152 q 554 -104 561 -121 q 545 -70 548 -87 q 540 -32 541 -52 q 538 11 538 -12 l 538 435 q 509 553 538 515 q 419 591 479 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 l 214 681 l 218 571 q 276 630 248 606 q 330 667 303 653 q 385 687 357 682 q 443 693 413 693 q 602 631 549 693 q 656 444 656 570 m 684 -134 q 699 -155 690 -144 q 719 -175 707 -166 q 746 -191 731 -184 q 780 -197 761 -197 q 825 -181 806 -197 q 844 -136 844 -165 q 828 -91 844 -106 q 779 -75 812 -75 q 725 -91 746 -75 q 684 -134 704 -107 z "},"\u0236":{"ha":764,"x_min":43,"x_max":657,"o":"m 351 582 l 351 11 q 351 -9 351 -1 q 352 -22 351 -16 q 353 -32 353 -27 q 355 -41 354 -36 q 417 0 382 -11 q 485 10 451 10 q 545 0 517 10 q 593 -30 573 -11 q 625 -75 614 -48 q 636 -134 636 -102 q 625 -194 636 -167 q 592 -240 613 -220 q 543 -270 572 -259 q 480 -280 514 -280 q 396 -262 432 -280 q 333 -220 359 -245 q 323 -245 328 -230 q 318 -278 318 -260 l 225 -278 q 228 -243 225 -262 q 236 -205 231 -224 q 249 -169 241 -186 q 264 -138 256 -152 q 248 -104 254 -121 q 239 -70 242 -87 q 234 -32 235 -52 q 233 11 233 -12 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 m 380 -134 q 394 -155 386 -144 q 415 -175 403 -166 q 441 -191 427 -184 q 475 -197 456 -197 q 520 -181 502 -197 q 539 -136 539 -165 q 523 -91 539 -106 q 475 -75 507 -75 q 420 -91 441 -75 q 380 -134 399 -107 z "},"\u0238":{"ha":764,"x_min":41,"x_max":723,"o":"m 534 -5 q 476 8 502 -5 q 427 41 450 21 l 425 0 l 339 0 l 337 41 q 288 8 314 21 q 229 -5 262 -5 q 137 18 173 -5 q 79 84 100 41 q 49 189 58 127 q 41 326 41 250 q 52 480 41 413 q 90 594 63 548 q 159 665 116 641 q 267 689 203 689 q 298 688 284 689 q 326 684 313 686 l 326 958 l 437 958 l 437 684 q 465 688 451 686 q 497 689 479 689 q 604 665 561 689 q 674 594 648 641 q 712 480 701 548 q 723 326 723 413 q 714 189 723 250 q 685 84 706 127 q 627 18 663 41 q 534 -5 590 -5 m 274 591 q 212 576 235 591 q 177 529 189 561 q 161 449 165 497 q 157 334 157 400 q 177 146 157 210 q 242 81 196 81 q 286 91 265 81 q 326 125 307 101 l 326 584 q 301 589 313 587 q 274 591 290 591 m 490 591 q 462 589 474 591 q 437 584 450 587 l 437 125 q 477 91 456 101 q 522 81 498 81 q 587 146 568 81 q 606 334 606 210 q 603 449 606 400 q 587 529 599 497 q 551 576 574 561 q 490 591 528 591 z "},"\u0239":{"ha":764,"x_min":41,"x_max":723,"o":"m 534 686 q 627 663 590 686 q 685 596 663 640 q 714 492 706 553 q 723 355 723 431 q 712 200 723 268 q 674 86 701 133 q 604 16 648 40 q 497 -8 561 -8 q 465 -7 479 -8 q 437 -3 451 -5 l 437 -277 l 326 -277 l 326 -3 q 298 -7 313 -5 q 267 -8 284 -8 q 159 16 203 -8 q 90 86 116 40 q 52 200 63 133 q 41 355 41 268 q 49 492 41 431 q 79 596 58 553 q 137 663 100 640 q 229 686 173 686 q 288 673 262 686 q 337 640 314 660 l 339 681 l 425 681 l 427 640 q 476 673 450 660 q 534 686 502 686 m 274 90 q 301 92 290 90 q 326 97 313 94 l 326 556 q 286 590 307 580 q 242 600 265 600 q 177 535 196 600 q 157 347 157 471 q 161 232 157 281 q 177 152 165 184 q 212 105 189 120 q 274 90 235 90 m 490 90 q 551 105 528 90 q 587 152 574 120 q 603 232 599 184 q 606 347 606 281 q 587 535 606 471 q 522 600 568 600 q 477 590 498 600 q 437 556 456 580 l 437 97 q 462 92 450 94 q 490 90 474 90 z "},"\u023c":{"ha":764,"x_min":53,"x_max":760,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 760 722 l 180 -117 l 53 -117 l 634 722 l 760 722 z "},"\u023f":{"ha":764,"x_min":123,"x_max":648,"o":"m 540 -188 q 577 -185 564 -188 q 600 -178 590 -182 l 600 -275 q 566 -280 586 -278 q 525 -282 547 -282 q 463 -272 489 -282 q 416 -245 436 -262 q 381 -206 396 -228 q 352 -160 366 -184 q 325 -112 338 -136 q 296 -67 312 -88 q 259 -30 279 -46 q 212 -5 239 -14 q 167 5 189 1 q 123 14 145 8 l 123 122 q 242 96 183 105 q 359 87 300 87 q 485 111 445 87 q 526 176 526 134 q 519 209 524 195 q 496 237 514 224 q 443 264 478 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 502 689 453 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 q 622 96 648 133 q 556 35 596 58 q 467 0 516 11 q 370 -12 417 -12 q 394 -31 382 -20 q 415 -56 405 -42 q 434 -85 425 -70 q 453 -115 444 -100 q 472 -143 463 -130 q 492 -166 481 -156 q 515 -182 503 -176 q 540 -188 526 -188 z "},"\u0240":{"ha":764,"x_min":111,"x_max":722,"o":"m 273 100 q 363 86 326 100 q 428 52 401 73 q 474 3 455 31 q 509 -54 493 -24 q 535 -104 523 -80 q 563 -146 547 -127 q 600 -175 578 -164 q 652 -185 621 -185 q 694 -182 676 -185 q 722 -176 712 -179 l 722 -277 q 688 -283 708 -281 q 647 -285 669 -285 q 554 -269 590 -285 q 494 -229 517 -254 q 454 -174 470 -204 q 420 -113 437 -143 q 392 -70 408 -91 q 356 -34 377 -50 q 308 -9 336 -18 q 241 0 280 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 273 100 z "},"\u0242":{"ha":764,"x_min":205,"x_max":625,"o":"m 625 387 q 607 287 625 332 q 554 209 588 242 q 472 156 520 176 q 367 133 425 137 l 361 0 l 260 0 l 252 226 l 331 226 q 403 238 372 226 q 455 272 434 251 q 487 319 476 292 q 497 376 497 347 q 477 467 497 429 q 420 529 456 505 q 333 565 383 553 q 222 576 282 576 l 205 576 l 205 682 l 224 682 q 402 657 327 682 q 528 591 478 632 q 601 497 577 550 q 625 387 625 444 z "},"\u0247":{"ha":764,"x_min":28,"x_max":735,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 735 722 l 155 -117 l 28 -117 l 610 722 l 735 722 z "},"\u0249":{"ha":764,"x_min":89,"x_max":720,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 498 966 q 535 959 518 966 q 565 939 552 952 q 584 909 577 926 q 591 873 591 892 q 584 837 591 854 q 565 808 577 821 q 535 788 552 795 q 498 781 518 781 q 462 788 479 781 q 432 808 445 795 q 413 837 420 821 q 406 873 406 854 q 413 909 406 892 q 432 939 420 926 q 462 959 445 952 q 498 966 479 966 m 279 397 l 720 397 l 720 298 l 279 298 l 279 397 z "},"\u024b":{"ha":764,"x_min":74,"x_max":774,"o":"m 533 -21 l 539 125 q 310 -12 443 -12 q 206 12 250 -12 q 133 81 162 37 q 89 189 103 126 q 74 326 74 251 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 475 684 441 689 q 547 667 509 678 l 652 693 l 652 -85 q 657 -138 652 -118 q 672 -168 663 -157 q 694 -181 682 -178 q 720 -184 707 -184 q 749 -181 734 -184 q 774 -174 764 -178 l 774 -277 q 738 -283 760 -281 q 694 -285 716 -285 q 624 -274 654 -285 q 574 -240 594 -264 q 543 -179 553 -216 q 533 -86 533 -141 l 533 -21 m 195 334 q 203 231 195 277 q 229 154 212 186 q 272 106 246 123 q 334 89 298 89 q 533 248 422 89 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 298 593 q 195 334 195 462 z "},"\u024d":{"ha":764,"x_min":26,"x_max":736,"o":"m 172 681 l 280 681 l 283 555 q 402 661 344 628 q 521 693 461 693 q 681 625 627 693 q 732 421 736 556 l 612 421 q 586 551 614 511 q 504 591 558 591 q 456 583 480 591 q 407 556 432 574 q 353 508 381 537 q 292 437 324 479 l 292 0 l 172 0 l 172 681 m 26 391 l 467 391 l 467 292 l 26 292 l 26 391 z "},"\u024f":{"ha":764,"x_min":20,"x_max":743,"o":"m 20 417 l 150 417 l 45 681 l 179 681 l 277 417 l 490 417 l 585 681 l 714 681 l 614 417 l 743 417 l 743 319 l 576 319 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 189 319 l 20 319 l 20 417 m 386 125 l 455 319 l 313 319 l 386 125 z "},"\u01aa":{"ha":764,"x_min":50,"x_max":646,"o":"m 50 837 q 64 916 50 880 q 103 978 78 952 q 165 1019 129 1004 q 244 1033 201 1033 q 333 1017 295 1033 q 395 971 370 1000 q 431 902 419 943 q 443 814 443 862 l 443 -36 q 447 -97 443 -68 q 466 -146 450 -126 q 496 -169 477 -160 q 545 -177 514 -177 q 604 -174 577 -177 q 646 -168 631 -170 l 646 -271 q 621 -275 636 -273 q 588 -278 605 -277 q 554 -281 570 -280 q 526 -282 538 -282 q 446 -272 479 -282 q 389 -246 412 -262 q 335 -178 350 -220 q 321 -73 321 -136 l 321 670 q 286 653 304 661 q 239 645 267 645 q 160 659 195 645 q 101 697 125 672 q 63 758 76 722 q 50 837 50 793 m 165 837 q 171 803 165 819 q 188 776 177 787 q 213 758 198 764 q 245 751 227 751 q 277 758 262 751 q 302 776 292 764 q 318 803 313 787 q 324 837 324 819 q 318 870 324 854 q 302 898 313 886 q 277 916 292 909 q 245 923 262 923 q 213 916 227 923 q 188 898 198 909 q 171 870 177 886 q 165 837 165 854 z "},"\u01bb":{"ha":764,"x_min":100,"x_max":684,"o":"m 128 493 l 467 493 q 499 564 490 531 q 509 632 509 597 q 500 694 509 665 q 473 746 491 724 q 425 781 454 768 q 355 794 396 794 q 253 769 298 794 q 168 704 207 745 l 103 782 q 219 867 153 835 q 371 899 284 899 q 478 881 430 899 q 562 830 527 863 q 617 749 597 797 q 636 640 636 701 q 626 566 636 603 q 597 493 616 530 l 683 493 l 683 391 l 531 391 q 468 319 502 355 q 395 246 433 283 l 253 113 l 684 113 l 684 0 l 100 0 l 100 106 l 310 311 q 352 353 333 332 q 389 391 372 373 l 128 391 l 128 493 z "},"\u01be":{"ha":764,"x_min":100,"x_max":570,"o":"m 100 681 l 220 681 l 220 821 l 331 821 l 331 681 l 519 681 l 519 584 l 331 584 l 331 555 q 341 522 331 534 q 368 498 351 509 q 407 480 385 488 q 451 460 428 471 q 495 433 473 449 q 533 393 516 417 q 560 333 550 368 q 570 249 570 298 q 549 152 570 198 q 479 71 527 106 q 355 14 431 35 q 169 -7 278 -7 l 151 -7 l 151 99 l 168 99 q 278 109 227 99 q 365 138 328 119 q 422 185 401 157 q 443 251 443 214 q 433 318 443 292 q 408 361 424 344 q 372 388 392 378 q 331 406 352 397 q 291 422 311 414 q 255 445 271 431 q 229 481 239 459 q 220 539 220 504 l 220 584 l 100 584 l 100 681 z "},"\u01c0":{"ha":764,"x_min":326,"x_max":437,"o":"m 437 -278 l 326 -278 l 326 1111 l 437 1111 l 437 -278 z "},"\u01c1":{"ha":764,"x_min":216,"x_max":549,"o":"m 549 -278 l 437 -278 l 437 1111 l 549 1111 l 549 -278 m 327 -278 l 216 -278 l 216 1111 l 327 1111 l 327 -278 z "},"\u01c2":{"ha":764,"x_min":142,"x_max":622,"o":"m 142 340 l 326 340 l 326 552 l 142 552 l 142 654 l 326 654 l 326 1111 l 437 1111 l 437 654 l 622 654 l 622 552 l 437 552 l 437 340 l 622 340 l 622 238 l 437 238 l 437 -278 l 326 -278 l 326 238 l 142 238 l 142 340 z "},"\u01c3":{"ha":764,"x_min":290,"x_max":469,"o":"m 452 958 l 433 260 l 329 260 l 309 958 l 452 958 m 380 167 q 415 160 399 167 q 443 140 431 153 q 462 112 455 128 q 469 77 469 95 q 462 42 469 58 q 443 14 455 26 q 415 -5 431 2 q 380 -12 399 -12 q 345 -5 361 -12 q 317 14 329 2 q 297 42 304 26 q 290 77 290 58 q 297 112 290 95 q 317 140 304 128 q 345 160 329 153 q 380 167 361 167 z "},"\u1e01":{"ha":764,"x_min":90,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 515 -176 q 505 -226 515 -203 q 478 -266 496 -249 q 435 -292 460 -283 q 378 -301 410 -301 q 320 -292 345 -301 q 280 -268 296 -283 q 256 -230 264 -252 q 248 -180 248 -208 q 257 -130 248 -153 q 283 -91 266 -107 q 326 -65 300 -74 q 384 -56 351 -56 q 480 -89 446 -56 q 515 -176 515 -121 m 443 -180 q 428 -133 443 -153 q 380 -114 414 -114 q 335 -131 351 -114 q 320 -176 320 -149 q 334 -225 320 -206 q 382 -243 348 -243 q 428 -225 412 -243 q 443 -180 443 -208 z "},"\u1e03":{"ha":764,"x_min":47,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m 429 964 q 465 957 448 964 q 494 937 481 949 q 513 909 506 925 q 519 873 519 892 q 513 838 519 854 q 494 810 506 822 q 465 790 481 798 q 429 783 448 783 q 393 790 410 783 q 365 810 377 798 q 346 838 353 822 q 339 873 339 854 q 346 909 339 892 q 365 937 353 925 q 393 957 377 949 q 429 964 410 964 m 47 681 z "},"\u1e05":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e07":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e09":{"ha":764,"x_min":0,"x_max":646,"o":"m 459 -9 l 404 -200 l 300 -200 l 345 0 q 167 111 227 26 q 107 334 107 196 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 q 546 -1 591 7 q 459 -9 500 -9 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u1e0b":{"ha":764,"x_min":-47,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 335 964 q 371 957 354 964 q 399 937 387 949 q 418 909 412 925 q 425 873 425 892 q 418 838 425 854 q 399 810 412 822 q 371 790 387 798 q 335 783 354 783 q 299 790 315 783 q 271 810 283 798 q 252 838 258 822 q 245 873 245 854 q 252 909 245 892 q 271 937 258 925 q 299 957 283 949 q 335 964 315 964 m -47 681 z "},"\u1e0d":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e0f":{"ha":764,"x_min":0,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e11":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 298 -264 q 356 -249 341 -260 q 371 -220 371 -238 q 365 -202 371 -209 q 351 -192 359 -196 q 333 -184 343 -188 q 315 -174 323 -180 q 301 -157 307 -168 q 295 -129 295 -146 q 299 -105 295 -117 q 313 -86 304 -94 q 338 -72 323 -77 q 374 -67 353 -67 q 411 -73 394 -67 q 441 -90 429 -79 q 461 -120 454 -102 q 469 -163 469 -138 q 460 -220 469 -193 q 431 -267 451 -246 q 378 -300 411 -288 q 298 -314 346 -313 l 298 -264 z "},"\u1e13":{"ha":764,"x_min":0,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e15":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 323 1115 l 432 981 l 336 981 l 185 1115 l 323 1115 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 683 z "},"\u1e17":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 572 1115 l 421 981 l 326 981 l 434 1115 l 572 1115 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1e19":{"ha":764,"x_min":27,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 458 -58 l 623 -222 l 503 -222 l 408 -140 l 312 -222 l 195 -222 l 361 -58 l 458 -58 m 27 -336 z "},"\u1e1b":{"ha":764,"x_min":25,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 161 -157 q 228 -83 191 -108 q 311 -58 264 -58 q 378 -70 351 -58 q 426 -95 405 -81 q 466 -120 447 -109 q 507 -132 484 -132 q 555 -113 534 -132 q 595 -65 576 -94 l 653 -123 q 587 -197 623 -172 q 503 -222 550 -222 q 436 -211 463 -222 q 389 -185 410 -199 q 349 -160 368 -172 q 307 -149 330 -149 q 259 -167 279 -149 q 220 -215 239 -186 l 161 -157 m 25 -336 z "},"\u1e1d":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 457 0 l 399 -200 l 296 -200 l 340 0 l 457 0 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u1e1f":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 848 q 553 868 620 868 q 393 701 393 868 l 393 582 l 692 582 l 692 484 l 393 484 l 393 0 l 273 0 l 273 484 l 54 484 l 54 582 l 273 582 l 273 694 q 557 966 273 966 q 713 950 627 966 l 713 848 m 0 681 m 501 1217 q 537 1210 520 1217 q 566 1191 553 1203 q 585 1162 578 1179 q 591 1127 591 1146 q 585 1092 591 1108 q 566 1063 578 1076 q 537 1044 553 1051 q 501 1037 520 1037 q 465 1044 481 1037 q 437 1063 449 1051 q 418 1092 425 1076 q 411 1127 411 1108 q 418 1162 411 1146 q 437 1191 425 1179 q 465 1210 449 1203 q 501 1217 481 1217 m 119 935 z "},"\u1e21":{"ha":764,"x_min":0,"x_max":708,"o":"m 599 585 q 628 529 618 561 q 639 461 639 498 q 620 365 639 408 q 565 290 600 321 q 480 241 530 258 q 372 224 431 224 q 292 233 330 224 q 233 256 255 242 q 212 220 220 237 q 203 182 203 203 q 228 139 203 156 q 293 121 252 122 l 472 114 q 566 101 523 113 q 640 68 609 90 q 688 14 671 46 q 705 -60 705 -18 q 686 -146 705 -105 q 625 -217 666 -186 q 521 -267 584 -248 q 371 -285 458 -285 q 230 -272 288 -285 q 135 -235 172 -258 q 81 -179 98 -212 q 64 -109 64 -147 q 87 -22 64 -59 q 158 50 110 16 q 127 71 140 58 q 106 97 115 83 q 94 128 98 112 q 90 160 90 144 q 111 241 90 204 q 160 310 132 277 q 137 340 147 326 q 120 373 127 355 q 110 410 113 390 q 106 456 106 430 q 125 552 106 509 q 179 627 144 596 q 263 676 214 659 q 372 693 313 693 q 420 690 397 693 q 461 681 444 686 l 708 681 l 708 585 l 599 585 m 189 -98 q 239 -169 189 -146 q 379 -191 290 -191 q 474 -180 435 -191 q 535 -154 512 -170 q 569 -116 559 -137 q 579 -72 579 -94 q 545 -11 579 -31 q 441 12 511 9 l 264 18 q 227 -11 241 3 q 204 -40 212 -25 q 193 -69 196 -54 q 189 -98 189 -83 m 225 458 q 236 399 225 426 q 267 353 247 372 q 313 323 286 334 q 372 313 340 313 q 435 325 408 313 q 481 357 463 336 q 510 404 500 377 q 519 458 519 430 q 509 518 519 491 q 478 564 498 545 q 432 594 458 583 q 372 604 405 604 q 310 592 337 604 q 263 560 282 580 q 235 513 245 540 q 225 458 225 487 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1e23":{"ha":764,"x_min":52,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 434 964 q 470 957 453 964 q 498 937 486 949 q 517 909 511 925 q 524 873 524 892 q 517 838 524 854 q 498 810 511 822 q 470 790 486 798 q 434 783 453 783 q 398 790 414 783 q 370 810 382 798 q 351 838 357 822 q 344 873 344 854 q 351 909 344 892 q 370 937 357 925 q 398 957 382 949 q 434 964 414 964 m 52 681 z "},"\u1e25":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e27":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 233 1179 q 261 1174 248 1179 q 284 1158 275 1168 q 300 1135 294 1149 q 306 1107 306 1122 q 300 1079 306 1092 q 284 1056 294 1065 q 261 1041 275 1046 q 233 1035 248 1035 q 182 1056 203 1035 q 161 1107 161 1076 q 167 1135 161 1122 q 182 1158 173 1149 q 205 1174 192 1168 q 233 1179 218 1179 m 530 1179 q 559 1174 545 1179 q 582 1158 572 1168 q 597 1135 591 1149 q 603 1107 603 1122 q 597 1079 603 1092 q 582 1056 591 1065 q 559 1041 572 1046 q 530 1035 545 1035 q 479 1056 500 1035 q 458 1107 458 1076 q 464 1135 458 1122 q 479 1158 470 1149 q 502 1174 489 1168 q 530 1179 515 1179 m 0 941 z "},"\u1e29":{"ha":764,"x_min":66,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 227 0 l 169 -200 l 66 -200 l 111 0 l 227 0 z "},"\u1e2b":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 550 -52 q 536 -124 550 -93 q 500 -175 523 -155 q 447 -205 477 -195 q 382 -216 416 -216 q 317 -205 347 -216 q 263 -175 286 -195 q 227 -124 241 -155 q 214 -52 214 -93 l 306 -52 q 325 -107 306 -86 q 382 -128 344 -128 q 439 -107 420 -128 q 458 -52 458 -86 l 550 -52 m 0 -329 z "},"\u1e2d":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 m 136 -157 q 202 -83 165 -108 q 286 -58 239 -58 q 353 -70 326 -58 q 401 -95 380 -81 q 440 -120 422 -109 q 482 -132 459 -132 q 530 -113 509 -132 q 570 -65 551 -94 l 628 -123 q 562 -197 598 -172 q 478 -222 525 -222 q 411 -211 438 -222 q 363 -185 385 -199 q 324 -160 342 -172 q 282 -149 305 -149 q 234 -167 254 -149 q 195 -215 214 -186 l 136 -157 m 0 -336 z "},"\u1e2f":{"ha":764,"x_min":0,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 572 1095 l 421 961 l 326 961 l 434 1095 l 572 1095 m 236 913 q 266 907 252 913 q 290 891 279 901 q 307 866 300 880 q 313 837 313 852 q 307 807 313 821 q 290 783 300 793 q 266 767 279 773 q 236 761 252 761 q 207 767 220 761 q 182 783 193 773 q 166 807 172 793 q 160 837 160 821 q 166 866 160 852 q 182 891 172 880 q 207 907 193 901 q 236 913 220 913 m 528 913 q 557 907 543 913 q 582 891 571 901 q 598 866 592 880 q 604 837 604 852 q 598 807 604 821 q 582 783 592 793 q 557 767 571 773 q 528 761 543 761 q 498 767 512 761 q 474 783 484 773 q 458 807 464 793 q 452 837 452 821 q 458 866 452 852 q 474 891 464 880 q 498 907 484 901 q 528 913 512 913 m 0 681 z "},"\u1e31":{"ha":764,"x_min":0,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 625 1125 l 432 981 l 311 981 l 454 1125 l 625 1125 m 0 886 z "},"\u1e33":{"ha":764,"x_min":123,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e35":{"ha":764,"x_min":0,"x_max":721,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e37":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 401 -87 q 436 -94 420 -87 q 465 -113 453 -101 q 484 -142 477 -125 q 491 -177 491 -158 q 484 -212 491 -196 q 465 -241 477 -229 q 436 -260 453 -253 q 401 -267 420 -267 q 365 -260 381 -267 q 336 -241 349 -253 q 317 -212 324 -229 q 311 -177 311 -196 q 317 -142 311 -158 q 336 -113 324 -125 q 365 -94 349 -101 q 401 -87 381 -87 z "},"\u1e39":{"ha":764,"x_min":-19,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 541 1084 l 185 1084 l 185 1175 l 541 1175 l 541 1084 m -19 935 m 401 -87 q 436 -94 420 -87 q 465 -113 453 -101 q 484 -142 477 -125 q 491 -177 491 -158 q 484 -212 491 -196 q 465 -241 477 -229 q 436 -260 453 -253 q 401 -267 420 -267 q 365 -260 381 -267 q 336 -241 349 -253 q 317 -212 324 -229 q 311 -177 311 -196 q 317 -142 311 -158 q 336 -113 324 -125 q 365 -94 349 -101 q 401 -87 381 -87 z "},"\u1e3b":{"ha":764,"x_min":17,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 576 -186 l 221 -186 l 221 -96 l 576 -96 l 576 -186 m 17 -336 z "},"\u1e3d":{"ha":764,"x_min":15,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 446 -58 l 611 -222 l 491 -222 l 395 -140 l 300 -222 l 183 -222 l 349 -58 l 446 -58 m 15 -336 z "},"\u1e3f":{"ha":764,"x_min":0,"x_max":703,"o":"m 594 0 l 594 489 q 592 541 594 521 q 584 573 589 562 q 571 590 579 585 q 552 595 564 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 621 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 0 l 594 0 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u1e41":{"ha":764,"x_min":0,"x_max":703,"o":"m 594 0 l 594 489 q 592 541 594 521 q 584 573 589 562 q 571 590 579 585 q 552 595 564 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 621 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 0 l 594 0 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e43":{"ha":764,"x_min":61,"x_max":703,"o":"m 594 0 l 594 489 q 592 541 594 521 q 584 573 589 562 q 571 590 579 585 q 552 595 564 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 621 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 0 l 594 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e45":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e47":{"ha":764,"x_min":109,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e49":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e4b":{"ha":764,"x_min":0,"x_max":656,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e4d":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 572 1121 l 421 987 l 326 987 l 434 1121 l 572 1121 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u1e4f":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 236 1185 q 266 1179 252 1185 q 290 1162 279 1173 q 307 1138 300 1152 q 313 1108 313 1124 q 307 1079 313 1093 q 290 1055 300 1065 q 266 1038 279 1044 q 236 1032 252 1032 q 207 1038 220 1032 q 182 1055 193 1044 q 166 1079 172 1065 q 160 1108 160 1093 q 166 1138 160 1124 q 182 1162 172 1152 q 207 1179 193 1173 q 236 1185 220 1185 m 528 1185 q 557 1179 543 1185 q 582 1162 571 1173 q 598 1138 592 1152 q 604 1108 604 1124 q 598 1079 604 1093 q 582 1055 592 1065 q 557 1038 571 1044 q 528 1032 543 1032 q 498 1038 512 1032 q 474 1055 484 1044 q 458 1079 464 1065 q 452 1108 452 1093 q 458 1138 452 1124 q 474 1162 464 1152 q 498 1179 484 1173 q 528 1185 512 1185 m 0 681 z "},"\u1e51":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 323 1115 l 432 981 l 336 981 l 185 1115 l 323 1115 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 683 z "},"\u1e53":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 572 1115 l 421 981 l 326 981 l 434 1115 l 572 1115 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1e55":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u1e57":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e59":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e5b":{"ha":764,"x_min":106,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 197 -87 q 232 -94 216 -87 q 261 -113 249 -101 q 280 -142 273 -125 q 287 -177 287 -158 q 280 -212 287 -196 q 261 -241 273 -229 q 232 -260 249 -253 q 197 -267 216 -267 q 161 -260 177 -267 q 132 -241 144 -253 q 113 -212 120 -229 q 106 -177 106 -196 q 113 -142 106 -158 q 132 -113 120 -125 q 161 -94 144 -101 q 197 -87 177 -87 z "},"\u1e5d":{"ha":764,"x_min":0,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 m 197 -87 q 232 -94 216 -87 q 261 -113 249 -101 q 280 -142 273 -125 q 287 -177 287 -158 q 280 -212 287 -196 q 261 -241 273 -229 q 232 -260 249 -253 q 197 -267 216 -267 q 161 -260 177 -267 q 132 -241 144 -253 q 113 -212 120 -229 q 106 -177 106 -196 q 113 -142 106 -158 q 132 -113 120 -125 q 161 -94 144 -101 q 197 -87 177 -87 z "},"\u1e5f":{"ha":764,"x_min":-185,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 374 -186 l 19 -186 l 19 -96 l 374 -96 l 374 -186 m -185 -336 z "},"\u1e61":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e63":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e65":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 264 1061 q 300 1054 283 1061 q 329 1035 317 1047 q 348 1006 341 1023 q 355 971 355 990 q 348 936 355 952 q 329 907 341 920 q 300 888 317 895 q 264 881 283 881 q 229 888 245 881 q 200 907 212 895 q 181 936 188 920 q 174 971 174 952 q 181 1006 174 990 q 200 1035 188 1023 q 229 1054 212 1047 q 264 1061 245 1061 m 0 681 z "},"\u1e67":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 382 1166 q 417 1159 401 1166 q 446 1139 434 1152 q 465 1111 458 1127 q 472 1076 472 1095 q 465 1040 472 1057 q 446 1012 458 1024 q 417 992 434 1000 q 382 985 401 985 q 346 992 362 985 q 317 1012 330 1000 q 298 1040 305 1024 q 292 1076 292 1057 q 298 1111 292 1095 q 317 1139 305 1127 q 346 1159 330 1152 q 382 1166 362 1166 m 0 681 z "},"\u1e69":{"ha":764,"x_min":0,"x_max":648,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e6b":{"ha":764,"x_min":-85,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 296 1158 q 332 1151 315 1158 q 361 1131 349 1143 q 380 1103 373 1119 q 387 1067 387 1086 q 380 1032 387 1048 q 361 1004 373 1016 q 332 984 349 991 q 296 977 315 977 q 260 984 277 977 q 232 1004 244 991 q 213 1032 220 1016 q 206 1067 206 1048 q 213 1103 206 1086 q 232 1131 220 1119 q 260 1151 244 1143 q 296 1158 277 1158 m -85 875 z "},"\u1e6d":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e6f":{"ha":764,"x_min":0,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e71":{"ha":764,"x_min":0,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e73":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 236 -58 q 266 -64 252 -58 q 290 -80 279 -70 q 307 -105 300 -91 q 313 -134 313 -119 q 307 -164 313 -150 q 290 -188 300 -178 q 266 -204 279 -198 q 236 -210 252 -210 q 207 -204 220 -210 q 182 -188 193 -198 q 166 -164 172 -178 q 160 -134 160 -150 q 166 -105 160 -119 q 182 -80 172 -91 q 207 -64 193 -70 q 236 -58 220 -58 m 528 -58 q 557 -64 543 -58 q 582 -80 571 -70 q 598 -105 592 -91 q 604 -134 604 -119 q 598 -164 604 -150 q 582 -188 592 -178 q 557 -204 571 -198 q 528 -210 543 -210 q 498 -204 512 -210 q 474 -188 484 -198 q 458 -164 464 -178 q 452 -134 452 -150 q 458 -105 452 -119 q 474 -80 464 -91 q 498 -64 484 -70 q 528 -58 512 -58 z "},"\u1e75":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 136 -157 q 202 -83 165 -108 q 286 -58 239 -58 q 353 -70 326 -58 q 401 -95 380 -81 q 440 -120 422 -109 q 482 -132 459 -132 q 530 -113 509 -132 q 570 -65 551 -94 l 628 -123 q 562 -197 598 -172 q 478 -222 525 -222 q 411 -211 438 -222 q 363 -185 385 -199 q 324 -160 342 -172 q 282 -149 305 -149 q 234 -167 254 -149 q 195 -215 214 -186 l 136 -157 m 0 -336 z "},"\u1e77":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 431 -58 l 596 -222 l 476 -222 l 380 -140 l 285 -222 l 168 -222 l 334 -58 l 431 -58 m 0 -336 z "},"\u1e79":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 572 1121 l 421 987 l 326 987 l 434 1121 l 572 1121 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u1e7b":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 236 1150 q 266 1144 252 1150 q 290 1127 279 1138 q 307 1103 300 1117 q 313 1074 313 1089 q 307 1044 313 1058 q 290 1020 300 1030 q 266 1004 279 1010 q 236 998 252 998 q 207 1004 220 998 q 182 1020 193 1010 q 166 1044 172 1030 q 160 1074 160 1058 q 166 1103 160 1089 q 182 1127 172 1117 q 207 1144 193 1138 q 236 1150 220 1150 m 528 1150 q 557 1144 543 1150 q 582 1127 571 1138 q 598 1103 592 1117 q 604 1074 604 1089 q 598 1044 604 1058 q 582 1020 592 1030 q 557 1004 571 1010 q 528 998 543 998 q 498 1004 512 998 q 474 1020 484 1010 q 458 1044 464 1030 q 452 1074 452 1058 q 458 1103 452 1089 q 474 1127 464 1117 q 498 1144 484 1138 q 528 1150 512 1150 m 0 681 z "},"\u1e7d":{"ha":764,"x_min":0,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 447 0 l 311 0 l 45 681 m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u1e7f":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 447 0 l 311 0 l 45 681 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e87":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e89":{"ha":764,"x_min":25,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e8b":{"ha":764,"x_min":0,"x_max":722,"o":"m 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 722 0 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e8d":{"ha":764,"x_min":0,"x_max":722,"o":"m 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 722 0 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u1e8f":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u1e91":{"ha":764,"x_min":0,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u1e93":{"ha":764,"x_min":111,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 382 -87 q 417 -94 401 -87 q 446 -113 434 -101 q 465 -142 458 -125 q 472 -177 472 -158 q 465 -212 472 -196 q 446 -241 458 -229 q 417 -260 434 -253 q 382 -267 401 -267 q 346 -260 362 -267 q 317 -241 330 -253 q 298 -212 305 -229 q 292 -177 292 -196 q 298 -142 292 -158 q 317 -113 305 -125 q 346 -94 330 -101 q 382 -87 362 -87 z "},"\u1e95":{"ha":764,"x_min":0,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e96":{"ha":764,"x_min":0,"x_max":656,"o":"m 656 0 l 538 0 l 538 435 q 508 552 538 513 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 m 559 -186 l 204 -186 l 204 -96 l 559 -96 l 559 -186 m 0 -336 z "},"\u1e97":{"ha":764,"x_min":0,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 236 1120 q 266 1114 252 1120 q 290 1098 279 1108 q 307 1073 300 1087 q 313 1044 313 1059 q 307 1014 313 1028 q 290 990 300 1000 q 266 974 279 980 q 236 968 252 968 q 207 974 220 968 q 182 990 193 980 q 166 1014 172 1000 q 160 1044 160 1028 q 166 1073 160 1059 q 182 1098 172 1087 q 207 1114 193 1108 q 236 1120 220 1120 m 528 1120 q 557 1114 543 1120 q 582 1098 571 1108 q 598 1073 592 1087 q 604 1044 604 1059 q 598 1014 604 1028 q 582 990 592 1000 q 557 974 571 980 q 528 968 543 968 q 498 974 512 968 q 474 990 484 980 q 458 1014 464 1000 q 452 1044 452 1028 q 458 1073 452 1059 q 474 1098 464 1087 q 498 1114 484 1108 q 528 1120 512 1120 m 0 848 z "},"\u1e98":{"ha":764,"x_min":0,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u1e99":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u1e9a":{"ha":764,"x_min":24,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 333 810 q 381 829 361 810 q 401 878 401 849 q 395 904 401 892 q 381 926 390 917 q 359 941 372 935 q 333 946 347 946 l 333 1018 q 390 1007 363 1018 q 436 977 416 996 q 467 932 456 958 q 479 878 479 907 q 467 823 479 848 q 436 779 456 798 q 390 749 416 760 q 333 738 363 738 l 333 810 m 24 681 z "},"\u1e9b":{"ha":764,"x_min":54,"x_max":699,"o":"m 699 950 l 699 851 q 654 859 677 856 q 608 865 631 863 q 563 868 585 867 q 522 869 541 869 q 368 820 420 869 q 317 664 317 770 l 317 0 l 196 0 l 196 652 q 219 791 196 732 q 285 890 243 850 q 386 948 327 929 q 515 968 444 968 q 609 963 560 968 q 699 950 658 958 m 350 1141 q 357 1174 350 1158 q 375 1201 363 1190 q 402 1220 387 1213 q 436 1227 418 1227 q 470 1220 454 1227 q 497 1201 486 1213 q 516 1174 509 1190 q 522 1141 522 1158 q 516 1107 522 1123 q 497 1080 509 1092 q 470 1061 486 1068 q 436 1055 454 1055 q 402 1061 418 1055 q 375 1080 387 1068 q 357 1107 363 1092 q 350 1141 350 1123 m 54 975 z "},"\u2c61":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 178 448 l 618 448 l 618 349 l 178 349 l 178 448 m 178 621 l 618 621 l 618 523 l 178 523 l 178 621 z "},"\u2c65":{"ha":764,"x_min":28,"x_max":735,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 735 722 l 155 -117 l 28 -117 l 610 722 l 735 722 z "},"\u2c66":{"ha":764,"x_min":28,"x_max":735,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 735 722 l 155 -117 l 28 -117 l 610 722 l 735 722 z "},"\u2c68":{"ha":764,"x_min":109,"x_max":724,"o":"m 613 0 l 538 0 l 538 435 q 508 553 538 514 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 958 l 227 958 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 101 l 724 101 l 718 -174 l 613 -174 l 613 0 z "},"\u2c6a":{"ha":764,"x_min":123,"x_max":724,"o":"m 724 101 l 718 -174 l 613 -174 l 613 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 628 101 l 724 101 z "},"\u2c6c":{"ha":764,"x_min":111,"x_max":690,"o":"m 579 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 690 100 l 684 -174 l 579 -174 l 579 0 z "},"\u2c74":{"ha":764,"x_min":68,"x_max":714,"o":"m 183 293 q 170 280 178 287 q 153 265 162 273 q 135 250 144 257 q 117 236 125 242 l 68 320 q 83 332 73 323 q 107 351 94 340 q 130 370 119 361 q 144 385 141 380 l 124 429 q 98 496 109 462 q 87 568 87 530 q 97 620 87 596 q 124 661 106 644 q 170 689 142 679 q 235 699 198 699 q 301 689 273 699 q 350 662 330 680 q 379 622 370 645 q 389 570 389 598 q 382 512 389 538 q 360 463 374 486 q 325 415 346 439 q 277 366 304 392 l 382 121 l 585 681 l 714 681 l 447 0 l 311 0 l 183 293 m 237 458 q 276 512 265 484 q 287 568 287 540 q 274 606 287 595 q 244 616 262 616 q 212 604 223 616 q 200 572 200 592 q 207 533 200 556 q 223 488 214 510 l 237 458 z "},"\u2184":{"ha":764,"x_min":126,"x_max":656,"o":"m 126 656 q 221 682 173 673 q 321 690 269 690 q 464 668 401 690 q 569 603 526 646 q 634 495 612 559 q 656 347 656 431 q 633 201 656 267 q 566 88 610 135 q 458 16 522 41 q 313 -9 394 -9 q 215 -2 260 -9 q 126 22 169 5 l 126 132 q 216 98 171 109 q 311 87 262 87 q 401 105 360 87 q 472 155 442 122 q 517 234 501 187 q 533 340 533 281 q 473 525 533 463 q 307 586 413 586 q 126 543 210 586 l 126 656 z "},"\u214e":{"ha":764,"x_min":129,"x_max":621,"o":"m 621 680 l 621 -1 l 129 -1 l 129 98 l 501 98 l 501 284 l 163 284 l 163 378 l 501 378 l 501 682 l 621 680 z "},"\u2c76":{"ha":764,"x_min":142,"x_max":622,"o":"m 622 298 l 261 298 l 261 0 l 142 0 l 142 681 l 261 681 l 261 400 l 622 400 l 622 298 z "},"\u2c77":{"ha":764,"x_min":45,"x_max":718,"o":"m 604 359 q 600 460 604 416 q 584 534 595 504 q 554 580 572 564 q 507 596 535 596 q 470 588 484 596 q 447 562 455 580 q 436 517 439 545 q 433 450 433 489 l 433 83 q 509 106 477 86 q 563 162 541 127 q 594 248 584 198 q 604 359 604 297 m 45 357 q 62 499 45 439 q 103 598 79 558 q 150 662 126 639 q 189 694 174 684 l 262 623 q 233 596 250 614 q 199 546 216 577 q 171 471 183 515 q 159 366 159 426 q 167 260 159 310 q 194 173 175 211 q 244 111 212 135 q 326 83 277 87 l 326 450 q 338 562 326 515 q 373 636 350 608 q 430 679 396 665 q 506 692 463 692 q 606 668 566 692 q 671 603 646 645 q 707 503 696 562 q 718 375 718 445 q 702 224 718 295 q 648 101 686 154 q 543 18 609 49 q 377 -12 477 -12 q 259 1 310 -12 q 172 38 209 14 q 111 96 135 62 q 72 171 86 130 q 51 259 57 212 q 45 357 45 307 z "},"\u0250":{"ha":764,"x_min":90,"x_max":652,"o":"m 196 681 l 199 589 q 312 669 254 644 q 432 693 369 693 q 532 678 490 693 q 600 637 573 663 q 639 576 627 611 q 652 499 652 541 q 575 339 652 397 q 350 281 499 281 l 209 281 l 209 221 q 248 124 209 161 q 366 88 286 88 q 479 101 423 88 q 595 138 535 114 l 595 31 q 545 15 572 23 q 487 1 517 7 q 423 -8 456 -5 q 356 -12 390 -12 q 245 1 294 -12 q 161 43 195 15 q 109 113 127 71 q 90 212 90 155 l 90 681 l 196 681 m 209 371 l 359 371 q 435 380 403 371 q 487 405 467 389 q 517 444 507 421 q 527 495 527 467 q 521 533 527 515 q 501 565 515 551 q 466 587 488 578 q 413 595 444 595 q 320 570 372 595 q 209 492 267 545 l 209 371 z "},"\u0251":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 475 684 441 689 q 547 667 509 678 l 652 693 l 652 0 l 545 0 l 539 125 q 310 -12 443 -12 q 206 12 250 -12 q 133 81 162 37 q 89 189 103 126 q 74 326 74 251 m 195 334 q 203 231 195 277 q 229 154 212 186 q 272 106 246 123 q 334 89 298 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 299 593 q 195 334 195 461 z "},"\u0252":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 681 l 217 681 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"\u0253":{"ha":764,"x_min":109,"x_max":690,"o":"m 227 575 q 278 631 252 608 q 333 667 304 654 q 391 687 361 681 q 454 693 421 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 724 q 120 831 109 786 q 159 907 132 877 q 228 952 185 937 q 331 966 270 966 q 391 963 360 966 q 446 953 422 959 l 446 849 q 326 866 381 866 q 277 856 296 866 q 247 828 258 846 q 231 784 235 810 q 227 725 227 758 l 227 575 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 z "},"\u0254":{"ha":764,"x_min":126,"x_max":656,"o":"m 126 656 q 221 682 173 673 q 321 690 269 690 q 464 668 401 690 q 569 603 526 646 q 634 495 612 559 q 656 347 656 431 q 633 201 656 267 q 566 88 610 135 q 458 16 522 41 q 313 -9 394 -9 q 215 -2 260 -9 q 126 22 169 5 l 126 132 q 216 98 171 109 q 311 87 262 87 q 401 105 360 87 q 472 155 442 122 q 517 234 501 187 q 533 340 533 281 q 473 525 533 463 q 307 586 413 586 q 126 543 210 586 l 126 656 z "},"\u0255":{"ha":764,"x_min":107,"x_max":705,"o":"m 380 98 q 400 154 385 124 q 440 210 416 184 q 498 252 465 235 q 574 269 532 269 q 627 262 604 269 q 668 241 651 256 q 695 205 686 227 q 705 153 705 183 q 689 91 705 120 q 644 40 674 62 q 566 4 613 18 q 456 -9 519 -9 q 455 -32 456 -18 q 455 -60 455 -45 q 454 -86 454 -74 q 454 -103 454 -98 l 362 -103 q 362 -82 362 -95 q 363 -56 362 -70 q 364 -28 363 -42 q 366 -5 364 -15 q 172 102 237 17 q 107 334 107 186 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 269 180 231 238 q 380 98 307 122 m 471 88 q 521 92 496 88 q 565 104 546 96 q 596 123 585 112 q 608 151 608 135 q 601 172 608 161 q 572 183 593 183 q 510 158 537 183 q 471 88 483 133 z "},"\u0256":{"ha":764,"x_min":74,"x_max":836,"o":"m 542 129 q 435 22 492 57 q 310 -12 378 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 533 672 473 689 l 533 958 l 652 958 l 652 -36 q 657 -102 652 -73 q 680 -151 663 -132 q 710 -170 692 -163 q 753 -177 728 -177 q 798 -175 775 -177 q 836 -170 820 -173 l 836 -273 q 787 -280 815 -277 q 734 -282 758 -282 q 650 -269 685 -282 q 591 -231 614 -256 q 553 -163 565 -203 q 541 -73 541 -123 l 542 129 m 195 334 q 231 149 195 210 q 334 89 267 89 q 533 248 422 89 l 533 564 q 469 584 504 577 q 399 591 433 591 q 313 576 351 591 q 249 529 275 561 q 209 449 222 497 q 195 334 195 400 z "},"\u0257":{"ha":764,"x_min":74,"x_max":820,"o":"m 195 334 q 231 149 195 210 q 334 89 267 89 q 533 248 422 89 l 533 564 q 469 584 504 577 q 399 591 433 591 q 313 576 351 591 q 249 529 275 561 q 209 449 222 497 q 195 334 195 400 m 533 724 q 546 831 533 786 q 585 907 558 877 q 656 952 612 937 q 760 966 699 966 q 820 962 790 966 l 820 861 q 784 865 802 864 q 751 866 767 866 q 703 856 722 866 q 672 828 684 846 q 656 784 661 810 q 652 725 652 758 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 378 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 533 672 473 689 l 533 724 z "},"\u0258":{"ha":764,"x_min":80,"x_max":684,"o":"m 80 376 q 99 508 80 449 q 156 607 119 566 q 249 671 194 648 q 375 693 304 693 q 506 665 448 693 q 603 588 564 636 q 664 475 643 539 q 684 339 684 411 q 665 191 684 256 q 605 80 646 125 q 502 12 565 35 q 351 -12 439 -12 q 225 -4 286 -12 q 117 18 165 5 l 117 115 q 217 95 160 103 q 334 86 274 86 q 502 142 445 86 q 559 302 559 197 l 83 302 q 81 334 81 317 q 80 376 80 351 m 559 393 q 542 477 555 439 q 504 542 528 515 q 449 584 481 569 q 378 599 417 599 q 300 584 334 599 q 243 541 266 568 q 210 476 220 514 q 201 393 199 439 l 559 393 z "},"\u0259":{"ha":764,"x_min":80,"x_max":684,"o":"m 80 304 q 81 347 80 330 q 83 378 81 363 l 561 378 q 503 537 561 484 q 334 591 445 591 q 217 583 274 591 q 117 562 160 574 l 117 663 q 225 685 165 676 q 351 693 286 693 q 502 669 439 693 q 605 601 565 646 q 665 490 646 555 q 684 342 684 425 q 664 206 684 270 q 605 93 644 142 q 509 16 566 45 q 378 -12 452 -12 q 252 10 307 -12 q 158 74 196 33 q 100 173 120 115 q 80 304 80 232 m 203 288 q 212 204 201 242 q 245 138 222 165 q 302 94 268 110 q 380 79 336 79 q 451 94 419 79 q 506 137 483 110 q 544 203 530 165 q 561 288 557 241 l 203 288 z "},"\u025a":{"ha":764,"x_min":44,"x_max":764,"o":"m 641 477 l 656 424 q 676 376 665 393 q 713 358 688 358 q 739 361 726 358 q 764 370 753 364 l 764 290 q 732 281 748 284 q 699 278 716 278 q 640 296 662 278 q 604 345 618 315 l 592 370 l 542 359 l 542 342 q 530 206 542 270 q 490 93 519 142 q 414 16 462 45 q 292 -12 366 -12 q 197 5 242 -12 q 118 59 153 23 q 64 149 84 94 q 44 277 44 203 q 45 299 44 288 q 47 326 45 311 l 416 419 q 398 488 410 456 q 364 543 385 519 q 312 578 342 566 q 238 591 281 591 q 194 590 214 591 q 154 585 174 588 q 116 577 135 582 q 75 567 96 573 l 75 667 q 119 679 99 674 q 158 687 138 684 q 200 692 178 690 q 251 693 222 693 q 362 676 314 693 q 445 628 410 659 q 501 551 479 596 q 533 450 523 506 l 641 477 m 157 260 q 170 192 160 224 q 197 134 180 159 q 238 94 214 109 q 294 79 262 79 q 357 95 333 79 q 396 143 382 111 q 415 221 410 175 q 420 328 420 268 l 157 260 z "},"\u025b":{"ha":764,"x_min":87,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 z "},"\u025c":{"ha":764,"x_min":90,"x_max":665,"o":"m 90 122 q 154 108 120 114 q 221 97 188 102 q 285 90 254 92 q 340 87 316 87 q 436 95 398 87 q 497 116 475 102 q 530 150 520 130 q 539 195 539 170 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 160 677 127 671 q 225 686 192 682 q 291 691 258 689 q 354 693 324 693 q 488 680 434 693 q 574 643 541 667 q 620 587 606 619 q 633 515 633 554 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 648 112 665 151 q 591 46 631 74 q 488 3 552 19 q 330 -12 423 -12 q 274 -11 304 -12 q 212 -6 244 -9 q 149 2 180 -3 q 90 12 117 6 l 90 122 z "},"\u025d":{"ha":764,"x_min":90,"x_max":764,"o":"m 90 122 q 200 97 150 106 q 300 87 251 87 q 396 95 357 87 q 457 116 434 102 q 489 150 479 130 q 498 195 498 170 q 490 240 498 220 q 459 275 481 260 q 399 298 437 290 q 302 306 361 306 l 176 306 l 176 397 l 302 397 q 386 404 353 397 q 438 424 419 411 q 464 455 457 437 q 471 497 471 473 q 462 538 471 520 q 434 569 454 556 q 382 588 414 581 q 301 595 349 595 q 252 593 275 595 q 205 587 229 591 q 157 578 182 584 q 100 566 131 572 l 100 665 q 153 676 127 671 q 205 685 179 682 q 257 691 231 689 q 313 693 283 693 q 447 680 393 693 q 533 643 500 667 q 579 587 566 619 q 593 515 593 554 q 591 492 593 503 q 587 470 590 481 l 647 486 l 661 442 q 669 416 665 428 q 680 395 673 404 q 694 381 686 387 q 713 376 702 376 q 739 379 726 376 q 764 388 753 382 l 764 308 q 732 299 748 302 q 699 296 716 296 q 643 315 663 296 q 608 363 623 333 l 597 389 l 454 361 q 522 343 490 355 q 575 310 553 330 q 611 260 598 289 q 625 195 625 232 q 607 112 625 151 q 551 46 590 74 q 447 3 511 19 q 289 -12 382 -12 q 192 -6 239 -12 q 90 12 144 0 l 90 122 z "},"\u025e":{"ha":764,"x_min":68,"x_max":695,"o":"m 411 -9 q 267 13 330 -9 q 159 78 203 35 q 92 185 115 121 q 68 334 68 250 q 94 480 68 414 q 164 593 119 546 q 273 665 210 640 q 412 690 336 690 q 520 680 472 690 q 602 646 568 669 q 654 586 636 623 q 673 496 673 549 q 664 453 673 474 q 641 415 656 433 q 605 383 626 397 q 558 360 583 369 q 610 342 585 355 q 654 311 635 330 q 684 264 673 292 q 695 201 695 237 q 675 112 695 151 q 618 46 655 73 q 528 5 581 19 q 411 -9 476 -9 m 417 90 q 486 96 455 90 q 537 117 516 102 q 570 154 559 131 q 582 210 582 177 q 571 258 582 239 q 540 288 559 277 q 494 303 521 298 q 437 307 467 307 l 364 307 l 364 396 l 435 396 q 484 400 460 396 q 526 415 507 404 q 555 446 544 427 q 566 497 566 466 q 526 567 566 545 q 414 590 486 590 q 329 573 369 590 q 258 523 288 555 q 210 444 227 490 q 192 338 192 397 q 251 152 192 214 q 417 90 311 90 z "},"\u025f":{"ha":764,"x_min":89,"x_max":739,"o":"m 237 397 l 450 397 l 450 583 l 117 583 l 117 681 l 570 681 l 570 397 l 739 397 l 739 298 l 570 298 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 298 l 237 298 l 237 397 z "},"\u0260":{"ha":764,"x_min":74,"x_max":820,"o":"m 819 861 q 784 865 802 864 q 751 866 767 866 q 703 856 722 866 q 672 828 684 846 q 656 784 661 810 q 652 725 652 758 l 652 -61 q 581 -228 652 -169 q 368 -286 511 -286 q 240 -280 298 -286 q 127 -260 182 -274 l 127 -149 q 245 -174 186 -165 q 363 -183 304 -183 q 446 -174 413 -183 q 498 -148 479 -165 q 525 -102 517 -130 q 533 -35 533 -74 l 533 29 l 539 134 q 310 -3 443 -3 q 206 20 250 -3 q 133 86 162 43 q 89 190 103 129 q 74 326 74 251 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 471 684 439 689 q 538 669 503 680 l 538 724 q 550 831 538 786 q 588 907 562 877 q 657 952 614 937 q 760 966 699 966 q 820 962 790 966 l 819 861 m 195 334 q 229 159 195 219 q 334 98 262 98 q 533 257 422 98 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 298 593 q 195 334 195 462 z "},"\u0261":{"ha":764,"x_min":74,"x_max":652,"o":"m 533 29 l 539 134 q 310 -3 443 -3 q 206 20 250 -3 q 133 86 162 43 q 89 190 103 129 q 74 326 74 251 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 475 684 441 689 q 547 667 509 678 l 652 693 l 652 -61 q 581 -228 652 -169 q 368 -286 511 -286 q 240 -280 298 -286 q 127 -260 182 -274 l 127 -149 q 245 -174 186 -165 q 363 -183 304 -183 q 446 -174 413 -183 q 498 -148 479 -165 q 525 -102 517 -130 q 533 -35 533 -74 l 533 29 m 195 334 q 229 159 195 219 q 334 98 262 98 q 533 257 422 98 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 298 593 q 195 334 195 462 z "},"\u0262":{"ha":764,"x_min":107,"x_max":650,"o":"m 650 31 q 548 1 603 12 q 435 -9 493 -9 q 296 13 357 -9 q 193 78 235 35 q 129 185 151 121 q 107 334 107 250 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 246 230 231 276 q 290 152 261 183 q 358 105 318 121 q 448 90 398 90 q 498 93 476 90 q 539 104 519 97 l 539 277 l 388 277 l 388 370 l 650 370 l 650 31 z "},"\u0263":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 386 177 l 585 681 l 714 681 l 452 61 q 485 6 469 33 q 513 -47 500 -22 q 532 -97 525 -73 q 539 -140 539 -120 q 531 -194 539 -168 q 504 -238 522 -219 q 455 -269 485 -258 q 385 -281 426 -281 q 314 -270 343 -281 q 266 -240 284 -259 q 238 -196 247 -222 q 229 -142 229 -171 q 236 -97 229 -120 q 254 -49 243 -74 q 282 3 266 -24 q 317 61 298 31 l 45 681 m 385 -23 q 363 -57 372 -40 q 349 -90 355 -74 q 340 -118 343 -105 q 337 -139 337 -131 q 350 -178 337 -163 q 385 -194 362 -194 q 419 -179 408 -194 q 430 -139 430 -163 q 427 -115 430 -129 q 417 -85 423 -101 q 403 -54 411 -70 q 385 -23 395 -38 z "},"\u0264":{"ha":764,"x_min":82,"x_max":690,"o":"m 385 227 q 349 170 361 193 q 337 131 337 147 q 350 92 337 107 q 385 76 362 76 q 419 91 408 76 q 430 131 430 106 q 417 174 430 151 q 385 227 404 197 m 176 543 q 117 578 155 578 q 82 573 100 578 l 82 678 q 139 682 115 682 q 175 679 159 682 q 205 667 191 675 q 231 646 218 659 q 254 614 243 633 l 355 444 q 370 417 361 435 q 386 381 378 399 q 402 417 393 399 q 417 446 411 435 l 517 614 q 541 646 529 633 q 567 667 553 659 q 597 679 581 675 q 633 682 613 682 q 690 678 657 682 l 690 573 q 655 578 671 578 q 620 570 635 578 q 593 544 605 562 l 450 304 q 483 256 467 279 q 510 211 498 233 q 529 170 522 190 q 536 130 536 150 q 528 76 536 102 q 502 32 519 51 q 455 1 484 12 q 385 -11 426 -11 q 314 0 343 -11 q 267 30 286 11 q 241 74 249 48 q 233 128 233 99 q 239 172 233 150 q 258 215 246 193 q 286 259 270 237 q 319 304 302 281 l 176 543 z "},"\u0265":{"ha":764,"x_min":109,"x_max":656,"o":"m 109 681 l 227 681 l 227 246 q 256 128 227 167 q 340 90 286 90 q 385 96 364 90 q 428 118 406 102 q 477 161 450 134 q 538 229 503 189 l 538 681 l 656 681 l 656 -278 l 538 -278 l 538 0 l 542 107 q 487 51 514 74 q 434 14 460 28 q 379 -6 407 0 q 321 -12 351 -12 q 164 50 220 -12 q 109 237 109 112 l 109 681 z "},"\u0266":{"ha":764,"x_min":109,"x_max":656,"o":"m 227 725 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 514 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 724 q 120 831 109 786 q 159 907 132 877 q 228 952 185 937 q 331 966 270 966 q 391 963 360 966 q 446 953 422 959 l 446 849 q 326 866 381 866 q 277 856 296 866 q 247 828 258 846 q 231 784 235 810 q 227 725 227 758 z "},"\u0267":{"ha":764,"x_min":109,"x_max":656,"o":"m 227 725 l 227 681 l 222 574 q 277 630 250 607 q 331 667 304 652 q 385 687 357 681 q 443 693 413 693 q 600 631 545 693 q 656 444 656 569 l 656 -97 q 612 -234 656 -186 q 478 -281 568 -281 q 449 -279 465 -281 q 418 -276 433 -278 q 390 -272 403 -274 q 370 -269 377 -270 l 370 -170 q 412 -181 387 -176 q 463 -186 436 -186 q 493 -181 479 -186 q 517 -164 507 -176 q 532 -133 527 -153 q 538 -84 538 -113 l 538 435 q 508 553 538 514 q 424 591 479 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 227 452 261 492 l 227 0 l 109 0 l 109 724 q 120 831 109 786 q 159 907 132 877 q 228 952 185 937 q 331 966 270 966 q 391 963 360 966 q 446 953 422 959 l 446 849 q 326 866 381 866 q 277 856 296 866 q 247 828 258 846 q 231 784 235 810 q 227 725 227 758 z "},"\u0268":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 m 180 397 l 620 397 l 620 298 l 180 298 l 180 397 z "},"\u0269":{"ha":764,"x_min":93,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 z "},"\u026a":{"ha":764,"x_min":123,"x_max":640,"o":"m 321 579 l 123 579 l 123 681 l 640 681 l 640 579 l 443 579 l 443 103 l 640 103 l 640 0 l 123 0 l 123 103 l 321 103 l 321 579 z "},"\u026b":{"ha":764,"x_min":16,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 152 427 q 218 500 181 475 q 302 525 255 525 q 368 513 341 525 q 416 488 395 502 q 456 463 437 475 q 498 452 475 452 q 546 470 525 452 q 585 518 566 489 l 644 460 q 577 386 614 411 q 494 361 541 361 q 427 373 454 361 q 379 398 400 384 q 339 423 358 412 q 298 435 321 435 q 250 416 270 435 q 210 368 229 397 l 152 427 m 16 248 z "},"\u026c":{"ha":764,"x_min":26,"x_max":663,"o":"m 655 463 l 655 376 l 460 376 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 376 l 164 376 q 112 381 137 376 q 68 400 87 387 q 38 436 50 414 q 26 492 26 458 q 38 547 26 526 q 67 582 50 569 q 103 600 84 595 q 138 604 123 604 q 208 589 177 604 q 262 553 238 574 q 306 508 287 532 q 340 467 325 484 l 340 861 l 139 861 l 139 958 l 460 958 l 460 463 l 655 463 m 148 532 q 118 523 128 532 q 107 496 107 513 q 119 471 107 478 q 151 463 130 463 l 255 463 q 233 486 245 474 q 207 508 221 498 q 178 525 193 518 q 148 532 163 532 z "},"\u026d":{"ha":764,"x_min":139,"x_max":667,"o":"m 460 958 l 460 -36 q 464 -97 460 -68 q 483 -146 467 -126 q 513 -169 494 -160 q 562 -177 531 -177 q 623 -174 594 -177 q 667 -168 651 -170 l 667 -271 q 641 -275 656 -273 q 608 -278 625 -277 q 574 -281 591 -280 q 546 -282 558 -282 q 466 -272 499 -282 q 409 -246 433 -262 q 355 -178 370 -220 q 340 -73 340 -136 l 340 861 l 139 861 l 139 958 l 460 958 z "},"\u026e":{"ha":764,"x_min":-1,"x_max":727,"o":"m 727 62 q 709 -47 727 4 q 651 -137 690 -98 q 552 -197 612 -175 q 406 -219 491 -219 q 359 -218 380 -219 q 319 -216 338 -217 q 284 -212 301 -214 q 249 -207 267 -210 l 249 -103 q 330 -115 291 -111 q 417 -119 368 -119 q 501 -106 466 -119 q 559 -72 536 -94 q 593 -17 582 -49 q 604 56 604 16 q 550 186 604 138 q 391 234 497 234 l 370 234 l 370 315 l 550 581 l 290 581 l 290 0 l 171 0 l 171 861 l -1 861 l -1 958 l 290 958 l 290 680 l 687 680 l 687 581 l 495 315 q 545 301 518 310 q 597 279 571 293 q 646 247 623 266 q 688 201 670 228 q 716 140 705 175 q 727 62 727 106 z "},"\u026f":{"ha":764,"x_min":61,"x_max":703,"o":"m 170 681 l 170 192 q 172 140 170 160 q 179 107 174 119 q 192 91 184 96 q 212 86 200 86 q 236 94 224 86 q 261 121 248 102 q 291 169 275 139 q 328 243 307 199 l 328 681 l 436 681 l 436 205 q 438 144 436 168 q 446 109 441 121 q 459 91 451 96 q 479 86 467 86 q 502 93 491 86 q 526 117 513 100 q 555 165 539 135 q 594 243 572 196 l 594 681 l 703 681 l 703 0 l 612 0 l 607 130 q 573 64 589 91 q 538 20 556 37 q 501 -4 521 3 q 456 -12 481 -12 q 373 23 401 -12 q 345 135 345 59 q 313 72 328 100 q 279 26 297 45 q 239 -2 261 7 q 189 -12 218 -12 q 61 185 61 -12 l 61 681 l 170 681 z "},"\u0270":{"ha":764,"x_min":61,"x_max":703,"o":"m 170 681 l 170 192 q 172 140 170 160 q 179 107 174 119 q 192 91 184 96 q 212 86 200 86 q 236 94 224 86 q 261 121 248 102 q 291 169 275 139 q 328 243 307 199 l 328 681 l 436 681 l 436 205 q 438 144 436 168 q 446 109 441 121 q 459 91 451 96 q 479 86 467 86 q 502 93 491 86 q 526 117 513 100 q 555 165 539 135 q 594 243 572 196 l 594 681 l 703 681 l 703 -278 l 597 -278 l 597 -20 q 598 14 597 -5 q 600 55 599 34 q 603 95 602 75 q 607 130 605 114 l 604 130 q 572 66 587 93 q 540 22 557 39 q 503 -4 523 5 q 456 -12 483 -12 q 373 23 401 -12 q 345 135 345 59 q 313 72 328 100 q 279 26 297 45 q 239 -2 261 7 q 189 -12 218 -12 q 61 185 61 -12 l 61 681 l 170 681 z "},"\u0271":{"ha":764,"x_min":61,"x_max":703,"o":"m 703 -38 q 695 -135 703 -90 q 668 -213 688 -180 q 611 -264 648 -245 q 514 -283 574 -283 q 462 -281 488 -283 q 419 -275 437 -279 l 419 -168 q 467 -178 448 -176 q 504 -180 486 -180 q 544 -173 527 -180 q 572 -146 561 -165 q 589 -96 583 -127 q 594 -18 594 -65 l 594 489 q 592 541 594 520 q 584 573 589 562 q 571 590 579 585 q 552 595 563 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 622 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 -38 z "},"\u0272":{"ha":764,"x_min":-47,"x_max":656,"o":"m 226 -38 q 217 -135 226 -90 q 187 -213 209 -180 q 127 -264 165 -245 q 30 -283 90 -283 q -14 -282 6 -283 q -47 -277 -35 -280 l -47 -170 q -13 -178 -31 -176 q 20 -180 5 -180 q 59 -173 43 -180 q 87 -146 76 -165 q 103 -96 98 -127 q 109 -18 109 -65 l 109 681 l 214 681 l 218 571 q 276 630 248 606 q 330 667 303 653 q 385 687 357 682 q 443 693 413 693 q 602 631 549 693 q 656 444 656 570 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 479 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 226 -38 z "},"\u0273":{"ha":764,"x_min":109,"x_max":812,"o":"m 538 435 q 508 553 538 515 q 419 591 479 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 l 214 681 l 218 571 q 276 630 248 606 q 330 667 303 653 q 385 687 357 682 q 443 693 413 693 q 602 631 549 693 q 656 444 656 570 l 656 -24 q 661 -102 656 -72 q 677 -150 667 -132 q 705 -174 688 -167 q 745 -180 722 -180 q 777 -178 760 -180 q 812 -170 795 -176 l 812 -277 q 779 -282 799 -280 q 734 -283 758 -283 q 637 -266 675 -283 q 577 -216 599 -248 q 546 -141 555 -184 q 538 -45 538 -97 l 538 435 z "},"\u0274":{"ha":764,"x_min":109,"x_max":656,"o":"m 220 681 l 545 187 l 545 681 l 656 681 l 656 0 l 547 0 l 220 481 l 220 0 l 109 0 l 109 681 l 220 681 z "},"\u0275":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 451 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 382 87 q 464 104 429 87 q 523 149 499 121 q 561 216 547 178 q 578 298 574 254 l 184 298 q 245 140 194 193 q 382 87 297 87 m 382 593 q 302 577 336 593 q 244 535 269 562 q 206 473 220 509 q 186 397 192 437 l 577 397 q 514 544 566 494 q 382 593 462 593 z "},"\u0276":{"ha":764,"x_min":62,"x_max":702,"o":"m 702 582 l 494 582 l 494 408 l 702 408 l 702 309 l 494 309 l 494 99 l 702 99 l 702 0 l 341 0 q 129 83 195 0 q 62 336 62 167 q 79 479 62 416 q 132 588 96 543 q 223 657 168 633 q 355 681 278 681 l 702 681 l 702 582 m 348 581 q 263 562 295 581 q 213 511 231 543 q 189 434 195 478 q 183 340 183 391 q 192 232 183 277 q 220 156 200 186 q 271 113 239 127 q 348 99 302 99 q 364 99 356 99 q 380 100 372 99 l 380 579 q 348 581 364 581 z "},"\u0277":{"ha":764,"x_min":45,"x_max":715,"o":"m 380 91 q 366 53 374 71 q 344 21 358 35 q 308 1 330 8 q 252 -7 286 -7 q 99 77 153 -7 q 45 321 45 160 q 66 470 45 402 q 128 588 87 538 q 232 665 170 637 q 379 692 295 692 q 528 665 465 692 q 632 588 591 637 q 695 470 674 538 q 715 321 715 402 q 662 77 715 160 q 509 -7 608 -7 q 453 1 475 -7 q 417 21 431 8 q 395 53 403 35 q 380 91 387 71 m 433 309 l 433 246 q 435 187 433 216 q 444 136 437 158 q 464 101 451 114 q 499 87 477 87 q 548 106 530 87 q 576 157 567 125 q 589 231 586 189 q 592 322 592 274 q 582 424 592 375 q 549 511 572 473 q 484 570 525 548 q 382 593 444 593 q 278 570 319 593 q 213 511 237 548 q 179 424 189 473 q 169 322 169 375 q 172 231 169 274 q 184 157 175 189 q 213 106 194 125 q 262 87 231 87 q 297 101 283 87 q 317 136 310 114 q 326 187 323 158 q 328 246 328 216 l 328 309 l 433 309 z "},"\u0278":{"ha":764,"x_min":28,"x_max":737,"o":"m 437 -278 l 326 -278 l 326 -9 q 101 91 174 1 q 28 338 28 181 q 51 486 28 423 q 115 592 75 549 q 210 660 155 635 q 326 692 264 684 l 326 958 l 437 958 l 437 692 q 570 661 513 686 q 663 591 626 635 q 719 486 701 547 q 737 346 737 424 q 714 196 737 260 q 650 90 690 133 q 554 22 609 46 q 437 -9 500 -2 l 437 -278 m 326 595 q 245 566 279 588 q 189 510 212 543 q 156 433 167 476 q 146 343 146 391 q 156 246 146 290 q 188 169 166 201 q 244 115 210 136 q 326 87 278 94 l 326 595 m 437 87 q 518 116 484 94 q 575 172 553 138 q 608 248 597 205 q 619 339 619 291 q 609 436 619 392 q 577 513 599 480 q 520 568 555 547 q 437 595 486 589 l 437 87 z "},"\u0279":{"ha":764,"x_min":64,"x_max":627,"o":"m 627 0 l 519 0 l 516 125 q 397 20 456 53 q 279 -12 338 -12 q 118 56 172 -12 q 68 260 64 124 l 187 260 q 213 130 185 170 q 296 90 241 90 q 343 98 319 90 q 393 125 368 106 q 447 173 419 144 q 508 243 475 202 l 508 681 l 627 681 l 627 0 z "},"\u027a":{"ha":764,"x_min":64,"x_max":627,"o":"m 627 0 l 519 0 l 516 125 q 397 20 456 53 q 279 -12 338 -12 q 118 56 172 -12 q 68 260 64 124 l 187 260 q 213 130 185 170 q 296 90 241 90 q 343 98 319 90 q 393 125 368 106 q 447 173 419 144 q 508 243 475 202 l 508 958 l 627 958 l 627 0 z "},"\u027b":{"ha":764,"x_min":64,"x_max":783,"o":"m 510 119 q 451 58 479 83 q 394 17 422 33 q 337 -5 366 1 q 279 -12 309 -12 q 118 56 172 -12 q 68 260 64 124 l 187 260 q 213 130 185 170 q 296 90 241 90 q 343 98 319 90 q 393 125 368 106 q 447 173 419 144 q 508 243 475 202 l 508 681 l 627 681 l 627 -24 q 632 -102 627 -72 q 648 -150 637 -132 q 676 -174 659 -167 q 715 -180 692 -180 q 748 -178 730 -180 q 783 -170 766 -176 l 783 -277 q 749 -282 770 -280 q 705 -283 729 -283 q 608 -266 646 -283 q 549 -216 570 -248 q 519 -141 527 -184 q 511 -45 511 -97 l 510 119 z "},"\u027c":{"ha":764,"x_min":136,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 646 625 591 693 q 696 421 700 557 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 370 556 396 574 q 316 508 345 537 q 256 437 288 479 l 256 -278 l 136 -278 l 136 681 z "},"\u027d":{"ha":764,"x_min":136,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 646 625 591 693 q 696 421 700 557 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 370 556 396 574 q 316 508 345 537 q 256 437 288 479 l 256 -24 q 262 -102 256 -72 q 281 -150 269 -132 q 311 -174 293 -167 q 352 -180 329 -180 q 390 -178 367 -180 q 429 -170 412 -176 l 429 -277 q 412 -280 423 -279 q 388 -282 401 -281 q 363 -283 376 -283 q 342 -283 351 -283 q 240 -267 280 -283 q 177 -220 200 -250 q 145 -148 154 -191 q 136 -54 136 -106 l 136 681 z "},"\u027e":{"ha":764,"x_min":136,"x_max":698,"o":"m 136 429 q 149 527 136 485 q 182 597 161 568 q 232 645 203 627 q 291 674 260 664 q 355 689 322 685 q 417 693 387 693 q 528 678 477 693 q 618 631 580 663 q 677 551 656 600 q 696 435 698 502 l 574 435 q 565 510 575 479 q 535 558 555 540 q 486 584 515 576 q 417 591 456 591 q 352 584 381 591 q 301 557 322 576 q 268 504 279 537 q 256 417 256 470 l 256 0 l 136 0 l 136 429 z "},"\u027f":{"ha":764,"x_min":66,"x_max":627,"o":"m 627 0 l 508 0 l 508 417 q 496 504 508 470 q 463 557 484 537 q 412 584 441 576 q 347 591 382 591 q 278 584 308 591 q 228 558 248 576 q 198 510 208 540 q 189 435 188 479 l 68 435 q 87 551 66 502 q 146 631 108 600 q 235 678 184 663 q 347 693 287 693 q 409 689 377 693 q 473 674 441 685 q 532 645 504 664 q 581 597 560 627 q 615 527 602 568 q 627 429 627 485 l 627 0 z "},"\u0280":{"ha":764,"x_min":115,"x_max":686,"o":"m 686 0 l 549 0 l 458 168 q 423 216 441 199 q 385 243 405 234 q 342 255 365 252 q 293 257 319 257 l 236 257 l 236 0 l 115 0 l 115 681 l 353 681 q 486 669 430 681 q 577 633 541 658 q 629 571 612 609 q 646 481 646 534 q 634 409 646 440 q 601 356 623 378 q 547 317 579 333 q 471 291 514 302 q 506 274 490 285 q 537 246 522 262 q 568 207 553 229 q 600 154 583 184 l 686 0 m 519 471 q 508 528 519 507 q 475 561 497 549 q 422 576 454 572 q 350 579 391 579 l 236 579 l 236 354 l 334 354 q 411 359 376 354 q 469 376 445 363 q 506 412 493 389 q 519 471 519 435 z "},"\u0281":{"ha":764,"x_min":115,"x_max":686,"o":"m 600 527 q 568 474 583 497 q 537 435 553 452 q 506 407 522 418 q 471 390 490 396 q 547 363 514 379 q 601 325 579 348 q 634 272 623 302 q 646 199 646 241 q 629 110 646 147 q 577 47 612 72 q 486 12 541 23 q 353 0 430 0 l 115 0 l 115 681 l 236 681 l 236 424 l 293 424 q 342 426 319 424 q 385 438 365 429 q 423 465 405 447 q 458 513 441 482 l 549 681 l 686 681 l 600 527 m 519 207 q 506 267 519 243 q 469 302 493 290 q 411 319 445 315 q 334 324 376 324 l 236 324 l 236 99 l 350 99 q 422 102 391 99 q 475 117 454 106 q 508 150 497 129 q 519 207 519 171 z "},"\u0282":{"ha":764,"x_min":123,"x_max":648,"o":"m 648 186 q 621 95 648 132 q 553 33 595 57 q 462 -1 512 9 q 364 -12 412 -12 q 300 -11 330 -12 q 241 -7 270 -9 l 241 -24 q 247 -102 241 -72 q 263 -150 252 -132 q 291 -174 274 -167 q 330 -180 307 -180 q 363 -178 345 -180 q 397 -170 380 -176 l 397 -277 q 364 -282 385 -280 q 320 -283 344 -283 q 222 -266 260 -283 q 162 -216 184 -248 q 132 -141 140 -184 q 123 -45 123 -97 l 123 122 q 242 96 183 105 q 359 87 300 87 q 485 111 445 87 q 526 176 526 134 q 519 209 524 195 q 496 237 514 224 q 443 264 478 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 502 689 453 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 z "},"\u0283":{"ha":764,"x_min":83,"x_max":681,"o":"m 441 -31 q 381 -220 441 -155 q 199 -285 321 -285 q 138 -281 170 -285 q 83 -271 107 -277 l 83 -168 q 203 -184 149 -184 q 292 -146 262 -184 q 322 -43 322 -109 l 322 713 q 382 902 322 837 q 566 966 442 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 616 866 q 472 828 502 866 q 441 725 441 789 l 441 -31 z "},"\u0284":{"ha":764,"x_min":83,"x_max":681,"o":"m 164 98 l 322 98 l 322 713 q 382 902 322 837 q 566 966 442 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 616 866 q 472 828 502 866 q 441 725 441 789 l 441 98 l 604 98 l 604 0 l 441 0 l 441 -31 q 381 -220 441 -155 q 199 -285 321 -285 q 138 -281 170 -285 q 83 -271 107 -277 l 83 -168 q 203 -184 149 -184 q 292 -146 262 -184 q 322 -43 322 -109 l 322 0 l 164 0 l 164 98 z "},"\u0285":{"ha":764,"x_min":83,"x_max":681,"o":"m 323 725 q 293 828 323 789 q 203 866 262 866 q 83 849 149 866 l 83 953 q 139 963 108 959 q 199 966 170 966 q 382 902 322 966 q 442 713 442 837 l 442 -43 q 472 -146 442 -109 q 562 -184 502 -184 q 681 -168 614 -184 l 681 -271 q 626 -281 657 -277 q 566 -285 595 -285 q 383 -220 443 -285 q 323 -31 323 -155 l 323 725 z "},"\u0286":{"ha":764,"x_min":37,"x_max":681,"o":"m 441 725 l 441 11 q 440 -32 441 -12 q 435 -70 439 -52 q 426 -104 432 -87 q 409 -138 419 -121 q 425 -169 417 -152 q 437 -205 432 -186 q 445 -243 442 -224 q 448 -278 448 -262 l 355 -278 q 351 -245 355 -260 q 340 -220 346 -230 q 278 -262 314 -245 q 193 -280 241 -280 q 131 -270 159 -280 q 81 -240 102 -259 q 49 -194 60 -220 q 37 -134 37 -167 q 48 -75 37 -102 q 80 -30 60 -48 q 128 0 100 -11 q 189 10 156 10 q 256 0 222 10 q 318 -41 290 -11 q 320 -32 319 -36 q 321 -22 321 -27 q 322 -9 322 -16 q 322 11 322 -1 l 322 713 q 382 902 322 837 q 566 966 442 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 616 866 q 472 828 502 866 q 441 725 441 789 m 294 -134 q 253 -91 274 -107 q 199 -75 232 -75 q 150 -91 166 -75 q 134 -136 134 -106 q 153 -181 134 -165 q 198 -197 172 -197 q 232 -191 217 -197 q 258 -175 247 -184 q 279 -155 270 -166 q 294 -134 288 -144 z "},"\u0287":{"ha":764,"x_min":106,"x_max":721,"o":"m 106 879 q 189 893 147 889 q 276 898 231 898 q 468 840 405 898 q 530 662 530 783 l 530 307 l 721 307 l 721 208 l 530 208 l 530 0 l 412 0 l 412 208 l 106 208 l 106 307 l 412 307 l 412 652 q 373 762 412 726 q 258 798 334 798 q 188 793 226 798 q 106 777 149 788 l 106 879 z "},"\u0288":{"ha":764,"x_min":43,"x_max":657,"o":"m 657 -271 q 574 -286 616 -281 q 488 -290 532 -290 q 296 -233 359 -290 q 233 -54 233 -175 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 -45 q 390 -155 351 -119 q 505 -191 429 -191 q 576 -185 538 -191 q 657 -170 614 -180 l 657 -271 z "},"\u0289":{"ha":764,"x_min":0,"x_max":762,"o":"m 0 448 l 109 448 l 109 681 l 227 681 l 227 448 l 538 448 l 538 681 l 656 681 l 656 448 l 762 448 l 762 350 l 656 350 l 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 350 l 0 350 l 0 448 m 345 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 350 l 227 350 l 227 245 q 345 89 227 89 z "},"\u028a":{"ha":764,"x_min":50,"x_max":706,"o":"m 378 87 q 466 108 429 87 q 527 161 503 129 q 561 235 550 194 q 572 316 572 275 q 567 407 572 368 q 548 479 562 447 q 512 538 535 511 q 454 592 489 565 l 454 681 l 706 681 l 706 583 l 574 583 q 634 525 611 557 q 670 458 657 492 q 688 388 684 423 q 693 320 693 353 q 672 183 693 245 q 611 79 652 122 q 512 12 571 35 q 378 -12 454 -12 q 243 12 302 -12 q 144 79 184 35 q 83 183 104 122 q 62 320 62 245 q 67 388 62 353 q 85 458 72 423 q 121 525 98 492 q 181 583 144 557 l 50 583 l 50 681 l 302 681 l 302 592 q 243 538 267 565 q 207 479 220 511 q 189 407 194 447 q 184 316 184 368 q 195 235 184 275 q 229 161 205 194 q 289 108 252 129 q 378 87 326 87 z "},"\u028b":{"ha":764,"x_min":90,"x_max":663,"o":"m 404 685 q 432 687 419 686 q 453 688 444 688 q 555 674 514 688 q 619 629 595 660 q 653 547 643 597 q 663 425 663 497 q 661 326 663 377 q 651 227 659 275 q 624 135 642 178 q 574 59 606 92 q 493 7 542 26 q 372 -12 444 -12 q 263 3 315 -12 q 173 50 212 18 q 112 127 134 81 q 90 236 90 174 q 92 311 90 273 q 98 387 95 350 q 104 458 102 425 q 107 519 107 492 q 106 565 107 544 q 105 606 106 587 q 101 644 104 625 q 96 681 99 662 l 214 681 q 219 645 217 663 q 222 610 221 628 q 224 570 224 591 q 225 523 225 549 q 222 458 225 492 q 216 389 220 425 q 210 317 213 353 q 208 245 208 281 q 221 177 208 206 q 257 128 235 148 q 310 99 280 109 q 372 89 340 89 q 465 109 430 89 q 517 169 499 128 q 542 273 536 210 q 547 423 547 336 q 528 548 547 508 q 458 587 508 587 q 428 587 439 587 q 403 585 416 587 l 404 685 z "},"\u028c":{"ha":764,"x_min":45,"x_max":714,"o":"m 714 0 l 580 0 l 413 450 l 377 560 l 340 448 l 174 0 l 45 0 l 312 681 l 448 681 l 714 0 z "},"\u028d":{"ha":764,"x_min":25,"x_max":739,"o":"m 25 0 l 124 681 l 267 681 l 366 396 l 385 327 l 408 400 l 502 681 l 641 681 l 739 0 l 624 0 l 567 463 l 555 566 l 526 475 l 427 170 l 342 170 l 235 471 l 205 562 l 195 466 l 142 0 l 25 0 z "},"\u028e":{"ha":764,"x_min":40,"x_max":714,"o":"m 40 0 l 272 609 q 347 769 308 702 q 430 879 385 836 q 530 943 475 922 q 651 963 584 963 q 683 962 669 963 q 714 960 697 962 l 714 853 q 682 857 699 855 q 644 859 664 859 q 584 849 612 859 q 530 818 555 840 q 482 763 505 797 q 437 681 459 729 l 709 0 l 575 0 l 403 450 l 368 556 l 329 448 l 170 0 l 40 0 z "},"\u028f":{"ha":764,"x_min":47,"x_max":718,"o":"m 718 681 l 443 247 l 443 0 l 321 0 l 321 250 l 47 681 l 186 681 l 344 425 l 386 348 l 427 423 l 585 681 l 718 681 z "},"\u0290":{"ha":764,"x_min":111,"x_max":797,"o":"m 660 100 l 660 -74 q 665 -125 660 -106 q 678 -155 669 -144 q 699 -168 686 -165 q 726 -171 711 -171 q 763 -168 743 -171 q 797 -162 782 -165 l 797 -257 q 758 -261 781 -259 q 709 -262 734 -262 q 640 -254 670 -262 q 591 -223 610 -245 q 561 -162 571 -201 q 551 -62 551 -123 l 551 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 z "},"\u0291":{"ha":764,"x_min":111,"x_max":742,"o":"m 584 0 l 458 0 q 447 -42 451 -20 q 442 -92 443 -64 l 339 -92 q 345 -44 340 -67 q 357 0 350 -21 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 396 100 q 424 150 407 122 q 467 203 441 178 q 528 245 492 229 q 614 262 564 262 q 656 257 633 262 q 697 237 678 251 q 729 198 717 222 q 742 134 742 173 q 729 70 742 96 q 694 28 715 44 q 644 6 672 13 q 584 0 615 0 m 599 100 q 636 109 623 100 q 650 138 650 118 q 637 168 650 157 q 603 179 625 179 q 570 171 585 179 q 542 152 555 163 q 519 126 529 140 q 505 100 510 112 l 599 100 z "},"\u0292":{"ha":764,"x_min":127,"x_max":652,"o":"m 652 62 q 633 -47 652 4 q 571 -137 614 -98 q 457 -197 528 -175 q 284 -219 387 -219 q 237 -218 258 -219 q 197 -216 216 -217 q 162 -212 179 -214 q 127 -207 145 -210 l 127 -103 q 208 -115 169 -111 q 295 -119 246 -119 q 407 -106 361 -119 q 479 -72 452 -94 q 517 -17 506 -49 q 529 56 529 16 q 516 130 529 97 q 475 186 503 163 q 400 222 446 210 q 286 234 353 234 l 248 234 l 248 315 l 478 582 l 138 582 l 138 681 l 612 681 l 612 596 l 376 322 q 472 301 423 317 q 561 254 521 285 q 627 177 602 224 q 652 62 652 130 z "},"\u0293":{"ha":764,"x_min":79,"x_max":652,"o":"m 307 -219 q 210 -207 252 -219 q 138 -174 168 -195 q 94 -124 109 -153 q 79 -60 79 -95 q 91 3 79 -24 q 124 47 102 30 q 176 74 145 65 q 243 82 206 82 q 324 66 289 82 q 386 25 359 50 q 432 -30 413 1 q 464 -90 450 -61 q 514 -28 500 -66 q 529 56 529 10 q 516 130 529 97 q 475 186 503 163 q 400 222 446 210 q 286 234 353 234 l 248 234 l 248 315 l 478 582 l 138 582 l 138 681 l 612 681 l 612 596 l 376 322 q 472 301 423 317 q 561 254 521 285 q 627 177 602 224 q 652 62 652 130 q 645 -16 652 22 q 620 -86 637 -54 q 573 -145 602 -119 q 500 -189 543 -171 q 515 -278 509 -224 l 414 -278 q 407 -242 410 -258 q 399 -213 403 -227 q 307 -219 357 -219 m 297 -128 q 334 -127 317 -128 q 367 -123 351 -126 q 346 -77 357 -99 q 321 -39 335 -56 q 289 -14 307 -23 q 247 -4 271 -4 q 185 -58 185 -4 q 191 -83 185 -71 q 211 -105 197 -96 q 245 -122 224 -115 q 297 -128 267 -128 z "},"\u0294":{"ha":764,"x_min":197,"x_max":616,"o":"m 616 598 q 602 481 616 537 q 557 382 587 426 q 481 309 527 338 q 372 271 435 279 l 372 0 l 256 0 l 256 363 l 308 363 q 394 381 359 363 q 450 431 429 399 q 479 506 471 463 q 488 600 488 549 q 468 721 488 672 q 411 799 448 769 q 324 840 374 828 q 214 852 273 852 l 197 852 l 197 958 l 215 958 q 394 931 318 958 q 519 857 469 905 q 592 743 568 809 q 616 598 616 677 z "},"\u0295":{"ha":764,"x_min":197,"x_max":616,"o":"m 197 598 q 221 743 197 677 q 294 857 245 809 q 419 931 344 905 q 598 958 495 958 l 616 958 l 616 852 l 600 852 q 489 840 539 852 q 402 799 439 828 q 345 721 366 769 q 325 600 325 672 q 334 506 325 549 q 363 431 342 463 q 419 381 385 399 q 505 363 454 363 l 557 363 l 557 0 l 441 0 l 441 271 q 332 309 378 279 q 256 382 286 338 q 211 481 226 426 q 197 598 197 537 z "},"\u0296":{"ha":764,"x_min":197,"x_max":616,"o":"m 616 360 q 592 215 616 281 q 519 101 568 149 q 394 27 469 54 q 215 0 318 0 l 197 0 l 197 106 l 214 106 q 324 118 273 106 q 411 160 374 130 q 468 238 448 189 q 488 359 488 286 q 479 452 488 409 q 450 527 471 496 q 394 577 429 559 q 308 595 359 595 l 256 595 l 256 958 l 372 958 l 372 688 q 481 649 435 679 q 557 576 527 620 q 602 477 587 532 q 616 360 616 421 z "},"\u0297":{"ha":764,"x_min":107,"x_max":637,"o":"m 107 197 q 132 425 107 331 q 203 578 157 519 q 312 664 249 637 q 452 690 375 690 q 550 683 505 690 q 637 659 595 675 l 637 545 q 592 566 616 557 q 544 580 568 575 q 497 588 520 585 q 454 590 474 590 q 368 572 408 590 q 297 510 328 555 q 249 391 267 466 q 231 202 231 316 q 249 13 231 88 q 297 -106 267 -62 q 368 -169 328 -151 q 454 -186 408 -186 q 497 -184 474 -186 q 544 -177 520 -182 q 592 -163 568 -172 q 637 -142 616 -154 l 637 -255 q 550 -279 595 -272 q 452 -287 505 -287 q 312 -261 375 -287 q 203 -177 249 -235 q 132 -27 157 -119 q 107 197 107 65 z "},"\u0298":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 713 291 726 359 q 676 170 700 222 q 620 84 652 119 q 548 28 587 50 q 465 -3 509 6 q 375 -12 421 -12 q 229 13 292 -12 q 124 93 166 38 q 60 233 81 147 q 39 439 39 318 q 67 661 39 572 q 145 802 96 749 q 256 877 193 855 q 389 899 319 899 q 534 873 471 899 q 640 793 597 848 q 705 654 683 739 q 726 449 726 569 m 601 440 q 589 601 601 534 q 551 710 577 667 q 483 773 524 753 q 382 793 441 793 q 216 706 269 793 q 164 446 164 619 q 176 285 164 352 q 215 176 189 218 q 282 113 241 133 q 382 93 323 93 q 548 179 496 93 q 601 440 601 266 m 382 550 q 424 541 404 550 q 457 518 443 532 q 480 484 472 503 q 489 441 489 464 q 480 400 489 420 q 457 366 472 381 q 424 343 443 351 q 382 334 404 334 q 340 343 359 334 q 306 366 321 351 q 283 400 292 381 q 275 441 275 420 q 283 484 275 464 q 306 518 292 503 q 340 541 321 532 q 382 550 359 550 z "},"\u0299":{"ha":764,"x_min":116,"x_max":661,"o":"m 661 202 q 642 115 661 153 q 588 52 623 77 q 503 13 553 26 q 392 0 454 0 l 116 0 l 116 681 l 422 681 q 593 637 536 681 q 650 511 650 594 q 618 417 650 456 q 528 357 586 378 q 580 338 556 351 q 622 307 604 326 q 651 262 640 288 q 661 202 661 236 m 524 491 q 517 529 524 512 q 496 558 511 546 q 454 577 480 570 q 387 583 427 583 l 237 583 l 237 395 l 383 395 q 441 400 415 395 q 485 417 467 406 q 513 447 503 429 q 524 491 524 465 m 529 209 q 519 251 529 234 q 491 279 509 269 q 446 295 472 290 q 386 299 419 299 l 237 299 l 237 97 l 389 97 q 529 209 529 97 z "},"\u029a":{"ha":764,"x_min":68,"x_max":695,"o":"m 353 -9 q 235 5 288 -9 q 146 46 183 19 q 89 112 109 73 q 68 201 68 151 q 80 264 68 237 q 110 311 91 292 q 154 342 129 330 q 205 360 178 355 q 159 383 180 369 q 123 415 138 397 q 99 453 108 433 q 91 496 91 474 q 109 586 91 549 q 161 646 127 623 q 243 680 195 669 q 352 690 292 690 q 491 665 428 690 q 600 593 554 640 q 670 480 645 546 q 695 334 695 414 q 672 185 695 250 q 604 78 648 121 q 497 13 560 35 q 353 -9 433 -9 m 347 90 q 512 152 453 90 q 572 338 572 214 q 554 444 572 397 q 506 523 536 490 q 435 573 475 555 q 349 590 395 590 q 238 567 278 590 q 198 497 198 545 q 209 446 198 466 q 238 415 220 427 q 280 400 256 404 q 328 396 303 396 l 399 396 l 399 307 l 327 307 q 270 303 296 307 q 223 288 243 298 q 193 258 204 277 q 182 210 182 239 q 193 154 182 177 q 226 117 205 131 q 278 96 248 102 q 347 90 309 90 z "},"\u029b":{"ha":764,"x_min":107,"x_max":793,"o":"m 650 31 q 548 1 603 12 q 435 -9 493 -9 q 296 13 357 -9 q 193 78 235 35 q 129 185 151 121 q 107 334 107 250 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 487 689 468 690 q 524 686 506 688 q 536 769 526 732 q 569 834 547 807 q 627 877 591 862 q 716 892 663 892 q 760 891 740 892 q 793 886 781 889 l 793 779 q 759 787 777 785 q 726 789 741 789 q 687 783 703 789 q 659 759 670 776 q 643 711 648 741 q 637 633 637 681 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 246 230 231 276 q 290 152 261 183 q 358 105 318 121 q 448 90 398 90 q 498 93 476 90 q 539 104 519 97 l 539 277 l 388 277 l 388 370 l 650 370 l 650 31 z "},"\u029c":{"ha":764,"x_min":109,"x_max":656,"o":"m 226 0 l 109 0 l 109 681 l 226 681 l 226 404 l 538 404 l 538 681 l 656 681 l 656 0 l 538 0 l 538 305 l 226 305 l 226 0 z "},"\u029d":{"ha":764,"x_min":35,"x_max":591,"o":"m 498 966 q 535 959 518 966 q 565 939 552 952 q 584 909 577 926 q 591 873 591 892 q 584 837 591 854 q 565 808 577 821 q 535 788 552 795 q 498 781 518 781 q 462 788 479 781 q 432 808 445 795 q 413 837 420 821 q 406 873 406 854 q 413 909 406 892 q 432 939 420 926 q 462 959 445 952 q 498 966 479 966 m 570 42 q 566 -37 570 1 q 547 -107 561 -75 q 506 -165 532 -139 q 435 -209 479 -191 q 444 -242 440 -224 q 450 -278 448 -260 l 349 -278 q 345 -257 348 -269 q 338 -237 342 -245 q 258 -245 298 -245 q 172 -234 212 -245 q 101 -203 132 -224 q 53 -152 71 -182 q 35 -81 35 -121 q 76 23 35 -15 q 193 62 117 62 q 272 45 238 62 q 330 2 305 28 q 372 -56 355 -24 q 402 -117 389 -87 q 430 -88 420 -104 q 444 -52 439 -71 q 450 -9 449 -32 q 450 35 450 13 l 450 583 l 117 583 l 117 681 l 570 681 l 570 42 m 304 -147 q 288 -102 296 -124 q 266 -62 279 -79 q 237 -35 254 -45 q 196 -24 220 -24 q 151 -38 167 -24 q 134 -79 134 -52 q 144 -113 134 -98 q 171 -136 155 -127 q 208 -151 187 -146 q 250 -155 229 -155 q 304 -147 280 -155 z "},"\u029e":{"ha":764,"x_min":43,"x_max":640,"o":"m 43 681 l 205 681 l 522 316 l 522 681 l 640 681 l 640 -278 l 522 -278 l 522 311 l 216 0 l 60 0 l 380 314 l 43 681 z "},"\u029f":{"ha":764,"x_min":109,"x_max":572,"o":"m 109 0 l 109 681 l 226 681 l 226 98 l 572 98 l 572 0 l 109 0 z "},"\u02a0":{"ha":764,"x_min":74,"x_max":820,"o":"m 195 334 q 203 231 195 277 q 229 154 212 186 q 272 106 246 123 q 334 89 298 89 q 533 248 422 89 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 298 593 q 195 334 195 462 m 533 724 q 546 831 533 786 q 585 907 558 877 q 656 952 612 937 q 760 966 699 966 q 820 962 790 966 l 820 861 q 784 865 802 864 q 751 866 767 866 q 703 856 722 866 q 672 828 684 846 q 656 784 661 810 q 652 725 652 758 l 652 -278 l 533 -278 l 533 -21 l 539 125 q 310 -12 443 -12 q 206 12 250 -12 q 133 81 162 37 q 89 189 103 126 q 74 326 74 251 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 469 685 438 689 q 533 671 499 680 l 533 724 z "},"\u02a1":{"ha":764,"x_min":97,"x_max":616,"o":"m 616 598 q 602 481 616 537 q 557 382 587 426 q 481 309 527 338 q 372 271 435 279 l 372 0 l 256 0 l 256 363 l 308 363 q 394 381 359 363 q 450 431 429 399 q 479 506 471 463 q 488 600 488 549 q 468 721 488 672 q 411 799 448 769 q 324 840 374 828 q 214 852 273 852 l 197 852 l 197 958 l 215 958 q 394 931 318 958 q 519 857 469 905 q 592 743 568 809 q 616 598 616 677 m 97 218 l 537 218 l 537 119 l 97 119 l 97 218 z "},"\u02a2":{"ha":764,"x_min":197,"x_max":721,"o":"m 197 598 q 221 743 197 677 q 294 857 245 809 q 419 931 344 905 q 598 958 495 958 l 616 958 l 616 852 l 600 852 q 489 840 539 852 q 402 799 439 828 q 345 721 366 769 q 325 600 325 672 q 334 506 325 549 q 363 431 342 463 q 419 381 385 399 q 505 363 454 363 l 557 363 l 557 0 l 441 0 l 441 271 q 332 309 378 279 q 256 382 286 338 q 211 481 226 426 q 197 598 197 537 m 281 218 l 721 218 l 721 119 l 281 119 l 281 218 z "},"\u02a3":{"ha":764,"x_min":30,"x_max":739,"o":"m 30 326 q 40 480 30 413 q 73 594 50 548 q 136 665 97 641 q 234 689 176 689 q 272 687 252 689 q 302 683 292 686 l 302 958 l 415 958 l 415 681 l 730 681 l 730 586 l 522 102 l 739 102 l 739 0 l 323 0 l 315 44 q 294 20 308 30 q 265 4 281 10 q 234 -5 249 -2 q 209 -7 219 -7 q 122 16 157 -7 q 67 83 88 40 q 38 189 47 127 q 30 326 30 250 m 147 334 q 150 226 147 272 q 162 149 153 180 q 186 104 170 119 q 229 89 202 89 q 248 91 237 89 q 269 96 258 93 q 288 104 279 100 q 302 115 296 109 l 302 584 q 292 587 298 586 q 277 590 285 589 q 262 591 269 591 q 250 591 254 591 q 195 576 216 591 q 164 529 175 561 q 151 449 154 497 q 147 334 147 400 m 623 582 l 415 582 l 415 98 l 623 582 z "},"\u02a4":{"ha":764,"x_min":30,"x_max":730,"o":"m 730 62 q 717 -52 730 -1 q 675 -141 704 -104 q 601 -199 646 -178 q 492 -219 555 -219 q 437 -216 463 -219 q 391 -207 412 -212 l 391 -107 q 438 -119 415 -115 q 490 -123 462 -123 q 587 -77 559 -123 q 615 56 615 -31 q 583 186 615 139 q 492 234 551 234 l 471 234 l 471 315 l 623 582 l 415 582 l 415 0 l 323 0 l 315 44 q 294 20 308 30 q 265 4 281 10 q 234 -5 249 -2 q 209 -7 219 -7 q 122 16 157 -7 q 67 83 88 40 q 38 189 47 127 q 30 326 30 250 q 40 480 30 413 q 73 594 50 548 q 136 665 97 641 q 234 689 176 689 q 272 687 252 689 q 302 683 292 686 l 302 958 l 415 958 l 415 681 l 730 681 l 730 586 l 581 311 q 634 281 607 300 q 682 233 661 262 q 717 161 703 203 q 730 62 730 119 m 147 334 q 150 226 147 272 q 162 149 153 180 q 186 104 170 119 q 229 89 202 89 q 248 91 237 89 q 269 96 258 93 q 288 104 279 100 q 302 115 296 109 l 302 584 q 292 587 298 586 q 277 590 285 589 q 262 591 269 591 q 250 591 254 591 q 195 576 216 591 q 164 529 175 561 q 151 449 154 497 q 147 334 147 400 z "},"\u02a5":{"ha":764,"x_min":30,"x_max":778,"o":"m 323 0 l 315 44 q 294 20 308 30 q 265 4 281 10 q 234 -5 249 -2 q 209 -7 219 -7 q 122 16 157 -7 q 67 83 88 40 q 38 189 47 127 q 30 326 30 250 q 40 480 30 413 q 73 594 50 548 q 136 665 97 641 q 234 689 176 689 q 272 687 252 689 q 302 683 292 686 l 302 958 l 415 958 l 415 681 l 730 681 l 730 586 l 507 85 l 548 85 q 607 192 572 157 q 693 227 642 227 q 718 223 703 227 q 745 209 732 220 q 768 179 759 199 q 778 127 778 159 q 766 64 778 89 q 736 25 755 39 q 694 5 718 11 q 648 0 671 0 l 620 0 q 612 -90 612 -38 l 528 -90 q 531 -43 529 -66 q 537 0 534 -20 l 323 0 m 147 334 q 150 226 147 272 q 162 149 153 180 q 186 104 170 119 q 229 89 202 89 q 248 91 237 89 q 269 96 258 93 q 288 104 279 100 q 302 115 296 109 l 302 584 q 292 587 298 586 q 277 590 285 589 q 262 591 269 591 q 250 591 254 591 q 195 576 216 591 q 164 529 175 561 q 151 449 154 497 q 147 334 147 400 m 629 582 l 415 582 l 415 98 l 629 582 m 659 85 q 694 95 682 85 q 707 127 707 105 q 700 148 707 142 q 681 153 692 153 q 649 134 663 153 q 629 85 635 115 l 659 85 z "},"\u02a6":{"ha":764,"x_min":21,"x_max":711,"o":"m 711 191 q 694 102 711 139 q 648 43 677 66 q 577 10 618 20 q 489 0 536 0 l 357 0 q 184 60 245 0 q 123 233 123 121 l 123 582 l 21 582 l 21 681 l 123 681 l 123 868 l 241 899 l 241 681 l 465 681 q 504 690 482 686 q 551 693 525 693 q 586 692 571 693 q 616 688 602 690 q 646 682 630 686 q 682 675 661 679 l 682 570 q 645 582 661 577 q 616 590 630 587 q 589 594 603 593 q 557 595 575 595 q 494 574 515 595 q 473 516 473 553 q 481 477 473 494 q 505 444 490 460 q 538 415 519 429 q 577 387 557 401 q 625 351 602 370 q 668 309 649 332 q 700 257 688 286 q 711 191 711 229 m 241 243 q 280 138 241 170 q 395 106 319 106 l 477 106 q 562 124 534 106 q 589 185 589 142 q 581 223 589 206 q 557 255 572 240 q 524 284 543 271 q 484 313 505 298 q 437 347 460 329 q 396 389 414 366 q 366 440 378 412 q 355 507 355 469 q 357 543 355 523 q 366 582 359 562 l 241 582 l 241 243 z "},"\u02a7":{"ha":764,"x_min":21,"x_max":764,"o":"m 576 -31 q 564 -140 576 -93 q 526 -220 552 -188 q 457 -268 499 -252 q 353 -285 414 -285 q 293 -281 324 -285 q 238 -271 262 -277 l 238 -168 q 357 -184 304 -184 q 407 -175 387 -184 q 439 -146 427 -165 q 456 -101 451 -127 q 461 -43 461 -75 l 461 -3 q 429 -7 449 -5 q 385 -9 408 -9 q 193 48 256 -9 q 130 227 130 106 l 130 582 l 21 582 l 21 681 l 130 681 l 130 868 l 248 899 l 248 681 l 461 681 l 461 713 q 472 822 461 774 q 507 901 483 869 q 569 950 530 933 q 661 966 607 966 q 718 963 695 966 q 764 953 740 959 l 764 852 q 736 859 748 857 q 713 864 724 862 q 694 866 703 865 q 675 866 685 866 q 626 856 645 866 q 596 828 607 846 q 580 784 585 810 q 576 725 576 758 l 576 -31 m 248 236 q 287 126 248 162 q 402 90 326 90 q 429 92 413 90 q 461 99 446 94 l 461 582 l 248 582 l 248 236 z "},"\u02a8":{"ha":764,"x_min":21,"x_max":761,"o":"m 510 109 q 527 160 515 136 q 556 202 539 184 q 597 231 574 220 q 649 241 621 241 q 731 218 701 241 q 761 140 761 194 q 747 79 761 106 q 709 32 733 52 q 654 1 686 12 q 587 -9 623 -9 q 586 -32 586 -18 q 585 -60 585 -45 q 585 -86 585 -74 q 585 -103 585 -98 l 496 -103 q 496 -82 496 -95 q 497 -56 496 -70 q 497 -28 497 -42 q 498 -5 498 -15 q 467 6 481 -1 q 446 2 459 4 q 417 -3 433 -1 q 382 -8 401 -6 q 344 -9 363 -9 q 234 5 279 -9 q 161 48 189 19 q 119 122 132 78 q 106 227 106 166 l 106 582 l 21 582 l 21 681 l 106 681 l 106 868 l 224 899 l 224 681 l 536 681 q 598 689 565 689 q 651 685 624 689 q 707 671 678 682 l 707 558 q 651 581 677 576 q 596 585 625 585 q 535 569 560 585 q 494 520 510 552 q 471 442 478 488 q 463 337 463 396 q 464 268 463 300 q 469 206 465 235 q 483 153 474 178 q 510 109 492 129 m 345 333 q 360 474 345 412 q 406 582 376 536 l 224 582 l 224 236 q 231 172 224 199 q 255 127 237 145 q 304 100 273 109 q 387 92 336 92 q 354 201 364 138 q 345 333 345 263 m 588 77 q 652 89 629 77 q 675 137 675 101 q 668 157 675 148 q 647 165 661 165 q 610 143 623 165 q 588 77 596 121 z "},"\u02a9":{"ha":764,"x_min":9,"x_max":709,"o":"m 324 681 l 429 681 l 436 613 q 493 671 463 653 q 562 690 523 690 q 628 678 600 690 q 674 641 656 667 q 701 576 692 616 q 709 479 709 536 l 709 0 l 591 0 l 591 469 q 590 518 591 496 q 582 556 589 540 q 563 580 576 572 q 526 589 549 589 q 499 581 511 589 q 476 562 486 574 q 457 535 465 550 q 442 505 448 520 l 442 0 l 324 0 l 324 484 l 212 484 l 212 0 l 92 0 l 92 484 l 9 484 l 9 582 l 92 582 l 92 694 q 107 813 92 762 q 153 898 121 864 q 234 949 184 932 q 355 966 284 966 q 406 964 381 966 q 450 958 430 962 l 450 857 q 412 863 427 861 q 385 866 396 865 q 365 868 373 867 q 351 868 357 868 q 284 858 311 868 q 242 826 258 847 q 219 774 226 806 q 212 701 212 743 l 212 582 l 324 582 l 324 681 z "},"\u02aa":{"ha":764,"x_min":17,"x_max":725,"o":"m 137 861 l 17 861 l 17 958 l 256 958 l 256 185 q 368 98 256 98 l 491 98 q 603 185 603 98 q 594 223 603 206 q 571 255 585 240 q 537 284 556 271 q 498 313 518 298 q 451 347 474 329 q 410 389 428 366 q 380 440 391 412 q 368 507 368 469 q 385 597 368 561 q 429 654 401 633 q 492 684 456 675 q 564 693 527 693 q 600 692 585 693 q 629 688 615 690 q 659 682 644 686 q 695 675 675 679 l 695 570 q 659 582 674 577 q 630 590 644 587 q 603 594 616 593 q 570 595 589 595 q 508 574 529 595 q 486 516 486 553 q 495 477 486 494 q 518 444 504 460 q 551 415 532 429 q 591 387 570 401 q 639 351 615 370 q 682 309 663 332 q 713 257 701 286 q 725 191 725 229 q 708 102 725 139 q 661 43 691 66 q 591 10 631 20 q 503 0 550 0 l 357 0 q 269 10 309 0 q 199 43 229 20 q 154 102 170 66 q 137 191 137 139 l 137 861 z "},"\u02ab":{"ha":764,"x_min":37,"x_max":690,"o":"m 690 0 l 178 0 l 178 861 l 37 861 l 37 958 l 297 958 l 297 681 l 681 681 l 681 586 l 415 98 l 690 98 l 690 0 m 562 582 l 298 582 l 298 95 l 562 582 z "},"\u02ac":{"ha":764,"x_min":113,"x_max":650,"o":"m 650 886 l 603 487 l 482 487 l 378 720 l 277 487 l 161 487 l 113 886 l 202 886 l 235 549 l 340 810 l 420 810 l 535 549 l 565 886 l 650 886 m 650 399 l 603 0 l 482 0 l 378 233 l 277 0 l 161 0 l 113 399 l 202 399 l 235 62 l 340 323 l 420 323 l 535 62 l 565 399 l 650 399 z "},"\u02ad":{"ha":764,"x_min":113,"x_max":651,"o":"m 113 528 l 113 866 l 651 866 l 651 528 l 566 528 l 566 769 l 197 769 l 197 528 l 113 528 m 113 0 l 113 338 l 651 338 l 651 0 l 566 0 l 566 241 l 197 241 l 197 0 l 113 0 z "},"\u02ae":{"ha":764,"x_min":-43,"x_max":656,"o":"m -42 957 q 3 964 -20 961 q 55 966 27 966 q 141 950 108 966 q 194 906 175 935 q 219 837 212 877 q 227 748 227 797 l 227 246 q 256 128 227 167 q 340 90 286 90 q 385 96 364 90 q 428 118 406 102 q 477 161 450 134 q 538 229 503 189 l 538 681 l 656 681 l 656 -277 l 538 -277 l 538 0 l 542 107 q 487 51 514 74 q 434 14 460 28 q 379 -6 407 0 q 321 -12 351 -12 q 164 50 220 -12 q 109 237 109 112 l 109 758 q 106 798 109 779 q 97 832 104 817 q 76 857 90 848 q 38 866 62 866 q 1 864 19 866 q -43 854 -17 861 l -42 957 z "},"\u02af":{"ha":764,"x_min":-43,"x_max":812,"o":"m -42 957 q 3 964 -20 961 q 55 966 27 966 q 141 950 108 966 q 194 906 175 935 q 219 837 212 877 q 227 748 227 797 l 227 246 q 256 128 227 167 q 340 90 286 90 q 385 96 364 90 q 428 118 406 102 q 477 161 450 134 q 538 229 503 189 l 538 681 l 656 681 l 656 -24 q 661 -102 656 -72 q 677 -150 667 -132 q 705 -174 688 -167 q 745 -180 722 -180 q 777 -178 760 -180 q 812 -170 795 -176 l 812 -277 q 779 -282 799 -280 q 734 -283 758 -283 q 637 -266 675 -283 q 577 -216 599 -248 q 546 -141 555 -184 q 538 -45 538 -97 l 538 18 l 541 105 q 487 51 514 73 q 433 15 460 28 q 378 -6 406 1 q 321 -12 351 -12 q 164 50 220 -12 q 109 237 109 112 l 109 758 q 106 798 109 779 q 97 832 104 817 q 76 857 90 848 q 38 866 62 866 q 1 864 19 866 q -43 854 -17 861 l -42 957 z "},"\u1d00":{"ha":764,"x_min":37,"x_max":727,"o":"m 727 0 l 599 0 l 543 149 l 216 149 l 159 0 l 37 0 l 307 681 l 460 681 l 727 0 m 512 242 l 379 589 l 248 242 l 512 242 z "},"\u1d01":{"ha":764,"x_min":-7,"x_max":697,"o":"m 697 0 l 385 0 l 385 149 l 186 149 l 117 0 l -7 0 l 326 681 l 688 681 l 688 587 l 488 587 l 488 403 l 680 403 l 680 309 l 488 309 l 488 92 l 697 92 l 697 0 m 385 242 l 385 601 l 224 242 l 385 242 z "},"\u1d02":{"ha":764,"x_min":21,"x_max":737,"o":"m 528 -12 q 424 8 466 -12 q 365 70 382 28 q 303 10 341 32 q 216 -12 266 -12 q 126 9 163 -12 q 66 71 90 31 q 32 165 43 110 q 21 288 21 220 q 22 342 21 324 q 24 371 22 361 l 325 371 q 293 538 325 480 q 189 596 262 596 q 112 588 150 596 q 45 568 74 580 l 45 663 q 81 675 61 669 q 124 685 102 681 q 170 691 146 689 q 214 693 193 693 q 395 575 345 693 q 475 662 430 631 q 571 693 519 693 q 695 644 652 693 q 737 499 737 594 q 724 408 737 448 q 683 340 711 368 q 613 298 656 313 q 511 283 570 283 l 429 283 l 429 227 q 453 121 429 158 q 533 83 476 83 q 615 97 572 83 q 700 134 658 110 l 700 31 q 663 15 684 23 q 620 1 642 7 q 574 -8 597 -5 q 528 -12 550 -12 m 514 371 q 600 405 573 371 q 626 495 626 439 q 608 571 626 546 q 558 596 591 596 q 498 573 530 596 q 429 490 467 550 l 429 371 l 514 371 m 220 82 q 266 98 247 82 q 299 140 286 113 q 318 204 312 167 q 325 283 325 241 l 132 283 q 135 204 131 241 q 150 140 140 168 q 178 98 161 113 q 220 82 195 82 z "},"\u1d03":{"ha":764,"x_min":48,"x_max":682,"o":"m 682 202 q 663 115 682 153 q 609 52 644 77 q 524 13 574 26 q 413 0 475 0 l 137 0 l 137 302 l 48 302 l 48 395 l 137 395 l 137 681 l 444 681 q 614 637 557 681 q 671 511 671 594 q 639 417 671 456 q 549 357 607 378 q 601 338 577 351 q 643 307 625 326 q 672 262 661 288 q 682 202 682 236 m 550 209 q 512 281 550 260 q 407 302 474 302 l 258 302 l 258 97 l 410 97 q 550 209 550 97 m 545 491 q 538 529 545 512 q 517 558 532 546 q 475 577 501 570 q 408 583 448 583 l 258 583 l 258 395 l 404 395 q 462 400 436 395 q 506 417 488 406 q 534 447 524 429 q 545 491 545 465 z "},"\u1d04":{"ha":764,"x_min":85,"x_max":665,"o":"m 212 339 q 227 223 212 271 q 273 147 242 176 q 349 105 303 118 q 457 92 395 92 q 565 102 511 92 q 665 134 620 113 l 665 22 q 559 -4 616 5 q 446 -12 501 -12 q 173 74 261 -12 q 85 334 85 161 q 110 490 85 422 q 183 603 136 557 q 298 670 231 648 q 451 693 366 693 q 566 686 511 693 q 665 661 621 678 l 665 545 q 561 578 616 568 q 448 589 506 589 q 354 575 397 589 q 279 531 311 562 q 230 454 248 501 q 212 339 212 406 z "},"\u1d05":{"ha":764,"x_min":115,"x_max":699,"o":"m 326 0 l 115 0 l 115 681 l 342 681 q 502 661 435 681 q 613 600 569 641 q 678 495 656 558 q 699 347 699 432 q 677 189 699 254 q 610 81 656 123 q 494 20 565 39 q 326 0 424 0 m 572 346 q 562 448 572 404 q 524 522 551 492 q 447 566 496 551 q 321 581 398 581 l 236 581 l 236 98 l 322 98 q 440 112 392 98 q 517 155 488 125 q 559 232 547 185 q 572 346 572 279 z "},"\u1d06":{"ha":764,"x_min":49,"x_max":699,"o":"m 49 395 l 138 395 l 138 681 l 342 681 q 502 661 435 681 q 613 600 569 641 q 678 495 656 558 q 699 347 699 432 q 677 189 699 254 q 610 81 656 123 q 494 20 565 39 q 326 0 424 0 l 138 0 l 138 299 l 49 299 l 49 395 m 572 346 q 562 448 572 404 q 524 522 551 492 q 447 566 496 551 q 321 581 398 581 l 258 581 l 258 395 l 414 395 l 414 299 l 258 299 l 258 98 l 322 98 q 440 112 392 98 q 517 155 488 125 q 559 232 547 185 q 572 346 572 279 z "},"\u1d07":{"ha":764,"x_min":142,"x_max":634,"o":"m 634 0 l 142 0 l 142 681 l 634 681 l 634 583 l 262 583 l 262 396 l 600 396 l 600 302 l 262 302 l 262 97 l 634 97 l 634 0 z "},"\u1d08":{"ha":764,"x_min":111,"x_max":669,"o":"m 111 669 q 222 687 164 681 q 330 693 280 693 q 488 677 423 693 q 593 634 553 662 q 651 569 633 607 q 669 486 669 530 q 656 420 669 449 q 620 371 643 392 q 566 338 597 351 q 498 320 535 326 q 561 300 535 314 q 604 265 587 286 q 629 219 621 245 q 637 165 637 194 q 623 94 637 127 q 576 38 609 62 q 488 1 543 14 q 354 -12 434 -12 q 235 -4 294 -12 q 120 16 176 3 l 120 119 q 236 98 183 105 q 342 90 289 90 q 422 96 390 90 q 473 114 454 102 q 500 143 492 126 q 509 184 509 161 q 502 225 509 207 q 477 255 496 243 q 427 274 459 267 q 342 280 394 280 l 197 280 l 197 378 l 343 378 q 440 386 402 378 q 499 408 477 394 q 528 441 520 422 q 536 486 536 461 q 528 530 536 511 q 496 563 519 549 q 436 583 474 576 q 340 589 398 589 q 231 580 292 589 q 111 555 170 571 l 111 669 z "},"\u1d09":{"ha":764,"x_min":117,"x_max":663,"o":"m 439 98 l 640 98 l 640 0 l 319 0 l 319 583 l 117 583 l 117 681 l 663 681 l 663 583 l 439 583 l 439 98 m 397 -286 q 361 -278 378 -286 q 331 -258 344 -271 q 312 -229 319 -245 q 304 -193 304 -212 q 312 -157 304 -174 q 331 -127 319 -140 q 361 -107 344 -114 q 397 -100 378 -100 q 434 -107 417 -100 q 464 -127 451 -114 q 483 -157 476 -140 q 490 -193 490 -174 q 483 -229 490 -212 q 464 -258 476 -245 q 434 -278 451 -271 q 397 -286 417 -286 z "},"\u1d0a":{"ha":764,"x_min":168,"x_max":609,"o":"m 609 681 l 609 208 q 595 124 609 163 q 551 56 582 85 q 470 10 520 27 q 346 -7 419 -7 q 296 -5 321 -7 q 247 3 271 -2 q 203 15 224 8 q 168 31 182 22 l 168 140 q 253 103 207 117 q 347 90 300 90 q 452 122 415 90 q 488 224 488 154 l 488 583 l 178 583 l 178 681 l 609 681 z "},"\u1d0b":{"ha":764,"x_min":130,"x_max":707,"o":"m 707 0 l 545 0 l 248 365 l 248 0 l 130 0 l 130 681 l 248 681 l 248 370 l 534 681 l 690 681 l 391 367 l 707 0 z "},"\u1d0c":{"ha":764,"x_min":39,"x_max":632,"o":"m 288 97 l 632 97 l 632 0 l 170 0 l 170 262 l 39 191 l 39 305 l 170 376 l 170 681 l 288 681 l 288 433 l 513 555 l 513 441 l 288 319 l 288 97 z "},"\u1d0d":{"ha":764,"x_min":33,"x_max":730,"o":"m 730 0 l 614 0 l 596 425 l 589 576 l 549 471 l 421 161 l 335 161 l 212 458 l 170 576 l 164 416 l 146 0 l 33 0 l 77 681 l 233 681 l 350 387 l 382 300 l 414 387 l 533 681 l 688 681 l 730 0 z "},"\u1d0e":{"ha":764,"x_min":118,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 z "},"\u1d0f":{"ha":764,"x_min":49,"x_max":715,"o":"m 715 346 q 690 200 715 267 q 621 87 666 134 q 514 14 576 40 q 375 -12 451 -12 q 242 11 302 -12 q 139 77 182 33 q 72 186 96 121 q 49 336 49 252 q 73 481 49 416 q 142 594 98 547 q 250 667 187 641 q 389 693 312 693 q 522 670 462 693 q 625 604 582 648 q 691 495 668 560 q 715 346 715 430 m 594 340 q 578 450 594 404 q 534 528 562 497 q 466 575 505 559 q 382 591 427 591 q 289 570 329 591 q 223 516 250 550 q 183 436 196 481 q 170 340 170 391 q 185 231 170 277 q 230 153 201 184 q 297 106 258 121 q 382 91 336 91 q 474 111 435 91 q 541 165 514 131 q 581 244 568 199 q 594 340 594 290 z "},"\u1d10":{"ha":764,"x_min":85,"x_max":665,"o":"m 538 342 q 523 457 538 410 q 477 534 508 505 q 401 576 447 563 q 293 589 355 589 q 185 579 239 589 q 85 547 130 568 l 85 659 q 191 685 134 676 q 304 693 249 693 q 577 607 489 693 q 665 347 665 520 q 640 191 665 258 q 567 78 614 123 q 452 11 519 33 q 299 -12 384 -12 q 184 -5 239 -12 q 85 20 130 3 l 85 136 q 189 102 134 113 q 302 92 244 92 q 396 105 353 92 q 471 150 439 119 q 520 227 503 180 q 538 342 538 275 z "},"\u1d11":{"ha":764,"x_min":43,"x_max":721,"o":"m 376 670 q 519 646 456 670 q 628 576 583 621 q 697 469 673 532 q 721 330 721 406 q 700 198 721 257 q 638 99 680 140 q 533 36 596 58 q 386 14 471 14 q 243 37 307 14 q 135 102 180 60 q 67 206 91 145 q 43 344 43 267 q 63 477 43 417 q 125 580 83 537 q 229 647 167 623 q 376 670 292 670 m 382 549 q 274 533 319 549 q 201 489 229 517 q 159 421 172 460 q 145 337 145 382 q 163 246 145 284 q 214 183 182 208 q 289 147 245 159 q 382 135 332 135 q 490 149 445 135 q 563 190 534 163 q 605 254 591 216 q 618 337 618 291 q 600 430 618 390 q 550 496 582 469 q 476 536 519 523 q 382 549 433 549 z "},"\u1d12":{"ha":764,"x_min":43,"x_max":721,"o":"m 380 523 q 268 508 312 523 q 199 463 224 493 q 163 386 173 432 q 153 278 153 340 q 164 170 153 224 q 196 70 174 115 l 77 70 q 51 176 60 119 q 43 290 43 234 q 65 450 43 382 q 130 562 87 517 q 235 629 173 607 q 375 650 296 650 q 520 625 456 650 q 629 552 585 600 q 697 437 674 505 q 721 284 721 369 q 713 170 721 224 q 689 70 706 115 l 566 70 q 600 174 589 119 q 610 287 610 229 q 600 381 610 338 q 562 456 589 425 q 492 505 536 488 q 380 523 448 523 z "},"\u1d13":{"ha":764,"x_min":-24,"x_max":787,"o":"m -24 439 l -24 538 l 95 498 q 201 617 132 575 q 376 660 271 660 q 512 638 452 660 q 614 574 572 616 q 678 471 656 532 q 701 334 701 411 q 696 274 701 303 l 787 237 l 787 139 l 669 185 q 562 64 631 108 q 386 21 492 21 q 252 43 311 21 q 150 107 192 65 q 85 210 108 149 q 63 347 63 270 q 67 409 63 377 l -24 439 m 600 307 q 602 326 601 315 q 602 345 602 336 q 587 435 602 397 q 544 496 572 472 q 474 531 515 519 q 382 542 433 542 q 269 525 313 542 q 197 466 224 508 l 600 307 m 165 375 q 162 356 163 367 q 161 336 161 346 q 176 246 161 283 q 220 185 191 209 q 289 150 248 161 q 382 139 330 139 q 498 158 453 139 q 570 217 543 177 l 165 375 z "},"\u1d14":{"ha":764,"x_min":26,"x_max":739,"o":"m 378 574 q 441 662 402 631 q 532 693 480 693 q 624 673 585 693 q 688 611 663 654 q 727 503 714 569 q 739 346 739 437 q 726 197 739 263 q 685 84 712 131 q 618 13 659 38 q 523 -12 577 -12 q 434 16 470 -12 q 370 106 397 45 q 343 56 357 78 q 311 19 329 34 q 269 -4 292 3 q 216 -12 245 -12 q 136 9 171 -12 q 76 71 100 30 q 39 170 52 111 q 26 304 26 229 q 27 346 26 330 q 28 370 27 361 l 315 370 q 284 535 315 479 q 189 592 253 592 q 114 584 151 592 q 50 564 78 576 l 50 663 q 120 685 81 676 q 200 693 159 693 q 309 664 262 693 q 378 574 357 634 m 434 342 q 440 223 434 272 q 459 144 447 175 q 489 100 471 114 q 528 86 507 86 q 571 101 552 86 q 602 146 589 115 q 622 226 615 178 q 628 342 628 274 q 622 458 628 410 q 604 537 616 507 q 573 581 592 567 q 528 595 554 595 q 434 342 434 595 m 136 282 q 142 192 136 229 q 161 131 149 155 q 188 97 172 108 q 222 86 204 86 q 292 138 269 86 q 315 282 314 189 l 136 282 z "},"\u1d15":{"ha":764,"x_min":94,"x_max":669,"o":"m 382 -12 q 241 5 296 -12 q 153 51 185 22 q 107 118 120 79 q 94 200 94 157 q 107 277 94 243 q 143 337 120 311 q 199 382 167 363 q 271 414 232 401 q 208 446 235 430 q 161 482 180 462 q 132 529 142 503 q 122 591 122 555 q 129 638 122 618 q 149 681 136 659 l 275 681 q 252 633 257 652 q 246 594 246 614 q 256 552 246 570 q 283 518 265 533 q 328 489 302 503 q 389 460 355 475 q 447 490 422 475 q 487 520 471 505 q 510 554 503 536 q 517 593 517 572 q 517 613 517 604 q 513 632 516 622 q 505 654 511 642 q 489 681 499 666 l 614 681 q 636 635 631 656 q 642 591 642 614 q 632 532 642 558 q 603 485 622 507 q 556 444 584 463 q 491 408 528 425 q 563 377 530 395 q 620 335 596 359 q 656 277 644 310 q 669 200 669 243 q 656 118 669 157 q 611 51 644 79 q 523 5 578 22 q 382 -12 467 -12 m 374 353 q 303 328 333 340 q 254 298 273 315 q 225 259 235 281 q 216 205 216 237 q 256 115 216 147 q 382 83 296 83 q 508 115 468 83 q 548 205 548 147 q 536 259 548 237 q 502 298 524 281 q 447 328 479 315 q 374 353 414 340 z "},"\u1d16":{"ha":764,"x_min":43,"x_max":721,"o":"m 43 330 q 63 477 43 410 q 125 592 83 544 q 229 666 167 640 q 376 692 292 692 q 517 666 454 692 q 624 592 580 640 q 694 478 669 545 q 721 330 719 411 l 587 330 q 534 512 585 448 q 382 576 482 576 q 280 557 320 576 q 218 505 241 538 q 185 427 195 472 q 176 330 176 382 l 43 330 z "},"\u1d17":{"ha":764,"x_min":43,"x_max":721,"o":"m 176 351 q 185 253 176 298 q 218 175 195 208 q 280 123 241 142 q 382 104 320 104 q 534 168 482 104 q 587 351 585 232 l 721 351 q 694 202 719 269 q 624 88 669 136 q 517 14 580 40 q 376 -12 454 -12 q 229 14 292 -12 q 125 89 167 41 q 63 203 83 136 q 43 351 43 270 l 176 351 z "},"\u1d18":{"ha":764,"x_min":110,"x_max":654,"o":"m 654 458 q 638 357 654 401 q 586 283 621 313 q 495 238 551 254 q 361 223 439 223 l 230 223 l 230 0 l 110 0 l 110 681 l 355 681 q 471 674 417 681 q 566 644 526 667 q 631 577 607 621 q 654 458 654 533 m 539 457 q 527 518 539 494 q 494 557 515 543 q 443 577 473 572 q 376 583 413 583 l 230 583 l 230 323 l 371 323 q 498 358 456 323 q 539 457 539 392 z "},"\u1d19":{"ha":764,"x_min":73,"x_max":640,"o":"m 193 206 q 244 282 220 254 q 296 320 267 311 q 222 346 253 328 q 172 387 192 363 q 143 439 153 411 q 134 498 134 467 q 149 573 134 539 q 195 631 164 607 q 273 668 226 654 q 382 681 319 681 l 640 681 l 640 0 l 520 0 l 520 286 l 444 286 q 407 281 423 286 q 376 268 390 277 q 348 241 361 258 q 321 200 335 225 l 207 0 l 73 0 l 193 206 m 259 490 q 416 378 259 378 l 520 378 l 520 589 l 408 589 q 296 567 334 589 q 259 490 259 545 z "},"\u1d1a":{"ha":764,"x_min":73,"x_max":640,"o":"m 73 681 l 207 681 l 321 481 q 348 439 335 456 q 376 413 361 423 q 407 399 390 404 q 444 395 423 395 l 520 395 l 520 681 l 640 681 l 640 0 l 382 0 q 273 13 319 0 q 195 50 226 26 q 149 108 164 74 q 134 183 134 142 q 143 242 134 214 q 172 294 153 270 q 222 335 192 317 q 296 361 253 353 q 244 398 267 370 q 193 475 220 427 l 73 681 m 259 191 q 296 114 259 136 q 408 92 334 92 l 520 92 l 520 303 l 416 303 q 259 191 259 303 z "},"\u1d1b":{"ha":764,"x_min":81,"x_max":683,"o":"m 683 579 l 441 579 l 441 0 l 322 0 l 322 579 l 81 579 l 81 681 l 683 681 l 683 579 z "},"\u1d1c":{"ha":764,"x_min":98,"x_max":665,"o":"m 665 257 q 646 152 665 201 q 590 68 627 104 q 500 11 553 32 q 377 -9 446 -9 q 248 11 301 -9 q 162 65 195 31 q 114 145 129 99 q 98 243 98 191 l 98 681 l 218 681 l 218 273 q 226 200 218 233 q 252 143 233 167 q 302 105 271 119 q 381 92 334 92 q 456 105 425 92 q 507 144 488 119 q 536 202 527 169 q 545 275 545 236 l 545 681 l 665 681 l 665 257 z "},"\u1d1d":{"ha":764,"x_min":35,"x_max":728,"o":"m 716 608 l 716 502 l 606 498 q 665 440 642 467 q 703 385 688 412 q 723 331 717 358 q 728 273 728 303 q 667 114 728 168 q 480 60 605 60 l 35 60 l 35 179 l 471 179 q 627 296 627 178 q 621 339 627 318 q 598 382 614 359 q 555 431 583 405 q 487 490 528 457 l 35 490 l 35 608 l 716 608 z "},"\u1d1e":{"ha":764,"x_min":35,"x_max":728,"o":"m 716 608 l 716 502 l 606 498 q 665 440 642 467 q 703 385 688 412 q 723 331 717 358 q 728 273 728 303 q 667 114 728 168 q 480 60 605 60 l 246 60 l 246 179 l 471 179 q 627 296 627 178 q 621 339 627 318 q 598 382 614 359 q 555 431 583 405 q 487 490 528 457 l 246 490 l 246 608 l 716 608 m 35 188 q 41 217 35 203 q 58 242 47 231 q 82 258 68 252 q 112 264 96 264 q 141 258 127 264 q 165 242 155 252 q 182 217 176 231 q 188 188 188 203 q 182 158 188 172 q 165 134 176 144 q 141 118 155 124 q 112 112 127 112 q 82 118 96 112 q 58 134 68 124 q 41 158 47 144 q 35 188 35 172 m 35 479 q 41 509 35 495 q 58 533 47 523 q 82 550 68 544 q 112 556 96 556 q 141 550 127 556 q 165 533 155 544 q 182 509 176 523 q 188 479 188 495 q 182 450 188 464 q 165 426 176 436 q 141 410 155 416 q 112 404 127 404 q 82 410 96 404 q 58 426 68 416 q 41 450 47 436 q 35 479 35 464 z "},"\u1d1f":{"ha":764,"x_min":52,"x_max":711,"o":"m 52 127 l 507 127 q 559 130 539 127 q 592 137 580 132 q 608 150 604 142 q 613 170 613 158 q 605 195 613 183 q 578 219 597 206 q 530 249 560 233 q 456 286 500 264 l 52 286 l 52 394 l 494 394 q 555 396 532 394 q 591 404 578 399 q 608 417 604 409 q 613 437 613 425 q 606 460 613 449 q 582 484 600 471 q 534 513 564 497 q 456 552 503 530 l 52 552 l 52 661 l 699 661 l 699 570 l 570 565 q 635 531 608 547 q 679 496 663 514 q 704 459 696 479 q 711 414 711 439 q 675 331 711 359 q 564 302 640 302 q 627 271 600 286 q 673 237 654 255 q 702 197 692 219 q 711 147 711 176 q 514 19 711 19 l 52 19 l 52 127 z "},"\u1d20":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 447 0 l 311 0 l 45 681 z "},"\u1d21":{"ha":764,"x_min":25,"x_max":739,"o":"m 739 681 l 640 0 l 497 0 l 399 285 l 379 354 l 357 281 l 262 0 l 123 0 l 25 681 l 140 681 l 197 218 l 210 115 l 239 205 l 338 511 l 422 511 l 529 210 l 559 119 l 570 215 l 623 681 l 739 681 z "},"\u1d22":{"ha":764,"x_min":111,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 z "},"\u1d23":{"ha":764,"x_min":90,"x_max":665,"o":"m 203 418 l 441 582 l 100 582 l 100 681 l 612 681 l 612 583 l 357 417 q 505 396 446 414 q 600 349 564 378 q 650 284 635 321 q 665 209 665 248 q 648 124 665 164 q 591 53 631 83 q 488 5 552 23 q 330 -12 423 -12 q 275 -11 305 -12 q 212 -6 244 -9 q 148 1 180 -3 q 90 12 117 6 l 90 122 q 154 107 120 114 q 221 97 187 101 q 285 90 254 92 q 340 87 316 87 q 436 97 398 87 q 497 123 475 106 q 530 162 520 140 q 539 209 539 184 q 529 255 539 233 q 493 292 518 276 q 429 317 469 308 q 330 326 389 326 l 203 326 l 203 418 z "},"\u1d24":{"ha":764,"x_min":123,"x_max":648,"o":"m 414 275 q 335 250 368 263 q 283 224 303 237 q 254 196 263 210 q 245 168 245 182 q 286 106 245 125 q 412 87 326 87 q 529 96 471 87 q 648 122 588 105 l 648 14 q 526 -6 592 0 q 390 -12 460 -12 q 295 -3 342 -12 q 209 27 248 6 q 147 83 171 49 q 123 168 123 118 q 177 281 123 237 q 336 352 231 326 l 336 427 q 438 456 400 443 q 495 483 475 470 q 521 509 515 496 q 527 536 527 522 q 519 559 527 549 q 492 578 511 570 q 443 590 473 586 q 369 595 413 595 q 282 588 332 595 q 177 568 233 582 l 177 673 q 278 689 230 684 q 368 693 327 693 q 507 680 452 693 q 593 644 562 667 q 636 589 624 621 q 648 520 648 557 q 630 456 648 482 q 581 411 612 430 q 507 378 549 392 q 414 349 464 363 l 414 275 z "},"\u1d25":{"ha":764,"x_min":61,"x_max":703,"o":"m 382 170 l 296 75 q 210 14 254 31 q 111 -2 165 -2 q 61 2 86 -2 l 61 101 q 102 97 83 97 q 137 101 122 97 q 165 112 153 104 q 191 130 178 119 q 217 156 203 141 l 286 229 q 230 282 254 252 q 188 346 205 313 q 161 413 170 378 q 152 481 152 448 q 162 555 152 517 q 197 623 172 593 q 268 673 223 654 q 382 692 312 692 q 496 673 452 692 q 566 623 541 654 q 602 555 592 593 q 612 481 612 517 q 603 413 612 448 q 576 346 593 378 q 534 282 559 313 q 477 229 509 252 l 547 156 q 573 130 561 141 q 598 112 585 119 q 626 101 611 104 q 662 97 642 97 q 703 101 680 97 l 703 2 q 653 -2 677 -2 q 554 14 599 -2 q 468 75 509 31 l 382 170 z "},"\u1d26":{"ha":764,"x_min":156,"x_max":631,"o":"m 275 582 l 275 0 l 156 0 l 156 681 l 631 681 l 631 582 l 275 582 z "},"\u1d27":{"ha":764,"x_min":33,"x_max":730,"o":"m 33 0 l 311 681 l 460 681 l 730 0 l 597 0 l 379 577 l 161 0 l 33 0 z "},"\u1d28":{"ha":764,"x_min":103,"x_max":661,"o":"m 661 0 l 541 0 l 541 576 l 222 576 l 222 0 l 103 0 l 103 681 l 661 681 l 661 0 z "},"\u1d29":{"ha":764,"x_min":142,"x_max":661,"o":"m 661 473 q 648 381 661 426 q 604 302 635 337 q 520 247 573 268 q 385 226 467 226 l 262 226 l 262 0 l 142 0 l 142 681 l 385 681 q 496 670 446 681 q 583 633 547 659 q 640 569 620 608 q 661 473 661 530 m 545 468 q 535 523 545 500 q 503 558 525 545 q 448 577 481 572 q 369 583 415 583 l 262 583 l 262 323 l 359 323 q 502 359 458 323 q 545 468 545 395 z "},"\u1d2a":{"ha":764,"x_min":70,"x_max":694,"o":"m 437 0 l 327 0 l 327 201 q 131 270 193 211 q 70 431 70 329 l 70 681 l 181 681 l 181 452 q 216 346 181 382 q 327 300 250 309 l 327 681 l 437 681 l 437 300 q 583 453 583 321 l 583 681 l 694 681 l 694 446 q 676 350 694 393 q 626 277 659 308 q 545 228 593 246 q 437 203 498 209 l 437 0 z "},"\u1d2b":{"ha":764,"x_min":9,"x_max":650,"o":"m 650 0 l 532 0 l 532 579 l 328 579 q 304 340 320 439 q 266 173 288 240 q 215 68 243 106 q 154 13 186 30 q 84 -4 121 -5 q 9 5 47 -4 l 14 103 q 65 106 41 100 q 109 132 89 111 q 146 192 130 153 q 176 296 163 231 q 200 455 190 361 q 216 681 210 550 l 650 681 l 650 0 z "},"\u1d2c":{"ha":764,"x_min":140,"x_max":632,"o":"m 632 487 l 535 487 l 494 606 l 273 606 l 233 487 l 140 487 l 323 1030 l 452 1030 l 632 487 m 468 685 l 385 962 l 300 685 l 468 685 z "},"\u1d2d":{"ha":764,"x_min":93,"x_max":626,"o":"m 626 486 l 387 486 l 387 603 l 237 603 l 190 486 l 93 486 l 325 1029 l 620 1029 l 620 957 l 479 957 l 479 804 l 614 804 l 614 731 l 479 731 l 479 559 l 626 559 l 626 486 m 387 676 l 387 971 l 269 676 l 387 676 z "},"\u1d2e":{"ha":764,"x_min":191,"x_max":593,"o":"m 593 650 q 540 529 593 571 q 389 487 487 487 l 191 487 l 191 1030 l 381 1030 q 572 898 572 1030 q 550 822 572 854 q 478 775 528 791 q 522 761 501 771 q 558 735 543 751 q 584 698 574 720 q 593 650 593 677 m 478 888 q 473 918 478 905 q 454 938 467 930 q 419 950 441 946 q 363 954 397 954 l 286 954 l 286 805 l 360 805 q 408 809 387 805 q 446 824 430 814 q 470 849 461 833 q 478 888 478 865 m 496 647 q 372 730 496 730 l 286 730 l 286 563 l 364 563 q 422 567 397 563 q 464 580 447 570 q 488 606 480 589 q 496 647 496 622 z "},"\u1d2f":{"ha":764,"x_min":119,"x_max":606,"o":"m 119 805 l 205 805 l 205 1030 l 395 1030 q 586 898 586 1030 q 564 822 586 854 q 492 775 542 791 q 535 761 515 771 q 572 735 556 751 q 597 698 588 720 q 606 650 606 677 q 553 529 606 571 q 402 487 500 487 l 205 487 l 205 730 l 119 730 l 119 805 m 510 647 q 385 730 510 730 l 300 730 l 300 563 l 378 563 q 436 567 411 563 q 477 580 460 570 q 502 606 494 589 q 510 647 510 622 m 492 888 q 486 918 492 905 q 468 938 481 930 q 432 950 454 946 q 376 954 410 954 l 300 954 l 300 805 l 374 805 q 422 809 400 805 q 459 824 444 814 q 483 849 475 833 q 492 888 492 865 z "},"\u1d30":{"ha":764,"x_min":191,"x_max":635,"o":"m 635 764 q 621 655 635 706 q 575 567 608 605 q 487 508 542 530 q 351 487 433 487 l 191 487 l 191 1030 l 367 1030 q 568 965 501 1030 q 635 764 635 900 m 534 760 q 522 855 534 817 q 488 915 511 892 q 429 945 465 937 q 347 954 394 954 l 286 954 l 286 564 l 338 564 q 485 609 436 564 q 534 760 534 655 z "},"\u1d31":{"ha":764,"x_min":212,"x_max":553,"o":"m 553 487 l 212 487 l 212 1030 l 553 1030 l 553 954 l 307 954 l 307 806 l 543 806 l 543 730 l 307 730 l 307 564 l 553 564 l 553 487 z "},"\u1d32":{"ha":764,"x_min":210,"x_max":552,"o":"m 210 564 l 457 564 l 457 730 l 220 730 l 220 806 l 457 806 l 457 954 l 210 954 l 210 1030 l 552 1030 l 552 487 l 210 487 l 210 564 z "},"\u1d33":{"ha":764,"x_min":149,"x_max":577,"o":"m 575 924 q 509 949 543 940 q 436 958 476 958 q 295 906 345 958 q 245 758 245 854 q 286 608 245 658 q 418 558 326 558 q 453 560 434 558 q 486 568 472 562 l 486 715 l 369 715 l 369 790 l 577 790 l 577 512 q 502 488 540 496 q 413 479 463 479 q 303 497 352 479 q 220 549 254 514 q 168 634 186 583 q 149 753 149 686 q 170 873 149 820 q 227 962 190 926 q 316 1018 264 999 q 431 1038 368 1038 q 506 1031 470 1038 q 575 1010 542 1025 l 575 924 z "},"\u1d34":{"ha":764,"x_min":173,"x_max":591,"o":"m 591 487 l 496 487 l 496 730 l 268 730 l 268 487 l 173 487 l 173 1030 l 268 1030 l 268 807 l 496 807 l 496 1030 l 591 1030 l 591 487 z "},"\u1d35":{"ha":764,"x_min":203,"x_max":560,"o":"m 334 954 l 203 954 l 203 1030 l 560 1030 l 560 954 l 429 954 l 429 564 l 560 564 l 560 487 l 203 487 l 203 564 l 334 564 l 334 954 z "},"\u1d36":{"ha":764,"x_min":197,"x_max":516,"o":"m 516 1030 l 516 653 q 503 587 516 618 q 466 532 490 555 q 405 495 441 509 q 321 481 368 481 q 253 489 287 481 q 197 511 218 498 l 197 600 q 256 570 224 581 q 321 559 289 559 q 395 586 370 559 q 421 667 421 614 l 421 954 l 204 954 l 204 1030 l 516 1030 z "},"\u1d37":{"ha":764,"x_min":189,"x_max":606,"o":"m 606 487 l 500 487 l 281 753 l 281 487 l 189 487 l 189 1030 l 281 1030 l 281 778 l 488 1030 l 596 1030 l 371 770 l 606 487 z "},"\u1d38":{"ha":764,"x_min":235,"x_max":579,"o":"m 579 487 l 235 487 l 235 1030 l 330 1030 l 330 564 l 579 564 l 579 487 z "},"\u1d39":{"ha":764,"x_min":140,"x_max":623,"o":"m 623 487 l 534 487 l 518 956 l 414 664 l 340 664 l 239 956 l 228 487 l 140 487 l 168 1030 l 288 1030 l 379 752 l 474 1030 l 593 1030 l 623 487 z "},"\u1d3a":{"ha":764,"x_min":178,"x_max":586,"o":"m 586 487 l 475 487 l 308 819 l 249 955 l 260 661 l 260 487 l 178 487 l 178 1030 l 288 1030 l 450 719 l 517 558 l 503 876 l 503 1030 l 586 1030 l 586 487 z "},"\u1d3b":{"ha":764,"x_min":179,"x_max":585,"o":"m 265 1030 l 265 633 l 502 1030 l 585 1030 l 585 487 l 497 487 l 497 884 l 262 487 l 179 487 l 179 1030 l 265 1030 z "},"\u1d3c":{"ha":764,"x_min":145,"x_max":619,"o":"m 619 762 q 600 636 619 689 q 547 548 581 583 q 470 496 514 513 q 376 479 426 479 q 274 498 317 479 q 202 553 231 517 q 159 640 173 589 q 145 756 145 692 q 164 882 145 829 q 217 969 184 935 q 293 1021 250 1004 q 386 1038 337 1038 q 489 1019 445 1038 q 562 964 532 1000 q 605 877 591 928 q 619 762 619 826 m 522 757 q 514 842 522 804 q 490 906 507 880 q 446 946 473 932 q 381 960 419 960 q 318 945 345 960 q 274 903 292 930 q 249 840 257 877 q 241 760 241 804 q 274 611 241 664 q 381 557 307 557 q 444 572 418 557 q 488 613 471 587 q 514 676 505 640 q 522 757 522 713 z "},"\u1d3d":{"ha":764,"x_min":178,"x_max":598,"o":"m 557 1030 q 576 997 571 1012 q 581 962 581 981 q 572 912 581 934 q 547 873 563 891 q 510 839 532 855 q 464 806 489 823 q 515 774 491 791 q 558 735 540 756 q 587 688 576 713 q 598 633 598 663 q 588 575 598 604 q 554 525 578 547 q 489 489 530 503 q 388 475 449 475 q 287 489 327 475 q 222 524 246 502 q 188 574 197 546 q 178 633 178 602 q 188 686 178 662 q 217 731 199 711 q 259 769 235 751 q 310 800 283 786 q 264 833 285 817 q 228 870 243 850 q 204 911 212 889 q 195 962 195 934 q 200 997 195 981 q 218 1030 205 1012 l 313 1030 q 301 1010 305 1019 q 294 994 296 1001 q 292 979 292 986 q 291 966 291 972 q 298 925 291 942 q 318 893 305 907 q 349 866 331 878 q 390 840 368 853 q 430 866 412 853 q 460 893 448 878 q 478 925 472 907 q 485 966 485 942 q 481 993 485 979 q 463 1030 478 1007 l 557 1030 m 505 639 q 496 675 505 658 q 470 707 486 692 q 432 738 454 723 q 384 767 410 753 q 300 707 329 737 q 271 639 271 677 q 279 593 271 611 q 303 566 288 576 q 340 552 318 555 q 388 548 361 548 q 436 552 414 548 q 473 566 457 555 q 497 593 488 576 q 505 639 505 611 z "},"\u1d3e":{"ha":764,"x_min":201,"x_max":593,"o":"m 593 864 q 582 798 593 831 q 545 740 570 766 q 479 697 520 713 q 379 682 439 682 l 296 682 l 296 487 l 201 487 l 201 1030 l 378 1030 q 460 1021 421 1030 q 528 992 498 1012 q 575 941 557 972 q 593 864 593 909 m 501 861 q 465 936 501 913 q 366 958 429 958 l 296 958 l 296 752 l 358 752 q 464 777 427 752 q 501 861 501 802 z "},"\u1d3f":{"ha":764,"x_min":201,"x_max":621,"o":"m 621 487 l 517 487 l 432 652 q 411 685 422 671 q 389 706 401 698 q 363 717 377 713 q 332 720 349 720 l 296 720 l 296 487 l 201 487 l 201 1030 l 379 1030 q 466 1020 429 1030 q 527 990 503 1009 q 563 945 551 972 q 575 887 575 919 q 549 790 575 829 q 463 737 522 751 q 484 726 475 733 q 500 710 492 720 q 515 687 508 700 q 531 657 522 673 l 621 487 m 478 881 q 450 941 478 924 q 369 958 421 958 l 296 958 l 296 788 l 368 788 q 451 812 423 788 q 478 881 478 836 z "},"\u1d40":{"ha":764,"x_min":165,"x_max":599,"o":"m 599 954 l 429 954 l 429 487 l 334 487 l 334 954 l 165 954 l 165 1030 l 599 1030 l 599 954 z "},"\u1d41":{"ha":764,"x_min":175,"x_max":589,"o":"m 589 676 q 575 595 589 631 q 533 533 560 558 q 466 493 505 507 q 379 479 427 479 q 288 493 326 479 q 224 532 249 507 q 187 590 199 556 q 175 665 175 624 l 175 1030 l 269 1030 l 269 693 q 274 637 269 661 q 292 597 279 613 q 327 572 305 581 q 382 564 349 564 q 470 597 444 564 q 496 694 496 631 l 496 1030 l 589 1030 l 589 676 z "},"\u1d42":{"ha":764,"x_min":139,"x_max":625,"o":"m 625 1030 l 587 487 l 472 487 l 398 660 l 378 722 l 359 661 l 289 487 l 178 487 l 139 1030 l 227 1030 l 248 674 l 254 566 l 282 659 l 354 847 l 408 847 l 491 644 l 517 566 l 519 648 l 542 1030 l 625 1030 z "},"\u1d43":{"ha":764,"x_min":187,"x_max":562,"o":"m 480 487 l 479 543 q 406 494 442 509 q 328 479 369 479 q 264 489 291 479 q 220 516 237 499 q 195 556 203 533 q 187 604 187 578 q 231 703 187 666 q 371 739 275 739 l 472 739 l 472 762 q 371 837 472 837 q 298 829 334 837 q 224 806 262 821 l 224 885 q 293 903 252 895 q 377 911 333 911 q 451 903 417 911 q 509 878 485 895 q 548 836 534 861 q 562 774 562 810 l 562 487 l 480 487 m 472 677 l 389 677 q 306 656 332 677 q 281 601 281 635 q 297 562 281 577 q 345 547 313 547 q 411 561 381 547 q 472 606 441 576 l 472 677 z "},"\u1d44":{"ha":764,"x_min":187,"x_max":562,"o":"m 269 904 l 270 848 q 343 897 307 882 q 420 911 380 911 q 485 902 458 911 q 528 875 511 892 q 553 835 545 858 q 562 787 562 812 q 517 688 562 725 q 378 652 473 652 l 277 652 l 277 629 q 378 554 277 554 q 450 562 414 554 q 525 585 486 570 l 525 506 q 456 488 496 496 q 372 479 416 479 q 298 488 332 479 q 239 513 264 496 q 201 555 215 530 q 187 616 187 581 l 187 904 l 269 904 m 277 714 l 360 714 q 443 735 417 714 q 468 790 468 755 q 452 829 468 814 q 404 844 436 844 q 337 830 368 844 q 277 785 307 815 l 277 714 z "},"\u1d45":{"ha":764,"x_min":183,"x_max":568,"o":"m 183 687 q 198 780 183 739 q 242 849 214 821 q 309 894 270 878 q 397 909 349 909 q 465 905 418 909 q 568 889 511 901 l 568 487 l 487 487 l 484 566 q 335 479 421 479 q 269 494 297 479 q 221 537 241 509 q 193 602 202 564 q 183 687 183 640 m 275 692 q 294 584 275 616 q 353 551 313 551 q 387 557 372 551 q 417 576 402 564 q 446 606 431 588 q 479 649 461 625 l 479 822 q 438 833 462 829 q 392 836 414 836 q 347 828 368 836 q 310 803 326 820 q 284 758 294 785 q 275 692 275 730 z "},"\u1d46":{"ha":764,"x_min":138,"x_max":626,"o":"m 485 479 q 414 492 444 479 q 372 530 384 504 q 330 493 357 506 q 271 479 303 479 q 212 493 237 479 q 170 530 186 506 q 146 588 154 554 q 138 663 138 622 q 138 699 138 686 q 140 718 138 711 l 340 718 q 320 813 340 785 q 252 841 300 841 q 200 836 227 841 q 154 824 172 831 l 154 892 q 178 900 164 897 q 208 906 193 904 q 239 910 224 909 q 269 911 255 911 q 344 893 311 911 q 393 839 376 876 q 447 892 415 873 q 513 911 479 911 q 595 879 565 911 q 626 788 626 846 q 591 690 626 726 q 480 654 557 654 l 421 654 l 421 625 q 436 567 421 583 q 488 550 451 550 q 540 558 513 550 q 595 581 568 566 l 595 506 q 544 488 574 496 q 485 479 513 479 m 475 718 q 531 735 514 718 q 547 783 547 753 q 536 827 547 814 q 504 841 525 841 q 485 839 494 841 q 465 832 475 838 q 444 816 455 827 q 421 787 433 806 l 421 718 l 475 718 m 273 549 q 340 654 340 549 l 216 654 q 228 575 215 602 q 273 549 241 549 z "},"\u1d47":{"ha":764,"x_min":201,"x_max":589,"o":"m 589 703 q 574 610 589 651 q 531 541 559 569 q 464 497 503 512 q 374 482 424 482 q 288 489 335 482 q 201 511 241 496 l 201 1074 l 291 1074 l 291 913 l 288 836 q 354 895 320 878 q 432 911 388 911 q 548 860 507 911 q 589 703 589 809 m 498 700 q 477 801 498 766 q 408 837 456 837 q 349 821 380 837 q 291 766 317 805 l 291 568 q 329 555 313 560 q 366 551 346 551 q 416 557 393 551 q 458 579 440 563 q 488 625 477 596 q 498 700 498 654 z "},"\u1d48":{"ha":764,"x_min":183,"x_max":568,"o":"m 183 687 q 198 781 183 740 q 242 851 214 823 q 309 895 270 880 q 397 909 349 909 q 479 899 440 909 l 479 1074 l 568 1074 l 568 487 l 487 487 l 484 566 q 335 479 421 479 q 269 494 297 479 q 221 537 241 509 q 193 602 202 564 q 183 687 183 640 m 275 692 q 294 584 275 616 q 356 551 313 551 q 388 557 373 551 q 417 576 402 564 q 446 606 431 588 q 479 648 461 624 l 479 822 q 437 833 460 829 q 392 836 414 836 q 350 829 370 836 q 312 805 329 821 q 285 760 295 788 q 275 692 275 732 z "},"\u1d49":{"ha":764,"x_min":183,"x_max":585,"o":"m 585 718 q 585 688 585 702 q 583 665 585 675 l 275 665 q 310 581 277 610 q 408 551 342 551 q 448 553 427 551 q 490 559 469 555 q 529 566 511 562 q 562 574 548 570 l 562 498 q 488 485 530 490 q 404 479 446 479 q 237 536 291 479 q 183 694 183 593 q 197 778 183 739 q 238 846 212 817 q 303 893 265 876 q 389 910 341 910 q 471 897 434 910 q 533 858 507 883 q 572 798 558 833 q 585 718 585 762 m 492 728 q 469 812 496 784 q 385 840 443 840 q 308 810 335 840 q 275 728 280 779 l 492 728 z "},"\u1d4a":{"ha":764,"x_min":178,"x_max":581,"o":"m 178 672 q 179 701 178 688 q 180 724 179 715 l 488 724 q 454 809 486 779 q 356 838 422 838 q 315 836 336 838 q 274 831 294 834 q 234 824 253 827 q 202 816 216 820 l 202 891 q 275 905 233 900 q 359 910 317 910 q 457 896 416 910 q 527 853 499 881 q 567 786 554 825 q 581 695 581 746 q 566 612 581 651 q 525 544 552 573 q 460 497 498 514 q 375 479 422 479 q 293 493 329 479 q 231 531 256 507 q 192 592 205 556 q 178 672 178 627 m 271 661 q 294 577 268 606 q 379 549 321 549 q 456 580 429 549 q 488 661 484 610 l 271 661 z "},"\u1d4b":{"ha":764,"x_min":202,"x_max":585,"o":"m 585 494 q 548 488 568 490 q 507 483 528 485 q 467 480 487 481 q 431 479 448 479 q 328 489 371 479 q 256 515 284 498 q 215 556 229 532 q 202 607 202 579 q 210 647 202 629 q 233 676 218 664 q 268 697 248 689 q 312 708 288 705 q 243 742 264 715 q 222 803 222 768 q 233 847 222 827 q 267 881 243 867 q 327 903 290 895 q 416 911 364 911 q 499 907 454 911 q 580 895 543 902 l 580 820 q 499 833 539 829 q 424 838 458 838 q 372 836 393 838 q 338 827 351 833 q 320 812 326 821 q 315 791 315 804 q 319 767 315 777 q 335 750 323 757 q 368 740 347 743 q 423 737 389 737 l 530 737 l 530 667 l 423 667 q 361 663 385 667 q 322 652 336 659 q 302 633 308 644 q 297 607 297 622 q 303 583 297 593 q 326 567 309 573 q 369 557 342 560 q 439 554 397 554 q 467 555 450 554 q 504 559 484 557 q 545 566 524 562 q 585 575 566 570 l 585 494 z "},"\u1d4c":{"ha":764,"x_min":202,"x_max":585,"o":"m 202 897 q 239 903 219 901 q 280 908 260 906 q 320 910 300 909 q 356 911 340 911 q 460 902 416 911 q 531 876 503 892 q 572 835 559 859 q 585 784 585 812 q 577 744 585 762 q 554 714 569 727 q 519 694 539 702 q 475 683 499 686 q 544 649 523 675 q 566 588 566 623 q 555 544 566 564 q 520 510 544 524 q 460 488 497 496 q 372 479 423 479 q 289 484 333 479 q 208 496 244 489 l 208 571 q 289 557 248 562 q 363 553 329 553 q 415 555 395 553 q 449 564 436 558 q 467 578 462 570 q 473 600 473 587 q 468 624 473 614 q 452 641 464 634 q 419 651 440 648 q 364 654 397 654 l 257 654 l 257 724 l 364 724 q 427 727 402 724 q 465 739 451 731 q 485 758 479 747 q 490 784 490 769 q 484 808 490 798 q 462 824 478 818 q 418 834 446 831 q 348 837 391 837 q 321 836 338 837 q 284 831 304 834 q 242 825 264 829 q 202 816 221 821 l 202 897 z "},"\u1d4d":{"ha":764,"x_min":192,"x_max":620,"o":"m 549 845 q 568 811 562 831 q 575 770 575 792 q 563 711 575 737 q 528 665 550 684 q 474 636 505 646 q 404 626 442 626 q 352 631 376 626 q 315 644 328 635 q 300 622 306 633 q 294 598 294 611 q 311 573 294 583 q 353 563 327 564 l 461 559 q 523 550 494 557 q 573 529 551 543 q 606 496 594 515 q 618 450 618 476 q 606 397 618 422 q 567 354 594 372 q 498 324 541 335 q 396 313 456 313 q 300 321 339 313 q 237 343 261 329 q 202 377 213 357 q 192 420 192 397 q 207 473 192 451 q 249 512 222 494 q 218 547 228 528 q 209 585 209 566 q 222 635 209 612 q 254 677 235 657 q 228 715 237 696 q 219 766 219 735 q 232 825 219 799 q 270 870 245 851 q 326 899 294 889 q 397 909 359 909 q 429 908 413 909 q 454 904 446 906 l 620 904 l 620 845 l 549 845 m 286 427 q 315 387 286 397 q 401 377 344 377 q 461 382 437 377 q 499 396 485 387 q 518 417 513 405 q 524 443 524 429 q 502 475 524 468 q 435 485 479 483 l 330 490 q 307 473 316 481 q 294 458 298 465 q 288 443 290 451 q 286 427 286 435 m 309 768 q 332 708 309 727 q 397 689 355 689 q 464 711 443 689 q 485 768 485 732 q 462 825 485 808 q 397 842 439 842 q 330 821 351 842 q 309 768 309 800 z "},"\u1d4e":{"ha":764,"x_min":212,"x_max":578,"o":"m 433 560 l 563 560 l 563 487 l 342 487 l 342 830 l 212 830 l 212 904 l 578 904 l 578 830 l 433 830 l 433 560 m 412 294 q 365 312 383 294 q 346 356 346 330 q 351 380 346 369 q 365 400 356 392 q 386 414 374 409 q 412 418 397 418 q 437 414 425 418 q 458 400 449 409 q 472 380 467 392 q 477 356 477 369 q 472 332 477 343 q 458 312 467 321 q 437 299 449 304 q 412 294 425 294 z "},"\u1d4f":{"ha":764,"x_min":217,"x_max":615,"o":"m 615 487 l 496 487 l 306 711 l 306 487 l 217 487 l 217 1074 l 306 1074 l 306 713 l 490 904 l 604 904 l 413 712 l 615 487 z "},"\u1d50":{"ha":764,"x_min":158,"x_max":605,"o":"m 522 487 l 522 796 q 492 838 522 838 q 477 833 484 838 q 463 817 470 828 q 447 787 455 805 q 427 741 438 768 l 427 487 l 343 487 l 343 797 q 336 828 343 819 q 313 838 328 838 q 299 834 306 838 q 284 819 292 830 q 266 789 276 808 q 241 741 256 770 l 241 487 l 158 487 l 158 904 l 230 904 l 233 825 q 255 865 244 848 q 277 892 266 882 q 302 907 289 902 q 330 911 315 911 q 387 890 366 911 q 409 821 409 868 q 429 860 419 843 q 451 888 439 877 q 476 906 463 900 q 509 911 490 911 q 577 881 550 911 q 605 791 605 851 l 605 487 l 522 487 z "},"\u1d51":{"ha":764,"x_min":194,"x_max":560,"o":"m 470 740 q 457 812 470 789 q 408 836 445 836 q 380 832 393 836 q 352 818 367 828 q 321 792 338 808 q 283 750 304 775 l 283 487 l 194 487 l 194 904 l 275 904 l 278 837 q 315 873 297 859 q 350 896 332 887 q 385 908 368 905 q 422 911 403 911 q 525 874 490 911 q 560 760 560 836 l 559 450 q 527 350 559 387 q 422 313 494 313 q 395 314 408 313 q 374 317 382 315 l 374 396 q 395 391 385 393 q 416 390 406 390 q 440 394 430 390 q 457 410 450 399 q 467 439 463 420 q 470 487 470 458 l 470 740 z "},"\u1d52":{"ha":764,"x_min":176,"x_max":587,"o":"m 587 699 q 573 610 587 650 q 533 541 559 570 q 467 495 506 511 q 377 479 428 479 q 227 534 279 479 q 176 693 176 589 q 190 782 176 742 q 230 851 203 822 q 296 896 256 880 q 386 911 335 911 q 535 857 484 911 q 587 699 587 803 m 496 696 q 467 802 496 766 q 381 837 437 837 q 327 825 349 837 q 292 794 305 814 q 273 749 279 774 q 267 696 267 724 q 296 589 267 625 q 381 554 326 554 q 436 566 414 554 q 471 597 458 577 q 490 642 484 616 q 496 696 496 667 z "},"\u1d53":{"ha":764,"x_min":200,"x_max":550,"o":"m 200 888 q 266 905 231 900 q 334 910 301 910 q 494 857 439 910 q 550 699 550 803 q 535 609 550 650 q 491 541 519 569 q 421 496 462 512 q 330 481 380 481 q 261 486 295 481 q 200 500 228 490 l 200 583 q 259 563 227 569 q 322 556 292 556 q 374 565 349 556 q 417 590 399 573 q 447 634 436 608 q 458 697 458 661 q 448 761 458 735 q 421 804 439 787 q 377 827 403 820 q 319 834 351 834 q 257 828 289 834 q 200 808 226 821 l 200 888 z "},"\u1d54":{"ha":764,"x_min":165,"x_max":597,"o":"m 165 695 q 179 783 165 744 q 220 850 193 823 q 287 893 247 878 q 378 908 326 908 q 467 894 427 908 q 536 852 507 880 q 582 785 566 825 q 597 695 597 746 l 503 695 q 470 790 503 760 q 381 820 437 820 q 323 811 346 820 q 286 785 300 802 q 266 746 272 769 q 260 695 260 723 l 165 695 z "},"\u1d55":{"ha":764,"x_min":165,"x_max":597,"o":"m 260 692 q 266 642 260 665 q 286 602 272 618 q 323 577 300 586 q 381 568 346 568 q 470 597 437 568 q 503 692 503 627 l 597 692 q 582 602 597 642 q 536 535 566 563 q 467 494 507 508 q 378 479 427 479 q 287 494 326 479 q 220 537 247 509 q 179 604 193 565 q 165 692 165 644 l 260 692 z "},"\u1d56":{"ha":764,"x_min":201,"x_max":589,"o":"m 589 703 q 573 606 589 648 q 528 537 557 564 q 460 496 499 509 q 374 482 420 482 q 333 484 353 482 q 291 491 313 486 l 291 317 l 201 317 l 201 904 l 283 904 l 288 834 q 357 894 320 877 q 438 911 394 911 q 504 897 475 911 q 551 856 532 883 q 580 790 570 829 q 589 703 589 752 m 498 700 q 477 801 498 766 q 408 837 456 837 q 381 834 394 837 q 355 824 369 832 q 327 801 342 816 q 291 761 311 786 l 291 568 q 328 555 312 560 q 366 551 345 551 q 465 585 431 551 q 498 700 498 620 z "},"\u1d57":{"ha":764,"x_min":134,"x_max":543,"o":"m 543 493 q 489 484 517 486 q 433 481 462 481 q 303 516 350 481 q 256 626 256 552 l 256 830 l 134 830 l 134 904 l 256 904 l 256 1019 l 346 1038 l 346 904 l 543 904 l 543 830 l 346 830 l 346 645 q 445 556 346 556 q 490 559 466 556 q 543 569 515 562 l 543 493 z "},"\u1d58":{"ha":764,"x_min":194,"x_max":560,"o":"m 560 487 l 478 487 l 475 554 q 414 497 445 515 q 344 479 384 479 q 282 489 310 479 q 235 517 255 498 q 205 565 216 536 q 194 631 194 593 l 194 904 l 283 904 l 283 651 q 359 555 283 555 q 417 578 388 555 q 470 641 446 602 l 470 904 l 560 904 l 560 487 z "},"\u1d59":{"ha":764,"x_min":170,"x_max":594,"o":"m 587 878 l 587 796 l 519 793 q 555 757 541 774 q 578 722 570 739 q 591 686 587 704 q 594 649 594 668 q 556 546 594 581 q 442 511 519 511 l 170 511 l 170 602 l 422 602 q 465 604 447 602 q 495 614 483 607 q 513 633 507 621 q 519 664 519 645 q 515 691 519 678 q 501 719 511 705 q 474 750 491 734 q 433 788 458 767 l 170 788 l 170 878 l 587 878 z "},"\u1d5a":{"ha":764,"x_min":158,"x_max":605,"o":"m 241 911 l 241 602 q 271 560 241 560 q 286 565 279 560 q 300 582 293 570 q 316 612 308 593 q 336 657 325 630 l 336 911 l 420 911 l 420 602 q 427 570 420 580 q 450 560 435 560 q 464 564 457 560 q 479 579 471 568 q 497 609 487 590 q 522 657 507 628 l 522 911 l 605 911 l 605 494 l 533 494 l 530 574 q 508 533 518 550 q 486 507 497 517 q 461 492 474 496 q 433 487 448 487 q 376 509 397 487 q 354 577 354 530 q 334 538 344 555 q 312 510 323 522 q 287 493 300 498 q 254 487 273 487 q 185 517 213 487 q 158 608 158 547 l 158 911 l 241 911 z "},"\u1d5b":{"ha":764,"x_min":159,"x_max":604,"o":"m 159 904 l 260 904 l 361 628 l 383 561 l 406 629 l 507 904 l 604 904 l 432 487 l 331 487 l 159 904 z "},"\u1d5c":{"ha":764,"x_min":168,"x_max":595,"o":"m 382 585 l 332 531 q 281 495 308 505 q 218 485 254 485 q 194 486 208 485 q 168 488 180 487 l 168 562 q 186 561 176 561 q 203 560 196 560 q 242 564 225 560 q 275 584 260 568 l 315 623 q 279 657 295 638 q 251 697 262 676 q 233 740 239 718 q 227 782 227 762 q 234 827 227 804 q 259 869 241 850 q 307 900 277 888 q 381 911 336 911 q 456 900 426 911 q 504 869 486 888 q 529 827 522 850 q 536 782 536 804 q 530 740 536 762 q 512 697 524 718 q 484 657 500 676 q 448 623 468 638 l 488 584 q 522 564 504 568 q 559 559 539 559 q 577 560 566 559 q 595 562 587 561 l 595 488 q 571 486 584 487 q 548 486 557 486 q 482 496 509 486 q 431 532 454 506 l 382 585 z "},"\u1d5d":{"ha":764,"x_min":192,"x_max":587,"o":"m 587 665 q 573 591 587 625 q 533 533 559 557 q 473 494 508 508 q 396 480 437 480 q 332 489 361 480 q 281 508 303 497 l 281 317 l 192 317 l 192 911 q 204 976 192 945 q 239 1029 216 1006 q 296 1066 262 1053 q 376 1080 331 1080 q 449 1068 416 1080 q 503 1037 481 1057 q 538 990 526 1017 q 550 933 550 964 q 544 891 550 911 q 527 854 538 871 q 500 827 515 838 q 467 813 485 816 q 516 798 494 810 q 554 765 538 785 q 578 720 570 745 q 587 665 587 694 m 281 589 q 331 566 305 576 q 391 556 357 556 q 431 561 412 556 q 464 578 450 566 q 487 610 479 590 q 496 661 496 631 q 468 736 496 709 q 375 764 440 764 l 341 764 l 341 840 l 366 840 q 438 864 416 840 q 460 927 460 888 q 437 985 460 966 q 374 1004 415 1004 q 306 982 330 1004 q 281 909 281 959 l 281 589 z "},"\u1d5e":{"ha":764,"x_min":171,"x_max":593,"o":"m 377 681 q 385 654 382 666 q 392 629 389 642 q 398 601 395 616 q 406 568 401 587 q 454 661 435 618 q 486 744 474 704 q 500 823 497 784 q 501 904 504 862 l 593 904 q 583 795 593 848 q 551 688 572 742 q 529 635 541 662 q 500 581 516 608 q 466 523 485 553 q 425 459 448 493 q 426 443 425 454 q 428 419 427 432 q 429 392 429 406 q 430 366 430 378 l 430 317 l 341 317 l 341 366 q 336 444 341 408 q 326 510 332 479 q 313 576 321 541 q 289 663 304 612 q 255 759 271 722 q 229 814 240 795 q 208 839 217 833 q 186 844 199 844 q 178 844 180 844 q 171 843 175 844 l 171 904 q 193 906 182 905 q 212 907 203 907 q 257 899 235 907 q 297 868 280 892 q 333 800 313 844 q 377 681 353 755 z "},"\u1d5f":{"ha":764,"x_min":178,"x_max":585,"o":"m 328 897 q 287 940 300 920 q 274 987 274 960 q 311 1054 274 1027 q 429 1080 349 1080 q 483 1076 455 1080 q 542 1067 511 1073 l 542 991 q 480 1003 509 999 q 427 1008 452 1008 q 381 1000 395 1008 q 368 980 368 993 q 381 957 368 968 q 417 927 394 946 l 470 883 q 517 840 496 861 q 554 794 538 818 q 577 743 569 770 q 585 682 585 715 q 576 614 585 650 q 543 548 566 578 q 479 499 519 518 q 378 479 439 479 q 291 495 328 479 q 228 538 253 511 q 191 602 203 566 q 178 679 178 638 q 190 752 178 718 q 221 814 201 786 q 268 863 241 842 q 328 897 295 884 m 387 848 q 346 831 367 842 q 308 801 325 820 q 281 754 292 783 q 270 686 270 726 q 300 588 270 621 q 387 555 331 555 q 435 565 415 555 q 468 591 455 574 q 486 630 480 608 q 492 679 492 653 q 488 715 492 697 q 476 750 485 732 q 453 785 468 767 q 416 823 439 804 l 387 848 z "},"\u1d60":{"ha":764,"x_min":148,"x_max":613,"o":"m 418 317 l 335 317 l 335 480 q 258 494 293 483 q 199 528 224 506 q 161 582 175 549 q 148 659 148 614 l 148 904 l 233 904 l 233 682 q 258 588 233 618 q 335 551 283 557 l 335 1074 l 418 1074 l 418 551 q 500 603 473 560 q 528 732 528 645 q 527 776 528 755 q 524 818 526 798 q 519 860 522 839 q 514 904 517 881 l 599 904 q 609 814 604 859 q 613 724 613 770 q 600 630 613 672 q 562 556 587 587 q 501 505 537 524 q 418 479 465 486 l 418 317 z "},"\u1d61":{"ha":764,"x_min":151,"x_max":612,"o":"m 520 429 q 533 402 527 412 q 545 385 538 391 q 560 377 552 379 q 578 374 568 374 q 597 375 588 374 q 612 378 606 376 l 612 317 q 586 313 602 314 q 557 313 569 313 q 515 318 533 313 q 484 333 498 323 q 460 360 471 344 q 439 399 450 376 l 397 496 l 373 554 l 347 503 l 246 317 l 151 317 l 328 628 l 254 795 q 241 822 247 812 q 228 839 235 833 q 214 847 222 845 q 195 850 206 850 q 177 849 186 850 q 161 846 168 848 l 161 907 q 188 911 172 910 q 217 911 205 911 q 258 907 241 911 q 289 891 276 902 q 313 864 302 881 q 334 825 323 848 l 368 747 l 391 694 l 417 747 l 501 904 l 595 904 l 435 618 l 520 429 z "},"\u1d62":{"ha":764,"x_min":203,"x_max":569,"o":"m 348 198 l 218 198 l 218 271 l 439 271 l 439 -72 l 569 -72 l 569 -146 l 203 -146 l 203 -72 l 348 -72 l 348 198 m 370 334 q 323 352 342 334 q 304 396 304 370 q 310 420 304 409 q 323 440 315 432 q 344 454 332 449 q 370 458 356 458 q 396 454 384 458 q 416 440 408 449 q 430 420 425 432 q 435 396 435 409 q 430 372 435 383 q 416 352 425 361 q 396 339 408 344 q 370 334 384 334 z "},"\u1d63":{"ha":764,"x_min":224,"x_max":599,"o":"m 224 271 l 307 271 l 309 195 q 386 259 349 239 q 462 279 423 279 q 522 266 496 279 q 565 230 548 254 q 591 174 583 207 q 597 99 599 140 l 507 99 q 495 179 509 154 q 446 203 481 203 q 416 198 431 203 q 386 181 401 193 q 353 152 370 170 q 315 109 336 134 l 315 -146 l 224 -146 l 224 271 z "},"\u1d64":{"ha":764,"x_min":194,"x_max":560,"o":"m 560 -170 l 478 -170 l 475 -103 q 414 -160 445 -142 q 344 -178 384 -178 q 282 -168 310 -178 q 235 -140 255 -159 q 205 -92 216 -121 q 194 -26 194 -64 l 194 247 l 283 247 l 283 -6 q 359 -102 283 -102 q 417 -79 388 -102 q 470 -16 446 -55 l 470 247 l 560 247 l 560 -170 z "},"\u1d65":{"ha":764,"x_min":159,"x_max":604,"o":"m 159 247 l 260 247 l 361 -29 l 383 -96 l 406 -28 l 507 247 l 604 247 l 432 -170 l 331 -170 l 159 247 z "},"\u1d66":{"ha":764,"x_min":192,"x_max":587,"o":"m 587 8 q 573 -65 587 -31 q 533 -124 559 -99 q 473 -162 508 -149 q 396 -176 437 -176 q 332 -168 361 -176 q 281 -149 303 -159 l 281 -340 l 192 -340 l 192 255 q 204 319 192 289 q 239 373 216 350 q 296 410 262 396 q 376 423 331 423 q 449 412 416 423 q 503 380 481 400 q 538 334 526 360 q 550 277 550 307 q 544 235 550 255 q 527 198 538 214 q 500 171 515 182 q 467 157 485 159 q 516 141 494 153 q 554 109 538 129 q 578 63 570 89 q 587 8 587 37 m 281 -67 q 331 -91 305 -81 q 391 -100 357 -100 q 431 -95 412 -100 q 464 -78 450 -90 q 487 -46 479 -66 q 496 5 496 -26 q 468 80 496 52 q 375 108 440 108 l 341 108 l 341 184 l 366 184 q 438 208 416 184 q 460 271 460 232 q 437 329 460 310 q 374 348 415 348 q 306 325 330 348 q 281 252 281 302 l 281 -67 z "},"\u1d67":{"ha":764,"x_min":171,"x_max":593,"o":"m 377 24 q 385 -3 382 9 q 392 -28 389 -16 q 398 -56 395 -41 q 406 -90 401 -71 q 454 4 435 -39 q 486 87 474 47 q 500 166 497 127 q 501 247 504 205 l 593 247 q 583 138 593 191 q 551 31 572 85 q 529 -22 541 5 q 500 -77 516 -50 q 466 -134 485 -104 q 425 -198 448 -164 q 426 -214 425 -203 q 428 -238 427 -225 q 429 -266 429 -252 q 430 -292 430 -279 l 430 -340 l 341 -340 l 341 -292 q 336 -214 341 -250 q 326 -147 332 -178 q 313 -81 321 -117 q 289 5 304 -45 q 255 101 271 65 q 229 157 240 138 q 208 182 217 176 q 186 187 199 187 q 178 187 180 187 q 171 186 175 186 l 171 247 q 193 249 182 248 q 212 250 203 250 q 257 242 235 250 q 297 211 280 235 q 333 143 313 187 q 377 24 353 98 z "},"\u1d68":{"ha":764,"x_min":201,"x_max":589,"o":"m 589 71 q 574 -27 589 15 q 533 -96 559 -68 q 472 -138 507 -124 q 397 -152 437 -152 q 339 -145 369 -152 q 291 -127 309 -138 l 291 -316 l 201 -316 l 201 80 q 213 157 201 121 q 250 220 225 193 q 311 263 274 248 q 399 279 349 279 q 486 263 450 279 q 545 219 522 248 q 578 153 568 191 q 589 71 589 115 m 498 68 q 493 121 498 96 q 475 165 488 146 q 444 194 463 183 q 396 204 425 204 q 319 173 347 204 q 291 73 291 141 l 291 -52 q 336 -70 311 -64 q 386 -76 362 -76 q 469 -41 439 -76 q 498 68 498 -5 z "},"\u1d69":{"ha":764,"x_min":148,"x_max":613,"o":"m 418 -340 l 335 -340 l 335 -177 q 258 -163 293 -174 q 199 -130 224 -151 q 161 -76 175 -108 q 148 1 148 -43 l 148 247 l 233 247 l 233 25 q 258 -70 233 -39 q 335 -106 283 -100 l 335 417 l 418 417 l 418 -106 q 500 -55 473 -97 q 528 75 528 -12 q 527 119 528 98 q 524 161 526 140 q 519 203 522 182 q 514 247 517 224 l 599 247 q 609 157 604 202 q 613 67 613 113 q 600 -27 613 15 q 562 -101 587 -70 q 501 -152 537 -133 q 418 -178 465 -172 l 418 -340 z "},"\u1d6a":{"ha":764,"x_min":151,"x_max":612,"o":"m 520 -229 q 533 -255 527 -245 q 545 -272 538 -266 q 560 -280 552 -278 q 578 -283 568 -283 q 597 -282 588 -283 q 612 -279 606 -281 l 612 -340 q 586 -344 602 -343 q 557 -345 569 -345 q 515 -339 533 -345 q 484 -324 498 -334 q 460 -297 471 -313 q 439 -258 450 -281 l 397 -161 l 373 -103 l 347 -154 l 246 -340 l 151 -340 l 328 -29 l 254 138 q 241 165 247 155 q 228 182 235 176 q 214 190 222 188 q 195 193 206 193 q 177 192 186 193 q 161 189 168 191 l 161 250 q 188 254 172 253 q 217 254 205 254 q 258 250 241 254 q 289 234 276 245 q 313 207 302 224 q 334 168 323 191 l 368 90 l 391 37 l 417 90 l 501 247 l 595 247 l 435 -39 l 520 -229 z "},"\u1d6b":{"ha":764,"x_min":47,"x_max":737,"o":"m 212 -12 q 127 3 159 -12 q 77 47 95 18 q 54 118 60 76 q 47 215 47 161 l 47 681 l 159 681 l 159 223 q 160 168 159 193 q 169 125 162 142 q 188 98 176 108 q 223 89 201 89 q 262 96 245 89 q 292 115 279 104 q 312 136 304 125 q 324 155 320 147 l 324 681 l 432 681 l 432 633 q 486 680 458 667 q 547 693 515 693 q 633 671 597 693 q 692 610 669 650 q 726 516 715 571 q 737 393 737 460 q 736 338 737 357 q 734 310 736 320 l 433 310 q 465 143 433 201 q 570 85 496 85 q 646 93 608 85 q 713 113 684 101 l 713 18 q 677 6 697 12 q 634 -4 656 0 q 589 -10 612 -8 q 545 -12 566 -12 q 376 78 429 -12 q 301 13 342 37 q 212 -12 261 -12 m 538 599 q 492 583 511 599 q 459 541 473 568 q 440 477 446 514 q 433 397 433 440 l 627 397 q 623 476 627 439 q 608 541 618 513 q 580 583 597 568 q 538 599 563 599 z "},"\u1d6c":{"ha":764,"x_min":-210,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m -73 831 q -7 905 -44 880 q 77 930 30 930 q 143 918 116 930 q 191 893 170 907 q 231 868 212 880 q 273 857 250 857 q 320 875 300 857 q 360 923 341 894 l 418 865 q 352 791 389 816 q 269 766 315 766 q 202 778 229 766 q 154 803 175 789 q 114 828 133 817 q 73 840 96 840 q 24 821 45 840 q -15 773 4 802 l -73 831 m -210 652 z "},"\u1d6d":{"ha":764,"x_min":74,"x_max":832,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 340 831 q 407 905 370 880 q 490 930 444 930 q 557 918 530 930 q 605 893 584 907 q 645 868 626 880 q 686 857 663 857 q 734 875 713 857 q 774 923 755 894 l 832 865 q 766 791 802 816 q 682 766 729 766 q 615 778 642 766 q 568 803 589 789 q 528 828 547 817 q 486 840 509 840 q 438 821 458 840 q 399 773 418 802 l 340 831 m 204 652 z "},"\u1d6e":{"ha":764,"x_min":-42,"x_max":713,"o":"m 713 848 q 553 868 620 868 q 393 701 393 868 l 393 582 l 692 582 l 692 484 l 393 484 l 393 0 l 273 0 l 273 484 l 54 484 l 54 582 l 273 582 l 273 694 q 557 966 273 966 q 713 950 627 966 l 713 848 m 0 681 m 94 315 q 160 389 123 364 q 244 414 197 414 q 311 402 283 414 q 359 377 338 391 q 398 352 380 363 q 440 340 417 340 q 488 359 467 340 q 528 407 509 378 l 586 349 q 519 275 556 300 q 436 250 483 250 q 369 261 396 250 q 321 287 342 273 q 282 312 300 300 q 240 323 263 323 q 192 305 212 323 q 153 257 172 286 l 94 315 m -42 136 z "},"\u1d6f":{"ha":764,"x_min":5,"x_max":757,"o":"m 5 315 q 88 376 45 353 l 88 681 l 178 681 l 184 565 q 216 628 201 604 q 246 668 231 653 q 279 688 261 682 q 319 693 296 693 q 392 657 366 693 q 419 546 419 622 q 446 609 433 582 q 474 655 459 637 q 506 684 489 674 q 547 693 524 693 q 675 496 675 693 l 675 387 l 699 406 l 757 348 q 675 284 720 308 l 675 0 l 567 0 l 567 252 q 528 250 547 250 q 478 253 502 250 q 433 262 454 257 l 433 0 l 328 0 l 328 300 q 271 317 298 311 q 218 323 244 323 q 205 322 211 323 q 194 321 199 322 l 194 0 l 88 0 l 88 278 q 62 256 75 268 l 5 315 m 567 489 q 565 541 567 520 q 558 573 562 562 q 546 590 553 585 q 530 595 539 595 q 509 587 519 595 q 488 561 499 579 q 463 512 476 543 q 433 437 449 482 l 433 363 q 487 346 460 353 q 543 340 513 340 q 555 340 549 340 q 567 340 562 340 l 567 489 m 328 476 q 325 536 328 513 q 318 572 323 559 q 306 590 313 585 q 288 595 298 595 q 247 563 270 595 q 194 451 223 530 l 194 410 q 216 412 205 412 q 239 413 227 413 q 284 410 262 413 q 328 401 307 406 l 328 476 z "},"\u1d70":{"ha":764,"x_min":5,"x_max":757,"o":"m 5 315 q 62 360 33 341 q 122 392 90 380 l 122 681 l 227 681 l 232 571 q 284 629 259 606 q 334 667 309 652 q 386 687 359 681 q 443 693 413 693 q 595 631 548 693 q 642 444 642 569 l 642 364 q 671 384 658 373 q 699 406 685 394 l 757 348 q 703 300 731 320 q 642 269 675 281 l 642 0 l 524 0 l 524 250 q 438 261 477 250 q 363 286 398 272 q 300 309 330 300 q 240 321 270 319 l 240 0 l 122 0 l 122 300 q 91 280 106 291 q 62 256 77 269 l 5 315 m 524 435 q 501 553 524 515 q 419 591 478 591 q 377 584 397 591 q 335 561 356 577 q 290 518 313 545 q 240 452 267 491 l 240 413 q 326 401 285 412 q 399 376 366 390 q 461 353 431 363 q 524 340 491 343 l 524 435 z "},"\u1d71":{"ha":764,"x_min":-210,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m -74 -153 q -8 -79 -45 -104 q 76 -54 29 -54 q 142 -66 115 -54 q 191 -91 170 -77 q 230 -116 212 -104 q 272 -127 249 -127 q 320 -109 299 -127 q 359 -61 340 -90 l 418 -119 q 351 -193 388 -168 q 268 -218 315 -218 q 201 -207 228 -218 q 153 -181 174 -195 q 114 -156 132 -168 q 72 -144 95 -144 q 24 -163 44 -144 q -16 -211 3 -182 l -74 -153 m -210 -332 z "},"\u1d72":{"ha":764,"x_min":-162,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m -26 357 q 40 430 3 406 q 124 455 77 455 q 191 444 163 455 q 239 418 218 432 q 278 393 260 405 q 320 382 297 382 q 368 400 347 382 q 408 448 389 419 l 466 390 q 399 316 436 341 q 316 292 363 292 q 249 303 276 292 q 201 328 222 314 q 162 353 180 342 q 120 365 143 365 q 72 346 92 365 q 33 298 52 328 l -26 357 m -162 178 z "},"\u1d73":{"ha":764,"x_min":-182,"x_max":698,"o":"m 136 429 q 149 527 136 485 q 182 597 161 568 q 232 645 203 627 q 291 674 260 664 q 355 689 322 685 q 417 693 387 693 q 528 678 477 693 q 618 631 580 663 q 677 551 656 600 q 696 435 698 502 l 574 435 q 565 510 575 479 q 535 558 555 540 q 486 584 515 576 q 417 591 456 591 q 352 584 381 591 q 301 557 322 576 q 268 504 279 537 q 256 417 256 470 l 256 0 l 136 0 l 136 429 m -46 357 q 20 430 -17 406 q 104 455 57 455 q 170 444 143 455 q 218 418 197 432 q 258 393 239 405 q 300 382 277 382 q 348 400 327 382 q 387 448 368 419 l 446 390 q 379 316 416 341 q 296 292 342 292 q 229 303 256 292 q 181 328 202 314 q 141 353 160 342 q 100 365 123 365 q 52 346 72 365 q 12 298 31 328 l -46 357 m -182 178 z "},"\u1d74":{"ha":764,"x_min":24,"x_max":720,"o":"m 648 186 q 621 95 648 132 q 553 33 595 57 q 462 -1 512 9 q 364 -12 412 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 300 87 q 485 111 445 87 q 526 176 526 134 q 519 209 524 195 q 496 237 514 224 q 443 264 478 250 q 346 297 408 279 q 275 322 308 309 q 215 353 241 335 q 182 349 197 352 q 157 335 168 345 q 139 307 146 326 q 133 258 133 289 l 24 258 q 54 380 24 333 q 139 448 84 427 q 132 500 132 470 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 502 689 453 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 286 445 267 458 q 340 417 305 431 q 431 387 375 403 q 517 373 482 373 q 590 400 568 373 q 611 472 611 427 l 720 472 q 692 362 720 406 q 612 294 665 318 q 639 246 631 273 q 648 186 648 219 z "},"\u1d75":{"ha":764,"x_min":-60,"x_max":657,"o":"m 657 9 q 574 -5 617 -1 q 488 -9 532 -9 q 296 48 359 -9 q 233 227 233 106 l 233 582 l 43 582 l 43 681 l 233 681 l 233 868 l 351 899 l 351 681 l 657 681 l 657 582 l 351 582 l 351 236 q 390 126 351 163 q 505 90 429 90 q 576 95 538 90 q 657 111 615 100 l 657 9 m 76 357 q 142 430 105 406 q 226 455 179 455 q 292 444 265 455 q 340 418 319 432 q 380 393 361 405 q 422 382 399 382 q 470 400 449 382 q 509 448 490 419 l 568 390 q 501 316 538 341 q 418 292 465 292 q 351 303 378 292 q 303 328 324 314 q 263 353 282 342 q 222 365 245 365 q 174 346 194 365 q 134 298 153 328 l 76 357 m -60 178 z "},"\u1d76":{"ha":764,"x_min":21,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 157 357 q 223 430 186 406 q 307 455 260 455 q 374 444 347 455 q 422 418 401 432 q 461 393 443 405 q 503 382 480 382 q 551 400 530 382 q 591 448 572 419 l 649 390 q 583 316 619 341 q 499 292 546 292 q 432 303 459 292 q 385 328 406 314 q 345 353 363 342 q 303 365 326 365 q 255 346 275 365 q 216 298 235 328 l 157 357 m 21 178 z "},"\u1d77":{"ha":764,"x_min":64,"x_max":708,"o":"m 173 -180 q 143 -125 154 -157 q 133 -57 133 -94 q 152 40 133 -4 q 207 115 172 83 q 291 163 242 146 q 399 180 340 180 q 479 171 442 180 q 538 149 517 162 q 560 184 551 168 q 569 222 569 201 q 544 265 569 248 q 479 283 519 282 l 300 290 q 206 303 249 292 q 132 336 163 315 q 84 390 101 358 q 66 464 66 422 q 86 550 66 509 q 147 622 106 591 q 251 671 188 652 q 401 689 314 689 q 541 676 483 689 q 637 639 600 663 q 691 584 674 616 q 708 513 708 551 q 685 426 708 463 q 614 354 663 389 q 644 334 631 346 q 665 307 657 321 q 677 276 673 292 q 682 244 682 260 q 661 163 682 200 q 612 94 640 127 q 634 64 625 79 q 651 32 644 49 q 662 -6 659 14 q 666 -52 666 -26 q 647 -148 666 -104 q 592 -223 627 -192 q 508 -272 557 -254 q 399 -289 459 -289 q 351 -286 374 -289 q 311 -277 328 -282 l 64 -277 l 64 -180 l 173 -180 m 583 503 q 532 573 583 551 q 393 595 482 595 q 298 585 336 595 q 236 558 260 574 q 203 520 213 541 q 193 476 193 498 q 227 415 193 435 q 330 392 260 395 l 508 386 q 568 444 553 416 q 583 503 583 473 m 547 -54 q 536 5 547 -22 q 505 52 525 33 q 459 81 486 71 q 399 92 432 92 q 337 80 364 92 q 291 47 309 68 q 262 1 272 27 q 252 -54 252 -26 q 263 -114 252 -87 q 294 -160 274 -141 q 340 -190 313 -179 q 399 -200 367 -200 q 462 -188 435 -200 q 508 -156 490 -176 q 537 -109 527 -136 q 547 -54 547 -83 z "},"\u1d78":{"ha":764,"x_min":176,"x_max":587,"o":"m 587 446 l 493 446 l 493 629 l 271 629 l 271 446 l 176 446 l 176 861 l 271 861 l 271 708 l 493 708 l 493 861 l 587 861 l 587 446 z "},"\u1d79":{"ha":764,"x_min":64,"x_max":705,"o":"m 94 681 l 682 681 l 682 585 l 492 585 q 442 553 469 570 q 388 516 415 536 q 336 476 361 497 q 292 433 311 455 q 262 390 273 412 q 250 347 250 368 q 255 314 250 328 q 271 289 260 300 q 301 268 282 277 q 347 250 319 258 l 469 210 q 577 168 532 190 q 650 118 622 146 q 692 56 679 91 q 705 -26 705 21 q 686 -123 705 -76 q 625 -205 666 -170 q 521 -263 584 -241 q 371 -285 458 -285 q 230 -267 288 -285 q 135 -217 172 -249 q 81 -143 98 -186 q 64 -51 64 -100 q 81 28 64 -9 q 123 95 98 65 q 178 148 149 125 q 231 185 207 171 q 153 243 176 209 q 130 325 130 278 q 150 396 130 359 q 199 467 169 432 q 268 532 230 501 q 342 585 305 562 l 94 585 l 94 681 m 189 -31 q 199 -97 189 -68 q 231 -148 209 -127 q 290 -179 254 -168 q 379 -191 326 -191 q 474 -176 435 -191 q 535 -139 512 -162 q 569 -87 559 -116 q 579 -28 579 -58 q 574 7 579 -9 q 556 38 570 23 q 517 68 542 54 q 453 97 492 83 l 323 145 q 277 113 301 130 q 234 74 254 95 q 202 26 214 52 q 189 -31 189 1 z "},"\u1d7a":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 969 l 597 693 l 602 693 q 665 681 640 693 q 705 644 690 668 q 726 583 720 619 q 732 499 732 547 l 732 0 l 621 0 l 621 469 q 620 520 621 497 q 613 560 618 543 q 597 586 608 576 q 565 595 586 595 q 537 589 549 595 l 492 510 l 492 0 l 381 0 l 381 317 l 258 104 q 282 95 269 98 q 311 93 296 93 q 340 95 325 93 l 340 0 q 310 -3 328 -1 q 272 -4 292 -4 q 203 8 235 -4 l 131 -117 l 18 -117 l 127 74 q 106 132 114 98 q 98 212 98 166 l 98 589 l 7 589 l 7 681 l 98 681 l 98 868 l 209 899 l 209 681 l 339 681 l 339 589 l 209 589 l 209 227 l 209 214 l 381 512 l 381 958 l 492 958 l 492 705 l 645 969 l 757 969 z "},"\u1d7b":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 180 397 l 620 397 l 620 298 l 180 298 l 180 397 z "},"\u1d7c":{"ha":764,"x_min":93,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 163 397 l 604 397 l 604 298 l 163 298 l 163 397 z "},"\u1d7d":{"ha":764,"x_min":-50,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m -50 -68 l 390 -68 l 390 -167 l -50 -167 l -50 -68 z "},"\u1d7e":{"ha":764,"x_min":10,"x_max":753,"o":"m 10 397 l 101 397 l 101 681 l 219 681 l 219 397 l 545 397 l 545 681 l 663 681 l 663 397 l 753 397 l 753 298 l 663 298 l 663 248 q 643 135 663 183 q 587 54 623 86 q 498 4 550 21 q 381 -12 446 -12 q 265 4 317 -12 q 177 54 213 21 q 121 135 140 86 q 101 248 101 183 l 101 298 l 10 298 l 10 397 m 382 89 q 501 132 458 89 q 545 256 545 174 l 545 298 l 219 298 l 219 256 q 262 132 219 174 q 382 89 306 89 z "},"\u1d7f":{"ha":764,"x_min":10,"x_max":753,"o":"m 10 397 l 110 397 l 110 414 q 94 681 110 551 l 212 681 q 228 422 228 555 l 228 397 l 547 397 q 543 539 547 469 q 530 681 538 609 l 648 681 q 661 539 656 609 q 665 397 665 469 l 753 397 l 753 298 l 659 298 q 625 169 650 227 q 561 71 600 111 q 469 9 522 31 q 353 -12 417 -12 q 166 53 224 -12 q 107 248 107 119 l 107 298 l 10 298 l 10 397 m 225 256 q 257 132 225 175 q 363 89 288 89 q 425 101 395 89 q 477 140 454 114 q 518 205 501 165 q 542 298 534 244 l 225 298 l 225 256 z "},"\u1d80":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 667 201 690 268 q 601 88 644 134 q 496 17 557 41 q 357 -8 434 -8 q 233 3 296 -8 q 109 40 170 15 l 109 958 l 227 958 l 227 694 l 221 568 q 330 665 272 637 q 454 693 388 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 297 95 261 103 q 366 87 333 87 q 443 100 406 87 q 508 143 480 113 q 553 223 536 174 q 570 347 570 273 m 360 86 l 535 86 l 535 -38 q 528 -135 535 -90 q 500 -213 521 -180 q 443 -264 480 -245 q 347 -283 406 -283 q 295 -281 320 -283 q 252 -275 269 -279 l 252 -172 q 299 -182 280 -180 q 336 -184 318 -184 q 376 -176 359 -184 q 405 -150 393 -168 q 421 -100 416 -131 q 427 -28 427 -68 l 427 0 l 332 0 l 360 86 z "},"\u1d81":{"ha":764,"x_min":74,"x_max":759,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 m 584 86 l 759 86 l 759 -38 q 752 -135 759 -90 q 724 -213 745 -180 q 667 -264 704 -245 q 570 -283 630 -283 q 518 -281 544 -283 q 475 -275 493 -279 l 475 -172 q 523 -182 504 -180 q 560 -184 542 -184 q 600 -176 583 -184 q 628 -150 617 -168 q 645 -100 640 -131 q 650 -28 650 -68 l 650 0 l 555 0 l 584 86 z "},"\u1d82":{"ha":764,"x_min":0,"x_max":713,"o":"m 713 848 q 553 868 620 868 q 393 701 393 868 l 393 582 l 692 582 l 692 484 l 393 484 l 393 0 l 273 0 l 273 484 l 54 484 l 54 582 l 273 582 l 273 694 q 557 966 273 966 q 713 950 627 966 l 713 848 m 0 681 m 340 86 l 515 86 l 515 -38 q 508 -135 515 -90 q 480 -213 500 -180 q 423 -264 460 -245 q 326 -283 386 -283 q 274 -281 300 -283 q 231 -275 249 -279 l 231 -172 q 279 -182 260 -180 q 316 -184 298 -184 q 356 -176 339 -184 q 384 -150 373 -168 q 401 -100 395 -131 q 406 -28 406 -68 l 406 0 l 311 0 l 340 86 z "},"\u1d83":{"ha":764,"x_min":16,"x_max":799,"o":"m 551 585 q 581 529 570 561 q 591 461 591 498 q 572 365 591 408 q 517 290 553 321 q 433 241 482 258 q 325 224 384 224 q 245 233 282 224 q 186 256 208 242 q 164 220 173 237 q 155 182 155 203 q 180 141 155 156 q 245 121 205 125 l 343 109 q 446 86 405 102 l 799 86 l 799 -83 q 792 -167 799 -130 q 768 -231 786 -205 q 720 -270 751 -256 q 640 -284 689 -284 q 576 -278 611 -284 l 576 -174 q 609 -180 594 -179 q 635 -182 623 -182 q 663 -175 652 -182 q 680 -155 674 -168 q 688 -123 686 -142 q 690 -79 690 -104 l 690 0 l 532 0 q 540 -35 537 -16 q 543 -78 543 -54 q 530 -154 543 -117 q 487 -220 517 -191 q 406 -267 456 -249 q 281 -285 356 -285 q 160 -272 210 -285 q 77 -235 109 -258 q 31 -179 45 -212 q 16 -109 16 -147 q 39 -22 16 -59 q 111 50 62 16 q 80 71 93 58 q 59 97 67 83 q 47 128 51 112 q 43 160 43 144 q 63 241 43 204 q 113 310 84 277 q 90 340 100 325 q 73 373 80 355 q 62 410 66 390 q 58 456 58 430 q 78 552 58 509 q 132 627 97 596 q 216 676 167 659 q 325 693 265 693 q 373 690 350 693 q 414 681 396 686 l 661 681 l 661 585 l 551 585 m 178 458 q 189 399 178 426 q 219 353 199 372 q 266 323 239 334 q 325 313 292 313 q 388 325 360 313 q 434 357 415 336 q 462 404 452 377 q 472 458 472 430 q 461 518 472 491 q 431 564 450 545 q 384 594 411 583 q 325 604 357 604 q 262 592 290 604 q 216 560 235 580 q 188 513 197 540 q 178 458 178 487 m 142 -98 q 149 -136 142 -119 q 171 -165 155 -153 q 214 -184 187 -178 q 280 -191 240 -191 q 345 -181 318 -191 q 389 -157 372 -172 q 414 -123 406 -142 q 422 -86 422 -104 q 408 -42 422 -60 q 369 -12 395 -24 q 304 7 342 0 q 216 18 266 14 q 157 -40 172 -12 q 142 -98 142 -68 z "},"\u1d84":{"ha":764,"x_min":123,"x_max":774,"o":"m 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 958 l 241 958 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 m 559 86 l 774 86 l 774 -38 q 767 -135 774 -90 q 740 -213 760 -180 q 683 -264 720 -245 q 586 -283 646 -283 q 534 -281 559 -283 q 491 -275 509 -279 l 491 -172 q 538 -182 519 -180 q 576 -184 557 -184 q 616 -176 599 -184 q 644 -150 633 -168 q 661 -100 655 -131 q 666 -21 666 -68 l 666 0 l 559 0 l 559 86 z "},"\u1d85":{"ha":764,"x_min":117,"x_max":663,"o":"m 340 861 l 139 861 l 139 958 l 460 958 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 861 m 325 86 l 541 86 l 541 -38 q 533 -135 541 -90 q 506 -213 526 -180 q 449 -264 486 -245 q 352 -283 412 -283 q 300 -281 326 -283 q 257 -275 275 -279 l 257 -172 q 304 -182 286 -180 q 342 -184 323 -184 q 382 -176 365 -184 q 410 -150 399 -168 q 427 -100 421 -131 q 432 -21 432 -68 l 432 0 l 325 0 l 325 86 z "},"\u1d86":{"ha":764,"x_min":61,"x_max":802,"o":"m 594 0 l 594 489 q 592 541 594 520 q 584 573 589 562 q 571 590 579 585 q 552 595 563 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 622 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 86 l 802 86 l 802 -38 q 794 -135 802 -90 q 768 -213 787 -180 q 713 -264 748 -245 q 621 -283 677 -283 q 569 -281 595 -283 q 526 -275 544 -279 l 526 -176 q 574 -186 555 -184 q 611 -188 593 -188 q 651 -180 634 -188 q 679 -154 668 -172 q 696 -104 690 -135 q 701 -25 701 -73 l 701 0 l 594 0 z "},"\u1d87":{"ha":764,"x_min":109,"x_max":755,"o":"m 109 681 l 214 681 l 218 571 q 276 630 248 606 q 331 667 304 653 q 385 687 357 682 q 443 693 413 693 q 602 631 548 693 q 656 444 656 569 l 656 0 l 538 0 l 538 435 q 508 553 538 515 q 419 591 478 591 q 377 585 397 591 q 334 563 356 578 q 285 519 311 547 q 227 452 259 492 l 227 0 l 109 0 l 109 681 m 539 86 l 755 86 l 755 -38 q 748 -135 755 -90 q 720 -213 741 -180 q 663 -264 700 -245 q 566 -283 626 -283 q 514 -281 540 -283 q 471 -275 489 -279 l 471 -172 q 519 -182 500 -180 q 556 -184 538 -184 q 596 -176 579 -184 q 624 -150 613 -168 q 641 -100 635 -131 q 646 -21 646 -68 l 646 0 l 539 0 l 539 86 z "},"\u1d88":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m 426 86 l 601 86 l 601 -38 q 594 -135 601 -90 q 566 -213 587 -180 q 509 -264 546 -245 q 412 -283 472 -283 q 360 -281 386 -283 q 317 -275 335 -279 l 317 -172 q 365 -182 346 -180 q 402 -184 384 -184 q 442 -176 425 -184 q 470 -150 459 -168 q 487 -100 481 -131 q 492 -28 492 -68 l 492 0 l 397 0 l 426 86 z "},"\u1d89":{"ha":764,"x_min":87,"x_max":700,"o":"m 136 681 l 244 681 l 248 555 q 367 661 308 628 q 485 693 425 693 q 645 625 591 693 q 696 421 700 556 l 576 421 q 550 551 578 511 q 468 591 522 591 q 420 583 444 591 q 371 556 396 574 q 317 508 345 537 q 256 437 288 479 l 256 0 l 136 0 l 136 681 m 155 86 l 371 86 l 371 -38 q 364 -135 371 -90 q 336 -213 357 -180 q 279 -264 316 -245 q 182 -283 242 -283 q 131 -281 156 -283 q 87 -275 105 -279 l 87 -172 q 135 -182 116 -180 q 172 -184 154 -184 q 212 -176 195 -184 q 240 -150 229 -168 q 257 -100 252 -131 q 262 -21 262 -68 l 262 0 l 155 0 l 155 86 z "},"\u1d8a":{"ha":764,"x_min":123,"x_max":686,"o":"m 648 186 q 635 121 648 150 q 602 71 623 93 q 553 33 581 49 q 494 7 526 18 q 429 -7 463 -3 q 364 -12 396 -12 q 237 -6 295 -12 q 123 14 179 0 l 123 122 q 242 96 183 105 q 359 87 301 87 q 485 111 444 87 q 526 176 526 134 q 519 209 526 195 q 496 237 513 224 q 443 264 479 250 q 346 297 408 279 q 261 328 300 311 q 193 369 222 345 q 149 425 165 393 q 132 500 132 456 q 145 562 132 528 q 191 625 159 596 q 277 674 222 654 q 412 693 331 693 q 501 689 452 693 q 603 673 550 684 l 603 568 q 497 588 547 582 q 411 595 448 595 q 337 588 367 595 q 288 569 307 581 q 261 542 269 557 q 253 507 253 526 q 260 474 253 489 q 287 445 267 459 q 340 417 306 431 q 431 387 375 404 q 532 350 491 370 q 600 307 574 331 q 636 254 625 283 q 648 186 648 224 m 416 86 l 686 86 l 686 -38 q 679 -135 686 -90 q 652 -213 672 -180 q 594 -264 631 -245 q 498 -283 557 -283 q 446 -281 471 -283 q 403 -275 420 -279 l 403 -172 q 450 -182 431 -180 q 488 -184 469 -184 q 528 -176 511 -184 q 556 -150 545 -168 q 572 -100 567 -131 q 578 -21 578 -68 l 578 0 l 416 0 l 416 86 z "},"\u1d8b":{"ha":764,"x_min":83,"x_max":764,"o":"m 441 -31 q 381 -220 441 -155 q 199 -285 321 -285 q 138 -281 170 -285 q 83 -271 107 -277 l 83 -168 q 203 -184 149 -184 q 292 -146 262 -184 q 322 -43 322 -109 l 322 713 q 382 902 322 837 q 566 966 442 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 616 866 q 472 828 502 866 q 441 725 441 789 l 441 -31 m 433 86 l 764 86 l 764 -38 q 756 -135 764 -90 q 729 -213 749 -180 q 672 -264 709 -245 q 575 -283 635 -283 q 523 -281 549 -283 q 480 -275 498 -279 l 480 -172 q 528 -182 509 -180 q 565 -184 547 -184 q 605 -176 588 -184 q 633 -150 622 -168 q 650 -100 644 -131 q 655 -21 655 -68 l 655 0 l 433 0 l 433 86 z "},"\u1d8c":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 447 0 l 311 0 l 45 681 m 332 86 l 548 86 l 548 -38 q 541 -135 548 -90 q 513 -213 534 -180 q 456 -264 493 -245 q 359 -283 419 -283 q 308 -281 333 -283 q 264 -275 282 -279 l 264 -172 q 312 -182 293 -180 q 349 -184 331 -184 q 389 -176 372 -184 q 417 -150 406 -168 q 434 -100 429 -131 q 439 -21 439 -68 l 439 0 l 332 0 l 332 86 z "},"\u1d8d":{"ha":764,"x_min":47,"x_max":782,"o":"m 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 722 0 m 566 86 l 782 86 l 782 -38 q 775 -135 782 -90 q 747 -213 768 -180 q 690 -264 727 -245 q 593 -283 653 -283 q 542 -281 567 -283 q 498 -275 516 -279 l 498 -172 q 546 -182 527 -180 q 583 -184 565 -184 q 623 -176 606 -184 q 651 -150 640 -168 q 668 -100 663 -131 q 673 -21 673 -68 l 673 0 l 566 0 l 566 86 z "},"\u1d8e":{"ha":764,"x_min":111,"x_max":660,"o":"m 660 0 l 111 0 l 111 85 l 496 582 l 121 582 l 121 681 l 637 681 l 637 589 l 260 100 l 660 100 l 660 0 m 416 86 l 660 86 l 660 -54 q 647 -161 660 -117 q 608 -232 633 -205 q 547 -271 583 -259 q 466 -283 511 -283 q 427 -282 446 -283 q 387 -278 407 -281 l 387 -174 q 422 -182 404 -180 q 458 -184 441 -184 q 490 -180 473 -184 q 519 -165 506 -176 q 542 -133 533 -153 q 551 -81 551 -113 l 551 0 l 416 0 l 416 86 z "},"\u1d8f":{"ha":764,"x_min":90,"x_max":897,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 736 86 l 736 -28 q 742 -105 736 -75 q 758 -153 747 -136 q 786 -177 769 -170 q 825 -184 802 -184 q 860 -182 840 -184 q 897 -174 880 -180 l 897 -277 q 863 -282 884 -280 q 819 -283 843 -283 q 722 -266 760 -283 q 663 -216 684 -248 q 635 -141 642 -184 q 627 -45 627 -97 l 627 0 l 564 0 l 592 86 l 736 86 z "},"\u1d90":{"ha":764,"x_min":74,"x_max":891,"o":"m 74 326 q 93 465 74 399 q 153 581 113 531 q 256 660 193 631 q 407 689 319 689 q 475 684 441 689 q 547 667 509 678 l 652 693 l 652 0 l 545 0 l 539 125 q 310 -12 443 -12 q 206 12 250 -12 q 133 81 162 37 q 89 189 103 126 q 74 326 74 251 m 195 334 q 203 231 195 277 q 229 154 212 186 q 272 106 246 123 q 334 89 298 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 472 585 506 576 q 399 593 437 593 q 247 527 299 593 q 195 334 195 461 m 731 86 l 731 -28 q 736 -105 731 -75 q 753 -153 742 -136 q 780 -177 764 -170 q 820 -184 797 -184 q 854 -182 835 -184 q 891 -174 874 -180 l 891 -277 q 858 -282 878 -280 q 814 -283 838 -283 q 716 -266 754 -283 q 658 -216 679 -248 q 629 -141 637 -184 q 622 -45 622 -97 l 622 0 l 558 0 l 587 86 l 731 86 z "},"\u1d91":{"ha":764,"x_min":74,"x_max":820,"o":"m 195 334 q 231 149 195 210 q 334 89 267 89 q 533 248 422 89 l 533 564 q 469 584 504 577 q 399 591 433 591 q 313 576 351 591 q 249 529 275 561 q 209 449 222 497 q 195 334 195 400 m 533 724 q 546 831 533 786 q 585 907 558 877 q 656 952 612 937 q 760 966 699 966 q 820 962 790 966 l 820 861 q 784 865 802 864 q 751 866 767 866 q 703 856 722 866 q 672 828 684 846 q 656 784 661 810 q 652 725 652 758 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 378 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 533 672 473 689 l 533 724 m 652 90 l 652 -28 q 657 -105 652 -75 q 673 -153 663 -136 q 701 -177 684 -170 q 741 -184 718 -184 q 775 -182 755 -184 q 812 -174 795 -180 l 812 -277 q 779 -282 799 -280 q 734 -283 758 -283 q 637 -266 675 -283 q 578 -216 600 -248 q 550 -141 557 -184 q 543 -45 543 -97 l 543 90 l 652 90 z "},"\u1d92":{"ha":764,"x_min":79,"x_max":807,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 647 90 l 647 -28 q 652 -105 647 -75 q 669 -153 658 -136 q 696 -177 680 -170 q 736 -184 713 -184 q 770 -182 751 -184 q 807 -174 790 -180 l 807 -277 q 774 -282 794 -280 q 730 -283 753 -283 q 632 -266 670 -283 q 574 -216 595 -248 q 545 -141 553 -184 q 538 -45 538 -97 l 538 90 l 647 90 z "},"\u1d93":{"ha":764,"x_min":90,"x_max":825,"o":"m 665 12 q 607 1 639 6 q 544 -6 576 -3 q 481 -11 511 -9 q 426 -12 450 -12 q 268 2 332 -12 q 164 42 203 16 q 107 105 125 68 q 90 186 90 142 q 102 252 90 223 q 135 302 114 281 q 183 338 156 323 q 243 361 211 352 q 151 415 180 381 q 122 506 122 449 q 136 578 122 545 q 182 638 149 612 q 268 678 214 663 q 401 693 321 693 q 464 691 431 693 q 530 685 497 689 q 596 676 564 682 q 656 665 628 671 l 656 566 q 529 587 592 580 q 414 595 467 595 q 333 588 366 595 q 281 569 300 581 q 253 538 261 556 q 244 497 244 520 q 251 455 244 473 q 277 424 258 437 q 328 404 296 411 q 413 397 361 397 l 579 397 l 579 306 l 412 306 q 315 298 353 306 q 255 275 277 290 q 225 240 233 260 q 216 195 216 220 q 226 150 216 170 q 258 116 235 130 q 319 95 281 102 q 415 87 357 87 q 470 90 439 87 q 535 97 501 92 q 602 107 568 101 q 665 122 635 114 l 665 12 m 665 90 l 665 -28 q 671 -105 665 -75 q 687 -153 676 -136 q 714 -177 698 -170 q 754 -184 731 -184 q 789 -182 769 -184 q 825 -174 808 -180 l 825 -277 q 792 -282 812 -280 q 748 -283 772 -283 q 651 -266 688 -283 q 592 -216 613 -248 q 564 -141 571 -184 q 556 -45 556 -97 l 556 90 l 665 90 z "},"\u1d94":{"ha":764,"x_min":90,"x_max":665,"o":"m 90 122 q 154 108 120 114 q 221 97 188 102 q 285 90 254 92 q 340 87 316 87 q 436 95 398 87 q 497 116 475 102 q 530 150 520 130 q 539 195 539 170 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 160 677 127 671 q 225 686 192 682 q 291 691 258 689 q 354 693 324 693 q 488 680 434 693 q 574 643 541 667 q 620 587 606 619 q 633 515 633 554 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 648 112 665 151 q 591 46 631 74 q 488 3 552 19 q 330 -12 423 -12 q 274 -11 304 -12 q 212 -6 244 -9 q 149 2 180 -3 q 90 12 117 6 l 90 122 m 200 90 l 200 -28 q 205 -105 200 -75 q 222 -153 211 -136 q 249 -177 233 -170 q 289 -184 266 -184 q 323 -182 304 -184 q 360 -174 343 -180 l 360 -277 q 327 -282 347 -280 q 283 -283 307 -283 q 185 -266 223 -283 q 127 -216 148 -248 q 98 -141 106 -184 q 91 -45 91 -97 l 91 90 l 200 90 z "},"\u1d95":{"ha":764,"x_min":80,"x_max":817,"o":"m 80 304 q 81 347 80 330 q 83 378 81 363 l 561 378 q 503 537 561 484 q 334 591 445 591 q 217 583 274 591 q 117 562 160 574 l 117 663 q 225 685 165 676 q 351 693 286 693 q 502 669 439 693 q 605 601 565 646 q 665 490 646 555 q 684 342 684 425 q 664 206 684 270 q 605 93 644 142 q 509 16 566 45 q 378 -12 452 -12 q 252 10 307 -12 q 158 74 196 33 q 100 173 120 115 q 80 304 80 232 m 203 288 q 212 204 201 242 q 245 138 222 165 q 302 94 268 110 q 380 79 336 79 q 451 94 419 79 q 506 137 483 110 q 544 203 530 165 q 561 288 557 241 l 203 288 m 656 90 l 656 -28 q 662 -105 656 -75 q 678 -153 667 -136 q 706 -177 689 -170 q 745 -184 722 -184 q 780 -182 760 -184 q 817 -174 800 -180 l 817 -277 q 783 -282 804 -280 q 739 -283 763 -283 q 642 -266 680 -283 q 583 -216 604 -248 q 555 -141 562 -184 q 547 -45 547 -97 l 547 90 l 656 90 z "},"\u1d96":{"ha":764,"x_min":117,"x_max":690,"o":"m 340 583 l 139 583 l 139 681 l 460 681 l 460 98 l 663 98 l 663 0 l 117 0 l 117 98 l 340 98 l 340 583 m 382 966 q 418 959 401 966 q 448 939 435 952 q 468 910 460 926 q 475 873 475 893 q 468 838 475 854 q 448 808 460 821 q 418 788 435 795 q 382 781 401 781 q 345 788 362 781 q 316 808 328 795 q 296 838 303 821 q 289 873 289 854 q 296 910 289 893 q 316 939 303 926 q 345 959 328 952 q 382 966 362 966 m 530 86 l 530 -28 q 536 -105 530 -75 q 552 -153 541 -136 q 579 -177 563 -170 q 619 -184 596 -184 q 654 -182 634 -184 q 690 -174 673 -180 l 690 -277 q 657 -282 677 -280 q 613 -283 637 -283 q 516 -266 553 -283 q 457 -216 478 -248 q 429 -141 436 -184 q 421 -45 421 -97 l 421 0 l 357 0 l 386 86 l 530 86 z "},"\u1d97":{"ha":764,"x_min":126,"x_max":656,"o":"m 126 656 q 221 682 173 673 q 321 690 269 690 q 464 668 401 690 q 569 603 526 646 q 634 495 612 559 q 656 347 656 431 q 633 201 656 267 q 566 88 610 135 q 458 16 522 41 q 313 -9 394 -9 q 215 -2 260 -9 q 126 22 169 5 l 126 132 q 216 98 171 109 q 311 87 262 87 q 401 105 360 87 q 472 155 442 122 q 517 234 501 187 q 533 340 533 281 q 473 525 533 463 q 307 586 413 586 q 126 543 210 586 l 126 656 m 236 90 l 236 -28 q 241 -105 236 -75 q 258 -153 247 -136 q 285 -177 269 -170 q 325 -184 302 -184 q 359 -182 340 -184 q 396 -174 379 -180 l 396 -277 q 363 -282 383 -280 q 319 -283 342 -283 q 221 -266 259 -283 q 163 -216 184 -248 q 134 -141 142 -184 q 127 -45 127 -97 l 127 90 l 236 90 z "},"\u1d98":{"ha":764,"x_min":83,"x_max":681,"o":"m 441 243 q 380 54 441 119 q 193 -12 319 -12 l 193 -84 q 199 -128 193 -111 q 217 -155 206 -145 q 243 -168 229 -164 q 272 -171 257 -171 q 309 -168 290 -171 q 343 -162 328 -165 l 343 -257 q 304 -261 328 -259 q 255 -262 281 -262 q 184 -255 216 -262 q 130 -226 153 -248 q 96 -166 108 -205 q 83 -67 83 -128 l 83 105 q 203 89 149 89 q 292 127 262 89 q 322 231 322 165 l 322 713 q 382 902 322 837 q 566 966 442 966 q 626 963 595 966 q 681 953 656 959 l 681 849 q 561 866 616 866 q 472 828 502 866 q 441 725 441 789 l 441 243 z "},"\u1d99":{"ha":764,"x_min":109,"x_max":891,"o":"m 656 0 l 550 0 l 546 110 q 488 51 515 75 q 433 14 460 28 q 379 -6 406 -1 q 321 -12 351 -12 q 162 50 216 -12 q 109 236 109 111 l 109 681 l 227 681 l 227 245 q 345 89 227 89 q 387 95 366 89 q 430 118 408 102 q 479 161 453 134 q 538 229 505 188 l 538 681 l 656 681 l 656 0 m 731 86 l 731 -28 q 736 -105 731 -75 q 753 -153 742 -136 q 780 -177 764 -170 q 820 -184 797 -184 q 854 -182 835 -184 q 891 -174 874 -180 l 891 -277 q 858 -282 878 -280 q 814 -283 838 -283 q 716 -266 754 -283 q 658 -216 679 -248 q 629 -141 637 -184 q 622 -45 622 -97 l 622 0 l 558 0 l 587 86 l 731 86 z "},"\u1d9a":{"ha":764,"x_min":90,"x_max":665,"o":"m 203 418 l 441 582 l 100 582 l 100 681 l 612 681 l 612 583 l 357 417 q 505 396 446 414 q 600 349 564 378 q 650 284 635 321 q 665 209 665 248 q 648 124 665 164 q 591 53 631 83 q 488 5 552 23 q 330 -12 423 -12 q 269 -10 302 -12 q 199 -5 235 -8 l 199 -84 q 206 -128 199 -111 q 224 -155 213 -145 q 250 -168 235 -164 q 279 -171 264 -171 q 316 -168 296 -171 q 350 -162 335 -165 l 350 -257 q 311 -261 334 -259 q 262 -262 288 -262 q 191 -255 223 -262 q 137 -226 159 -248 q 102 -166 115 -205 q 90 -67 90 -128 l 90 122 q 154 107 120 114 q 221 97 187 101 q 285 90 254 92 q 340 87 316 87 q 436 97 398 87 q 497 123 475 106 q 530 162 520 140 q 539 209 539 184 q 529 255 539 233 q 493 292 518 276 q 429 317 469 308 q 330 326 389 326 l 203 326 l 203 418 z "},"\u1d9b":{"ha":764,"x_min":195,"x_max":581,"o":"m 581 702 q 565 609 581 650 q 522 539 550 568 q 454 495 494 511 q 366 479 415 479 q 299 484 345 479 q 195 500 253 488 l 195 902 l 277 902 l 279 823 q 429 909 342 909 q 494 895 466 909 q 542 852 523 880 q 571 787 562 825 q 581 702 581 749 m 489 697 q 470 805 489 773 q 411 838 450 838 q 377 831 392 838 q 347 813 361 825 q 317 783 332 801 q 285 740 302 764 l 285 567 q 326 556 302 559 q 372 553 349 553 q 417 561 395 553 q 454 586 438 569 q 479 631 470 604 q 489 697 489 659 z "},"\u1d9c":{"ha":764,"x_min":200,"x_max":550,"o":"m 550 503 q 484 486 519 491 q 416 481 449 481 q 256 534 311 481 q 200 692 200 588 q 215 782 200 741 q 259 850 231 822 q 329 895 288 879 q 420 910 370 910 q 489 905 455 910 q 550 890 522 901 l 550 808 q 491 828 523 822 q 428 835 458 835 q 376 826 400 835 q 333 801 351 818 q 303 756 314 783 q 292 694 292 730 q 302 630 292 656 q 329 587 311 604 q 373 564 347 571 q 431 557 399 557 q 493 563 461 557 q 550 583 524 570 l 550 503 z "},"\u1d9d":{"ha":764,"x_min":191,"x_max":572,"o":"m 359 561 q 376 607 365 585 q 405 644 388 628 q 443 669 421 660 q 490 677 465 677 q 549 657 526 677 q 572 595 572 636 q 563 554 572 574 q 534 518 553 534 q 487 492 515 502 q 420 481 458 481 q 419 468 419 476 q 418 451 418 459 q 418 434 418 442 q 418 424 418 427 l 348 424 q 348 436 348 429 q 348 453 348 444 q 349 470 349 461 q 350 484 349 478 q 231 550 271 498 q 191 692 191 602 q 208 785 191 744 q 256 853 226 825 q 328 896 287 881 q 416 910 369 910 q 530 890 480 910 l 530 808 q 475 828 503 822 q 417 835 448 835 q 365 826 389 835 q 323 801 341 818 q 295 756 305 783 q 285 694 285 730 q 288 647 285 669 q 300 609 292 626 q 322 581 308 593 q 359 561 336 568 m 425 550 q 492 562 468 550 q 515 593 515 574 q 509 610 515 604 q 490 617 503 617 q 450 600 469 617 q 425 550 431 582 z "},"\u1d9e":{"ha":764,"x_min":188,"x_max":581,"o":"m 458 809 q 430 813 443 812 q 406 814 417 814 q 309 784 339 814 q 279 690 279 753 q 287 627 279 653 q 309 585 295 602 q 343 562 323 569 q 385 554 362 554 q 464 589 439 554 q 489 692 489 624 q 481 755 489 728 q 458 809 473 783 m 427 882 q 417 902 422 891 q 404 924 411 913 q 391 945 397 935 q 379 962 385 955 l 262 937 l 259 1002 l 336 1019 l 292 1074 l 387 1074 l 417 1036 l 536 1061 l 540 996 l 455 979 q 548 826 516 895 q 581 696 581 758 q 572 625 581 663 q 541 554 564 587 q 479 501 519 522 q 379 479 440 479 q 297 494 333 479 q 237 536 262 509 q 200 601 213 563 q 188 685 188 639 q 200 767 188 730 q 238 830 213 804 q 299 871 262 857 q 382 885 335 885 q 393 885 387 885 q 406 884 399 884 q 418 883 412 884 q 427 882 424 883 z "},"\u1d9f":{"ha":764,"x_min":202,"x_max":585,"o":"m 202 872 q 239 879 219 876 q 280 883 260 882 q 320 886 300 885 q 356 887 340 887 q 460 878 416 887 q 531 851 503 868 q 572 811 559 834 q 585 760 585 787 q 577 720 585 737 q 554 690 569 703 q 519 670 539 677 q 475 659 499 662 q 544 625 523 651 q 566 564 566 599 q 555 520 566 540 q 520 486 544 500 q 460 463 497 471 q 372 455 423 455 q 289 460 333 455 q 208 472 244 465 l 208 547 q 289 533 248 538 q 363 528 329 528 q 415 531 395 528 q 449 539 436 534 q 467 554 462 545 q 473 575 473 563 q 468 600 473 589 q 452 616 464 610 q 419 626 440 623 q 364 629 397 629 l 257 629 l 257 699 l 364 699 q 427 703 402 699 q 465 714 451 707 q 485 733 479 722 q 490 760 490 745 q 484 783 490 773 q 462 800 478 793 q 418 809 446 806 q 348 812 391 812 q 321 811 338 812 q 284 807 304 810 q 242 800 264 804 q 202 791 221 796 l 202 872 z "},"\u1da0":{"ha":764,"x_min":178,"x_max":599,"o":"m 599 994 q 501 1006 542 1006 q 404 903 404 1006 l 404 850 l 586 850 l 586 777 l 404 777 l 404 487 l 313 487 l 313 777 l 178 777 l 178 850 l 313 850 l 313 913 q 326 985 313 954 q 365 1038 340 1017 q 425 1069 389 1059 q 503 1080 460 1080 q 599 1069 547 1080 l 599 994 z "},"\u1da1":{"ha":764,"x_min":178,"x_max":599,"o":"m 178 397 q 276 385 235 385 q 374 488 374 385 l 374 541 l 191 541 l 191 614 l 374 614 l 374 904 l 465 904 l 465 614 l 599 614 l 599 541 l 465 541 l 465 478 q 451 406 465 437 q 413 353 437 374 q 353 322 388 332 q 274 311 317 311 q 178 321 230 311 l 178 397 z "},"\u1da2":{"ha":764,"x_min":192,"x_max":620,"o":"m 549 821 q 568 787 562 806 q 575 745 575 768 q 563 686 575 713 q 528 641 550 660 q 474 612 505 622 q 404 602 442 602 q 352 606 376 602 q 315 619 328 611 q 300 597 306 608 q 294 574 294 587 q 311 549 294 558 q 353 538 327 540 l 461 534 q 523 526 494 533 q 573 505 551 518 q 606 471 594 491 q 618 426 618 452 q 606 373 618 398 q 567 329 594 348 q 498 299 541 311 q 396 288 456 288 q 300 296 339 288 q 237 319 261 304 q 202 353 213 333 q 192 396 192 372 q 207 448 192 427 q 249 488 222 470 q 218 522 228 503 q 209 561 209 541 q 222 610 209 588 q 254 652 235 633 q 228 691 237 671 q 219 742 219 711 q 232 801 219 774 q 270 846 245 827 q 326 875 294 865 q 397 885 359 885 q 429 883 413 885 q 454 880 446 882 l 620 880 l 620 821 l 549 821 m 286 402 q 315 362 286 372 q 401 353 344 353 q 461 358 437 353 q 499 372 485 363 q 518 393 513 380 q 524 418 524 405 q 502 451 524 444 q 435 460 479 458 l 330 466 q 307 449 316 456 q 294 434 298 441 q 288 419 290 427 q 286 402 286 411 m 309 743 q 332 684 309 703 q 397 665 355 665 q 464 686 443 665 q 485 743 485 708 q 462 801 485 784 q 397 818 439 818 q 330 797 351 818 q 309 743 309 776 z "},"\u1da3":{"ha":764,"x_min":209,"x_max":562,"o":"m 209 904 l 298 904 l 298 651 q 313 578 298 602 q 362 555 328 555 q 389 559 376 555 q 414 573 401 563 q 440 600 427 583 q 472 641 454 616 l 472 904 l 562 904 l 562 317 l 472 317 l 472 487 l 475 552 q 408 495 440 511 q 340 479 376 479 q 243 517 277 479 q 209 631 209 555 l 209 904 z "},"\u1da4":{"ha":764,"x_min":207,"x_max":553,"o":"m 241 737 l 345 737 l 345 832 l 221 832 l 221 904 l 429 904 l 429 737 l 526 737 l 526 667 l 429 667 l 429 559 l 553 559 l 553 487 l 207 487 l 207 559 l 345 559 l 345 667 l 241 667 l 241 737 m 364 1092 q 389 1087 377 1092 q 409 1074 400 1082 q 422 1054 417 1065 q 427 1029 427 1042 q 409 985 427 1003 q 364 967 391 967 q 320 985 338 967 q 302 1029 302 1003 q 307 1054 302 1042 q 320 1074 311 1065 q 339 1087 328 1082 q 364 1092 351 1092 z "},"\u1da5":{"ha":764,"x_min":196,"x_max":567,"o":"m 567 490 q 532 483 551 485 q 490 481 512 481 q 430 488 458 481 q 381 511 402 495 q 349 553 361 527 q 337 615 337 578 l 337 830 l 196 830 l 196 904 l 427 904 l 427 641 q 445 576 427 596 q 501 555 464 555 q 536 558 519 555 q 567 566 553 561 l 567 490 z "},"\u1da6":{"ha":764,"x_min":212,"x_max":551,"o":"m 338 956 l 212 956 l 212 1030 l 551 1030 l 551 956 l 426 956 l 426 562 l 551 562 l 551 487 l 212 487 l 212 562 l 338 562 l 338 956 z "},"\u1da7":{"ha":764,"x_min":212,"x_max":551,"o":"m 233 805 l 338 805 l 338 956 l 212 956 l 212 1030 l 551 1030 l 551 956 l 426 956 l 426 805 l 531 805 l 531 734 l 426 734 l 426 562 l 551 562 l 551 487 l 212 487 l 212 562 l 338 562 l 338 734 l 233 734 l 233 805 z "},"\u1da8":{"ha":764,"x_min":174,"x_max":526,"o":"m 526 513 q 506 424 526 462 q 444 366 486 386 q 451 342 446 357 q 456 317 455 328 l 374 317 q 371 329 372 322 q 367 342 370 336 q 317 337 343 337 q 264 344 290 337 q 218 366 238 351 q 186 401 198 380 q 174 451 174 422 q 201 521 174 497 q 277 545 229 545 q 329 536 307 545 q 367 511 351 526 q 394 477 383 496 q 414 440 406 458 q 433 473 430 452 q 435 522 435 494 l 435 819 l 231 819 l 231 904 l 526 904 l 526 513 m 346 410 q 336 438 341 425 q 322 462 330 452 q 304 479 315 473 q 279 486 294 486 q 252 477 262 486 q 241 452 241 469 q 248 431 241 440 q 264 417 254 422 q 287 408 274 411 q 313 406 300 406 q 330 407 321 406 q 346 410 338 408 m 461 1092 q 486 1087 474 1092 q 506 1074 497 1082 q 519 1054 514 1065 q 524 1029 524 1042 q 506 985 524 1003 q 461 967 488 967 q 417 985 435 967 q 399 1029 399 1003 q 404 1054 399 1042 q 417 1074 408 1065 q 436 1087 425 1082 q 461 1092 448 1092 z "},"\u1da9":{"ha":764,"x_min":211,"x_max":551,"o":"m 425 1074 l 425 473 q 436 412 425 433 q 487 392 448 392 q 524 394 507 392 q 551 398 542 397 l 551 321 q 535 318 545 319 q 515 316 526 317 q 494 315 505 315 q 477 314 484 314 q 370 351 406 314 q 334 460 334 388 l 334 1015 l 211 1015 l 211 1074 l 425 1074 z "},"\u1daa":{"ha":764,"x_min":190,"x_max":549,"o":"m 190 487 l 190 561 l 334 561 l 334 1002 l 204 1002 l 204 1074 l 425 1074 l 425 561 l 549 561 l 549 450 q 516 350 549 387 q 411 313 484 313 q 384 314 397 313 q 363 317 371 315 l 363 396 q 385 391 374 393 q 405 390 395 390 q 445 405 431 390 q 458 459 458 420 l 458 487 l 190 487 z "},"\u1dab":{"ha":764,"x_min":238,"x_max":561,"o":"m 561 487 l 238 487 l 238 904 l 330 904 l 330 564 l 561 564 l 561 487 z "},"\u1dac":{"ha":764,"x_min":158,"x_max":605,"o":"m 522 476 l 522 796 q 492 838 522 838 q 477 833 484 838 q 463 817 470 828 q 447 787 455 805 q 427 741 438 768 l 427 487 l 343 487 l 343 797 q 336 828 343 819 q 313 838 328 838 q 299 834 306 838 q 284 819 292 830 q 266 789 276 808 q 241 741 256 770 l 241 487 l 158 487 l 158 904 l 230 904 l 233 825 q 255 865 244 848 q 277 892 266 882 q 302 907 289 902 q 330 911 315 911 q 387 890 366 911 q 409 821 409 868 q 429 860 419 843 q 451 888 439 877 q 476 906 463 900 q 509 911 490 911 q 577 881 550 911 q 605 791 605 851 l 605 464 q 598 405 605 432 q 575 357 591 377 q 534 325 559 336 q 473 313 509 313 q 441 315 456 313 q 414 318 425 316 l 414 397 q 443 391 432 392 q 466 390 454 390 q 491 393 480 390 q 508 404 501 395 q 518 430 515 413 q 522 476 522 447 z "},"\u1dad":{"ha":764,"x_min":158,"x_max":605,"o":"m 241 905 l 241 595 q 271 553 241 553 q 286 558 279 553 q 300 575 293 564 q 316 605 308 587 q 336 650 325 623 l 336 905 l 420 905 l 420 595 q 427 563 420 573 q 450 553 435 553 q 464 557 457 553 q 479 572 471 562 q 497 602 487 583 q 522 650 507 621 l 522 905 l 605 905 l 605 316 l 530 316 l 530 567 q 508 527 518 543 q 486 500 497 510 q 461 485 474 490 q 433 480 448 480 q 376 502 397 480 q 354 570 354 524 q 334 532 344 549 q 312 503 323 515 q 287 486 300 492 q 254 480 273 480 q 185 510 213 480 q 158 601 158 541 l 158 905 l 241 905 z "},"\u1dae":{"ha":764,"x_min":113,"x_max":562,"o":"m 298 450 q 266 350 298 387 q 161 313 233 313 q 134 314 146 313 q 113 317 121 315 l 113 396 q 134 391 123 393 q 155 390 145 390 q 179 395 169 390 q 196 411 189 399 q 205 441 202 422 q 209 490 209 460 l 209 904 l 291 904 l 294 837 q 354 894 324 876 q 420 911 384 911 q 524 874 486 911 q 562 760 562 836 l 562 487 l 472 487 l 472 740 q 457 812 472 789 q 406 836 443 836 q 380 833 393 836 q 356 820 368 829 q 329 796 343 811 q 299 757 315 781 l 298 450 z "},"\u1daf":{"ha":764,"x_min":209,"x_max":658,"o":"m 562 487 q 566 440 562 458 q 576 410 569 421 q 593 394 583 399 q 616 390 603 390 q 637 391 626 390 q 658 396 648 393 l 658 317 q 637 314 650 315 q 610 313 625 313 q 505 350 538 313 q 472 450 472 387 l 472 740 q 457 812 472 789 q 406 836 443 836 q 380 833 393 836 q 356 820 368 829 q 329 796 343 811 q 299 757 315 781 l 299 487 l 209 487 l 209 904 l 291 904 l 294 837 q 354 894 324 876 q 420 911 384 911 q 524 874 486 911 q 562 760 562 836 l 562 487 z "},"\u1db0":{"ha":764,"x_min":184,"x_max":574,"o":"m 574 487 l 465 487 l 267 808 l 267 487 l 184 487 l 184 904 l 293 904 l 492 585 l 492 904 l 574 904 l 574 487 z "},"\u1db1":{"ha":764,"x_min":177,"x_max":587,"o":"m 587 699 q 571 610 587 650 q 529 541 556 570 q 463 495 501 511 q 378 479 425 479 q 296 493 333 479 q 233 534 259 507 q 192 601 206 562 q 177 693 177 641 q 192 782 177 742 q 234 851 207 822 q 300 896 262 880 q 386 911 339 911 q 468 898 431 911 q 531 857 505 884 q 572 790 557 830 q 587 699 587 751 m 382 551 q 431 561 411 551 q 465 586 452 570 q 486 623 478 602 q 496 665 493 644 l 268 665 q 302 581 273 610 q 382 551 330 551 m 382 840 q 334 831 354 840 q 301 807 315 822 q 280 773 288 792 q 269 734 273 753 l 495 734 q 459 812 488 783 q 382 840 431 840 z "},"\u1db2":{"ha":764,"x_min":154,"x_max":609,"o":"m 420 317 l 342 317 l 342 481 q 201 542 249 488 q 154 694 154 597 q 169 785 154 746 q 210 850 184 823 q 270 891 236 876 q 342 911 304 906 l 342 1074 l 420 1074 l 420 911 q 562 850 514 904 q 609 699 609 795 q 594 607 609 646 q 553 542 578 568 q 493 500 527 515 q 420 481 458 486 l 420 317 m 342 842 q 295 825 314 838 q 264 794 275 813 q 248 751 253 776 q 243 697 243 726 q 248 639 243 665 q 263 595 252 614 q 294 566 275 577 q 342 551 313 555 l 342 842 m 420 551 q 468 567 448 555 q 499 598 487 579 q 515 641 511 616 q 520 694 520 665 q 516 752 520 727 q 500 797 511 778 q 469 826 488 815 q 420 842 450 838 l 420 551 z "},"\u1db3":{"ha":764,"x_min":208,"x_max":543,"o":"m 543 601 q 529 545 543 568 q 493 508 516 522 q 438 486 469 493 q 369 479 406 479 q 330 480 349 479 q 294 483 311 481 l 294 448 q 307 400 294 414 q 349 387 320 387 q 368 388 357 387 q 389 393 379 389 l 389 317 q 342 313 372 313 q 280 323 305 313 q 238 351 254 333 q 215 395 222 370 q 208 453 208 421 l 208 572 q 287 556 245 562 q 366 551 330 551 q 409 553 392 551 q 436 562 426 556 q 450 575 446 567 q 454 595 454 583 q 449 615 454 606 q 433 631 444 623 q 403 646 422 639 q 358 662 385 653 q 304 681 330 671 q 258 706 278 691 q 226 741 238 720 q 214 793 214 762 q 223 841 214 819 q 254 878 233 863 q 307 903 275 894 q 382 911 338 911 q 451 909 419 911 q 515 900 483 907 l 515 825 q 451 838 481 833 q 397 842 420 842 q 352 839 370 842 q 322 831 334 836 q 306 818 311 826 q 301 798 301 809 q 306 779 301 787 q 322 763 310 770 q 355 749 334 756 q 410 731 376 741 q 472 707 447 720 q 513 679 498 694 q 536 643 529 663 q 543 601 543 624 z "},"\u1db4":{"ha":764,"x_min":190,"x_max":573,"o":"m 427 468 q 415 401 427 430 q 381 353 403 372 q 329 323 359 333 q 261 313 298 313 q 224 315 243 313 q 190 321 205 317 l 190 397 q 263 387 231 387 q 318 411 300 387 q 336 474 336 434 l 336 924 q 348 991 336 962 q 382 1040 360 1020 q 435 1069 404 1059 q 503 1080 465 1080 q 539 1077 520 1080 q 573 1071 558 1075 l 573 994 q 535 1002 553 999 q 500 1004 516 1004 q 445 981 463 1004 q 427 918 427 958 l 427 468 z "},"\u1db5":{"ha":764,"x_min":138,"x_max":532,"o":"m 411 481 q 293 516 332 481 q 255 626 255 552 l 255 844 l 138 844 l 138 904 l 255 904 l 255 1019 l 345 1038 l 345 904 l 532 904 l 532 844 l 345 844 l 345 631 q 439 543 345 543 q 482 546 458 543 q 532 555 506 549 l 532 415 q 500 338 532 361 q 414 315 469 315 q 396 316 406 315 q 377 318 387 317 q 360 320 368 319 q 348 322 352 321 l 348 393 q 373 386 358 389 q 405 383 389 383 q 421 384 413 383 q 436 390 430 385 q 447 405 443 395 q 451 433 451 415 l 451 483 q 411 481 431 481 z "},"\u1db6":{"ha":764,"x_min":141,"x_max":622,"o":"m 141 775 l 208 775 l 208 904 l 294 904 l 294 775 l 471 775 l 471 904 l 557 904 l 557 775 l 622 775 l 622 705 l 557 705 l 557 487 l 481 487 l 479 554 q 443 518 460 532 q 407 495 425 504 q 370 483 389 487 q 329 479 351 479 q 283 488 305 479 q 244 514 261 496 q 217 557 227 531 q 208 618 208 583 l 208 705 l 141 705 l 141 775 m 356 555 q 415 575 385 555 q 471 627 444 595 l 471 705 l 294 705 l 294 651 q 308 579 294 603 q 356 555 321 555 z "},"\u1db7":{"ha":764,"x_min":170,"x_max":593,"o":"m 378 553 q 433 563 410 553 q 470 592 456 574 q 491 633 484 610 q 498 681 498 656 q 494 735 498 713 q 483 775 491 758 q 461 808 475 793 q 425 839 447 823 l 425 904 l 593 904 l 593 833 l 506 833 q 568 759 551 801 q 585 676 585 717 q 571 593 585 630 q 530 531 556 557 q 465 493 503 506 q 380 479 427 479 q 295 493 333 479 q 232 531 258 506 q 192 593 205 557 q 178 676 178 630 q 195 759 178 717 q 258 833 213 801 l 170 833 l 170 904 l 338 904 l 338 839 q 303 808 317 823 q 281 775 289 793 q 269 735 273 758 q 266 681 266 713 q 272 633 266 656 q 291 592 277 610 q 325 563 304 574 q 378 553 347 553 z "},"\u1db8":{"ha":764,"x_min":184,"x_max":579,"o":"m 579 676 q 566 595 579 631 q 528 533 553 558 q 466 493 503 507 q 380 479 429 479 q 290 493 327 479 q 229 530 252 506 q 195 589 205 555 q 184 665 184 623 l 184 904 l 275 904 l 275 685 q 280 629 275 653 q 296 589 284 605 q 327 564 307 572 q 379 555 347 555 q 463 589 438 555 q 488 686 488 623 l 488 904 l 579 904 l 579 676 z "},"\u1db9":{"ha":764,"x_min":184,"x_max":579,"o":"m 579 676 q 566 595 579 631 q 527 533 553 558 q 464 493 502 507 q 378 479 427 479 q 290 493 326 479 q 230 530 253 506 q 195 589 206 555 q 184 665 184 623 l 184 904 l 275 904 l 275 684 q 280 628 275 652 q 296 588 284 604 q 328 564 308 572 q 380 555 348 555 q 464 589 439 555 q 488 685 488 623 l 488 751 q 486 792 488 774 q 477 822 484 810 q 459 840 471 833 q 427 846 447 846 q 403 844 414 846 q 382 840 392 842 l 382 903 q 410 908 395 906 q 440 910 425 910 q 544 874 508 910 q 579 766 579 838 l 579 676 z "},"\u1dba":{"ha":764,"x_min":148,"x_max":613,"o":"m 148 487 l 324 904 l 437 904 l 613 487 l 509 487 l 379 814 l 248 487 l 148 487 z "},"\u1dbb":{"ha":764,"x_min":204,"x_max":560,"o":"m 560 487 l 204 487 l 204 553 l 439 830 l 210 830 l 210 904 l 547 904 l 547 834 l 315 562 l 560 562 l 560 487 z "},"\u1dbc":{"ha":764,"x_min":204,"x_max":644,"o":"m 560 562 l 560 455 q 572 408 560 420 q 606 395 584 395 q 644 401 621 395 l 644 330 q 618 326 631 328 q 593 325 606 325 q 545 331 567 325 q 507 353 522 338 q 482 391 491 368 q 473 449 473 414 l 473 487 l 204 487 l 204 553 l 439 830 l 210 830 l 210 904 l 547 904 l 547 834 l 315 562 l 560 562 z "},"\u1dbd":{"ha":764,"x_min":204,"x_max":631,"o":"m 382 487 l 204 487 l 204 553 l 439 830 l 210 830 l 210 904 l 547 904 l 547 834 l 315 562 l 397 562 q 414 594 404 575 q 441 630 425 613 q 479 660 457 648 q 532 671 502 671 q 568 667 550 671 q 600 652 585 663 q 623 625 614 642 q 631 583 631 608 q 624 541 631 559 q 602 511 616 523 q 570 493 589 499 q 530 487 551 487 l 464 487 q 457 461 460 475 q 454 431 454 448 l 370 431 q 382 487 372 460 m 532 562 q 561 585 561 562 q 527 610 561 610 q 508 606 516 610 q 493 594 500 601 q 482 578 487 587 q 474 562 477 569 l 532 562 z "},"\u1dbe":{"ha":764,"x_min":227,"x_max":566,"o":"m 566 525 q 548 442 566 475 q 499 389 530 409 q 424 362 467 370 q 331 354 381 354 q 227 360 275 354 l 227 440 q 277 433 253 435 q 330 431 300 431 q 398 436 371 431 q 443 451 426 441 q 466 479 459 462 q 473 521 473 496 q 466 565 473 546 q 440 597 458 585 q 394 617 422 610 q 325 623 366 623 l 301 623 l 301 686 l 434 830 l 227 830 l 227 904 l 542 904 l 542 831 l 403 687 q 467 674 437 684 q 518 645 496 664 q 553 596 541 625 q 566 525 566 566 z "},"\u1dbf":{"ha":764,"x_min":178,"x_max":585,"o":"m 585 783 q 571 663 585 718 q 529 566 556 607 q 464 503 502 526 q 379 479 426 479 q 297 498 334 479 q 234 553 260 516 q 193 645 208 589 q 178 774 178 700 q 193 896 178 840 q 235 993 208 952 q 300 1057 262 1034 q 385 1080 338 1080 q 466 1061 429 1080 q 530 1005 503 1042 q 571 913 556 968 q 585 783 585 857 m 494 826 q 484 913 492 878 q 461 968 475 947 q 427 997 447 988 q 382 1005 408 1005 q 334 992 353 1005 q 301 956 314 979 q 280 900 288 932 q 271 826 273 867 l 494 826 m 269 752 q 278 659 270 697 q 300 598 286 621 q 335 564 314 574 q 382 553 355 553 q 433 568 412 553 q 468 609 454 583 q 487 672 481 635 q 495 752 494 708 l 269 752 z "},"\u02b0":{"ha":764,"x_min":189,"x_max":574,"o":"m 574 487 l 491 487 l 491 735 q 470 805 491 782 q 411 827 450 827 q 379 824 394 827 q 349 810 365 820 q 315 785 333 801 q 272 745 296 769 l 272 487 l 189 487 l 189 1049 l 272 1049 l 272 886 l 269 823 q 345 878 308 863 q 425 894 382 894 q 535 858 496 894 q 574 747 574 821 l 574 487 z "},"\u02b1":{"ha":764,"x_min":189,"x_max":574,"o":"m 272 905 l 272 886 l 269 823 q 345 878 308 863 q 425 893 382 893 q 535 857 496 893 q 574 747 574 821 l 574 487 l 491 487 l 491 735 q 470 804 491 782 q 411 827 450 827 q 379 823 394 827 q 349 810 365 819 q 315 785 333 800 q 272 745 296 769 l 272 487 l 189 487 l 189 911 q 197 975 189 948 q 224 1019 205 1001 q 273 1045 243 1036 q 345 1053 302 1053 q 388 1051 366 1053 q 427 1046 410 1049 l 427 978 q 342 988 380 988 q 308 982 321 988 q 286 966 294 977 q 275 940 278 955 q 272 905 272 924 z "},"\u02b2":{"ha":764,"x_min":205,"x_max":559,"o":"m 544 886 l 544 494 q 530 419 544 452 q 488 365 515 387 q 422 331 461 342 q 334 319 383 319 q 266 325 299 319 q 205 340 232 330 l 205 420 q 272 399 235 406 q 342 392 308 392 q 429 420 397 392 q 460 505 460 449 l 460 819 l 224 819 l 224 886 l 544 886 m 493 1054 q 540 1038 521 1054 q 559 999 559 1022 q 554 978 559 987 q 540 961 549 968 q 519 949 531 954 q 493 945 507 945 q 447 961 465 945 q 428 999 428 977 q 447 1038 428 1022 q 493 1054 465 1054 z "},"\u02b3":{"ha":764,"x_min":184,"x_max":581,"o":"m 184 886 l 260 886 l 262 812 q 346 874 305 855 q 429 893 387 893 q 543 853 504 893 q 578 734 581 813 l 494 734 q 490 778 495 760 q 476 805 486 795 q 451 820 466 815 q 418 824 437 824 q 349 803 384 824 q 268 734 314 783 l 268 487 l 184 487 l 184 886 z "},"\u02b4":{"ha":764,"x_min":182,"x_max":579,"o":"m 579 487 l 503 487 l 500 560 q 416 498 457 517 q 333 479 376 479 q 220 519 258 479 q 185 639 182 559 l 269 639 q 273 595 268 612 q 287 568 277 578 q 312 553 297 557 q 345 549 326 549 q 379 554 362 549 q 414 570 395 559 q 452 598 432 581 q 494 640 471 615 l 494 886 l 579 886 l 579 487 z "},"\u02b5":{"ha":764,"x_min":127,"x_max":633,"o":"m 441 557 q 360 497 399 514 q 279 479 321 479 q 166 519 204 479 q 131 639 127 559 l 214 639 q 218 595 214 612 q 233 568 223 578 q 257 553 243 557 q 291 549 272 549 q 325 554 308 549 q 359 570 341 559 q 397 598 378 581 q 440 640 417 615 l 440 886 l 525 886 l 525 481 q 528 436 525 454 q 539 408 532 418 q 559 394 547 398 q 587 390 570 390 q 609 391 597 390 q 633 396 622 392 l 633 324 q 610 322 624 323 q 579 321 595 321 q 511 331 537 321 q 469 360 484 342 q 448 404 454 378 q 442 460 442 430 l 441 557 z "},"\u02b6":{"ha":764,"x_min":181,"x_max":582,"o":"m 522 796 q 500 765 510 779 q 482 742 491 752 q 463 726 473 732 q 439 716 452 720 q 527 678 499 703 q 554 604 554 652 q 505 515 554 543 q 348 487 456 487 l 181 487 l 181 886 l 265 886 l 265 743 l 305 743 q 374 752 344 743 q 422 789 404 762 l 486 886 l 582 886 l 522 796 m 466 614 q 457 649 466 636 q 430 668 448 661 q 389 676 413 674 q 334 677 364 677 l 265 677 l 265 552 l 346 552 q 397 554 374 552 q 434 563 419 556 q 458 581 450 569 q 466 614 466 593 z "},"\u02b7":{"ha":764,"x_min":113,"x_max":650,"o":"m 650 886 l 603 487 l 482 487 l 378 720 l 277 487 l 161 487 l 113 886 l 202 886 l 235 549 l 340 810 l 420 810 l 535 549 l 565 886 l 650 886 z "},"\u02b8":{"ha":764,"x_min":144,"x_max":619,"o":"m 619 886 l 455 529 q 403 435 430 474 q 344 371 376 396 q 274 333 313 345 q 189 321 236 321 q 166 321 176 321 q 144 323 156 321 l 144 397 q 167 394 155 395 q 193 393 179 393 q 236 397 216 393 q 274 412 256 401 q 308 440 292 422 q 339 487 323 458 l 148 886 l 243 886 l 363 622 l 388 560 l 416 624 l 528 886 l 619 886 z "},"\u02bb":{"ha":764,"x_min":275,"x_max":603,"o":"m 603 873 q 536 867 568 874 q 478 846 503 861 q 439 810 454 831 q 424 760 424 788 q 434 714 424 731 q 456 682 444 696 q 478 649 468 667 q 488 604 488 632 q 482 574 488 590 q 466 546 477 559 q 437 525 454 533 q 396 517 420 517 q 350 527 372 517 q 312 557 328 536 q 285 608 295 577 q 275 679 275 638 q 296 787 275 735 q 357 879 316 840 q 459 943 398 919 q 603 966 521 966 l 603 873 z "},"\u02bc":{"ha":764,"x_min":161,"x_max":489,"o":"m 161 610 q 229 615 196 608 q 286 637 261 623 q 326 673 311 652 q 340 724 340 695 q 331 770 340 752 q 309 802 321 787 q 287 834 296 817 q 277 879 277 851 q 282 909 277 894 q 299 937 288 924 q 327 958 310 950 q 368 966 345 966 q 414 957 392 966 q 453 927 436 947 q 479 876 469 907 q 489 804 489 846 q 468 696 489 748 q 407 604 448 644 q 304 541 366 564 q 161 517 243 517 l 161 610 z "},"\u02bd":{"ha":764,"x_min":251,"x_max":578,"o":"m 578 517 q 436 541 497 517 q 333 604 374 564 q 272 696 292 644 q 251 804 251 748 q 261 876 251 846 q 287 927 271 907 q 326 957 304 947 q 372 966 348 966 q 413 958 395 966 q 441 937 430 950 q 458 909 452 924 q 463 879 463 894 q 453 834 463 851 q 431 802 444 817 q 409 770 419 787 q 399 724 399 752 q 414 673 399 695 q 454 637 429 652 q 511 615 479 623 q 578 610 544 608 l 578 517 z "},"\u02be":{"ha":764,"x_min":315,"x_max":449,"o":"m 317 762 q 362 780 347 762 q 377 825 377 798 q 362 873 377 854 q 315 892 348 892 l 315 949 q 413 917 378 949 q 449 830 449 885 q 440 780 449 802 q 414 740 431 757 q 373 714 397 723 q 317 705 348 705 l 317 762 z "},"\u02bf":{"ha":764,"x_min":315,"x_max":449,"o":"m 447 705 q 391 714 415 705 q 349 740 366 723 q 323 780 332 757 q 315 830 315 802 q 350 917 315 885 q 449 949 386 949 l 449 892 q 401 873 416 892 q 387 825 387 854 q 401 780 387 798 q 447 762 416 762 l 447 705 z "},"\u02c0":{"ha":764,"x_min":205,"x_max":530,"o":"m 530 759 q 518 685 530 719 q 484 626 507 651 q 427 586 460 601 q 350 568 393 570 l 345 468 l 260 468 l 253 652 l 315 652 q 368 659 347 652 q 401 680 389 667 q 420 711 414 693 q 426 751 426 729 q 410 813 426 787 q 367 854 395 838 q 302 878 340 871 q 218 886 264 886 l 205 886 l 205 979 l 226 979 q 366 959 308 979 q 460 906 423 938 q 513 835 496 874 q 530 759 530 796 z "},"\u02c1":{"ha":764,"x_min":234,"x_max":558,"o":"m 234 759 q 251 835 234 796 q 304 906 267 874 q 398 959 340 938 q 538 979 456 979 l 558 979 l 558 886 l 545 886 q 462 878 500 886 q 396 854 424 871 q 353 813 369 838 q 338 751 338 787 q 343 711 338 729 q 362 680 349 693 q 396 659 375 667 q 448 652 417 652 l 511 652 l 504 468 l 418 468 l 414 568 q 336 586 370 570 q 280 626 303 601 q 245 685 257 651 q 234 759 234 719 z "},"\u02c2":{"ha":764,"x_min":93,"x_max":623,"o":"m 623 64 l 549 -11 l 93 370 l 549 750 l 623 675 l 253 371 l 623 64 z "},"\u02c3":{"ha":764,"x_min":142,"x_max":671,"o":"m 142 675 l 215 750 l 671 370 l 215 -11 l 142 64 l 511 368 l 142 675 z "},"\u02c4":{"ha":764,"x_min":1,"x_max":762,"o":"m 76 538 l 1 603 l 382 1059 l 762 603 l 687 538 l 383 899 l 76 538 z "},"\u02c5":{"ha":764,"x_min":1,"x_max":762,"o":"m 688 1059 l 762 994 l 382 538 l 1 994 l 77 1059 l 380 699 l 688 1059 z "},"\u02c8":{"ha":764,"x_min":337,"x_max":427,"o":"m 427 1060 l 427 755 l 337 755 l 337 1060 l 427 1060 z "},"\u02ca":{"ha":764,"x_min":0,"x_max":646,"o":"m 646 958 l 429 794 l 311 794 l 475 958 l 646 958 m 0 681 z "},"\u02cb":{"ha":764,"x_min":0,"x_max":453,"o":"m 453 794 l 335 794 l 118 958 l 289 958 l 453 794 m 0 681 z "},"\u02cc":{"ha":764,"x_min":337,"x_max":427,"o":"m 427 -41 l 427 -345 l 337 -345 l 337 -41 l 427 -41 z "},"\u02cd":{"ha":764,"x_min":0,"x_max":559,"o":"m 559 -179 l 204 -179 l 204 -89 l 559 -89 l 559 -179 m 0 -329 z "},"\u02ce":{"ha":764,"x_min":0,"x_max":453,"o":"m 453 -248 l 335 -248 l 118 -84 l 289 -84 l 453 -248 m 0 -361 z "},"\u02cf":{"ha":764,"x_min":0,"x_max":646,"o":"m 646 -83 l 429 -248 l 311 -248 l 475 -83 l 646 -83 m 0 -361 z "},"\u02d0":{"ha":764,"x_min":292,"x_max":471,"o":"m 471 646 l 390 507 l 373 507 l 292 646 l 471 646 m 471 0 l 292 0 l 373 139 l 389 139 l 471 0 z "},"\u02d1":{"ha":764,"x_min":292,"x_max":471,"o":"m 471 395 l 390 256 l 373 256 l 292 395 l 471 395 z "},"\u02d2":{"ha":764,"x_min":315,"x_max":449,"o":"m 317 258 q 362 276 347 258 q 377 321 377 294 q 362 368 377 349 q 315 387 348 387 l 315 445 q 413 413 378 445 q 449 326 449 380 q 440 275 449 298 q 414 235 431 252 q 373 209 397 218 q 317 200 348 200 l 317 258 z "},"\u02d3":{"ha":764,"x_min":315,"x_max":449,"o":"m 447 200 q 391 209 415 200 q 349 235 366 218 q 323 275 332 252 q 315 326 315 298 q 350 413 315 380 q 449 445 386 445 l 449 387 q 401 368 416 387 q 387 321 387 349 q 401 276 387 294 q 447 258 416 258 l 447 200 z "},"\u02d4":{"ha":764,"x_min":239,"x_max":525,"o":"m 239 196 l 239 269 l 345 269 l 345 447 l 419 447 l 419 269 l 525 269 l 525 196 l 239 196 z "},"\u02d5":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 447 l 525 374 l 419 374 l 419 196 l 345 196 l 345 374 l 239 374 l 239 447 l 525 447 z "},"\u02d6":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 357 l 525 285 l 419 285 l 419 196 l 345 196 l 345 285 l 239 285 l 239 357 l 345 357 l 345 447 l 419 447 l 419 357 l 525 357 z "},"\u02d7":{"ha":764,"x_min":239,"x_max":525,"o":"m 525 357 l 525 285 l 239 285 l 239 357 l 525 357 z "},"\u02de":{"ha":764,"x_min":233,"x_max":530,"o":"m 378 473 l 397 418 q 423 372 407 386 q 467 357 439 357 q 530 370 497 357 l 530 290 q 495 281 514 285 q 452 278 475 278 q 387 295 416 278 q 341 342 357 312 l 327 368 l 233 344 l 233 437 l 378 473 z "},"\u02df":{"ha":764,"x_min":250,"x_max":513,"o":"m 462 997 l 513 945 l 434 866 l 513 786 l 460 733 l 381 813 l 302 733 l 250 785 l 330 864 l 250 944 l 303 997 l 382 917 l 462 997 z "},"\u02e0":{"ha":764,"x_min":148,"x_max":619,"o":"m 148 886 l 243 886 l 389 642 l 528 886 l 619 886 l 435 575 q 486 503 467 538 q 505 424 505 468 q 496 379 505 399 q 473 344 488 359 q 436 320 458 329 q 388 312 414 312 q 339 320 361 312 q 302 344 317 329 q 278 379 287 359 q 270 425 270 400 q 288 504 270 468 q 339 575 307 541 l 148 886 m 389 380 q 411 385 402 380 q 424 398 419 390 q 430 416 429 406 q 432 435 432 426 q 428 463 432 450 q 417 488 423 477 q 404 510 411 500 q 391 527 397 519 q 378 512 386 521 q 362 490 370 503 q 349 464 355 478 q 344 433 344 449 q 346 414 344 424 q 353 397 348 405 q 367 385 358 390 q 389 380 375 380 z "},"\u02e1":{"ha":764,"x_min":215,"x_max":549,"o":"m 346 988 l 228 988 l 228 1049 l 430 1049 l 430 549 l 549 549 l 549 487 l 215 487 l 215 549 l 346 549 l 346 988 z "},"\u02e2":{"ha":764,"x_min":204,"x_max":555,"o":"m 555 597 q 538 543 555 566 q 494 507 521 521 q 433 486 467 492 q 366 479 399 479 q 280 483 317 479 q 204 495 243 487 l 204 566 q 283 551 245 556 q 363 546 321 546 q 446 560 422 546 q 469 600 469 574 q 461 620 469 612 q 439 634 453 628 q 406 644 425 640 q 368 654 388 649 q 312 668 340 660 q 261 691 284 677 q 224 726 239 705 q 210 780 210 747 q 218 817 210 797 q 247 854 226 837 q 306 882 269 871 q 401 894 343 894 q 459 891 429 894 q 527 882 490 888 l 527 813 q 399 828 452 828 q 348 824 368 828 q 316 813 328 820 q 300 797 304 806 q 295 777 295 788 q 305 756 295 764 q 331 741 315 747 q 368 730 347 735 q 411 720 389 726 q 463 705 437 714 q 509 683 488 696 q 542 648 529 669 q 555 597 555 628 z "},"\u02e3":{"ha":764,"x_min":158,"x_max":606,"o":"m 606 487 l 495 487 l 379 640 l 265 487 l 158 487 l 323 688 l 167 886 l 273 886 l 385 733 l 495 886 l 597 886 l 438 686 l 606 487 z "},"\u02e4":{"ha":764,"x_min":231,"x_max":529,"o":"m 231 762 q 246 826 231 795 q 295 881 261 857 q 384 920 330 905 q 516 935 438 935 l 529 935 l 529 865 l 517 865 q 439 860 475 865 q 378 842 404 854 q 338 807 353 829 q 324 755 324 786 q 333 723 324 738 q 358 696 341 707 q 398 678 374 685 q 454 671 422 671 l 496 671 l 490 487 l 412 487 l 408 602 q 335 616 368 604 q 279 648 302 628 q 243 697 256 669 q 231 762 231 726 z "},"\u02e5":{"ha":764,"x_min":218,"x_max":546,"o":"m 546 0 l 440 0 l 440 834 l 218 834 l 218 940 l 546 940 l 546 0 z "},"\u02e6":{"ha":764,"x_min":218,"x_max":546,"o":"m 546 0 l 440 0 l 440 638 l 218 638 l 218 745 l 440 745 l 440 940 l 546 940 l 546 0 z "},"\u02e7":{"ha":764,"x_min":218,"x_max":546,"o":"m 546 0 l 440 0 l 440 418 l 218 418 l 218 523 l 440 523 l 440 940 l 546 940 l 546 0 z "},"\u02e8":{"ha":764,"x_min":218,"x_max":546,"o":"m 546 0 l 440 0 l 440 195 l 218 195 l 218 301 l 440 301 l 440 940 l 546 940 l 546 0 z "},"\u02e9":{"ha":764,"x_min":218,"x_max":547,"o":"m 547 0 l 218 0 l 218 106 l 440 106 l 440 946 l 546 946 l 547 0 z "},"\u02ea":{"ha":764,"x_min":217,"x_max":547,"o":"m 547 0 l 217 0 l 217 597 l 281 597 l 281 64 l 547 64 l 547 0 z "},"\u02eb":{"ha":764,"x_min":217,"x_max":547,"o":"m 547 267 l 281 267 l 281 0 l 217 0 l 217 597 l 281 597 l 281 331 l 547 331 l 547 267 z "},"\u02ec":{"ha":764,"x_min":0,"x_max":596,"o":"m 334 -249 l 168 -85 l 288 -85 l 383 -167 l 479 -85 l 596 -85 l 431 -249 l 334 -249 m 0 -362 z "},"\u02ed":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 789 l 0 789 l 0 887 l 764 887 l 764 789 m 764 970 l 0 970 l 0 1068 l 764 1068 l 764 970 z "},"\u02ee":{"ha":764,"x_min":39,"x_max":693,"o":"m 395 632 q 452 637 424 631 q 503 658 481 644 q 538 692 524 671 q 551 739 551 713 q 543 782 551 766 q 523 812 534 798 q 503 842 512 826 q 494 885 494 859 q 499 913 494 899 q 515 939 505 927 q 542 959 526 951 q 581 966 558 966 q 623 957 603 966 q 659 929 644 947 q 684 881 675 910 q 693 814 693 852 q 674 712 693 761 q 617 627 654 664 q 524 567 579 589 q 395 545 468 545 l 395 632 m 39 632 q 97 637 68 631 q 147 658 125 644 q 182 692 169 671 q 196 739 196 713 q 187 782 196 766 q 168 812 178 798 q 148 842 157 826 q 139 885 139 859 q 144 913 139 899 q 160 939 149 927 q 186 959 170 951 q 225 966 203 966 q 268 957 248 966 q 304 929 288 947 q 329 881 319 910 q 338 814 338 852 q 318 712 338 761 q 261 627 299 664 q 168 567 224 589 q 39 545 112 545 l 39 632 z "},"\u02ef":{"ha":764,"x_min":241,"x_max":522,"o":"m 314 -69 l 382 -184 l 450 -69 l 522 -69 l 399 -259 l 364 -259 l 241 -69 l 314 -69 z "},"\u02f0":{"ha":764,"x_min":241,"x_max":522,"o":"m 314 -259 l 241 -259 l 364 -69 l 399 -69 l 522 -259 l 450 -259 l 382 -144 l 314 -259 z "},"\u02f1":{"ha":764,"x_min":287,"x_max":477,"o":"m 477 -232 l 477 -304 l 287 -182 l 287 -146 l 477 -24 l 477 -96 l 361 -164 l 477 -232 z "},"\u02f2":{"ha":764,"x_min":287,"x_max":477,"o":"m 287 -232 l 402 -164 l 287 -96 l 287 -24 l 477 -146 l 477 -182 l 287 -304 l 287 -232 z "},"\u02f3":{"ha":764,"x_min":248,"x_max":515,"o":"m 515 -176 q 505 -226 515 -203 q 478 -266 496 -249 q 435 -292 460 -283 q 378 -301 410 -301 q 320 -292 345 -301 q 280 -268 296 -283 q 256 -230 264 -252 q 248 -180 248 -208 q 257 -130 248 -153 q 283 -91 266 -107 q 326 -65 300 -74 q 384 -56 351 -56 q 480 -89 446 -56 q 515 -176 515 -121 m 443 -180 q 428 -133 443 -153 q 380 -114 414 -114 q 335 -131 351 -114 q 320 -176 320 -149 q 334 -225 320 -206 q 382 -243 348 -243 q 428 -225 412 -243 q 443 -180 443 -208 z "},"\u02f4":{"ha":764,"x_min":0,"x_max":453,"o":"m 453 293 l 335 293 l 118 457 l 289 457 l 453 293 m 0 180 z "},"\u02f5":{"ha":764,"x_min":16,"x_max":607,"o":"m 467 456 l 607 292 l 488 292 l 323 456 l 467 456 m 174 456 l 323 292 l 205 292 l 16 456 l 174 456 z "},"\u02f6":{"ha":764,"x_min":0,"x_max":747,"o":"m 440 457 l 275 293 l 157 293 l 297 457 l 440 457 m 747 457 l 558 293 l 440 293 l 590 457 l 747 457 m 0 180 z "},"\u02f7":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 -180 q 202 -107 165 -132 q 286 -82 239 -82 q 353 -94 326 -82 q 401 -119 380 -105 q 440 -144 422 -132 q 482 -155 459 -155 q 530 -137 509 -155 q 570 -89 551 -118 l 628 -147 q 562 -221 598 -196 q 478 -245 525 -245 q 411 -234 438 -245 q 363 -209 385 -223 q 324 -184 342 -195 q 282 -172 305 -172 q 234 -191 254 -172 q 195 -239 214 -210 l 136 -180 m 0 -359 z "},"\u02f8":{"ha":764,"x_min":278,"x_max":486,"o":"m 382 897 q 422 889 403 897 q 455 866 441 880 q 478 833 469 852 q 486 793 486 814 q 478 752 486 771 q 455 720 469 734 q 422 697 441 705 q 382 689 403 689 q 341 697 360 689 q 309 720 323 705 q 286 752 294 734 q 278 793 278 771 q 286 833 278 814 q 309 866 294 852 q 341 889 323 880 q 382 897 360 897 m 382 400 q 422 392 403 400 q 455 369 441 383 q 478 336 469 355 q 486 296 486 317 q 478 255 486 274 q 455 222 469 237 q 422 200 441 208 q 382 192 403 192 q 341 200 360 192 q 309 222 323 208 q 286 255 294 237 q 278 296 278 274 q 286 336 278 317 q 309 369 294 355 q 341 392 323 383 q 382 400 360 400 z "},"\u02f9":{"ha":764,"x_min":254,"x_max":510,"o":"m 510 870 l 326 870 l 326 686 l 254 686 l 254 941 l 510 941 l 510 870 z "},"\u02fa":{"ha":764,"x_min":254,"x_max":510,"o":"m 254 870 l 254 941 l 510 941 l 510 686 l 438 686 l 438 870 l 254 870 z "},"\u02fb":{"ha":764,"x_min":254,"x_max":510,"o":"m 510 71 l 510 0 l 254 0 l 254 256 l 326 256 l 326 71 l 510 71 z "},"\u02fc":{"ha":764,"x_min":254,"x_max":510,"o":"m 254 71 l 438 71 l 438 256 l 510 256 l 510 0 l 254 0 l 254 71 z "},"\u02fd":{"ha":764,"x_min":20,"x_max":743,"o":"m 743 -36 l 743 -278 l 20 -278 l 20 -36 l 105 -36 l 105 -181 l 659 -181 l 659 -36 l 743 -36 z "},"\u02fe":{"ha":764,"x_min":20,"x_max":743,"o":"m 743 -278 l 20 -278 l 20 -36 l 105 -36 l 105 -181 l 743 -181 l 743 -278 z "},"\u02ff":{"ha":764,"x_min":222,"x_max":538,"o":"m 358 -239 l 358 -304 l 222 -189 l 222 -140 l 358 -24 l 358 -90 l 300 -134 l 538 -134 l 538 -197 l 303 -197 l 358 -239 z "},"\ua717":{"ha":764,"x_min":0,"x_max":540,"o":"m 540 1120 l 540 701 l 449 701 l 449 1120 l 540 1120 m 224 911 q 230 943 224 928 q 248 969 237 958 q 274 986 259 980 q 307 993 290 993 q 338 986 323 993 q 364 969 353 980 q 381 943 375 958 q 388 911 388 928 q 381 879 388 894 q 364 853 375 864 q 338 835 353 842 q 307 829 323 829 q 274 835 290 829 q 248 853 259 842 q 230 879 237 864 q 224 911 224 894 m 0 681 z "},"\ua718":{"ha":764,"x_min":0,"x_max":582,"o":"m 267 1120 q 299 1113 285 1120 q 325 1096 314 1107 q 343 1069 336 1084 q 349 1037 349 1055 q 343 1005 349 1020 q 325 979 336 990 q 299 962 314 968 q 267 956 285 956 q 236 962 251 956 q 209 979 220 968 q 192 1005 198 990 q 185 1037 185 1020 q 192 1069 185 1055 q 209 1096 198 1084 q 236 1113 220 1107 q 267 1120 251 1120 m 582 1025 l 285 729 l 220 793 l 518 1088 l 582 1025 m 0 681 z "},"\ua719":{"ha":764,"x_min":0,"x_max":591,"o":"m 591 808 l 172 808 l 172 899 l 591 899 l 591 808 m 382 1124 q 414 1117 399 1124 q 440 1100 429 1111 q 457 1073 451 1088 q 464 1041 464 1058 q 457 1009 464 1024 q 440 984 451 995 q 414 966 429 972 q 382 960 399 960 q 350 966 365 960 q 324 984 335 972 q 306 1009 313 995 q 300 1041 300 1024 q 306 1073 300 1058 q 324 1100 313 1088 q 350 1117 335 1111 q 382 1124 365 1124 m 0 681 z "},"\ua71a":{"ha":764,"x_min":0,"x_max":600,"o":"m 600 757 l 163 757 l 163 829 l 525 829 l 525 919 l 600 919 l 600 757 m 0 681 z "},"\ua720":{"ha":764,"x_min":41,"x_max":723,"o":"m 723 726 l 723 627 l 459 686 l 459 454 l 353 454 l 353 709 l 146 755 l 146 287 l 41 287 l 41 878 l 723 726 z "},"\ua721":{"ha":764,"x_min":41,"x_max":723,"o":"m 41 -92 l 41 490 l 146 490 l 146 -8 l 353 -54 l 353 233 l 459 233 l 459 -77 l 723 -136 l 723 -246 l 41 -92 z "},"\u2090":{"ha":764,"x_min":187,"x_max":562,"o":"m 480 -144 l 479 -88 q 406 -137 442 -122 q 328 -152 369 -152 q 264 -142 291 -152 q 220 -115 237 -132 q 195 -76 203 -98 q 187 -28 187 -53 q 231 71 187 35 q 371 108 275 108 l 472 108 l 472 131 q 371 205 472 205 q 298 198 334 205 q 224 175 262 190 l 224 254 q 293 272 252 264 q 377 280 333 280 q 451 272 417 280 q 509 247 485 264 q 548 204 534 230 q 562 143 562 178 l 562 -144 l 480 -144 m 472 45 l 389 45 q 306 25 332 45 q 281 -31 281 4 q 297 -70 281 -54 q 345 -85 313 -85 q 411 -70 381 -85 q 472 -25 441 -56 l 472 45 z "},"\u2091":{"ha":764,"x_min":183,"x_max":585,"o":"m 585 86 q 585 57 585 71 q 583 34 585 43 l 275 34 q 310 -51 277 -21 q 408 -80 342 -80 q 448 -78 427 -80 q 490 -73 469 -76 q 529 -65 511 -69 q 562 -58 548 -62 l 562 -133 q 488 -147 530 -142 q 404 -152 446 -152 q 237 -95 291 -152 q 183 63 183 -38 q 197 146 183 107 q 238 215 212 185 q 303 261 265 244 q 389 279 341 279 q 471 265 434 279 q 533 227 507 252 q 572 166 558 202 q 585 86 585 131 m 492 97 q 469 181 496 153 q 385 209 443 209 q 308 178 335 209 q 275 97 280 148 l 492 97 z "},"\u2092":{"ha":764,"x_min":176,"x_max":587,"o":"m 587 68 q 573 -21 587 19 q 533 -91 559 -62 q 467 -136 506 -120 q 377 -152 428 -152 q 227 -97 279 -152 q 176 62 176 -43 q 190 151 176 111 q 230 219 203 191 q 296 264 256 248 q 386 280 335 280 q 535 226 484 280 q 587 68 587 172 m 496 64 q 467 170 496 135 q 381 205 437 205 q 327 194 349 205 q 292 163 305 182 q 273 118 279 143 q 267 64 267 92 q 296 -42 267 -7 q 381 -77 326 -77 q 436 -66 414 -77 q 471 -35 458 -54 q 490 11 484 -15 q 496 64 496 36 z "},"\u2093":{"ha":764,"x_min":160,"x_max":604,"o":"m 604 -145 l 493 -145 l 379 14 l 267 -145 l 160 -145 l 316 65 l 168 275 l 274 275 l 384 116 l 493 275 l 597 275 l 446 64 l 604 -145 z "},"\u2094":{"ha":764,"x_min":183,"x_max":585,"o":"m 183 40 q 183 69 183 56 q 185 92 184 83 l 493 92 q 459 177 491 147 q 361 206 427 206 q 320 204 341 206 q 278 199 299 202 q 239 192 258 195 q 207 184 220 188 l 207 259 q 280 273 238 268 q 364 278 322 278 q 462 263 420 278 q 531 221 504 249 q 572 154 559 193 q 585 63 585 114 q 571 -20 585 19 q 530 -89 557 -59 q 465 -135 503 -118 q 380 -153 427 -153 q 297 -139 334 -153 q 236 -101 261 -125 q 197 -40 210 -76 q 183 40 183 -5 m 276 29 q 299 -55 273 -26 q 384 -83 326 -83 q 461 -52 433 -83 q 493 29 488 -22 l 276 29 z "},"\u0342":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u0343":{"ha":764,"x_min":295,"x_max":469,"o":"m 298 770 q 356 785 341 774 q 371 813 371 795 q 365 831 371 825 q 351 842 359 838 q 333 849 343 846 q 315 860 323 853 q 301 877 307 866 q 295 905 295 887 q 299 928 295 917 q 313 948 304 939 q 338 961 323 956 q 374 966 353 966 q 411 961 394 966 q 441 943 429 955 q 461 913 454 932 q 469 870 469 895 q 460 814 469 840 q 431 767 451 787 q 378 733 411 746 q 298 720 346 721 l 298 770 z "},"\u0345":{"ha":764,"x_min":252,"x_max":511,"o":"m 343 -14 l 343 -140 q 353 -169 343 -160 q 376 -177 363 -177 q 400 -172 388 -177 q 429 -151 413 -167 l 454 -125 l 511 -186 q 478 -221 494 -206 q 444 -247 462 -237 q 407 -262 427 -257 q 363 -267 387 -267 q 321 -260 341 -267 q 286 -237 301 -254 q 261 -193 271 -221 q 252 -123 252 -165 l 252 -14 l 343 -14 z "},"\u03f4":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 382 93 q 476 117 436 93 q 543 184 515 142 q 584 284 570 227 q 601 408 597 342 l 164 408 q 181 279 167 337 q 221 179 195 220 q 287 116 248 138 q 382 93 327 93 m 382 793 q 292 771 330 793 q 228 710 254 749 q 186 619 201 671 q 165 507 172 567 l 600 507 q 578 627 593 574 q 535 716 562 680 q 471 773 509 753 q 382 793 433 793 z "},"\u03f9":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 z "},"\u03fd":{"ha":764,"x_min":89,"x_max":701,"o":"m 104 859 q 203 888 153 880 q 312 897 253 897 q 478 871 406 897 q 600 790 551 845 q 675 652 650 736 q 701 453 701 568 q 673 248 701 335 q 594 103 646 160 q 469 17 543 45 q 305 -11 396 -11 q 191 -1 243 -11 q 89 31 138 9 l 89 147 q 189 107 138 121 q 301 94 239 94 q 414 116 363 94 q 500 181 465 138 q 554 290 535 225 q 573 442 573 355 q 503 708 573 621 q 298 794 433 794 q 245 791 270 794 q 197 783 220 789 q 151 769 174 777 q 104 748 128 760 l 104 859 z "},"\u03fe":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 471 562 q 515 553 494 562 q 551 529 536 544 q 575 492 566 513 q 584 448 584 471 q 575 405 584 425 q 551 369 566 385 q 515 345 536 354 q 471 336 494 336 q 427 345 448 336 q 392 369 407 354 q 368 405 376 385 q 359 448 359 425 q 368 492 359 471 q 392 529 376 513 q 427 553 407 544 q 471 562 448 562 z "},"\u03ff":{"ha":764,"x_min":89,"x_max":701,"o":"m 104 859 q 203 888 153 880 q 312 897 253 897 q 478 871 406 897 q 600 790 551 845 q 675 652 650 736 q 701 453 701 568 q 673 248 701 335 q 594 103 646 160 q 469 17 543 45 q 305 -11 396 -11 q 191 -1 243 -11 q 89 31 138 9 l 89 147 q 189 107 138 121 q 301 94 239 94 q 414 116 363 94 q 500 181 465 138 q 554 290 535 225 q 573 442 573 355 q 503 708 573 621 q 298 794 433 794 q 245 791 270 794 q 197 783 220 789 q 151 769 174 777 q 104 748 128 760 l 104 859 m 289 562 q 333 553 312 562 q 369 529 353 544 q 393 492 384 513 q 401 448 401 471 q 393 405 401 425 q 369 369 384 385 q 333 345 353 354 q 289 336 312 336 q 245 345 265 336 q 209 369 224 354 q 185 405 194 385 q 176 448 176 425 q 185 492 176 471 q 209 529 194 513 q 245 553 224 544 q 289 562 265 562 z "},"\u03d2":{"ha":764,"x_min":56,"x_max":705,"o":"m 388 531 q 424 689 396 621 q 495 802 452 757 q 591 869 537 846 q 705 891 645 891 l 705 778 q 606 753 654 778 q 522 667 559 728 q 463 505 485 606 q 441 253 441 404 l 441 0 l 319 0 l 319 253 q 309 433 319 355 q 281 570 299 511 q 239 668 263 628 q 185 732 214 707 q 123 767 155 757 q 56 778 90 778 l 56 891 q 171 869 115 891 q 270 802 226 846 q 342 689 313 757 q 376 531 370 621 l 388 531 z "},"\u03d3":{"ha":764,"x_min":-508,"x_max":705,"o":"m 388 531 q 424 689 396 621 q 495 802 452 757 q 591 869 537 846 q 705 891 645 891 l 705 778 q 606 753 654 778 q 522 667 559 728 q 463 505 485 606 q 441 253 441 404 l 441 0 l 319 0 l 319 253 q 309 433 319 355 q 281 570 299 511 q 239 668 263 628 q 185 732 214 707 q 123 767 155 757 q 56 778 90 778 l 56 891 q 171 869 115 891 q 270 802 226 846 q 342 689 313 757 q 376 531 370 621 l 388 531 m 41 972 l -80 790 l -190 790 l -102 972 l 41 972 m -508 681 z "},"\u03d4":{"ha":764,"x_min":0,"x_max":705,"o":"m 388 531 q 424 689 396 621 q 495 802 452 757 q 591 869 537 846 q 705 891 645 891 l 705 778 q 606 753 654 778 q 522 667 559 728 q 463 505 485 606 q 441 253 441 404 l 441 0 l 319 0 l 319 253 q 309 433 319 355 q 281 570 299 511 q 239 668 263 628 q 185 732 214 707 q 123 767 155 757 q 56 778 90 778 l 56 891 q 171 869 115 891 q 270 802 226 846 q 342 689 313 757 q 376 531 370 621 l 388 531 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u03dc":{"ha":764,"x_min":139,"x_max":639,"o":"m 639 783 l 262 783 l 262 496 l 498 496 q 585 471 558 496 q 612 397 612 446 l 612 313 q 585 345 598 330 q 553 371 571 359 q 512 388 536 382 q 451 395 488 395 l 262 395 l 262 0 l 139 0 l 139 886 l 639 886 l 639 783 z "},"\u03d8":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 543 q 703 381 726 447 q 641 273 680 315 q 550 209 602 231 q 441 180 498 186 l 441 0 l 322 0 l 322 178 q 201 208 254 184 q 112 274 149 231 q 57 381 76 317 q 39 532 39 446 q 52 660 39 604 q 90 755 66 715 q 147 823 114 795 q 219 867 180 850 q 301 890 258 883 q 389 897 345 897 q 532 877 469 897 q 638 814 595 857 q 704 704 681 771 q 726 543 726 637 m 601 534 q 587 657 601 607 q 546 738 573 707 q 477 782 518 768 q 382 795 436 795 q 290 780 330 795 q 221 733 250 765 q 179 654 193 702 q 164 539 164 606 q 178 416 164 466 q 220 335 193 366 q 288 291 248 304 q 382 277 329 277 q 474 292 433 277 q 543 339 515 307 q 586 419 571 370 q 601 534 601 467 z "},"\u03de":{"ha":764,"x_min":47,"x_max":716,"o":"m 47 395 l 286 886 l 411 886 l 220 496 l 716 496 l 472 0 l 347 0 l 542 395 l 47 395 z "},"\u03fa":{"ha":764,"x_min":61,"x_max":703,"o":"m 703 0 l 587 0 l 587 519 l 594 752 l 415 486 l 332 486 l 165 752 l 172 519 l 172 0 l 61 0 l 61 886 l 204 886 l 378 613 l 555 886 l 703 886 l 703 0 z "},"\u03e0":{"ha":764,"x_min":47,"x_max":720,"o":"m 312 267 l 254 350 l 576 572 q 552 621 567 598 q 520 662 538 643 l 203 439 l 144 523 l 446 732 q 360 769 407 757 q 248 781 313 781 q 180 775 211 781 q 123 759 149 768 q 78 739 98 749 q 47 721 59 728 l 47 840 q 78 854 59 846 q 122 870 96 862 q 181 883 148 878 q 254 888 214 888 q 447 852 361 888 q 593 753 533 817 q 687 604 654 690 q 720 416 720 517 q 705 282 720 345 q 669 166 691 219 q 621 71 648 113 q 570 0 595 29 l 444 0 q 500 78 471 35 q 552 173 529 121 q 591 283 576 224 q 606 412 606 343 q 606 430 606 422 q 605 444 606 437 q 604 456 604 450 q 601 470 603 463 l 312 267 z "},"\u03da":{"ha":764,"x_min":62,"x_max":690,"o":"m 528 -266 q 553 -219 543 -240 q 569 -179 563 -198 q 577 -143 574 -161 q 579 -106 579 -125 q 564 -60 579 -77 q 521 -34 548 -43 q 458 -18 494 -24 q 383 -3 422 -12 q 309 16 347 4 q 235 49 271 28 q 168 100 199 70 q 113 175 136 131 q 76 279 90 220 q 62 418 62 339 q 89 579 62 512 q 163 692 115 646 q 280 769 212 739 q 433 820 348 800 q 523 845 486 833 q 587 870 559 858 q 635 896 614 883 q 675 921 656 908 l 675 789 q 615 763 648 774 q 548 740 583 751 q 473 719 512 730 q 393 697 434 709 q 312 662 349 685 q 248 604 275 638 q 205 526 220 570 q 191 429 191 482 q 211 276 191 336 q 263 180 231 216 q 339 124 296 143 q 427 96 382 106 q 492 83 460 88 q 553 70 524 77 q 608 52 583 63 q 651 21 633 40 q 680 -27 669 2 q 690 -99 690 -56 q 681 -174 690 -135 q 642 -266 671 -212 l 528 -266 z "},"\u03f7":{"ha":764,"x_min":107,"x_max":689,"o":"m 228 886 l 228 754 l 357 754 q 483 739 422 754 q 589 689 543 723 q 662 603 635 656 q 689 476 689 550 q 669 368 689 422 q 606 270 648 313 q 496 199 563 227 q 338 172 430 172 l 228 172 l 228 0 l 107 0 l 107 886 l 228 886 m 564 471 q 549 547 564 513 q 508 605 535 581 q 441 642 480 629 q 351 654 401 654 l 228 654 l 228 275 l 340 275 q 506 326 448 275 q 564 471 564 376 z "},"\u03d0":{"ha":764,"x_min":73,"x_max":689,"o":"m 382 -11 q 275 7 321 -11 q 194 55 228 24 q 136 128 159 86 q 99 218 113 170 q 79 321 85 267 q 73 428 73 374 q 86 616 73 535 q 124 758 100 698 q 181 857 148 817 q 253 921 214 897 q 338 956 293 945 q 429 966 382 966 q 532 948 490 966 q 599 902 574 931 q 635 836 624 873 q 646 760 646 799 q 634 682 646 715 q 602 624 622 648 q 556 583 583 599 q 501 558 530 567 q 589 527 553 548 q 647 472 625 505 q 679 393 669 439 q 689 288 689 347 q 668 168 689 223 q 607 74 646 113 q 510 12 567 34 q 382 -11 453 -11 m 385 87 q 466 103 431 87 q 525 146 501 119 q 561 211 549 174 q 572 290 572 248 q 564 372 572 335 q 537 436 555 410 q 491 478 519 463 q 423 492 463 492 q 365 488 396 492 q 303 478 334 484 q 244 464 273 471 q 192 449 215 456 l 192 427 q 195 353 192 391 q 206 276 198 314 q 227 204 214 238 q 262 143 241 170 q 314 102 283 117 q 385 87 345 87 m 535 755 q 530 799 535 779 q 511 834 524 819 q 475 859 498 850 q 418 867 453 867 q 378 863 399 867 q 334 846 356 859 q 290 811 311 833 q 251 753 269 789 q 218 666 233 717 q 197 547 204 616 q 359 586 294 565 q 463 631 424 606 q 518 686 502 656 q 535 755 535 717 z "},"\u03f5":{"ha":764,"x_min":107,"x_max":658,"o":"m 658 0 q 576 -6 616 -4 q 496 -9 535 -9 q 344 6 415 -9 q 220 61 273 22 q 137 166 168 100 q 107 334 107 232 q 139 505 107 436 q 226 614 171 573 q 355 673 281 656 q 514 690 429 690 q 585 688 549 690 q 658 681 621 686 l 658 568 q 574 586 617 579 q 490 592 532 592 q 400 582 443 592 q 323 549 357 572 q 266 488 289 526 q 234 393 242 450 l 589 393 l 589 296 l 233 296 q 261 195 239 235 q 319 132 284 155 q 397 99 353 109 q 488 90 440 90 q 573 95 530 90 q 658 109 616 101 l 658 0 z "},"\u03f6":{"ha":764,"x_min":106,"x_max":656,"o":"m 106 109 q 190 95 147 101 q 275 90 233 90 q 367 99 323 90 q 445 132 410 109 q 502 195 479 155 q 531 296 525 235 l 174 296 l 174 393 l 530 393 q 498 488 522 450 q 440 549 475 526 q 363 582 406 572 q 274 592 321 592 q 189 586 232 592 q 106 568 146 579 l 106 681 q 179 688 142 686 q 250 690 215 690 q 409 673 334 690 q 538 614 483 656 q 625 505 593 573 q 656 334 656 436 q 626 166 656 232 q 543 61 596 100 q 419 6 490 22 q 267 -9 349 -9 q 188 -6 229 -9 q 106 0 147 -4 l 106 109 z "},"\u03d1":{"ha":764,"x_min":8,"x_max":761,"o":"m 682 593 q 676 439 681 515 q 660 297 672 364 q 627 173 648 230 q 569 75 605 117 q 483 11 534 34 q 360 -12 431 -12 q 169 61 231 -12 q 107 279 107 135 q 107 305 107 295 q 109 326 108 315 q 110 351 109 337 q 110 389 110 365 q 108 440 110 418 q 99 477 106 462 q 78 499 92 492 q 41 506 64 506 q 25 505 35 506 q 8 503 16 504 l 8 621 q 42 625 24 623 q 73 627 60 627 q 137 617 111 627 q 181 590 163 607 q 208 552 198 574 q 221 507 217 530 q 227 460 226 484 q 228 417 228 437 q 227 356 228 389 q 225 274 225 323 q 260 137 225 185 q 370 89 295 89 q 447 113 415 89 q 499 178 478 138 q 533 271 521 218 q 553 379 546 323 q 562 491 559 435 q 564 593 564 547 q 395 608 464 593 q 284 651 326 624 q 223 715 241 678 q 204 793 204 751 q 220 872 204 839 q 264 925 237 905 q 329 956 292 946 q 408 966 366 966 q 605 897 536 966 q 679 681 673 827 l 761 681 l 761 593 l 682 593 m 566 681 q 553 779 566 740 q 520 840 541 817 q 474 873 500 863 q 420 882 448 882 q 339 860 364 882 q 314 797 314 837 q 331 742 314 764 q 379 706 347 720 q 458 687 412 692 q 566 681 505 681 z "},"\u03f0":{"ha":764,"x_min":34,"x_max":730,"o":"m 180 506 q 173 550 180 533 q 154 577 165 567 q 127 590 142 587 q 96 594 112 594 q 65 591 80 594 q 38 587 50 589 l 34 680 q 80 686 58 684 q 121 688 101 688 q 193 679 162 688 q 243 649 223 669 q 274 597 264 629 q 283 521 283 566 q 280 451 283 486 q 271 382 276 415 q 259 319 265 349 q 247 268 252 290 l 250 263 l 625 694 l 704 607 l 690 595 q 642 521 663 570 q 609 413 622 472 q 590 291 596 353 q 584 174 584 228 q 591 130 584 147 q 610 103 598 113 q 637 90 622 94 q 667 86 652 86 q 699 89 684 86 q 726 94 714 92 l 730 0 q 684 -5 705 -3 q 643 -7 663 -7 q 571 2 602 -7 q 520 31 541 11 q 490 83 500 51 q 480 159 480 115 q 484 230 480 194 q 493 298 488 265 q 505 361 498 332 q 517 412 511 390 l 514 417 l 139 -14 l 60 73 l 73 85 q 121 159 101 111 q 155 268 142 208 q 174 390 168 327 q 180 506 180 452 z "},"\u03d6":{"ha":764,"x_min":-61,"x_max":791,"o":"m 66 681 l 663 681 q 725 726 703 681 l 791 665 q 777 635 785 649 q 757 611 770 621 q 724 594 744 600 q 671 587 703 587 q 696 467 688 532 q 704 319 704 401 q 692 183 704 244 q 656 78 680 121 q 596 11 633 35 q 511 -12 559 -12 q 460 -5 484 -12 q 420 19 437 2 q 393 66 404 37 q 379 140 382 96 q 359 68 373 98 q 327 21 346 39 q 285 -4 308 3 q 238 -12 262 -12 q 162 8 195 -12 q 106 70 129 28 q 72 175 83 111 q 60 328 60 239 q 72 469 60 405 q 101 587 83 533 l 66 587 q 32 574 47 587 q 5 538 16 562 l -61 600 q -45 629 -55 614 q -20 655 -35 644 q 16 674 -5 667 q 66 681 37 681 m 435 268 q 454 134 435 178 q 515 90 472 90 q 552 106 537 90 q 577 153 568 123 q 591 227 587 184 q 595 325 595 271 q 583 470 595 406 q 550 587 570 534 l 209 587 q 179 470 191 534 q 168 326 168 406 q 172 234 168 277 q 185 159 176 191 q 210 108 195 127 q 249 90 226 90 q 305 130 281 90 q 328 250 328 170 l 328 442 l 435 442 l 435 268 z "},"\u03f1":{"ha":764,"x_min":109,"x_max":690,"o":"m 109 368 q 126 494 109 435 q 180 598 144 553 q 273 668 217 642 q 406 693 329 693 q 536 667 481 693 q 624 596 590 642 q 674 488 659 551 q 690 353 690 426 q 666 194 690 262 q 598 81 641 126 q 500 13 556 35 q 383 -10 445 -10 q 297 1 338 -10 q 227 30 255 13 l 227 -11 q 266 -104 227 -76 q 372 -132 304 -132 q 407 -132 386 -132 q 451 -130 429 -131 q 493 -129 473 -130 q 522 -128 512 -128 q 585 -132 548 -128 q 661 -146 623 -136 l 661 -254 q 617 -240 637 -245 q 577 -231 597 -235 q 536 -227 557 -228 q 487 -225 514 -225 q 461 -225 477 -225 q 429 -227 446 -226 q 396 -228 412 -227 q 369 -228 380 -228 q 253 -215 302 -228 q 172 -174 204 -202 q 124 -102 140 -146 q 109 2 109 -59 l 109 368 m 570 350 q 561 445 570 401 q 532 523 552 490 q 479 574 511 555 q 400 593 447 593 q 273 536 319 593 q 227 358 227 479 l 227 141 q 302 106 260 120 q 384 92 345 92 q 520 156 471 92 q 570 350 570 220 z "},"\u03fc":{"ha":764,"x_min":1,"x_max":690,"o":"m 1 -96 l 109 -96 l 109 368 q 126 494 109 435 q 180 598 144 553 q 273 668 217 642 q 406 693 329 693 q 536 667 481 693 q 624 596 590 642 q 674 488 659 551 q 690 353 690 426 q 666 194 690 262 q 598 81 641 126 q 500 13 556 35 q 383 -10 445 -10 q 297 1 338 -10 q 227 30 255 13 l 227 -96 l 434 -96 l 434 -195 l 227 -195 l 227 -278 l 109 -278 l 109 -195 l 1 -195 l 1 -96 m 570 350 q 561 445 570 401 q 532 523 552 490 q 479 574 511 555 q 400 593 447 593 q 273 536 319 593 q 227 358 227 479 l 227 141 q 302 106 260 120 q 384 92 345 92 q 520 156 471 92 q 570 350 570 220 z "},"\u03f2":{"ha":764,"x_min":107,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 z "},"\u037b":{"ha":764,"x_min":126,"x_max":656,"o":"m 126 656 q 221 682 173 673 q 321 690 269 690 q 464 668 401 690 q 569 603 526 646 q 634 495 612 559 q 656 347 656 431 q 633 201 656 267 q 566 88 610 135 q 458 16 522 41 q 313 -9 394 -9 q 215 -2 260 -9 q 126 22 169 5 l 126 132 q 216 98 171 109 q 311 87 262 87 q 401 105 360 87 q 472 155 442 122 q 517 234 501 187 q 533 340 533 281 q 473 525 533 463 q 307 586 413 586 q 126 543 210 586 l 126 656 z "},"\u037c":{"ha":764,"x_min":75,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 457 439 q 493 432 476 439 q 522 413 509 425 q 541 385 534 401 q 547 349 547 368 q 541 314 547 330 q 522 286 534 298 q 493 266 509 273 q 457 259 476 259 q 421 266 437 259 q 393 286 405 273 q 374 314 380 298 q 367 349 367 330 q 374 385 367 368 q 393 413 380 401 q 421 432 405 425 q 457 439 437 439 m 75 157 z "},"\u037d":{"ha":764,"x_min":-72,"x_max":656,"o":"m 126 656 q 221 682 173 673 q 321 690 269 690 q 464 668 401 690 q 569 603 526 646 q 634 495 612 559 q 656 347 656 431 q 633 201 656 267 q 566 88 610 135 q 458 16 522 41 q 313 -9 394 -9 q 215 -2 260 -9 q 126 22 169 5 l 126 132 q 216 98 171 109 q 311 87 262 87 q 401 105 360 87 q 472 155 442 122 q 517 234 501 187 q 533 340 533 281 q 473 525 533 463 q 307 586 413 586 q 126 543 210 586 l 126 656 m 310 439 q 346 432 329 439 q 374 413 362 425 q 393 385 387 401 q 400 349 400 368 q 393 314 400 330 q 374 286 387 298 q 346 266 362 273 q 310 259 329 259 q 274 266 290 259 q 245 286 258 273 q 227 314 233 298 q 220 349 220 330 q 227 385 220 368 q 245 413 233 401 q 274 432 258 425 q 310 439 290 439 m -72 157 z "},"\u03d5":{"ha":764,"x_min":45,"x_max":718,"o":"m 604 359 q 600 460 604 416 q 584 534 595 504 q 554 580 572 564 q 507 596 535 596 q 470 588 484 596 q 447 562 455 580 q 436 517 439 545 q 433 450 433 489 l 433 80 q 509 103 477 83 q 563 160 541 124 q 594 247 584 197 q 604 359 604 297 m 45 357 q 62 499 45 439 q 103 598 79 558 q 150 662 126 639 q 189 694 174 684 l 262 623 q 233 596 250 614 q 199 546 216 577 q 171 471 183 515 q 159 366 159 426 q 167 260 159 310 q 194 172 175 210 q 244 109 212 133 q 326 80 277 84 l 326 450 q 338 562 326 515 q 373 636 350 608 q 430 679 396 665 q 506 692 463 692 q 606 668 566 692 q 671 603 646 645 q 707 503 696 562 q 718 375 718 445 q 701 226 718 295 q 649 106 684 157 q 561 24 614 55 q 434 -12 507 -7 l 434 -245 l 326 -245 l 326 -12 q 197 21 250 -9 q 110 99 144 50 q 61 215 77 149 q 45 357 45 281 z "},"\u03dd":{"ha":764,"x_min":146,"x_max":637,"o":"m 269 291 l 491 291 q 578 266 551 291 q 606 193 606 241 l 606 109 q 579 139 592 125 q 548 165 566 154 q 506 183 530 176 q 444 190 481 190 l 269 190 l 269 -278 l 146 -278 l 146 387 q 164 526 146 468 q 219 620 182 583 q 314 673 257 656 q 450 690 372 690 q 549 683 503 690 q 637 659 595 675 l 637 543 q 547 577 593 566 q 453 587 502 587 q 362 575 398 587 q 306 537 327 562 q 277 475 286 513 q 269 388 269 437 l 269 291 z "},"\u03d9":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 683 215 701 275 q 632 109 665 155 q 549 33 598 62 q 438 -7 500 3 l 438 -278 l 319 -278 l 319 -8 q 211 26 258 0 q 130 96 163 52 q 80 199 97 139 q 62 336 62 260 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 z "},"\u03df":{"ha":764,"x_min":79,"x_max":684,"o":"m 450 -264 l 329 -264 l 530 197 l 79 197 l 278 694 l 393 694 l 242 294 l 684 294 l 450 -264 z "},"\u03fb":{"ha":764,"x_min":92,"x_max":672,"o":"m 672 0 l 565 0 l 565 541 l 415 327 l 332 327 l 195 541 l 195 -279 l 92 -279 l 92 681 l 222 681 l 378 446 l 538 681 l 672 681 l 672 0 z "},"\u03e1":{"ha":764,"x_min":40,"x_max":713,"o":"m 343 140 l 288 221 l 576 480 q 565 514 571 496 q 552 549 559 532 q 537 582 545 566 q 521 610 530 597 l 237 354 l 182 435 l 465 690 q 429 728 448 709 q 385 761 410 747 q 327 785 360 776 q 248 793 294 793 q 182 787 212 793 q 126 770 152 781 q 79 745 100 759 q 40 715 58 730 l 40 825 q 71 843 51 832 q 118 864 91 854 q 179 881 145 874 q 254 888 214 888 q 446 843 361 888 q 590 718 531 798 q 681 528 650 637 q 713 290 713 418 q 700 126 713 201 q 665 -17 687 50 q 613 -144 643 -83 q 550 -262 583 -204 l 420 -262 q 450 -216 432 -243 q 487 -151 467 -188 q 527 -67 507 -113 q 564 34 547 -21 q 590 152 580 89 q 600 287 600 216 q 600 331 600 313 q 597 368 600 349 l 343 140 z "},"\u03db":{"ha":764,"x_min":107,"x_max":659,"o":"m 107 338 q 133 477 107 423 q 202 565 159 531 q 300 616 245 598 q 416 648 356 634 q 528 675 472 660 q 632 721 583 691 l 632 598 q 590 583 614 591 q 543 569 567 576 q 496 557 519 563 q 457 548 474 551 q 371 525 412 538 q 299 487 330 511 q 249 428 268 464 q 231 340 231 393 q 277 186 231 243 q 427 113 323 129 q 537 85 493 103 q 608 42 581 68 q 647 -16 635 17 q 659 -87 659 -48 q 652 -137 659 -114 q 635 -182 646 -161 q 612 -224 625 -203 q 586 -265 599 -244 l 473 -265 q 498 -225 486 -244 q 519 -186 510 -205 q 533 -146 528 -167 q 538 -102 538 -125 q 523 -48 538 -68 q 484 -19 507 -29 q 433 -4 460 -8 q 381 4 406 0 q 255 43 307 16 q 170 113 203 71 q 122 212 137 155 q 107 338 107 269 z "},"\u03f3":{"ha":764,"x_min":89,"x_max":591,"o":"m 570 681 l 570 12 q 549 -114 570 -59 q 491 -208 529 -170 q 398 -265 453 -245 q 273 -285 342 -285 q 175 -276 223 -285 q 89 -250 127 -267 l 89 -138 q 134 -157 110 -149 q 183 -172 158 -166 q 235 -181 209 -178 q 285 -184 260 -184 q 406 -136 362 -184 q 450 8 450 -87 l 450 583 l 117 583 l 117 681 l 570 681 m 498 966 q 535 959 518 966 q 565 939 552 952 q 584 909 577 926 q 591 873 591 892 q 584 837 591 854 q 565 808 577 821 q 535 788 552 795 q 498 781 518 781 q 462 788 479 781 q 432 808 445 795 q 413 837 420 821 q 406 873 406 854 q 413 909 406 892 q 432 939 420 926 q 462 959 445 952 q 498 966 479 966 z "},"\u03f8":{"ha":764,"x_min":-47,"x_max":690,"o":"m 109 724 q 120 831 109 786 q 159 907 132 877 q 228 952 185 937 q 331 966 270 966 q 391 963 360 966 q 446 953 422 959 l 446 849 q 326 866 381 866 q 277 856 296 866 q 246 828 258 846 q 229 784 234 810 q 224 725 224 758 l 224 574 q 332 666 275 640 q 454 693 389 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -38 q 218 -135 227 -90 q 188 -213 210 -180 q 127 -264 165 -245 q 30 -283 90 -283 q -14 -282 6 -283 q -47 -277 -35 -280 l -47 -170 q -13 -178 -31 -176 q 20 -180 5 -180 q 59 -173 43 -180 q 87 -146 76 -165 q 103 -96 98 -127 q 109 -18 109 -65 l 109 724 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 z "},"\u03d7":{"ha":764,"x_min":34,"x_max":730,"o":"m 626 -7 q 561 5 588 -5 q 515 35 533 15 q 489 86 497 55 q 480 159 480 117 q 484 230 480 194 q 493 298 488 265 q 505 361 498 332 q 517 412 511 390 l 514 417 l 139 -14 l 60 73 l 73 85 q 121 159 101 111 q 155 268 142 208 q 174 390 168 327 q 180 506 180 452 q 173 550 180 533 q 154 577 165 567 q 127 590 142 587 q 96 594 112 594 q 65 591 80 594 q 38 587 50 589 l 34 680 q 80 686 58 684 q 121 688 101 688 q 193 679 162 688 q 243 649 223 669 q 274 597 264 629 q 283 521 283 566 q 280 451 283 486 q 271 382 276 415 q 259 319 265 349 q 247 268 252 290 l 250 263 l 625 694 l 704 607 l 690 595 q 642 521 663 570 q 609 413 622 472 q 590 291 596 353 q 584 174 584 228 q 591 130 584 147 q 610 103 598 113 q 637 90 622 94 q 667 86 652 86 q 700 89 684 86 q 730 95 717 92 l 730 -117 q 721 -193 730 -162 q 692 -243 712 -224 q 642 -272 673 -263 q 566 -281 610 -281 q 536 -279 552 -281 q 505 -276 520 -278 q 477 -272 490 -274 q 458 -269 465 -270 l 458 -175 q 499 -186 475 -181 q 551 -191 524 -191 q 578 -190 564 -191 q 602 -180 591 -188 q 619 -155 612 -172 q 625 -110 625 -139 l 626 -7 z "},"\u1f08":{"ha":764,"x_min":-274,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 100 770 q 48 789 64 772 q 33 830 33 806 q 50 880 33 863 q 108 897 67 897 q 165 880 149 897 q 182 828 182 863 q 154 732 182 777 q 76 642 125 687 l 39 675 q 56 693 46 682 q 75 716 66 704 q 91 742 84 728 q 100 770 98 756 m -274 593 z "},"\u1f0c":{"ha":764,"x_min":-335,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -82 770 q -133 789 -118 772 q -149 830 -149 806 q -132 880 -149 863 q -79 897 -116 897 q -42 891 -57 897 q -17 873 -26 884 q -4 847 -8 862 q 0 814 0 831 q -7 768 0 789 q -28 726 -14 746 q -62 685 -42 705 q -106 642 -81 665 l -143 675 q -126 693 -136 682 q -107 716 -116 704 q -91 742 -98 728 q -82 770 -83 756 m 242 885 l 123 682 l 37 682 l 111 885 l 242 885 m -335 593 z "},"\u1f0a":{"ha":764,"x_min":-382,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -130 770 q -181 789 -165 772 q -196 830 -196 806 q -180 880 -196 863 q -126 897 -163 897 q -89 891 -104 897 q -65 873 -74 884 q -52 847 -56 862 q -47 814 -47 831 q -55 768 -47 789 q -76 726 -62 746 q -109 685 -90 705 q -153 642 -129 665 l -191 675 q -173 693 -183 682 q -154 716 -163 704 q -138 742 -145 728 q -130 770 -131 756 m 121 885 l 195 682 l 109 682 l -10 885 l 121 885 m -382 593 z "},"\u1f0e":{"ha":764,"x_min":-279,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 95 767 q 44 786 59 770 q 28 827 28 803 q 45 877 28 860 q 98 895 61 895 q 135 888 120 895 q 160 870 151 882 q 173 844 169 859 q 177 812 177 829 q 170 765 177 787 q 149 723 163 743 q 115 682 135 703 q 71 640 96 662 l 34 672 q 51 690 41 680 q 70 713 61 701 q 86 740 79 726 q 95 767 94 753 m -143 1007 q -77 1081 -114 1056 q 7 1105 -40 1105 q 73 1094 46 1105 q 121 1069 100 1082 q 161 1044 142 1055 q 203 1032 180 1032 q 251 1051 230 1032 q 290 1099 271 1069 l 349 1040 q 282 967 318 991 q 199 942 245 942 q 132 954 159 942 q 84 979 105 965 q 44 1004 63 992 q 3 1015 26 1015 q -46 997 -26 1015 q -85 949 -66 978 l -143 1007 m -279 591 z "},"\u1f09":{"ha":764,"x_min":-282,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 107 770 q 116 742 109 756 q 132 716 123 728 q 151 693 141 704 q 168 675 161 682 l 131 642 q 87 685 106 665 q 53 726 67 705 q 32 768 39 746 q 25 814 25 789 q 29 847 25 831 q 42 873 33 862 q 67 891 52 884 q 104 897 82 897 q 157 880 141 897 q 174 830 174 863 q 158 789 174 806 q 107 770 143 772 m -282 593 z "},"\u1f0d":{"ha":764,"x_min":-353,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -85 770 q -76 742 -83 756 q -60 716 -69 728 q -41 693 -51 704 q -24 675 -31 682 l -61 642 q -105 685 -85 665 q -139 726 -125 705 q -160 768 -153 746 q -167 814 -167 789 q -163 847 -167 831 q -150 873 -159 862 q -125 891 -140 884 q -88 897 -110 897 q -35 880 -51 897 q -18 830 -18 863 q -34 789 -18 806 q -85 770 -49 772 m 224 885 l 104 682 l 19 682 l 92 885 l 224 885 m -353 593 z "},"\u1f0b":{"ha":764,"x_min":-383,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -115 770 q -106 742 -113 756 q -90 716 -99 728 q -71 693 -81 704 q -54 675 -61 682 l -91 642 q -135 685 -115 665 q -169 726 -155 705 q -190 768 -182 746 q -197 814 -197 789 q -193 847 -197 831 q -179 873 -189 862 q -155 891 -170 884 q -118 897 -140 897 q -64 880 -81 897 q -48 830 -48 863 q -63 789 -48 806 q -115 770 -79 772 m 121 885 l 194 682 l 109 682 l -11 885 l 121 885 m -383 593 z "},"\u1f0f":{"ha":764,"x_min":-283,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 107 767 q 116 740 109 753 q 132 713 123 726 q 151 690 141 701 q 168 672 161 680 l 131 640 q 87 682 106 662 q 53 723 67 703 q 32 765 39 743 q 25 812 25 787 q 29 844 25 829 q 42 870 33 859 q 67 888 52 882 q 104 895 82 895 q 157 877 141 895 q 174 827 174 860 q 158 786 174 803 q 107 767 143 770 m -146 1007 q -80 1081 -117 1056 q 3 1105 -43 1105 q 70 1094 43 1105 q 118 1069 97 1082 q 158 1044 139 1055 q 199 1032 176 1032 q 247 1051 227 1032 q 287 1099 268 1069 l 345 1040 q 278 967 315 991 q 195 942 242 942 q 129 954 155 942 q 81 979 102 965 q 41 1004 60 992 q -1 1015 22 1015 q -49 997 -29 1015 q -88 949 -69 978 l -146 1007 m -283 591 z "},"\u1fbb":{"ha":764,"x_min":-270,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 227 885 l 106 703 l -3 703 l 84 885 l 227 885 m -270 593 z "},"\u1fba":{"ha":764,"x_min":-277,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 107 885 l 195 703 l 85 703 l -36 885 l 107 885 m -277 593 z "},"\u1fb9":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u1fb8":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u1fbc":{"ha":764,"x_min":7,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f88":{"ha":764,"x_min":-274,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 100 770 q 48 789 64 772 q 33 830 33 806 q 50 880 33 863 q 108 897 67 897 q 165 880 149 897 q 182 828 182 863 q 154 732 182 777 q 76 642 125 687 l 39 675 q 56 693 46 682 q 75 716 66 704 q 91 742 84 728 q 100 770 98 756 m -274 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8c":{"ha":764,"x_min":-335,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -82 770 q -133 789 -118 772 q -149 830 -149 806 q -132 880 -149 863 q -79 897 -116 897 q -42 891 -57 897 q -17 873 -26 884 q -4 847 -8 862 q 0 814 0 831 q -7 768 0 789 q -28 726 -14 746 q -62 685 -42 705 q -106 642 -81 665 l -143 675 q -126 693 -136 682 q -107 716 -116 704 q -91 742 -98 728 q -82 770 -83 756 m 242 885 l 123 682 l 37 682 l 111 885 l 242 885 m -335 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8a":{"ha":764,"x_min":-382,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -130 770 q -181 789 -165 772 q -196 830 -196 806 q -180 880 -196 863 q -126 897 -163 897 q -89 891 -104 897 q -65 873 -74 884 q -52 847 -56 862 q -47 814 -47 831 q -55 768 -47 789 q -76 726 -62 746 q -109 685 -90 705 q -153 642 -129 665 l -191 675 q -173 693 -183 682 q -154 716 -163 704 q -138 742 -145 728 q -130 770 -131 756 m 121 885 l 195 682 l 109 682 l -10 885 l 121 885 m -382 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8e":{"ha":764,"x_min":-273,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 102 767 q 51 786 66 770 q 35 827 35 803 q 52 877 35 860 q 105 895 68 895 q 142 888 127 895 q 166 870 157 882 q 180 844 176 859 q 184 812 184 829 q 177 765 184 787 q 156 723 170 743 q 122 682 142 703 q 78 640 102 662 l 41 672 q 58 690 48 680 q 77 713 68 701 q 93 740 86 726 q 102 767 100 753 m -136 1007 q -70 1081 -107 1056 q 14 1105 -33 1105 q 80 1094 53 1105 q 128 1069 107 1082 q 168 1044 149 1055 q 210 1032 186 1032 q 257 1051 237 1032 q 297 1099 278 1069 l 355 1040 q 289 967 325 991 q 205 942 252 942 q 139 954 165 942 q 91 979 112 965 q 51 1004 70 992 q 9 1015 33 1015 q -39 997 -19 1015 q -78 949 -59 978 l -136 1007 m -273 591 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f89":{"ha":764,"x_min":-282,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 107 770 q 116 742 109 756 q 132 716 123 728 q 151 693 141 704 q 168 675 161 682 l 131 642 q 87 685 106 665 q 53 726 67 705 q 32 768 39 746 q 25 814 25 789 q 29 847 25 831 q 42 873 33 862 q 67 891 52 884 q 104 897 82 897 q 157 880 141 897 q 174 830 174 863 q 158 789 174 806 q 107 770 143 772 m -282 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8d":{"ha":764,"x_min":-353,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -85 770 q -76 742 -83 756 q -60 716 -69 728 q -41 693 -51 704 q -24 675 -31 682 l -61 642 q -105 685 -85 665 q -139 726 -125 705 q -160 768 -153 746 q -167 814 -167 789 q -163 847 -167 831 q -150 873 -159 862 q -125 891 -140 884 q -88 897 -110 897 q -35 880 -51 897 q -18 830 -18 863 q -34 789 -18 806 q -85 770 -49 772 m 224 885 l 104 682 l 19 682 l 92 885 l 224 885 m -353 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8b":{"ha":764,"x_min":-383,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m -115 770 q -106 742 -113 756 q -90 716 -99 728 q -71 693 -81 704 q -54 675 -61 682 l -91 642 q -135 685 -115 665 q -169 726 -155 705 q -190 768 -182 746 q -197 814 -197 789 q -193 847 -197 831 q -179 873 -189 862 q -155 891 -170 884 q -118 897 -140 897 q -64 880 -81 897 q -48 830 -48 863 q -63 789 -48 806 q -115 770 -79 772 m 121 885 l 194 682 l 109 682 l -11 885 l 121 885 m -383 593 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f8f":{"ha":764,"x_min":-283,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 107 767 q 116 740 109 753 q 132 713 123 726 q 151 690 141 701 q 168 672 161 680 l 131 640 q 87 682 106 662 q 53 723 67 703 q 32 765 39 743 q 25 812 25 787 q 29 844 25 829 q 42 870 33 859 q 67 888 52 882 q 104 895 82 895 q 157 877 141 895 q 174 827 174 860 q 158 786 174 803 q 107 767 143 770 m -146 1007 q -80 1081 -117 1056 q 3 1105 -43 1105 q 70 1094 43 1105 q 118 1069 97 1082 q 158 1044 139 1055 q 199 1032 176 1032 q 247 1051 227 1032 q 287 1099 268 1069 l 345 1040 q 278 967 315 991 q 195 942 242 942 q 129 954 155 942 q 81 979 102 965 q 41 1004 60 992 q -1 1015 22 1015 q -49 997 -29 1015 q -88 949 -69 978 l -146 1007 m -283 591 m 495 -259 q 422 -264 464 -264 q 349 -240 376 -264 q 323 -161 323 -216 l 323 -58 l 413 -58 l 413 -131 q 426 -173 413 -161 q 460 -185 438 -185 q 476 -184 467 -185 q 495 -181 486 -184 l 495 -259 z "},"\u1f18":{"ha":764,"x_min":-392,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -18 770 q -70 789 -54 772 q -85 830 -85 806 q -68 880 -85 863 q -10 897 -51 897 q 47 880 31 897 q 64 828 64 863 q 36 732 64 777 q -42 642 7 687 l -79 675 q -62 693 -72 682 q -43 716 -52 704 q -27 742 -34 728 q -18 770 -20 756 m -392 593 z "},"\u1f1c":{"ha":764,"x_min":-478,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -225 770 q -276 789 -261 772 q -292 830 -292 806 q -275 880 -292 863 q -222 897 -259 897 q -185 891 -200 897 q -160 873 -170 884 q -147 847 -151 862 q -143 814 -143 831 q -150 768 -143 789 q -171 726 -157 746 q -205 685 -185 705 q -249 642 -224 665 l -286 675 q -269 693 -279 682 q -250 716 -259 704 q -234 742 -241 728 q -225 770 -227 756 m 99 885 l -20 682 l -106 682 l -33 885 l 99 885 m -478 593 z "},"\u1f1a":{"ha":764,"x_min":-484,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -231 770 q -282 789 -267 772 q -297 830 -297 806 q -281 880 -297 863 q -227 897 -264 897 q -190 891 -205 897 q -166 873 -175 884 q -153 847 -157 862 q -149 814 -149 831 q -156 768 -149 789 q -177 726 -163 746 q -210 685 -191 705 q -254 642 -230 665 l -292 675 q -274 693 -284 682 q -255 716 -264 704 q -239 742 -246 728 q -231 770 -232 756 m 20 885 l 94 682 l 8 682 l -111 885 l 20 885 m -484 593 z "},"\u1f19":{"ha":764,"x_min":-395,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -5 770 q 3 742 -4 756 q 19 716 10 728 q 38 693 28 704 q 56 675 48 682 l 18 642 q -26 685 -6 665 q -59 726 -45 705 q -80 768 -73 746 q -87 814 -87 789 q -83 847 -87 831 q -70 873 -79 862 q -46 891 -61 884 q -9 897 -31 897 q 45 880 28 897 q 61 830 61 863 q 46 789 61 806 q -5 770 31 772 m -395 593 z "},"\u1f1d":{"ha":764,"x_min":-484,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -215 770 q -207 742 -214 756 q -190 716 -199 728 q -171 693 -181 704 q -154 675 -161 682 l -191 642 q -235 685 -216 665 q -269 726 -255 705 q -290 768 -283 746 q -297 814 -297 789 q -293 847 -297 831 q -280 873 -289 862 q -255 891 -271 884 q -218 897 -240 897 q -165 880 -181 897 q -149 830 -149 863 q -164 789 -149 806 q -215 770 -179 772 m 94 885 l -26 682 l -111 682 l -38 885 l 94 885 m -484 593 z "},"\u1f1b":{"ha":764,"x_min":-484,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m -216 770 q -207 742 -214 756 q -191 716 -200 728 q -172 693 -182 704 q -155 675 -162 682 l -192 642 q -236 685 -216 665 q -270 726 -256 705 q -291 768 -283 746 q -298 814 -298 789 q -294 847 -298 831 q -280 873 -290 862 q -256 891 -271 884 q -219 897 -241 897 q -165 880 -182 897 q -149 830 -149 863 q -164 789 -149 806 q -216 770 -180 772 m 20 885 l 93 682 l 7 682 l -112 885 l 20 885 m -484 593 z "},"\u1fc9":{"ha":764,"x_min":-399,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 98 885 l -23 703 l -133 703 l -45 885 l 98 885 m -399 593 z "},"\u1fc8":{"ha":764,"x_min":-376,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 8 885 l 96 703 l -14 703 l -135 885 l 8 885 m -376 593 z "},"\u1f28":{"ha":764,"x_min":-439,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -66 770 q -117 789 -102 772 q -132 830 -132 806 q -115 880 -132 863 q -58 897 -98 897 q 0 880 -17 897 q 16 828 16 863 q -12 732 16 777 q -90 642 -40 687 l -127 675 q -110 693 -119 682 q -91 716 -100 704 q -74 742 -81 728 q -66 770 -67 756 m -439 593 z "},"\u1f2c":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -292 770 q -343 789 -328 772 q -358 830 -358 806 q -342 880 -358 863 q -288 897 -326 897 q -251 891 -267 897 q -227 873 -236 884 q -214 847 -218 862 q -210 814 -210 831 q -217 768 -210 789 q -238 726 -224 746 q -271 685 -252 705 q -315 642 -291 665 l -353 675 q -335 693 -345 682 q -316 716 -326 704 q -300 742 -307 728 q -292 770 -293 756 m 33 885 l -87 682 l -172 682 l -99 885 l 33 885 m -545 593 z "},"\u1f2a":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -292 770 q -343 789 -328 772 q -358 830 -358 806 q -342 880 -358 863 q -288 897 -326 897 q -251 891 -267 897 q -227 873 -236 884 q -214 847 -218 862 q -210 814 -210 831 q -217 768 -210 789 q -238 726 -224 746 q -271 685 -252 705 q -315 642 -291 665 l -353 675 q -335 693 -345 682 q -316 716 -326 704 q -300 742 -307 728 q -292 770 -293 756 m -41 885 l 33 682 l -53 682 l -172 885 l -41 885 m -545 593 z "},"\u1f2e":{"ha":764,"x_min":-440,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -66 767 q -117 786 -102 770 q -132 827 -132 803 q -116 877 -132 860 q -62 895 -100 895 q -25 888 -41 895 q -1 870 -10 882 q 12 844 8 859 q 16 812 16 829 q 9 765 16 787 q -12 723 2 743 q -45 682 -26 703 q -90 640 -65 662 l -127 672 q -110 690 -119 680 q -91 713 -100 701 q -74 740 -81 726 q -66 767 -67 753 m -304 1007 q -238 1081 -275 1056 q -154 1105 -201 1105 q -87 1094 -115 1105 q -39 1069 -60 1082 q 0 1044 -18 1055 q 42 1032 19 1032 q 90 1051 69 1032 q 130 1099 111 1069 l 188 1040 q 121 967 157 991 q 38 942 85 942 q -29 954 -2 942 q -77 979 -56 965 q -116 1004 -98 992 q -158 1015 -135 1015 q -207 997 -186 1015 q -245 949 -227 978 l -304 1007 m -440 591 z "},"\u1f29":{"ha":764,"x_min":-439,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -50 770 q -41 742 -48 756 q -25 716 -34 728 q -6 693 -16 704 q 12 675 4 682 l -26 642 q -70 685 -50 665 q -103 726 -90 705 q -124 768 -117 746 q -132 814 -132 789 q -127 847 -132 831 q -114 873 -123 862 q -90 891 -105 884 q -53 897 -75 897 q 1 880 -16 897 q 17 830 17 863 q 2 789 17 806 q -50 770 -14 772 m -439 593 z "},"\u1f2d":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -276 770 q -268 742 -275 756 q -251 716 -260 728 q -232 693 -242 704 q -215 675 -222 682 l -252 642 q -296 685 -277 665 q -330 726 -316 705 q -351 768 -344 746 q -358 814 -358 789 q -354 847 -358 831 q -341 873 -350 862 q -316 891 -332 884 q -279 897 -301 897 q -226 880 -242 897 q -210 830 -210 863 q -225 789 -210 806 q -276 770 -240 772 m 33 885 l -87 682 l -172 682 l -99 885 l 33 885 m -545 593 z "},"\u1f2b":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -276 770 q -268 742 -275 756 q -251 716 -260 728 q -232 693 -242 704 q -215 675 -222 682 l -252 642 q -296 685 -277 665 q -330 726 -316 705 q -351 768 -344 746 q -358 814 -358 789 q -354 847 -358 831 q -341 873 -350 862 q -316 891 -332 884 q -279 897 -301 897 q -226 880 -242 897 q -210 830 -210 863 q -225 789 -210 806 q -276 770 -240 772 m -41 885 l 33 682 l -53 682 l -172 885 l -41 885 m -545 593 z "},"\u1f2f":{"ha":764,"x_min":-440,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -50 767 q -42 740 -49 753 q -25 713 -35 726 q -6 690 -16 701 q 11 672 3 680 l -26 640 q -71 682 -51 662 q -104 723 -90 703 q -125 765 -118 743 q -132 812 -132 787 q -128 844 -132 829 q -115 870 -124 859 q -91 888 -106 882 q -54 895 -75 895 q 0 877 -16 895 q 16 827 16 860 q 1 786 16 803 q -50 767 -14 770 m -304 1007 q -238 1081 -275 1056 q -154 1105 -201 1105 q -87 1094 -115 1105 q -39 1069 -60 1082 q 0 1044 -18 1055 q 42 1032 19 1032 q 90 1051 69 1032 q 130 1099 111 1069 l 188 1040 q 121 967 157 991 q 38 942 85 942 q -29 954 -2 942 q -77 979 -56 965 q -116 1004 -98 992 q -158 1015 -135 1015 q -207 997 -186 1015 q -245 949 -227 978 l -304 1007 m -440 591 z "},"\u1fcb":{"ha":764,"x_min":-467,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 30 885 l -91 703 l -201 703 l -113 885 l 30 885 m -467 593 z "},"\u1fca":{"ha":764,"x_min":-444,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -60 885 l 28 703 l -82 703 l -203 885 l -60 885 m -444 593 z "},"\u1fcc":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m 511 -259 q 437 -264 479 -264 q 365 -240 391 -264 q 338 -161 338 -216 l 338 -58 l 429 -58 l 429 -131 q 441 -173 429 -161 q 475 -185 454 -185 q 492 -184 483 -185 q 511 -181 501 -184 l 511 -259 z "},"\u1f98":{"ha":764,"x_min":-439,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -66 770 q -117 789 -102 772 q -132 830 -132 806 q -115 880 -132 863 q -58 897 -98 897 q 0 880 -17 897 q 16 828 16 863 q -12 732 16 777 q -90 642 -40 687 l -127 675 q -110 693 -119 682 q -91 716 -100 704 q -74 742 -81 728 q -66 770 -67 756 m -439 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9c":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -292 770 q -343 789 -328 772 q -358 830 -358 806 q -342 880 -358 863 q -288 897 -326 897 q -251 891 -267 897 q -227 873 -236 884 q -214 847 -218 862 q -210 814 -210 831 q -217 768 -210 789 q -238 726 -224 746 q -271 685 -252 705 q -315 642 -291 665 l -353 675 q -335 693 -345 682 q -316 716 -326 704 q -300 742 -307 728 q -292 770 -293 756 m 33 885 l -87 682 l -172 682 l -99 885 l 33 885 m -545 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9a":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -292 770 q -343 789 -328 772 q -358 830 -358 806 q -342 880 -358 863 q -288 897 -326 897 q -251 891 -267 897 q -227 873 -236 884 q -214 847 -218 862 q -210 814 -210 831 q -217 768 -210 789 q -238 726 -224 746 q -271 685 -252 705 q -315 642 -291 665 l -353 675 q -335 693 -345 682 q -316 716 -326 704 q -300 742 -307 728 q -292 770 -293 756 m -41 885 l 33 682 l -53 682 l -172 885 l -41 885 m -545 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9e":{"ha":764,"x_min":-440,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -66 767 q -117 786 -102 770 q -132 827 -132 803 q -116 877 -132 860 q -62 895 -100 895 q -25 888 -41 895 q -1 870 -10 882 q 12 844 8 859 q 16 812 16 829 q 9 765 16 787 q -12 723 2 743 q -45 682 -26 703 q -90 640 -65 662 l -127 672 q -110 690 -119 680 q -91 713 -100 701 q -74 740 -81 726 q -66 767 -67 753 m -304 1007 q -238 1081 -275 1056 q -154 1105 -201 1105 q -87 1094 -115 1105 q -39 1069 -60 1082 q 0 1044 -18 1055 q 42 1032 19 1032 q 90 1051 69 1032 q 130 1099 111 1069 l 188 1040 q 121 967 157 991 q 38 942 85 942 q -29 954 -2 942 q -77 979 -56 965 q -116 1004 -98 992 q -158 1015 -135 1015 q -207 997 -186 1015 q -245 949 -227 978 l -304 1007 m -440 591 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f99":{"ha":764,"x_min":-439,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -50 770 q -41 742 -48 756 q -25 716 -34 728 q -6 693 -16 704 q 12 675 4 682 l -26 642 q -70 685 -50 665 q -103 726 -90 705 q -124 768 -117 746 q -132 814 -132 789 q -127 847 -132 831 q -114 873 -123 862 q -90 891 -105 884 q -53 897 -75 897 q 1 880 -16 897 q 17 830 17 863 q 2 789 17 806 q -50 770 -14 772 m -439 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9d":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -276 770 q -268 742 -275 756 q -251 716 -260 728 q -232 693 -242 704 q -215 675 -222 682 l -252 642 q -296 685 -277 665 q -330 726 -316 705 q -351 768 -344 746 q -358 814 -358 789 q -354 847 -358 831 q -341 873 -350 862 q -316 891 -332 884 q -279 897 -301 897 q -226 880 -242 897 q -210 830 -210 863 q -225 789 -210 806 q -276 770 -240 772 m 33 885 l -87 682 l -172 682 l -99 885 l 33 885 m -545 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9b":{"ha":764,"x_min":-545,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -276 770 q -268 742 -275 756 q -251 716 -260 728 q -232 693 -242 704 q -215 675 -222 682 l -252 642 q -296 685 -277 665 q -330 726 -316 705 q -351 768 -344 746 q -358 814 -358 789 q -354 847 -358 831 q -341 873 -350 862 q -316 891 -332 884 q -279 897 -301 897 q -226 880 -242 897 q -210 830 -210 863 q -225 789 -210 806 q -276 770 -240 772 m -41 885 l 33 682 l -53 682 l -172 885 l -41 885 m -545 593 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f9f":{"ha":764,"x_min":-440,"x_max":689,"o":"m 689 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 0 m -50 767 q -42 740 -49 753 q -25 713 -35 726 q -6 690 -16 701 q 11 672 3 680 l -26 640 q -71 682 -51 662 q -104 723 -90 703 q -125 765 -118 743 q -132 812 -132 787 q -128 844 -132 829 q -115 870 -124 859 q -91 888 -106 882 q -54 895 -75 895 q 0 877 -16 895 q 16 827 16 860 q 1 786 16 803 q -50 767 -14 770 m -304 1007 q -238 1081 -275 1056 q -154 1105 -201 1105 q -87 1094 -115 1105 q -39 1069 -60 1082 q 0 1044 -18 1055 q 42 1032 19 1032 q 90 1051 69 1032 q 130 1099 111 1069 l 188 1040 q 121 967 157 991 q 38 942 85 942 q -29 954 -2 942 q -77 979 -56 965 q -116 1004 -98 992 q -158 1015 -135 1015 q -207 997 -186 1015 q -245 949 -227 978 l -304 1007 m -440 591 m 502 -259 q 429 -264 471 -264 q 356 -240 382 -264 q 330 -161 330 -216 l 330 -58 l 420 -58 l 420 -131 q 432 -173 420 -161 q 467 -185 445 -185 q 483 -184 474 -185 q 502 -181 492 -184 l 502 -259 z "},"\u1f38":{"ha":764,"x_min":-406,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -33 770 q -84 789 -68 772 q -99 830 -99 806 q -82 880 -99 863 q -24 897 -65 897 q 33 880 16 897 q 50 828 50 863 q 21 732 50 777 q -56 642 -7 687 l -94 675 q -76 693 -86 682 q -57 716 -66 704 q -41 742 -48 728 q -33 770 -34 756 m -406 593 z "},"\u1f3c":{"ha":764,"x_min":-491,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -238 770 q -289 789 -274 772 q -304 830 -304 806 q -288 880 -304 863 q -235 897 -272 897 q -198 891 -213 897 q -173 873 -182 884 q -160 847 -164 862 q -156 814 -156 831 q -163 768 -156 789 q -184 726 -170 746 q -218 685 -198 705 q -262 642 -237 665 l -299 675 q -282 693 -292 682 q -263 716 -272 704 q -247 742 -254 728 q -238 770 -239 756 m 86 885 l -33 682 l -119 682 l -45 885 l 86 885 m -491 593 z "},"\u1f3a":{"ha":764,"x_min":-484,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -231 770 q -282 789 -267 772 q -298 830 -298 806 q -281 880 -298 863 q -228 897 -265 897 q -191 891 -206 897 q -166 873 -176 884 q -153 847 -157 862 q -149 814 -149 831 q -156 768 -149 789 q -177 726 -163 746 q -211 685 -191 705 q -255 642 -231 665 l -292 675 q -275 693 -285 682 q -256 716 -265 704 q -240 742 -247 728 q -231 770 -233 756 m 20 885 l 93 682 l 7 682 l -112 885 l 20 885 m -484 593 z "},"\u1f3e":{"ha":764,"x_min":-406,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -32 770 q -83 789 -68 772 q -98 830 -98 806 q -82 880 -98 863 q -28 897 -66 897 q 8 891 -7 897 q 33 873 24 884 q 46 847 42 862 q 50 814 50 831 q 43 768 50 789 q 22 726 36 746 q -12 685 8 705 q -56 642 -31 665 l -93 675 q -76 693 -85 682 q -57 716 -66 704 q -40 742 -47 728 q -32 770 -33 756 m -270 1010 q -204 1083 -241 1059 q -120 1108 -167 1108 q -54 1097 -81 1108 q -5 1072 -26 1085 q 34 1046 16 1058 q 76 1035 53 1035 q 124 1054 103 1035 q 163 1101 144 1072 l 222 1043 q 155 969 191 994 q 72 945 119 945 q 5 956 32 945 q -43 981 -22 968 q -82 1006 -64 995 q -124 1018 -101 1018 q -173 999 -153 1018 q -212 951 -193 981 l -270 1010 m -406 593 z "},"\u1f39":{"ha":764,"x_min":-406,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -17 770 q -8 742 -16 756 q 8 716 -1 728 q 27 693 17 704 q 44 675 37 682 l 7 642 q -37 685 -18 665 q -71 726 -57 705 q -92 768 -85 746 q -99 814 -99 789 q -95 847 -99 831 q -82 873 -91 862 q -57 891 -73 884 q -20 897 -42 897 q 33 880 17 897 q 50 830 50 863 q 34 789 50 806 q -17 770 19 772 m -406 593 z "},"\u1f3d":{"ha":764,"x_min":-491,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -222 770 q -214 742 -221 756 q -198 716 -207 728 q -179 693 -189 704 q -161 675 -169 682 l -199 642 q -243 685 -223 665 q -276 726 -262 705 q -297 768 -290 746 q -304 814 -304 789 q -300 847 -304 831 q -287 873 -296 862 q -263 891 -278 884 q -226 897 -248 897 q -172 880 -189 897 q -156 830 -156 863 q -171 789 -156 806 q -222 770 -186 772 m 86 885 l -33 682 l -119 682 l -45 885 l 86 885 m -491 593 z "},"\u1f3b":{"ha":764,"x_min":-484,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -216 770 q -207 742 -214 756 q -191 716 -200 728 q -172 693 -182 704 q -155 675 -162 682 l -192 642 q -236 685 -216 665 q -270 726 -256 705 q -291 768 -283 746 q -298 814 -298 789 q -294 847 -298 831 q -280 873 -290 862 q -256 891 -271 884 q -219 897 -241 897 q -165 880 -182 897 q -149 830 -149 863 q -164 789 -149 806 q -216 770 -180 772 m 20 885 l 93 682 l 7 682 l -112 885 l 20 885 m -484 593 z "},"\u1f3f":{"ha":764,"x_min":-407,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m -17 770 q -8 742 -16 756 q 8 716 -1 728 q 27 693 17 704 q 44 675 37 682 l 7 642 q -37 685 -18 665 q -71 726 -57 705 q -92 768 -85 746 q -99 814 -99 789 q -95 847 -99 831 q -82 873 -91 862 q -57 891 -73 884 q -20 897 -42 897 q 33 880 17 897 q 50 830 50 863 q 34 789 50 806 q -17 770 19 772 m -271 1010 q -204 1083 -241 1059 q -121 1108 -168 1108 q -54 1097 -81 1108 q -6 1072 -27 1085 q 34 1046 15 1058 q 75 1035 52 1035 q 123 1054 102 1035 q 163 1101 144 1072 l 221 1043 q 154 969 191 994 q 71 945 118 945 q 4 956 31 945 q -43 981 -22 968 q -83 1006 -64 995 q -125 1018 -102 1018 q -173 999 -153 1018 q -212 951 -193 981 l -271 1010 m -407 593 z "},"\u1fdb":{"ha":764,"x_min":-422,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 75 885 l -46 703 l -156 703 l -68 885 l 75 885 m -422 593 z "},"\u1fda":{"ha":764,"x_min":-365,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 19 885 l 106 703 l -3 703 l -124 885 l 19 885 m -365 593 z "},"\u1fd9":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u1fd8":{"ha":764,"x_min":0,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u1f48":{"ha":764,"x_min":-406,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -33 770 q -84 789 -68 772 q -99 830 -99 806 q -82 880 -99 863 q -24 897 -65 897 q 33 880 16 897 q 50 828 50 863 q 21 732 50 777 q -56 642 -7 687 l -94 675 q -76 693 -86 682 q -57 716 -66 704 q -41 742 -48 728 q -33 770 -34 756 m -406 593 z "},"\u1f4c":{"ha":764,"x_min":-467,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -214 767 q -266 786 -250 770 q -281 827 -281 803 q -264 877 -281 860 q -211 895 -248 895 q -174 888 -189 895 q -150 870 -159 882 q -136 844 -140 859 q -132 812 -132 829 q -139 765 -132 787 q -160 723 -146 743 q -194 682 -174 703 q -238 640 -214 662 l -275 672 q -258 690 -268 680 q -239 713 -248 701 q -223 740 -230 726 q -214 767 -216 753 m 110 882 l -9 680 l -95 680 l -22 882 l 110 882 m -467 591 z "},"\u1f4a":{"ha":764,"x_min":-535,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -282 770 q -333 789 -318 772 q -349 830 -349 806 q -332 880 -349 863 q -279 897 -316 897 q -242 891 -257 897 q -217 873 -227 884 q -204 847 -208 862 q -200 814 -200 831 q -207 768 -200 789 q -228 726 -214 746 q -262 685 -242 705 q -306 642 -281 665 l -343 675 q -326 693 -336 682 q -307 716 -316 704 q -291 742 -298 728 q -282 770 -283 756 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 z "},"\u1f49":{"ha":764,"x_min":-413,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -24 770 q -15 742 -22 756 q 1 716 -8 728 q 20 693 10 704 q 37 675 30 682 l 0 642 q -44 685 -24 665 q -78 726 -64 705 q -99 768 -92 746 q -106 814 -106 789 q -102 847 -106 831 q -89 873 -98 862 q -64 891 -79 884 q -27 897 -49 897 q 26 880 10 897 q 43 830 43 863 q 27 789 43 806 q -24 770 12 772 m -413 593 z "},"\u1f4d":{"ha":764,"x_min":-467,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -199 767 q -190 740 -197 753 q -174 713 -183 726 q -155 690 -165 701 q -138 672 -145 680 l -175 640 q -219 682 -199 662 q -253 723 -239 703 q -274 765 -267 743 q -281 812 -281 787 q -277 844 -281 829 q -263 870 -273 859 q -239 888 -254 882 q -202 895 -224 895 q -149 877 -165 895 q -132 827 -132 860 q -148 786 -132 803 q -199 767 -163 770 m 110 882 l -9 680 l -95 680 l -22 882 l 110 882 m -467 591 z "},"\u1f4b":{"ha":764,"x_min":-535,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -267 770 q -258 742 -265 756 q -242 716 -251 728 q -223 693 -233 704 q -205 675 -213 682 l -243 642 q -287 685 -267 665 q -320 726 -307 705 q -341 768 -334 746 q -349 814 -349 789 q -345 847 -349 831 q -331 873 -340 862 q -307 891 -322 884 q -270 897 -292 897 q -216 880 -233 897 q -200 830 -200 863 q -215 789 -200 806 q -267 770 -231 772 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 z "},"\u1ff9":{"ha":764,"x_min":-376,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 121 885 l 0 703 l -110 703 l -22 885 l 121 885 m -376 593 z "},"\u1ff8":{"ha":764,"x_min":-427,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m -43 885 l 45 703 l -65 703 l -186 885 l -43 885 m -427 593 z "},"\u1fec":{"ha":764,"x_min":-421,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 m -32 770 q -23 742 -31 756 q -7 716 -16 728 q 12 693 2 704 q 29 675 22 682 l -8 642 q -52 685 -33 665 q -86 726 -72 705 q -107 768 -100 746 q -114 814 -114 789 q -110 847 -114 831 q -97 873 -106 862 q -72 891 -87 884 q -35 897 -57 897 q 18 880 2 897 q 35 830 35 863 q 19 789 35 806 q -32 770 4 772 m -421 593 z "},"\u1f59":{"ha":764,"x_min":-484,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -95 770 q -86 742 -94 756 q -70 716 -79 728 q -51 693 -61 704 q -34 675 -41 682 l -71 642 q -115 685 -96 665 q -149 726 -135 705 q -170 768 -163 746 q -177 814 -177 789 q -173 847 -177 831 q -160 873 -169 862 q -135 891 -151 884 q -98 897 -120 897 q -45 880 -61 897 q -28 830 -28 863 q -44 789 -28 806 q -95 770 -59 772 m -484 593 z "},"\u1f5d":{"ha":764,"x_min":-600,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -332 770 q -323 742 -330 756 q -307 716 -316 728 q -288 693 -298 704 q -271 675 -278 682 l -308 642 q -352 685 -332 665 q -386 726 -372 705 q -407 768 -399 746 q -414 814 -414 789 q -410 847 -414 831 q -396 873 -406 862 q -372 891 -387 884 q -335 897 -357 897 q -281 880 -298 897 q -265 830 -265 863 q -280 789 -265 806 q -332 770 -296 772 m -23 885 l -142 682 l -228 682 l -155 885 l -23 885 m -600 593 z "},"\u1f5b":{"ha":764,"x_min":-552,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -283 770 q -275 742 -282 756 q -259 716 -268 728 q -240 693 -250 704 q -222 675 -230 682 l -260 642 q -304 685 -284 665 q -337 726 -323 705 q -358 768 -351 746 q -366 814 -366 789 q -361 847 -366 831 q -348 873 -357 862 q -324 891 -339 884 q -287 897 -309 897 q -233 880 -250 897 q -217 830 -217 863 q -232 789 -217 806 q -283 770 -248 772 m -48 885 l 25 682 l -60 682 l -180 885 l -48 885 m -552 593 z "},"\u1f5f":{"ha":764,"x_min":-491,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -101 770 q -93 742 -100 756 q -76 716 -85 728 q -57 693 -67 704 q -40 675 -47 682 l -77 642 q -121 685 -102 665 q -155 726 -141 705 q -176 768 -169 746 q -183 814 -183 789 q -179 847 -183 831 q -166 873 -175 862 q -141 891 -157 884 q -104 897 -126 897 q -51 880 -67 897 q -35 830 -35 863 q -50 789 -35 806 q -101 770 -65 772 m -355 1010 q -289 1083 -326 1059 q -205 1108 -252 1108 q -138 1097 -165 1108 q -90 1072 -111 1085 q -51 1046 -69 1058 q -9 1035 -32 1035 q 39 1054 18 1035 q 79 1101 60 1072 l 137 1043 q 70 969 106 994 q -13 945 34 945 q -80 956 -53 945 q -127 981 -106 968 q -167 1006 -149 995 q -209 1018 -186 1018 q -257 999 -237 1018 q -296 951 -277 981 l -355 1010 m -491 593 z "},"\u1feb":{"ha":764,"x_min":-516,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -19 885 l -140 703 l -250 703 l -162 885 l -19 885 m -516 593 z "},"\u1fea":{"ha":764,"x_min":-455,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m -71 885 l 16 703 l -94 703 l -214 885 l -71 885 m -455 593 z "},"\u1fe9":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u1fe8":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u1f68":{"ha":764,"x_min":-413,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -39 770 q -91 789 -75 772 q -106 830 -106 806 q -89 880 -106 863 q -31 897 -72 897 q 26 880 9 897 q 43 828 43 863 q 15 732 43 777 q -63 642 -14 687 l -100 675 q -83 693 -93 682 q -64 716 -73 704 q -48 742 -55 728 q -39 770 -41 756 m -413 593 z "},"\u1f6c":{"ha":764,"x_min":-464,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -211 770 q -262 789 -247 772 q -277 830 -277 806 q -261 880 -277 863 q -208 897 -245 897 q -171 891 -186 897 q -146 873 -155 884 q -133 847 -137 862 q -129 814 -129 831 q -136 768 -129 789 q -157 726 -143 746 q -191 685 -171 705 q -235 642 -210 665 l -272 675 q -255 693 -264 682 q -236 716 -245 704 q -219 742 -227 728 q -211 770 -212 756 m 113 885 l -6 682 l -92 682 l -18 885 l 113 885 m -464 593 z "},"\u1f6a":{"ha":764,"x_min":-535,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -282 770 q -333 789 -318 772 q -349 830 -349 806 q -332 880 -349 863 q -279 897 -316 897 q -242 891 -257 897 q -217 873 -227 884 q -204 847 -208 862 q -200 814 -200 831 q -207 768 -200 789 q -228 726 -214 746 q -262 685 -242 705 q -306 642 -281 665 l -343 675 q -326 693 -336 682 q -307 716 -316 704 q -291 742 -298 728 q -282 770 -283 756 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 z "},"\u1f6e":{"ha":764,"x_min":-414,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -39 770 q -91 789 -75 772 q -106 830 -106 806 q -90 880 -106 863 q -36 897 -73 897 q 1 891 -14 897 q 25 873 16 884 q 39 847 35 862 q 43 814 43 831 q 36 768 43 789 q 15 726 28 746 q -19 685 1 705 q -63 642 -39 665 l -100 675 q -83 693 -93 682 q -64 716 -73 704 q -48 742 -55 728 q -39 770 -41 756 m -277 1010 q -211 1083 -248 1059 q -127 1108 -174 1108 q -61 1097 -88 1108 q -13 1072 -34 1085 q 27 1046 8 1058 q 68 1035 45 1035 q 116 1054 96 1035 q 156 1101 137 1072 l 214 1043 q 148 969 184 994 q 64 945 111 945 q -2 956 24 945 q -50 981 -29 968 q -90 1006 -71 995 q -132 1018 -109 1018 q -180 999 -160 1018 q -219 951 -200 981 l -277 1010 m -414 593 z "},"\u1f69":{"ha":764,"x_min":-413,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -24 770 q -15 742 -22 756 q 1 716 -8 728 q 20 693 10 704 q 37 675 30 682 l 0 642 q -44 685 -24 665 q -78 726 -64 705 q -99 768 -92 746 q -106 814 -106 789 q -102 847 -106 831 q -89 873 -98 862 q -64 891 -79 884 q -27 897 -49 897 q 26 880 10 897 q 43 830 43 863 q 27 789 43 806 q -24 770 12 772 m -413 593 z "},"\u1f6d":{"ha":764,"x_min":-464,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -195 770 q -187 742 -194 756 q -171 716 -180 728 q -152 693 -161 704 q -134 675 -142 682 l -172 642 q -216 685 -196 665 q -249 726 -235 705 q -270 768 -263 746 q -277 814 -277 789 q -273 847 -277 831 q -260 873 -269 862 q -236 891 -251 884 q -199 897 -220 897 q -145 880 -161 897 q -129 830 -129 863 q -144 789 -129 806 q -195 770 -159 772 m 113 885 l -6 682 l -92 682 l -18 885 l 113 885 m -464 593 z "},"\u1f6b":{"ha":764,"x_min":-535,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -267 770 q -258 742 -265 756 q -242 716 -251 728 q -223 693 -233 704 q -205 675 -213 682 l -243 642 q -287 685 -267 665 q -320 726 -307 705 q -341 768 -334 746 q -349 814 -349 789 q -345 847 -349 831 q -331 873 -340 862 q -307 891 -322 884 q -270 897 -292 897 q -216 880 -233 897 q -200 830 -200 863 q -215 789 -200 806 q -267 770 -231 772 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 z "},"\u1f6f":{"ha":764,"x_min":-414,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -24 770 q -15 742 -22 756 q 1 716 -8 728 q 20 693 10 704 q 37 675 30 682 l 0 642 q -44 685 -24 665 q -78 726 -64 705 q -99 768 -92 746 q -106 814 -106 789 q -102 847 -106 831 q -89 873 -98 862 q -64 891 -79 884 q -27 897 -49 897 q 26 880 10 897 q 43 830 43 863 q 27 789 43 806 q -24 770 12 772 m -277 1010 q -211 1083 -248 1059 q -127 1108 -174 1108 q -61 1097 -88 1108 q -13 1072 -34 1085 q 27 1046 8 1058 q 68 1035 45 1035 q 116 1054 96 1035 q 156 1101 137 1072 l 214 1043 q 148 969 184 994 q 64 945 111 945 q -2 956 24 945 q -50 981 -29 968 q -90 1006 -71 995 q -132 1018 -109 1018 q -180 999 -160 1018 q -219 951 -200 981 l -277 1010 m -414 593 z "},"\u1ffb":{"ha":764,"x_min":-386,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m 111 885 l -9 703 l -119 703 l -32 885 l 111 885 m -386 593 z "},"\u1ffa":{"ha":764,"x_min":-441,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -57 885 l 31 703 l -79 703 l -200 885 l -57 885 m -441 593 z "},"\u1ffc":{"ha":764,"x_min":29,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m 519 -259 q 446 -264 488 -264 q 373 -240 399 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 449 -173 437 -161 q 484 -185 462 -185 q 500 -184 491 -185 q 519 -181 509 -184 l 519 -259 z "},"\u1fa8":{"ha":764,"x_min":-413,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -39 770 q -91 789 -75 772 q -106 830 -106 806 q -89 880 -106 863 q -31 897 -72 897 q 26 880 9 897 q 43 828 43 863 q 15 732 43 777 q -63 642 -14 687 l -100 675 q -83 693 -93 682 q -64 716 -73 704 q -48 742 -55 728 q -39 770 -41 756 m -413 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1fac":{"ha":764,"x_min":-464,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -211 770 q -262 789 -247 772 q -277 830 -277 806 q -261 880 -277 863 q -208 897 -245 897 q -171 891 -186 897 q -146 873 -155 884 q -133 847 -137 862 q -129 814 -129 831 q -136 768 -129 789 q -157 726 -143 746 q -191 685 -171 705 q -235 642 -210 665 l -272 675 q -255 693 -264 682 q -236 716 -245 704 q -219 742 -227 728 q -211 770 -212 756 m 113 885 l -6 682 l -92 682 l -18 885 l 113 885 m -464 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1faa":{"ha":764,"x_min":-535,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -282 770 q -333 789 -318 772 q -349 830 -349 806 q -332 880 -349 863 q -279 897 -316 897 q -242 891 -257 897 q -217 873 -227 884 q -204 847 -208 862 q -200 814 -200 831 q -207 768 -200 789 q -228 726 -214 746 q -262 685 -242 705 q -306 642 -281 665 l -343 675 q -326 693 -336 682 q -307 716 -316 704 q -291 742 -298 728 q -282 770 -283 756 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1fae":{"ha":764,"x_min":-414,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -39 770 q -91 789 -75 772 q -106 830 -106 806 q -90 880 -106 863 q -36 897 -73 897 q 1 891 -14 897 q 25 873 16 884 q 39 847 35 862 q 43 814 43 831 q 36 768 43 789 q 15 726 28 746 q -19 685 1 705 q -63 642 -39 665 l -100 675 q -83 693 -93 682 q -64 716 -73 704 q -48 742 -55 728 q -39 770 -41 756 m -277 1010 q -211 1083 -248 1059 q -127 1108 -174 1108 q -61 1097 -88 1108 q -13 1072 -34 1085 q 27 1046 8 1058 q 68 1035 45 1035 q 116 1054 96 1035 q 156 1101 137 1072 l 214 1043 q 148 969 184 994 q 64 945 111 945 q -2 956 24 945 q -50 981 -29 968 q -90 1006 -71 995 q -132 1018 -109 1018 q -180 999 -160 1018 q -219 951 -200 981 l -277 1010 m -414 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1fa9":{"ha":764,"x_min":-413,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -24 770 q -15 742 -22 756 q 1 716 -8 728 q 20 693 10 704 q 37 675 30 682 l 0 642 q -44 685 -24 665 q -78 726 -64 705 q -99 768 -92 746 q -106 814 -106 789 q -102 847 -106 831 q -89 873 -98 862 q -64 891 -79 884 q -27 897 -49 897 q 26 880 10 897 q 43 830 43 863 q 27 789 43 806 q -24 770 12 772 m -413 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1fad":{"ha":764,"x_min":-464,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -195 770 q -187 742 -194 756 q -171 716 -180 728 q -152 693 -161 704 q -134 675 -142 682 l -172 642 q -216 685 -196 665 q -249 726 -235 705 q -270 768 -263 746 q -277 814 -277 789 q -273 847 -277 831 q -260 873 -269 862 q -236 891 -251 884 q -199 897 -220 897 q -145 880 -161 897 q -129 830 -129 863 q -144 789 -129 806 q -195 770 -159 772 m 113 885 l -6 682 l -92 682 l -18 885 l 113 885 m -464 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1fab":{"ha":764,"x_min":-535,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -267 770 q -258 742 -265 756 q -242 716 -251 728 q -223 693 -233 704 q -205 675 -213 682 l -243 642 q -287 685 -267 665 q -320 726 -307 705 q -341 768 -334 746 q -349 814 -349 789 q -345 847 -349 831 q -331 873 -340 862 q -307 891 -322 884 q -270 897 -292 897 q -216 880 -233 897 q -200 830 -200 863 q -215 789 -200 806 q -267 770 -231 772 m -31 885 l 42 682 l -43 682 l -163 885 l -31 885 m -535 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1faf":{"ha":764,"x_min":-414,"x_max":734,"o":"m 734 0 l 441 0 l 441 89 q 517 154 486 117 q 566 238 547 191 q 592 340 584 284 q 600 464 600 397 q 588 596 600 536 q 550 701 576 657 q 483 769 524 745 q 382 794 441 794 q 284 768 325 794 q 216 698 243 743 q 177 593 190 653 q 164 464 164 532 q 172 344 164 399 q 199 243 180 289 q 248 159 218 197 q 322 92 278 121 l 322 0 l 29 0 l 29 98 l 200 98 q 78 243 117 153 q 39 461 39 334 q 66 656 39 574 q 141 792 94 739 q 252 872 189 846 q 386 899 315 899 q 539 868 475 899 q 644 781 603 837 q 705 645 686 724 q 725 469 725 566 q 687 250 725 343 q 562 98 650 157 l 734 98 l 734 0 m -24 770 q -15 742 -22 756 q 1 716 -8 728 q 20 693 10 704 q 37 675 30 682 l 0 642 q -44 685 -24 665 q -78 726 -64 705 q -99 768 -92 746 q -106 814 -106 789 q -102 847 -106 831 q -89 873 -98 862 q -64 891 -79 884 q -27 897 -49 897 q 26 880 10 897 q 43 830 43 863 q 27 789 43 806 q -24 770 12 772 m -277 1010 q -211 1083 -248 1059 q -127 1108 -174 1108 q -61 1097 -88 1108 q -13 1072 -34 1085 q 27 1046 8 1058 q 68 1035 45 1035 q 116 1054 96 1035 q 156 1101 137 1072 l 214 1043 q 148 969 184 994 q 64 945 111 945 q -2 956 24 945 q -50 981 -29 968 q -90 1006 -71 995 q -132 1018 -109 1018 q -180 999 -160 1018 q -219 951 -200 981 l -277 1010 m -414 593 m 519 -259 q 446 -264 488 -264 q 374 -240 400 -264 q 347 -161 347 -216 l 347 -58 l 437 -58 l 437 -131 q 450 -173 437 -161 q 484 -185 463 -185 q 501 -184 492 -185 q 519 -181 510 -184 l 519 -259 z "},"\u1f00":{"ha":764,"x_min":-33,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 340 857 q 289 877 304 860 q 274 918 274 893 q 291 967 274 950 q 349 985 308 985 q 406 967 389 985 q 422 916 422 950 q 394 820 422 865 q 317 730 366 774 l 279 762 q 297 781 287 770 q 316 804 307 791 q 332 830 325 816 q 340 857 339 844 m -33 681 z "},"\u1f04":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f02":{"ha":764,"x_min":-26,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 227 857 q 175 877 191 860 q 160 918 160 893 q 176 967 160 950 q 230 985 193 985 q 267 978 252 985 q 291 961 282 972 q 304 934 300 949 q 309 902 309 919 q 301 855 309 877 q 280 813 294 833 q 247 772 267 793 q 203 730 227 752 l 165 762 q 183 781 173 770 q 202 804 193 791 q 218 830 211 816 q 227 857 225 844 m 477 972 l 551 770 l 465 770 l 346 972 l 477 972 m -26 681 z "},"\u1f06":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f01":{"ha":764,"x_min":-33,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 356 857 q 365 830 357 844 q 381 804 372 816 q 400 781 390 791 q 417 762 410 770 l 380 730 q 336 772 355 752 q 302 813 316 793 q 281 855 288 833 q 274 902 274 877 q 278 934 274 919 q 291 961 282 949 q 316 978 300 972 q 353 985 331 985 q 406 967 390 985 q 422 918 422 950 q 407 877 422 893 q 356 857 392 860 m -33 681 z "},"\u1f05":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f03":{"ha":764,"x_min":-26,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 242 857 q 251 830 243 844 q 267 804 258 816 q 286 781 276 791 q 303 762 296 770 l 266 730 q 222 772 241 752 q 188 813 202 793 q 167 855 174 833 q 160 902 160 877 q 164 934 160 919 q 177 961 168 949 q 202 978 186 972 q 239 985 217 985 q 292 967 276 985 q 309 918 309 950 q 293 877 309 893 q 242 857 278 860 m 477 972 l 551 770 l 465 770 l 346 972 l 477 972 m -26 681 z "},"\u1f07":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f71":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u1f70":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 384 972 l 471 790 l 361 790 l 241 972 l 384 972 m 0 681 z "},"\u1fb6":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1fb1":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1fb0":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u1fb3":{"ha":764,"x_min":54,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f80":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f84":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f82":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f86":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f81":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f85":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f83":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1f87":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1fb4":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 497 972 l 376 790 l 267 790 l 354 972 l 497 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1fb2":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 384 972 l 471 790 l 361 790 l 241 972 l 384 972 m 0 681 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u1fb7":{"ha":764,"x_min":0,"x_max":737,"o":"m 54 330 q 76 481 54 414 q 135 596 97 549 q 227 668 174 643 q 343 693 279 693 q 416 683 382 693 q 480 652 451 672 q 531 602 509 631 q 566 534 553 572 l 590 681 l 696 681 l 631 328 l 631 319 q 657 146 631 202 q 737 97 683 90 l 737 0 q 656 -1 688 -7 q 603 25 624 6 q 571 73 583 43 q 550 142 559 103 q 458 28 516 68 q 317 -12 399 -12 q 201 13 250 -12 q 119 83 152 38 q 71 191 87 128 q 54 330 54 254 m 175 338 q 217 152 175 214 q 340 90 258 90 q 408 108 377 90 q 463 159 439 126 q 499 237 486 192 q 513 334 513 281 l 513 346 q 502 444 513 399 q 470 522 491 489 q 417 573 448 555 q 346 591 386 591 q 273 574 304 591 q 219 523 241 556 q 186 444 197 490 q 175 338 175 397 m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1f10":{"ha":764,"x_min":0,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f14":{"ha":764,"x_min":26,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 279 857 q 228 877 243 860 q 213 918 213 893 q 229 967 213 950 q 283 985 245 985 q 320 978 304 985 q 344 961 335 972 q 357 934 353 949 q 361 902 361 919 q 354 855 361 877 q 333 813 347 833 q 300 772 319 793 q 256 730 280 752 l 218 762 q 236 781 226 770 q 255 804 245 791 q 271 830 264 816 q 279 857 278 844 m 604 972 l 484 770 l 399 770 l 472 972 l 604 972 m 26 681 z "},"\u1f12":{"ha":764,"x_min":0,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f11":{"ha":764,"x_min":0,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f15":{"ha":764,"x_min":14,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 282 857 q 291 830 283 844 q 307 804 298 816 q 326 781 316 791 q 343 762 336 770 l 306 730 q 262 772 281 752 q 228 813 242 793 q 207 855 214 833 q 200 902 200 877 q 204 934 200 919 q 217 961 208 949 q 242 978 227 972 q 279 985 257 985 q 332 967 316 985 q 349 918 349 950 q 333 877 349 893 q 282 857 318 860 m 591 972 l 471 770 l 386 770 l 459 972 l 591 972 m 14 681 z "},"\u1f13":{"ha":764,"x_min":0,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f73":{"ha":764,"x_min":21,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 570 972 l 449 790 l 339 790 l 427 972 l 570 972 m 21 681 z "},"\u1f72":{"ha":764,"x_min":17,"x_max":673,"o":"m 673 17 q 547 -5 606 2 q 428 -12 488 -12 q 273 2 337 -12 q 167 42 208 16 q 106 104 125 68 q 87 187 87 141 q 101 255 87 227 q 138 303 115 283 q 193 333 161 322 q 261 350 224 345 q 198 372 224 356 q 154 408 172 387 q 128 452 136 429 q 119 496 119 475 q 194 643 119 593 q 428 693 269 693 q 535 688 478 693 q 656 668 592 683 l 656 558 q 531 584 591 575 q 414 593 471 593 q 333 585 366 593 q 281 565 301 578 q 253 535 261 553 q 244 498 244 518 q 293 424 244 450 q 441 399 341 399 l 570 399 l 570 301 l 428 301 q 267 275 318 301 q 216 201 216 248 q 228 156 216 176 q 267 120 240 135 q 335 97 293 105 q 439 89 378 89 q 545 96 485 89 q 673 121 604 104 l 673 17 m 401 972 l 488 790 l 378 790 l 258 972 l 401 972 m 17 681 z "},"\u1f20":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f24":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f22":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f26":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f21":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f25":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f23":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f27":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f75":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u1f74":{"ha":764,"x_min":-26,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 358 972 l 446 790 l 336 790 l 215 972 l 358 972 m -26 681 z "},"\u1fc6":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1fc3":{"ha":764,"x_min":93,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f90":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f94":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f92":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f96":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f91":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f95":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f93":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f97":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1fc4":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 497 972 l 376 790 l 267 790 l 354 972 l 497 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1fc2":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 384 972 l 471 790 l 361 790 l 241 972 l 384 972 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1fc7":{"ha":764,"x_min":0,"x_max":659,"o":"m 111 360 q 110 435 111 395 q 105 518 108 476 q 99 602 102 560 q 93 681 96 644 l 201 681 l 212 559 q 279 630 251 606 q 333 667 307 653 q 388 687 360 682 q 446 693 416 693 q 605 631 551 693 q 659 444 659 569 l 659 -278 l 541 -278 l 541 435 q 511 553 541 515 q 422 591 481 591 q 379 585 400 591 q 336 563 359 578 q 288 519 314 547 q 229 452 262 492 l 229 0 l 111 0 l 111 360 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 m 296 -259 q 222 -264 264 -264 q 150 -240 176 -264 q 123 -161 123 -216 l 123 -58 l 214 -58 l 214 -131 q 226 -173 214 -161 q 260 -185 239 -185 q 277 -184 268 -185 q 296 -181 286 -184 l 296 -259 z "},"\u1f30":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f34":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f32":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f36":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f31":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f35":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f33":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f37":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1fd3":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 178 943 q 206 938 193 943 q 229 922 220 932 q 244 899 239 912 q 250 871 250 886 q 244 843 250 856 q 229 820 239 829 q 206 805 220 810 q 178 799 193 799 q 126 820 147 799 q 106 871 106 840 q 112 899 106 886 q 127 922 117 912 q 150 938 136 932 q 178 943 163 943 m 586 943 q 614 938 601 943 q 637 922 628 932 q 653 899 647 912 q 659 871 659 886 q 653 843 659 856 q 637 820 647 829 q 614 805 628 810 q 586 799 601 799 q 535 820 555 799 q 514 871 514 840 q 520 899 514 886 q 535 922 526 912 q 558 938 545 932 q 586 943 571 943 m 488 978 l 401 790 l 300 790 l 353 978 l 488 978 m 0 681 z "},"\u1fd2":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 176 918 q 203 912 190 918 q 226 896 216 906 q 242 873 236 886 q 248 845 248 860 q 242 817 248 830 q 226 794 236 804 q 203 779 216 785 q 176 773 190 773 q 148 779 161 773 q 125 794 135 785 q 110 817 115 804 q 104 845 104 830 q 110 873 104 860 q 125 896 115 886 q 148 912 135 906 q 176 918 161 918 m 588 918 q 615 912 602 918 q 638 896 628 906 q 654 873 648 886 q 660 845 660 860 q 654 817 660 830 q 638 794 648 804 q 615 779 628 785 q 588 773 602 773 q 560 779 573 773 q 537 794 547 785 q 522 817 528 804 q 516 845 516 830 q 522 873 516 860 q 537 896 528 886 q 560 912 547 906 q 588 918 573 918 m 374 982 l 467 779 l 382 779 l 242 981 l 374 982 m 0 690 z "},"\u1fd7":{"ha":764,"x_min":-1,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 257 908 q 284 902 271 908 q 308 887 298 897 q 323 864 317 877 q 329 836 329 850 q 323 808 329 821 q 308 785 317 795 q 284 769 298 775 q 257 764 271 764 q 230 769 243 764 q 207 785 216 775 q 191 808 197 795 q 185 836 185 821 q 191 864 185 850 q 207 887 197 877 q 230 902 216 897 q 257 908 243 908 m 533 908 q 560 902 547 908 q 583 887 573 897 q 599 864 593 877 q 605 836 605 850 q 599 808 605 821 q 583 785 593 795 q 560 769 573 775 q 533 764 547 764 q 505 769 518 764 q 483 785 492 775 q 467 808 473 795 q 461 836 461 821 q 467 864 461 850 q 483 887 473 877 q 505 902 492 897 q 533 908 518 908 m 136 1027 q 202 1100 165 1076 q 286 1125 239 1125 q 352 1114 325 1125 q 400 1088 379 1102 q 440 1063 421 1075 q 481 1052 458 1052 q 529 1070 509 1052 q 569 1118 550 1089 l 627 1060 q 561 986 597 1011 q 477 962 524 962 q 411 973 437 962 q 363 998 384 985 q 323 1023 342 1012 q 281 1035 304 1035 q 233 1016 253 1035 q 194 968 213 998 l 136 1027 m -1 681 z "},"\u1f77":{"ha":764,"x_min":60,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 557 972 l 436 790 l 326 790 l 414 972 l 557 972 m 60 681 z "},"\u1f76":{"ha":764,"x_min":-31,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 353 972 l 441 790 l 331 790 l 210 972 l 353 972 m -31 681 z "},"\u1fd6":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1fd1":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1fd0":{"ha":764,"x_min":0,"x_max":671,"o":"m 671 5 q 613 -6 646 -3 q 546 -9 581 -9 q 456 2 497 -9 q 386 40 416 14 q 340 107 357 66 q 323 210 323 149 l 323 582 l 93 582 l 93 681 l 441 681 l 441 229 q 472 123 441 157 q 564 90 503 90 q 620 94 592 90 q 671 106 648 99 l 671 5 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u1f40":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f44":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f42":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f41":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f45":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f43":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f79":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 549 972 l 428 790 l 318 790 l 406 972 l 549 972 m 0 681 z "},"\u1f78":{"ha":764,"x_min":-20,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 364 972 l 452 790 l 342 790 l 221 972 l 364 972 m -20 681 z "},"\u1fe4":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 353 q 666 194 690 262 q 598 81 641 126 q 500 13 556 35 q 383 -10 445 -10 q 297 1 338 -10 q 227 30 255 13 l 227 -278 l 109 -278 l 109 368 q 126 494 109 435 q 180 598 144 553 q 273 668 217 642 q 406 693 329 693 q 536 667 482 693 q 624 596 590 642 q 674 488 659 551 q 690 353 690 426 m 570 350 q 561 445 570 401 q 532 523 552 490 q 479 574 511 555 q 400 593 447 593 q 273 536 319 593 q 227 358 227 479 l 227 141 q 302 106 260 120 q 384 92 345 92 q 520 156 471 92 q 570 350 570 220 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1fe5":{"ha":764,"x_min":0,"x_max":690,"o":"m 690 353 q 666 194 690 262 q 598 81 641 126 q 500 13 556 35 q 383 -10 445 -10 q 297 1 338 -10 q 227 30 255 13 l 227 -278 l 109 -278 l 109 368 q 126 494 109 435 q 180 598 144 553 q 273 668 217 642 q 406 693 329 693 q 536 667 482 693 q 624 596 590 642 q 674 488 659 551 q 690 353 690 426 m 570 350 q 561 445 570 401 q 532 523 552 490 q 479 574 511 555 q 400 593 447 593 q 273 536 319 593 q 227 358 227 479 l 227 141 q 302 106 260 120 q 384 92 345 92 q 520 156 471 92 q 570 350 570 220 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f50":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f54":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f52":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f56":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f51":{"ha":764,"x_min":-13,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 376 857 q 385 830 378 844 q 401 804 392 816 q 420 781 410 791 q 437 762 430 770 l 400 730 q 356 772 376 752 q 322 813 336 793 q 301 855 309 833 q 294 902 294 877 q 298 934 294 919 q 312 961 302 949 q 336 978 321 972 q 373 985 351 985 q 427 967 410 985 q 443 918 443 950 q 428 877 443 893 q 376 857 412 860 m -13 681 z "},"\u1f55":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f53":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f57":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1fe3":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 176 918 q 203 912 190 918 q 226 896 216 906 q 242 873 236 886 q 248 845 248 860 q 242 817 248 830 q 226 794 236 804 q 203 779 216 785 q 176 773 190 773 q 148 779 161 773 q 125 794 135 785 q 110 817 115 804 q 104 845 104 830 q 110 873 104 860 q 125 896 115 886 q 148 912 135 906 q 176 918 161 918 m 588 918 q 615 912 602 918 q 638 896 628 906 q 654 873 648 886 q 660 845 660 860 q 654 817 660 830 q 638 794 648 804 q 615 779 628 785 q 588 773 602 773 q 560 779 573 773 q 537 794 547 785 q 522 817 528 804 q 516 845 516 830 q 522 873 516 860 q 537 896 528 886 q 560 912 547 906 q 588 918 573 918 m 513 981 l 374 779 l 288 779 l 382 982 l 513 981 m 0 690 z "},"\u1fe2":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 176 918 q 203 912 190 918 q 226 896 216 906 q 242 873 236 886 q 248 845 248 860 q 242 817 248 830 q 226 794 236 804 q 203 779 216 785 q 176 773 190 773 q 148 779 161 773 q 125 794 135 785 q 110 817 115 804 q 104 845 104 830 q 110 873 104 860 q 125 896 115 886 q 148 912 135 906 q 176 918 161 918 m 588 918 q 615 912 602 918 q 638 896 628 906 q 654 873 648 886 q 660 845 660 860 q 654 817 660 830 q 638 794 648 804 q 615 779 628 785 q 588 773 602 773 q 560 779 573 773 q 537 794 547 785 q 522 817 528 804 q 516 845 516 830 q 522 873 516 860 q 537 896 528 886 q 560 912 547 906 q 588 918 573 918 m 374 982 l 467 779 l 382 779 l 242 981 l 374 982 m 0 690 z "},"\u1fe7":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 258 908 q 285 902 272 908 q 308 887 298 897 q 324 864 318 877 q 330 836 330 850 q 324 808 330 821 q 308 785 318 795 q 285 769 298 775 q 258 764 272 764 q 230 769 243 764 q 207 785 217 775 q 192 808 197 795 q 186 836 186 821 q 192 864 186 850 q 207 887 197 877 q 230 902 217 897 q 258 908 243 908 m 534 908 q 561 902 548 908 q 584 887 574 897 q 600 864 594 877 q 606 836 606 850 q 600 808 606 821 q 584 785 594 795 q 561 769 574 775 q 534 764 548 764 q 506 769 519 764 q 483 785 493 775 q 468 808 473 795 q 462 836 462 821 q 468 864 462 850 q 483 887 473 877 q 506 902 493 897 q 534 908 519 908 m 136 1027 q 202 1100 165 1076 q 286 1125 239 1125 q 353 1114 326 1125 q 401 1088 380 1102 q 440 1063 422 1075 q 482 1052 459 1052 q 530 1070 509 1052 q 570 1118 551 1089 l 628 1060 q 561 986 597 1011 q 478 962 525 962 q 411 973 438 962 q 363 998 385 985 q 324 1023 342 1012 q 282 1035 305 1035 q 234 1016 254 1035 q 195 968 214 998 l 136 1027 m 0 681 z "},"\u1f7b":{"ha":764,"x_min":34,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 531 972 l 410 790 l 300 790 l 388 972 l 531 972 m 34 681 z "},"\u1f7a":{"ha":764,"x_min":-33,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 351 996 l 438 813 l 328 813 l 208 996 l 351 996 m -33 704 z "},"\u1fe6":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1fe1":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u1fe0":{"ha":764,"x_min":0,"x_max":665,"o":"m 648 681 q 661 534 657 607 q 665 387 665 461 q 644 222 665 296 q 583 96 623 149 q 485 16 543 44 q 353 -12 427 -12 q 166 53 224 -12 q 107 248 107 119 q 109 337 107 295 q 110 414 110 378 q 94 681 110 552 l 212 681 q 228 422 228 556 q 227 350 228 394 q 225 256 225 306 q 233 184 225 217 q 257 131 240 152 q 299 99 273 109 q 363 89 326 89 q 435 106 401 89 q 493 159 469 123 q 533 251 518 195 q 547 382 547 306 q 543 532 547 458 q 530 681 539 606 l 648 681 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u1f60":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1f64":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f62":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f66":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f61":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1f65":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1f63":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1f67":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1f7d":{"ha":764,"x_min":26,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 545 972 l 424 790 l 314 790 l 401 972 l 545 972 m 47 681 z "},"\u1f7c":{"ha":764,"x_min":-26,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 357 972 l 445 790 l 335 790 l 214 972 l 357 972 m -26 681 z "},"\u1ff6":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1ff3":{"ha":764,"x_min":26,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa0":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa4":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa2":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa6":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa1":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa5":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa3":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fa7":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1ff4":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 497 972 l 376 790 l 267 790 l 354 972 l 497 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1ff2":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 384 972 l 471 790 l 361 790 l 241 972 l 384 972 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1ff7":{"ha":764,"x_min":0,"x_max":737,"o":"m 439 268 q 461 137 439 179 q 525 94 483 94 q 594 152 569 94 q 619 318 619 210 q 598 528 619 439 q 544 681 578 618 l 671 681 q 718 523 699 614 q 737 313 737 432 q 722 177 737 237 q 678 75 707 117 q 610 10 650 33 q 521 -12 570 -12 q 469 -4 494 -12 q 426 22 445 3 q 394 70 406 40 q 379 144 382 100 q 358 73 373 102 q 322 24 342 43 q 277 -4 301 5 q 228 -12 252 -12 q 148 7 185 -12 q 84 66 111 26 q 42 170 58 106 q 26 321 26 233 q 45 524 26 434 q 92 681 64 614 l 220 681 q 164 526 184 614 q 144 319 144 437 q 151 229 144 271 q 169 158 157 188 q 198 111 180 128 q 239 94 216 94 q 271 103 255 94 q 298 132 286 113 q 317 181 310 151 q 325 250 325 210 l 325 476 l 439 476 l 439 268 m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 m 512 -259 q 439 -264 481 -264 q 366 -240 393 -264 q 340 -161 340 -216 l 340 -58 l 430 -58 l 430 -131 q 443 -173 430 -161 q 477 -185 455 -185 q 493 -184 484 -185 q 512 -181 503 -184 l 512 -259 z "},"\u1fbf":{"ha":764,"x_min":0,"x_max":456,"o":"m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u1ffe":{"ha":764,"x_min":0,"x_max":456,"o":"m 389 857 q 398 830 391 844 q 414 804 405 816 q 433 781 423 791 q 450 762 443 770 l 413 730 q 369 772 389 752 q 335 813 349 793 q 314 855 321 833 q 307 902 307 877 q 311 934 307 919 q 325 961 315 949 q 349 978 334 972 q 386 985 364 985 q 439 967 423 985 q 456 918 456 950 q 440 877 456 893 q 389 857 425 860 m 0 681 z "},"\u1ffd":{"ha":764,"x_min":0,"x_max":497,"o":"m 497 972 l 376 790 l 267 790 l 354 972 l 497 972 m 0 681 z "},"\u1fef":{"ha":764,"x_min":0,"x_max":471,"o":"m 384 972 l 471 790 l 361 790 l 241 972 l 384 972 m 0 681 z "},"\u1fc0":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 833 q 202 906 165 882 q 286 931 239 931 q 353 920 326 931 q 401 895 380 908 q 440 869 422 881 q 482 858 459 858 q 530 877 509 858 q 570 924 551 895 l 628 866 q 561 792 597 817 q 478 768 525 768 q 411 779 438 768 q 363 804 385 791 q 324 829 342 818 q 282 841 305 841 q 234 822 254 841 q 195 774 214 804 l 136 833 m 0 681 z "},"\u1fce":{"ha":764,"x_min":0,"x_max":577,"o":"m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1fcd":{"ha":764,"x_min":0,"x_max":577,"o":"m 253 857 q 202 877 217 860 q 186 918 186 893 q 203 967 186 950 q 256 985 219 985 q 293 978 278 985 q 318 961 309 972 q 331 934 327 949 q 335 902 335 919 q 328 855 335 877 q 307 813 321 833 q 273 772 293 793 q 229 730 254 752 l 192 762 q 209 781 199 770 q 228 804 219 791 q 244 830 237 816 q 253 857 252 844 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1fcf":{"ha":764,"x_min":0,"x_max":628,"o":"m 374 857 q 323 877 338 860 q 308 918 308 893 q 324 967 308 950 q 378 985 340 985 q 415 978 399 985 q 439 961 430 972 q 452 934 448 949 q 456 902 456 919 q 449 855 456 877 q 428 813 442 833 q 395 772 414 793 q 351 730 375 752 l 313 762 q 331 781 321 770 q 350 804 340 791 q 366 830 359 816 q 374 857 373 844 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1fde":{"ha":764,"x_min":0,"x_max":577,"o":"m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 577 972 l 458 770 l 372 770 l 446 972 l 577 972 m 0 681 z "},"\u1fdd":{"ha":764,"x_min":0,"x_max":577,"o":"m 269 857 q 277 830 270 844 q 293 804 284 816 q 312 781 302 791 q 330 762 322 770 l 292 730 q 248 772 268 752 q 215 813 229 793 q 194 855 201 833 q 186 902 186 877 q 191 934 186 919 q 204 961 195 949 q 228 978 213 972 q 265 985 243 985 q 319 967 302 985 q 335 918 335 950 q 320 877 335 893 q 269 857 304 860 m 504 972 l 577 770 l 492 770 l 372 972 l 504 972 m 0 681 z "},"\u1fdf":{"ha":764,"x_min":0,"x_max":628,"o":"m 390 857 q 398 830 391 844 q 415 804 406 816 q 434 781 424 791 q 451 762 444 770 l 414 730 q 370 772 389 752 q 336 813 350 793 q 315 855 322 833 q 308 902 308 877 q 312 934 308 919 q 325 961 316 949 q 350 978 334 972 q 387 985 365 985 q 440 967 424 985 q 456 918 456 950 q 441 877 456 893 q 390 857 426 860 m 136 1097 q 202 1171 165 1146 q 286 1196 239 1196 q 353 1184 326 1196 q 401 1159 380 1173 q 440 1134 422 1145 q 482 1122 459 1122 q 530 1141 509 1122 q 570 1189 551 1160 l 628 1131 q 561 1057 597 1082 q 478 1032 525 1032 q 411 1044 438 1032 q 363 1069 385 1055 q 324 1094 342 1082 q 282 1105 305 1105 q 234 1087 254 1105 q 195 1039 214 1068 l 136 1097 m 0 681 z "},"\u1fee":{"ha":764,"x_min":0,"x_max":660,"o":"m 176 908 q 203 902 190 908 q 226 887 216 897 q 242 864 236 877 q 248 836 248 850 q 242 808 248 821 q 226 785 236 795 q 203 769 216 775 q 176 764 190 764 q 148 769 161 764 q 125 785 135 775 q 110 808 115 795 q 104 836 104 821 q 110 864 104 850 q 125 887 115 877 q 148 902 135 897 q 176 908 161 908 m 588 908 q 615 902 602 908 q 638 887 628 897 q 654 864 648 877 q 660 836 660 850 q 654 808 660 821 q 638 785 648 795 q 615 769 628 775 q 588 764 602 764 q 560 769 573 764 q 537 785 547 775 q 522 808 528 795 q 516 836 516 821 q 522 864 516 850 q 537 887 528 877 q 560 902 547 897 q 588 908 573 908 m 513 972 l 374 770 l 288 770 l 382 972 l 513 972 m 0 681 z "},"\u1fed":{"ha":764,"x_min":0,"x_max":660,"o":"m 176 908 q 203 902 190 908 q 226 887 216 897 q 242 864 236 877 q 248 836 248 850 q 242 808 248 821 q 226 785 236 795 q 203 769 216 775 q 176 764 190 764 q 148 769 161 764 q 125 785 135 775 q 110 808 115 795 q 104 836 104 821 q 110 864 104 850 q 125 887 115 877 q 148 902 135 897 q 176 908 161 908 m 588 908 q 615 902 602 908 q 638 887 628 897 q 654 864 648 877 q 660 836 660 850 q 654 808 660 821 q 638 785 648 795 q 615 769 628 775 q 588 764 602 764 q 560 769 573 764 q 537 785 547 775 q 522 808 528 795 q 516 836 516 821 q 522 864 516 850 q 537 887 528 877 q 560 902 547 897 q 588 908 573 908 m 374 972 l 467 770 l 382 770 l 242 972 l 374 972 m 0 681 z "},"\u1fc1":{"ha":764,"x_min":0,"x_max":628,"o":"m 258 908 q 285 902 272 908 q 308 887 298 897 q 324 864 318 877 q 330 836 330 850 q 324 808 330 821 q 308 785 318 795 q 285 769 298 775 q 258 764 272 764 q 230 769 243 764 q 207 785 217 775 q 192 808 197 795 q 186 836 186 821 q 192 864 186 850 q 207 887 197 877 q 230 902 217 897 q 258 908 243 908 m 534 908 q 561 902 548 908 q 584 887 574 897 q 600 864 594 877 q 606 836 606 850 q 600 808 606 821 q 584 785 594 795 q 561 769 574 775 q 534 764 548 764 q 506 769 519 764 q 483 785 493 775 q 468 808 473 795 q 462 836 462 821 q 468 864 462 850 q 483 887 473 877 q 506 902 493 897 q 534 908 519 908 m 136 1027 q 202 1100 165 1076 q 286 1125 239 1125 q 353 1114 326 1125 q 401 1088 380 1102 q 440 1063 422 1075 q 482 1052 459 1052 q 530 1070 509 1052 q 570 1118 551 1089 l 628 1060 q 561 986 597 1011 q 478 962 525 962 q 411 973 438 962 q 363 998 385 985 q 324 1023 342 1012 q 282 1035 305 1035 q 234 1016 254 1035 q 195 968 214 998 l 136 1027 m 0 681 z "},"\u1fbd":{"ha":764,"x_min":0,"x_max":456,"o":"m 374 857 q 322 877 338 860 q 307 918 307 893 q 324 967 307 950 q 382 985 341 985 q 439 967 422 985 q 456 916 456 950 q 428 820 456 865 q 350 730 399 774 l 313 762 q 330 781 320 770 q 349 804 340 791 q 365 830 358 816 q 374 857 372 844 m 0 681 z "},"\u037a":{"ha":764,"x_min":296,"x_max":468,"o":"m 468 -259 q 395 -264 437 -264 q 322 -240 349 -264 q 296 -161 296 -216 l 296 -58 l 386 -58 l 386 -131 q 398 -173 386 -161 q 433 -185 411 -185 q 449 -184 440 -185 q 468 -181 458 -184 l 468 -259 z "},"\u048a":{"ha":764,"x_min":94,"x_max":764,"o":"m 593 1111 q 577 1041 593 1071 q 533 991 562 1011 q 466 960 505 970 q 380 950 427 950 q 223 991 272 950 q 174 1111 174 1032 l 281 1111 q 286 1076 281 1092 q 303 1049 291 1060 q 334 1031 315 1038 q 382 1025 353 1025 q 431 1031 411 1025 q 463 1049 450 1038 q 480 1076 475 1060 q 485 1111 485 1092 l 593 1111 m 669 97 l 764 97 l 654 -219 l 541 -219 l 625 0 l 549 0 l 549 669 l 210 0 l 94 0 l 94 886 l 215 886 l 215 216 l 555 886 l 669 886 l 669 97 z "},"\u048c":{"ha":764,"x_min":11,"x_max":703,"o":"m 228 536 l 371 536 q 516 516 454 536 q 620 462 578 496 q 682 380 661 427 q 703 279 703 333 q 679 161 703 213 q 610 74 654 109 q 501 19 565 38 q 358 0 437 0 l 107 0 l 107 692 l 11 692 l 11 787 l 107 787 l 107 886 l 228 886 l 228 787 l 431 787 l 431 692 l 228 692 l 228 536 m 574 271 q 563 340 574 309 q 527 392 552 370 q 462 425 502 413 q 363 436 422 436 l 228 436 l 228 102 l 367 102 q 524 146 473 102 q 574 271 574 191 z "},"\u048e":{"ha":764,"x_min":107,"x_max":689,"o":"m 689 615 q 669 508 689 561 q 606 412 648 454 q 496 344 563 370 q 338 318 430 318 l 228 318 l 228 0 l 107 0 l 107 886 l 357 886 q 483 872 422 886 q 589 825 543 857 q 662 741 635 792 q 689 615 689 689 m 564 610 q 508 741 564 695 q 351 786 452 786 l 228 786 l 228 421 l 340 421 q 506 468 448 421 q 564 610 564 515 m 353 516 l 424 566 l 610 301 l 539 250 l 353 516 z "},"\u0492":{"ha":764,"x_min":11,"x_max":668,"o":"m 11 509 l 158 509 l 158 886 l 668 886 l 668 781 l 281 781 l 281 509 l 494 509 l 494 410 l 281 410 l 281 0 l 158 0 l 158 410 l 11 410 l 11 509 z "},"\u0494":{"ha":764,"x_min":107,"x_max":699,"o":"m 263 -163 q 363 -178 319 -178 q 469 -151 427 -178 q 535 -78 511 -125 q 570 34 560 -31 q 580 175 580 99 q 569 277 580 234 q 538 351 557 321 q 492 399 519 380 q 436 428 466 418 q 373 442 406 439 q 308 446 340 446 q 267 445 288 446 q 228 443 245 444 l 228 0 l 107 0 l 107 886 l 606 886 l 606 785 l 228 785 l 228 543 q 263 545 243 544 q 300 545 283 545 q 462 528 389 545 q 588 468 535 510 q 670 355 641 425 q 699 179 699 284 q 682 -4 699 80 q 626 -149 665 -87 q 528 -244 588 -210 q 382 -278 468 -278 q 263 -263 327 -278 l 263 -163 z "},"\u0496":{"ha":764,"x_min":-7,"x_max":768,"o":"m 656 0 l 605 0 l 417 454 l 417 0 l 306 0 l 306 454 l 118 0 l -7 0 l 192 457 l 3 886 l 121 886 l 306 456 l 306 886 l 417 886 l 417 456 l 605 886 l 720 886 l 513 460 l 687 97 l 768 97 l 760 -192 l 656 -192 l 656 0 z "},"\u0498":{"ha":764,"x_min":74,"x_max":668,"o":"m 74 138 q 186 104 125 117 q 332 91 248 91 q 487 136 435 91 q 539 262 539 180 q 525 323 539 296 q 483 369 510 350 q 416 397 455 387 q 328 407 376 407 l 142 407 l 142 507 l 325 507 q 400 516 366 507 q 458 543 434 525 q 496 589 483 562 q 510 655 510 617 q 502 708 510 682 q 472 753 493 734 q 416 785 451 773 q 329 797 382 797 q 214 788 273 797 q 97 760 156 779 l 97 865 q 205 889 147 880 q 340 897 263 897 q 563 838 490 897 q 636 671 636 778 q 602 547 636 599 q 490 469 567 494 q 558 447 526 463 q 615 405 591 431 q 654 344 640 379 q 668 265 668 309 q 643 151 668 201 q 573 64 618 100 q 462 8 527 28 q 318 -11 397 -11 q 74 26 181 -11 l 74 138 m 256 -178 q 288 -180 271 -179 q 317 -180 304 -180 q 380 -166 362 -180 q 399 -131 399 -153 q 396 -105 399 -118 q 385 -77 393 -92 q 361 -43 376 -62 q 322 0 347 -24 l 428 0 q 470 -47 454 -26 q 495 -85 486 -68 q 507 -119 504 -103 q 510 -150 510 -134 q 467 -230 510 -199 q 350 -261 425 -261 q 295 -259 314 -261 q 256 -254 275 -258 l 256 -178 z "},"\u049a":{"ha":764,"x_min":106,"x_max":734,"o":"m 635 97 l 734 97 l 726 -192 l 623 -192 l 623 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 345 465 l 635 97 z "},"\u049c":{"ha":764,"x_min":106,"x_max":710,"o":"m 264 237 l 264 408 l 227 408 l 227 0 l 106 0 l 106 886 l 227 886 l 227 502 l 264 502 l 264 674 l 338 674 l 338 502 l 365 502 l 551 886 l 694 886 l 467 465 l 710 0 l 558 0 l 365 408 l 338 408 l 338 237 l 264 237 z "},"\u049e":{"ha":764,"x_min":24,"x_max":710,"o":"m 24 768 l 106 768 l 106 886 l 227 886 l 227 768 l 337 768 l 337 671 l 227 671 l 227 475 l 551 886 l 694 886 l 345 465 l 710 0 l 558 0 l 227 435 l 227 0 l 106 0 l 106 671 l 24 671 l 24 768 z "},"\u04a0":{"ha":764,"x_min":24,"x_max":724,"o":"m 724 0 l 572 0 l 290 435 l 290 0 l 170 0 l 170 783 l 24 783 l 24 886 l 290 886 l 290 475 l 565 886 l 708 886 l 418 460 l 724 0 z "},"\u04a2":{"ha":764,"x_min":75,"x_max":743,"o":"m 632 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 97 l 743 97 l 735 -192 l 632 -192 l 632 0 z "},"\u04a4":{"ha":764,"x_min":75,"x_max":764,"o":"m 497 511 l 497 886 l 764 886 l 764 783 l 618 783 l 618 0 l 497 0 l 497 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 497 511 z "},"\u04a6":{"ha":764,"x_min":68,"x_max":727,"o":"m 456 0 l 338 0 l 338 779 l 185 779 l 185 0 l 68 0 l 68 886 l 456 886 l 456 543 q 477 545 467 545 q 498 546 488 546 q 593 527 551 546 q 666 464 636 507 q 711 350 695 420 q 727 180 727 280 q 718 -34 727 54 q 688 -175 709 -121 q 629 -254 666 -229 q 537 -278 593 -278 q 505 -276 522 -278 q 470 -271 488 -275 l 470 -172 q 510 -177 494 -177 q 566 -155 546 -177 q 594 -90 585 -134 q 605 21 604 -45 q 606 176 606 87 q 598 309 606 256 q 574 391 590 361 q 535 433 558 421 q 483 445 512 445 q 456 443 470 445 l 456 0 z "},"\u04a8":{"ha":764,"x_min":39,"x_max":740,"o":"m 681 90 q 707 91 692 90 q 740 94 722 92 l 740 -9 q 714 -12 727 -11 q 690 -12 702 -12 q 604 -2 644 -12 q 530 25 564 7 q 375 -12 462 -12 q 226 19 290 -12 q 121 109 163 50 q 59 252 79 168 q 39 445 39 337 q 62 643 39 557 q 129 784 85 728 q 236 869 172 840 q 382 897 300 897 l 382 793 q 269 765 313 793 q 202 691 226 738 q 169 580 178 644 q 161 446 161 517 q 173 302 161 367 q 213 191 186 237 q 282 119 240 144 q 382 93 323 93 q 410 95 396 93 q 437 100 424 96 q 389 173 409 133 q 356 256 369 212 q 336 347 342 300 q 330 441 330 394 q 341 595 330 529 q 376 707 352 662 q 438 774 400 751 q 530 798 476 798 q 620 775 583 798 q 680 708 657 752 q 714 598 703 663 q 724 447 724 532 q 698 251 724 340 q 619 99 671 161 q 681 90 646 90 m 608 441 q 605 539 608 492 q 592 621 601 585 q 567 677 583 656 q 530 699 552 699 q 492 677 507 699 q 466 621 476 656 q 452 539 456 585 q 448 441 448 492 q 453 359 448 399 q 469 283 458 319 q 494 216 479 248 q 530 161 509 185 q 588 276 568 205 q 608 441 608 347 z "},"\u04aa":{"ha":764,"x_min":62,"x_max":675,"o":"m 675 33 q 452 -11 568 -11 q 163 101 264 -11 q 62 433 62 214 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 627 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 272 q 465 97 330 97 q 574 110 522 97 q 675 147 627 123 l 675 33 m 313 -178 q 344 -180 328 -179 q 373 -180 361 -180 q 437 -166 418 -180 q 455 -131 455 -153 q 452 -105 455 -118 q 441 -77 449 -92 q 418 -43 433 -62 q 378 0 403 -24 l 484 0 q 527 -47 511 -26 q 551 -85 543 -68 q 563 -119 560 -103 q 566 -150 566 -134 q 524 -230 566 -199 q 406 -261 481 -261 q 351 -259 370 -261 q 313 -254 332 -258 l 313 -178 z "},"\u04ac":{"ha":764,"x_min":58,"x_max":705,"o":"m 443 97 l 517 97 l 509 -192 l 406 -192 l 406 0 l 321 0 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 l 443 783 l 443 97 z "},"\u04ae":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 886 l 443 317 l 443 0 l 321 0 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 z "},"\u04b0":{"ha":764,"x_min":0,"x_max":764,"o":"m 115 301 l 321 301 l 321 319 l 0 886 l 146 886 l 322 562 l 387 432 l 447 550 l 625 886 l 764 886 l 443 317 l 443 301 l 648 301 l 648 197 l 443 197 l 443 0 l 321 0 l 321 197 l 115 197 l 115 301 z "},"\u04b2":{"ha":764,"x_min":12,"x_max":768,"o":"m 685 97 l 768 97 l 760 -192 l 656 -192 l 656 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 685 97 z "},"\u04b4":{"ha":764,"x_min":20,"x_max":746,"o":"m 746 104 l 737 -192 l 629 -192 l 629 0 l 127 0 l 127 783 l 20 783 l 20 886 l 373 886 l 373 783 l 248 783 l 248 104 l 543 104 l 543 886 l 664 886 l 664 104 l 746 104 z "},"\u04b6":{"ha":764,"x_min":68,"x_max":757,"o":"m 646 0 l 568 0 l 568 390 q 481 368 532 378 q 374 358 431 358 q 233 380 291 358 q 138 441 175 401 q 85 537 102 481 q 68 661 68 593 l 68 886 l 190 886 l 190 671 q 200 579 190 618 q 233 513 210 540 q 291 473 255 487 q 378 460 326 460 q 481 468 431 460 q 568 490 532 477 l 568 886 l 689 886 l 689 97 l 757 97 l 749 -192 l 646 -192 l 646 0 z "},"\u04b8":{"ha":764,"x_min":68,"x_max":689,"o":"m 338 217 l 338 359 q 214 388 265 364 q 131 450 163 411 q 83 543 98 490 q 68 661 68 597 l 68 886 l 190 886 l 190 671 q 198 588 190 624 q 224 525 206 551 q 270 483 241 498 q 338 462 298 467 l 338 654 l 424 654 l 424 461 q 503 472 465 465 q 568 490 540 479 l 568 886 l 689 886 l 689 0 l 568 0 l 568 390 q 503 372 540 380 q 424 360 467 363 l 424 217 l 338 217 z "},"\u04ba":{"ha":764,"x_min":75,"x_max":695,"o":"m 195 496 q 282 518 232 509 q 390 528 333 528 q 531 507 473 528 q 625 445 589 485 q 679 349 662 405 q 695 225 695 294 l 695 0 l 574 0 l 574 216 q 564 307 574 268 q 531 373 553 347 q 473 413 509 399 q 386 427 437 427 q 282 418 332 427 q 195 396 231 410 l 195 0 l 75 0 l 75 886 l 195 886 l 195 496 z "},"\u04bc":{"ha":764,"x_min":-17,"x_max":725,"o":"m 725 467 q 724 414 725 435 q 722 374 724 393 l 275 374 q 284 250 275 304 q 318 160 294 197 q 385 105 342 124 q 492 87 427 87 q 553 90 525 87 q 606 100 581 94 q 655 114 631 106 q 703 130 678 121 l 703 31 q 651 13 676 21 q 600 0 626 5 q 547 -9 574 -6 q 487 -12 519 -12 q 333 14 395 -12 q 233 89 271 39 q 177 210 195 138 q 154 373 159 281 q 75 388 108 376 q 22 419 43 399 q -7 467 2 439 q -17 529 -17 495 q -12 572 -17 549 q 0 614 -6 595 l 103 614 q 90 574 96 595 q 84 535 84 554 q 99 492 84 509 q 153 473 114 474 q 171 637 155 560 q 222 772 187 714 q 312 863 257 829 q 448 897 368 897 q 588 864 534 897 q 672 774 642 832 q 714 638 703 717 q 725 467 725 559 m 604 474 q 597 624 604 562 q 573 724 591 685 q 524 780 555 762 q 443 797 492 797 q 368 780 399 797 q 315 724 336 762 q 284 624 294 686 q 275 474 275 562 l 604 474 z "},"\u04be":{"ha":764,"x_min":-17,"x_max":725,"o":"m 725 467 q 724 414 725 435 q 722 374 724 393 l 275 374 q 284 250 275 304 q 318 160 294 197 q 385 105 342 124 q 492 87 427 87 q 553 90 525 87 q 606 100 581 94 q 655 114 631 106 q 703 130 678 121 l 703 31 q 610 2 654 13 q 510 -12 565 -9 l 505 -192 l 401 -192 l 401 -5 q 289 37 335 6 q 215 115 243 67 q 172 228 186 163 q 154 373 158 293 q 75 388 108 376 q 22 419 43 399 q -7 467 2 439 q -17 529 -17 495 q -12 572 -17 549 q 0 614 -6 595 l 103 614 q 90 574 96 595 q 84 535 84 554 q 99 492 84 509 q 153 473 114 474 q 171 637 155 560 q 222 772 187 714 q 312 863 257 829 q 448 897 368 897 q 588 864 534 897 q 672 774 642 832 q 714 638 703 717 q 725 467 725 559 m 604 474 q 597 624 604 562 q 573 724 591 685 q 524 780 555 762 q 443 797 492 797 q 368 780 399 797 q 315 724 336 762 q 284 624 294 686 q 275 474 275 562 l 604 474 z "},"\u04c0":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 z "},"\u04c1":{"ha":764,"x_min":-7,"x_max":774,"o":"m 437 456 l 646 886 l 761 886 l 554 460 l 774 0 l 646 0 l 437 454 l 437 0 l 326 0 l 326 454 l 118 0 l -7 0 l 212 457 l 3 886 l 121 886 l 326 456 l 326 886 l 437 886 l 437 456 m 593 1111 q 577 1041 593 1072 q 533 991 562 1011 q 466 960 505 970 q 380 950 427 950 q 223 991 272 950 q 174 1111 174 1032 l 281 1111 q 286 1076 281 1092 q 303 1049 291 1060 q 334 1031 315 1038 q 382 1025 353 1025 q 431 1031 411 1025 q 463 1049 450 1038 q 480 1076 475 1060 q 485 1111 485 1092 l 593 1111 m 0 886 z "},"\u04c3":{"ha":764,"x_min":106,"x_max":699,"o":"m 349 471 q 498 442 433 463 q 608 378 563 421 q 676 268 652 336 q 699 101 699 201 q 681 -54 699 16 q 624 -174 663 -124 q 526 -251 586 -224 q 382 -279 466 -279 q 326 -276 355 -279 q 263 -266 296 -273 l 263 -166 q 316 -176 292 -174 q 363 -178 341 -178 q 469 -159 427 -178 q 535 -102 511 -139 q 570 -14 560 -66 q 580 101 580 37 q 557 245 580 189 q 492 333 535 302 q 388 377 450 365 q 249 389 327 389 l 227 389 l 227 0 l 106 0 l 106 886 l 227 886 l 227 475 l 551 886 l 694 886 l 349 471 z "},"\u04c5":{"ha":764,"x_min":18,"x_max":751,"o":"m 536 0 l 536 782 l 340 782 q 306 362 331 524 q 242 121 281 200 q 203 59 222 83 q 165 22 184 35 q 123 3 145 8 q 77 -3 102 -2 q 18 4 47 -3 l 24 107 q 89 126 61 102 q 138 199 117 151 q 174 318 159 248 q 199 477 189 389 q 216 669 209 566 q 228 886 222 772 l 657 886 l 657 97 l 751 97 l 642 -219 l 528 -219 l 612 0 l 536 0 z "},"\u04c7":{"ha":764,"x_min":75,"x_max":689,"o":"m 689 81 q 671 -71 689 -4 q 613 -184 652 -138 q 514 -254 574 -230 q 371 -279 454 -279 q 314 -276 344 -279 q 252 -266 284 -273 l 252 -166 q 305 -176 280 -174 q 352 -178 330 -178 q 458 -159 416 -178 q 525 -105 500 -140 q 559 -25 549 -71 q 568 75 568 21 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 81 z "},"\u04c9":{"ha":764,"x_min":75,"x_max":783,"o":"m 689 97 l 783 97 l 673 -219 l 560 -219 l 644 0 l 568 0 l 568 407 l 196 407 l 196 0 l 75 0 l 75 886 l 196 886 l 196 511 l 568 511 l 568 886 l 689 886 l 689 97 z "},"\u04cb":{"ha":764,"x_min":68,"x_max":689,"o":"m 568 102 l 568 390 q 481 368 532 378 q 374 358 431 358 q 233 380 291 358 q 138 441 175 401 q 85 537 102 481 q 68 661 68 593 l 68 886 l 190 886 l 190 671 q 200 579 190 618 q 233 513 210 540 q 291 473 255 487 q 378 460 326 460 q 481 468 431 460 q 568 490 532 477 l 568 886 l 689 886 l 689 0 l 547 0 l 547 -192 l 439 -192 l 430 102 l 568 102 z "},"\u04cd":{"ha":764,"x_min":40,"x_max":806,"o":"m 705 97 l 806 97 l 696 -219 l 583 -219 l 667 0 l 592 0 l 574 553 l 567 774 l 526 642 l 408 289 l 325 289 l 214 628 l 172 774 l 170 543 l 154 0 l 40 0 l 83 886 l 227 886 l 332 553 l 370 433 l 408 553 l 520 886 l 667 886 l 705 97 z "},"\u04d0":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u04d2":{"ha":764,"x_min":0,"x_max":757,"o":"m 757 0 l 625 0 l 564 193 l 195 193 l 132 0 l 7 0 l 301 886 l 467 886 l 757 0 m 529 301 l 379 775 l 229 301 l 529 301 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04d4":{"ha":764,"x_min":-29,"x_max":736,"o":"m 736 0 l 396 0 l 396 191 l 164 191 l 90 0 l -29 0 l 332 886 l 726 886 l 726 790 l 509 790 l 509 507 l 717 507 l 717 411 l 509 411 l 509 97 l 736 97 l 736 0 m 396 288 l 396 791 l 201 288 l 396 288 z "},"\u04d6":{"ha":764,"x_min":0,"x_max":640,"o":"m 640 0 l 136 0 l 136 886 l 640 886 l 640 785 l 257 785 l 257 510 l 625 510 l 625 408 l 257 408 l 257 103 l 640 103 l 640 0 m 562 1129 q 548 1058 562 1088 q 508 1010 533 1029 q 451 982 484 991 q 382 972 418 972 q 313 982 346 972 q 256 1010 281 991 q 216 1058 231 1029 q 201 1129 201 1088 l 294 1129 q 317 1077 294 1095 q 382 1060 340 1060 q 447 1077 424 1060 q 469 1129 469 1095 l 562 1129 m 0 886 z "},"\u04d8":{"ha":764,"x_min":40,"x_max":725,"o":"m 40 417 q 41 470 40 449 q 43 510 41 492 l 599 510 q 529 725 599 652 q 328 798 458 798 q 260 794 294 798 q 192 784 225 790 q 130 770 159 778 q 76 755 100 763 l 76 854 q 194 884 130 871 q 332 897 259 897 q 507 866 433 897 q 629 776 581 835 q 701 632 677 717 q 725 439 725 547 q 703 265 725 347 q 637 122 681 183 q 529 24 594 60 q 378 -12 464 -12 q 227 20 290 -12 q 121 110 163 52 q 60 246 80 168 q 40 417 40 324 m 161 410 q 177 261 161 322 q 222 161 193 199 q 293 105 252 122 q 383 87 334 87 q 466 105 427 87 q 535 160 505 122 q 582 260 564 199 q 599 410 599 321 l 161 410 z "},"\u04da":{"ha":764,"x_min":0,"x_max":725,"o":"m 40 417 q 41 470 40 449 q 43 510 41 492 l 599 510 q 529 725 599 652 q 328 798 458 798 q 260 794 294 798 q 192 784 225 790 q 130 770 159 778 q 76 755 100 763 l 76 854 q 194 884 130 871 q 332 897 259 897 q 507 866 433 897 q 629 776 581 835 q 701 632 677 717 q 725 439 725 547 q 703 265 725 347 q 637 122 681 183 q 529 24 594 60 q 378 -12 464 -12 q 227 20 290 -12 q 121 110 163 52 q 60 246 80 168 q 40 417 40 324 m 161 410 q 177 261 161 322 q 222 161 193 199 q 293 105 252 122 q 383 87 334 87 q 466 105 427 87 q 535 160 505 122 q 582 260 564 199 q 599 410 599 321 l 161 410 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04dc":{"ha":764,"x_min":-7,"x_max":774,"o":"m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 m 437 456 l 646 886 l 761 886 l 554 460 l 774 0 l 646 0 l 437 454 l 437 0 l 326 0 l 326 454 l 118 0 l -7 0 l 212 457 l 3 886 l 121 886 l 326 456 l 326 886 l 437 886 l 437 456 z "},"\u04de":{"ha":764,"x_min":0,"x_max":668,"o":"m 74 138 q 186 104 125 117 q 332 91 248 91 q 487 136 435 91 q 539 262 539 180 q 525 323 539 296 q 483 369 510 350 q 416 397 455 387 q 328 407 376 407 l 142 407 l 142 507 l 325 507 q 400 516 366 507 q 458 543 434 525 q 496 589 483 562 q 510 655 510 617 q 502 708 510 682 q 472 753 493 734 q 416 785 451 773 q 329 797 382 797 q 214 788 273 797 q 97 760 156 779 l 97 865 q 205 889 147 880 q 340 897 263 897 q 563 838 490 897 q 636 671 636 778 q 602 547 636 599 q 490 469 567 494 q 558 447 526 463 q 615 405 591 431 q 654 344 640 379 q 668 265 668 309 q 643 151 668 201 q 573 64 618 100 q 462 8 527 28 q 318 -11 397 -11 q 74 26 181 -11 l 74 138 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04e0":{"ha":764,"x_min":113,"x_max":652,"o":"m 652 276 q 633 165 652 218 q 571 74 614 113 q 457 11 528 34 q 284 -12 387 -12 q 191 -9 231 -12 q 113 0 150 -5 l 113 106 q 201 94 156 98 q 295 90 246 90 q 407 103 361 90 q 479 140 452 116 q 517 196 506 163 q 529 269 529 229 q 516 342 529 311 q 475 396 503 374 q 400 430 446 418 q 286 441 353 441 l 239 441 l 239 522 l 475 785 l 130 785 l 130 886 l 616 886 l 616 788 l 376 529 q 472 509 423 524 q 561 465 521 494 q 627 390 602 435 q 652 276 652 344 z "},"\u04e2":{"ha":764,"x_min":0,"x_max":683,"o":"m 201 886 l 201 216 l 568 886 l 683 886 l 683 0 l 562 0 l 562 669 l 196 0 l 81 0 l 81 886 l 201 886 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u04e4":{"ha":764,"x_min":0,"x_max":683,"o":"m 201 886 l 201 216 l 568 886 l 683 886 l 683 0 l 562 0 l 562 669 l 196 0 l 81 0 l 81 886 l 201 886 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04e6":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 601 440 q 589 583 601 518 q 551 694 577 648 q 483 767 524 741 q 382 793 441 793 q 284 765 325 793 q 216 691 243 738 q 177 580 190 644 q 164 446 164 517 q 176 302 164 367 q 215 191 189 237 q 282 119 241 144 q 382 93 323 93 q 480 120 439 93 q 548 195 522 148 q 588 305 575 242 q 601 440 601 368 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04e8":{"ha":764,"x_min":39,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 382 93 q 476 117 436 93 q 543 184 515 142 q 584 284 570 227 q 601 408 597 342 l 164 408 q 181 279 167 337 q 221 179 195 220 q 287 116 248 138 q 382 93 327 93 m 382 793 q 292 771 330 793 q 228 710 254 749 q 186 619 201 671 q 165 507 172 567 l 600 507 q 578 627 593 574 q 535 716 562 680 q 471 773 509 753 q 382 793 433 793 z "},"\u04ea":{"ha":764,"x_min":0,"x_max":726,"o":"m 726 449 q 698 243 726 330 q 622 99 670 156 q 510 15 574 43 q 375 -12 446 -12 q 226 19 290 -12 q 121 108 163 50 q 59 250 79 166 q 39 439 39 334 q 66 644 39 557 q 142 787 94 730 q 254 871 190 844 q 389 899 317 899 q 537 867 474 899 q 643 778 601 836 q 706 637 685 720 q 726 449 726 553 m 382 93 q 476 117 436 93 q 543 184 515 142 q 584 284 570 227 q 601 408 597 342 l 164 408 q 181 279 167 337 q 221 179 195 220 q 287 116 248 138 q 382 93 327 93 m 382 793 q 292 771 330 793 q 228 710 254 749 q 186 619 201 671 q 165 507 172 567 l 600 507 q 578 627 593 574 q 535 716 562 680 q 471 773 509 753 q 382 793 433 793 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04ec":{"ha":764,"x_min":0,"x_max":703,"o":"m 575 510 q 550 632 569 579 q 498 722 532 686 q 415 778 465 759 q 298 796 366 796 q 190 783 242 796 q 89 746 137 770 l 89 854 q 198 887 142 876 q 313 899 253 899 q 484 869 411 899 q 606 783 557 840 q 679 643 654 726 q 703 453 703 559 q 677 248 703 337 q 600 101 652 159 q 474 15 547 43 q 306 -12 400 -12 q 191 -2 244 -12 q 89 31 138 9 l 89 146 q 189 106 137 120 q 301 92 241 92 q 505 170 439 92 q 578 408 572 249 l 155 408 l 155 510 l 575 510 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04ee":{"ha":764,"x_min":0,"x_max":729,"o":"m 107 107 q 148 99 129 102 q 184 96 167 96 q 235 105 212 96 q 280 134 258 113 q 321 188 301 154 q 360 272 340 222 l 39 886 l 178 886 l 353 545 l 416 415 l 418 415 l 465 538 l 602 886 l 729 886 l 463 228 q 419 134 442 178 q 366 58 395 90 q 297 6 336 25 q 207 -12 258 -12 q 157 -9 183 -12 q 102 4 131 -5 l 107 107 m 574 1006 l 191 1006 l 191 1096 l 574 1096 l 574 1006 m 0 886 z "},"\u04f0":{"ha":764,"x_min":0,"x_max":729,"o":"m 107 107 q 148 99 129 102 q 184 96 167 96 q 235 105 212 96 q 280 134 258 113 q 321 188 301 154 q 360 272 340 222 l 39 886 l 178 886 l 353 545 l 416 415 l 418 415 l 465 538 l 602 886 l 729 886 l 463 228 q 419 134 442 178 q 366 58 395 90 q 297 6 336 25 q 207 -12 258 -12 q 157 -9 183 -12 q 102 4 131 -5 l 107 107 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04f2":{"ha":764,"x_min":0,"x_max":764,"o":"m 107 107 q 148 99 129 102 q 184 96 167 96 q 235 105 212 96 q 280 134 258 113 q 321 188 301 154 q 360 272 340 222 l 39 886 l 178 886 l 353 545 l 416 415 l 418 415 l 465 538 l 602 886 l 729 886 l 463 228 q 419 134 442 178 q 366 58 395 90 q 297 6 336 25 q 207 -12 258 -12 q 157 -9 183 -12 q 102 4 131 -5 l 107 107 m 458 1125 l 307 981 l 184 981 l 314 1125 l 458 1125 m 764 1125 l 587 981 l 464 981 l 607 1125 l 764 1125 m 0 886 z "},"\u04f4":{"ha":764,"x_min":0,"x_max":689,"o":"m 568 390 q 481 368 532 378 q 374 358 431 358 q 233 380 291 358 q 138 441 175 401 q 85 537 102 481 q 68 661 68 593 l 68 886 l 190 886 l 190 671 q 200 579 190 618 q 233 513 210 540 q 291 473 255 487 q 378 460 326 460 q 482 468 431 460 q 568 490 532 477 l 568 886 l 689 886 l 689 0 l 568 0 l 568 390 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04f6":{"ha":764,"x_min":158,"x_max":661,"o":"m 281 97 l 403 97 l 395 -192 l 292 -192 l 292 0 l 158 0 l 158 886 l 661 886 l 661 781 l 281 781 l 281 97 z "},"\u04f8":{"ha":764,"x_min":0,"x_max":708,"o":"m 172 536 l 243 536 q 371 516 318 536 q 458 460 425 495 q 507 378 492 425 q 522 279 522 332 q 504 160 522 209 q 449 75 485 111 q 360 19 413 39 q 239 0 307 0 l 56 0 l 56 886 l 172 886 l 172 536 m 404 271 q 396 340 404 310 q 368 392 387 371 q 318 425 349 414 q 243 436 287 436 l 172 436 l 172 103 l 240 103 q 365 147 326 103 q 404 271 404 191 m 591 0 l 591 886 l 708 886 l 708 0 l 591 0 m 233 1125 q 261 1119 248 1125 q 284 1104 275 1114 q 300 1081 294 1095 q 306 1053 306 1067 q 300 1024 306 1038 q 284 1002 294 1011 q 261 986 275 992 q 233 981 248 981 q 182 1001 203 981 q 161 1053 161 1022 q 167 1081 161 1067 q 182 1104 173 1095 q 205 1119 192 1114 q 233 1125 218 1125 m 530 1125 q 559 1119 545 1125 q 582 1104 572 1114 q 597 1081 591 1095 q 603 1053 603 1067 q 597 1024 603 1038 q 582 1002 591 1011 q 559 986 572 992 q 530 981 545 981 q 479 1001 500 981 q 458 1053 458 1022 q 464 1081 458 1067 q 479 1104 470 1095 q 502 1119 489 1114 q 530 1125 515 1125 m 0 886 z "},"\u04fa":{"ha":764,"x_min":11,"x_max":668,"o":"m 401 113 l 401 -65 q 389 -164 401 -126 q 355 -225 377 -203 q 300 -255 332 -247 q 230 -262 269 -262 q 181 -261 204 -262 q 142 -257 157 -259 l 142 -162 q 176 -168 157 -165 q 213 -171 195 -171 q 242 -168 228 -171 q 268 -155 256 -164 q 286 -128 279 -145 q 292 -84 292 -111 l 292 0 l 158 0 l 158 410 l 11 410 l 11 509 l 158 509 l 158 886 l 668 886 l 668 781 l 281 781 l 281 509 l 494 509 l 494 410 l 281 410 l 281 113 l 401 113 z "},"\u04fc":{"ha":764,"x_min":12,"x_max":764,"o":"m 674 113 l 764 113 l 764 -67 q 751 -166 764 -128 q 717 -226 739 -205 q 663 -255 694 -248 q 592 -262 631 -262 q 543 -261 566 -262 q 504 -257 519 -259 l 504 -162 q 538 -168 519 -165 q 575 -171 557 -171 q 604 -168 590 -171 q 630 -155 618 -164 q 648 -128 641 -145 q 654 -84 654 -111 l 654 0 l 595 0 l 379 358 l 163 0 l 12 0 l 307 453 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 453 458 l 674 113 z "},"\u04fe":{"ha":764,"x_min":12,"x_max":747,"o":"m 718 397 l 492 397 l 747 0 l 595 0 l 379 358 l 163 0 l 12 0 l 271 397 l 39 397 l 39 505 l 275 505 l 36 886 l 179 886 l 382 553 l 586 886 l 725 886 l 482 505 l 718 505 l 718 397 z "},"\u0500":{"ha":764,"x_min":61,"x_max":656,"o":"m 536 886 l 656 886 l 656 0 l 406 0 q 262 19 326 0 q 154 74 199 38 q 85 161 109 109 q 61 279 61 213 q 82 380 61 334 q 144 462 102 427 q 247 516 185 496 q 393 536 309 536 l 536 536 l 536 886 m 190 271 q 240 146 190 191 q 397 102 290 102 l 536 102 l 536 436 l 401 436 q 302 425 342 436 q 237 392 262 413 q 201 340 212 370 q 190 271 190 309 z "},"\u0502":{"ha":764,"x_min":56,"x_max":699,"o":"m 352 886 l 465 886 l 465 182 q 480 110 465 130 q 526 91 495 91 q 554 95 542 91 q 574 109 566 98 q 587 136 583 119 q 591 179 591 153 l 591 537 l 699 537 l 699 178 q 691 95 699 130 q 664 37 684 60 q 612 3 645 14 q 528 -8 578 -8 q 451 7 481 -8 q 403 45 420 22 q 344 4 378 18 q 269 -10 310 -10 q 111 56 165 -10 q 56 252 56 123 q 71 355 56 304 q 118 447 85 406 q 205 512 151 487 q 338 536 259 536 l 352 536 l 352 886 m 174 254 q 197 132 174 174 q 276 90 220 90 q 310 95 296 90 q 334 110 324 99 q 348 140 343 121 q 352 187 352 159 l 352 436 l 336 436 q 261 424 292 436 q 211 388 230 411 q 183 330 191 364 q 174 254 174 296 z "},"\u0504":{"ha":764,"x_min":29,"x_max":699,"o":"m 336 271 q 320 328 336 303 q 277 371 305 353 q 211 398 250 389 q 124 407 172 407 l 74 407 l 74 507 l 121 507 q 197 514 163 507 q 255 540 231 522 q 293 588 279 558 q 307 663 307 618 q 301 712 307 689 q 283 754 296 736 q 245 782 269 772 q 184 793 222 793 q 153 792 168 793 q 120 787 138 791 q 80 778 102 784 q 29 763 58 772 l 29 868 q 76 881 54 876 q 119 889 98 886 q 160 893 140 892 q 205 895 181 895 q 307 879 264 895 q 378 833 350 863 q 419 763 406 804 q 433 671 433 722 q 398 547 433 599 q 287 469 363 494 q 354 446 323 463 q 408 405 385 430 q 445 344 431 379 q 458 265 458 309 l 458 177 q 462 135 458 152 q 475 109 467 119 q 495 95 483 99 q 522 91 507 91 q 551 95 538 91 q 572 109 564 98 q 585 136 581 119 q 590 179 590 153 l 590 537 l 699 537 l 699 178 q 690 95 699 130 q 662 37 682 60 q 606 3 642 14 q 517 -8 571 -8 q 384 35 432 -8 q 336 162 336 78 l 336 271 z "},"\u0506":{"ha":764,"x_min":97,"x_max":728,"o":"m 592 265 l 592 97 l 728 97 l 720 -192 l 616 -192 l 616 0 l 471 0 l 471 263 q 427 369 471 330 q 290 407 382 407 l 142 407 l 142 507 l 273 507 q 343 516 312 507 q 396 543 374 525 q 430 589 418 562 q 442 655 442 617 q 434 708 442 682 q 408 753 426 734 q 362 785 391 773 q 294 797 334 797 q 247 795 270 797 q 200 788 224 793 q 152 777 177 783 q 97 760 126 770 l 97 865 q 200 889 148 880 q 309 897 253 897 q 418 882 370 897 q 499 838 466 867 q 551 766 533 808 q 568 671 568 724 q 534 547 568 599 q 422 469 499 494 q 494 451 463 464 q 547 414 526 438 q 581 354 569 391 q 592 265 592 318 z "},"\u0508":{"ha":764,"x_min":-16,"x_max":706,"o":"m 369 782 l 264 782 q 255 549 259 652 q 244 364 251 446 q 227 223 237 283 q 199 121 216 163 q 164 57 183 81 q 125 19 146 33 q 82 2 104 6 q 34 -3 59 -3 q 10 -1 20 -3 q -16 4 -1 1 l -11 107 q -2 106 -8 106 q 26 106 4 106 q 92 161 68 106 q 127 317 115 216 q 145 563 140 418 q 159 886 151 707 l 483 886 l 483 182 q 497 110 483 130 q 541 91 511 91 q 569 95 557 91 q 589 109 581 98 q 601 136 597 119 q 604 179 604 153 l 604 537 l 706 537 l 706 178 q 700 95 706 130 q 675 37 693 60 q 626 3 657 14 q 544 -8 594 -8 q 460 3 494 -8 q 406 36 427 14 q 377 94 386 59 q 369 178 369 130 l 369 782 z "},"\u050a":{"ha":764,"x_min":75,"x_max":706,"o":"m 475 886 l 475 182 q 491 110 475 130 q 537 91 507 91 q 566 95 553 91 q 587 109 578 98 q 600 136 595 119 q 604 179 604 153 l 604 537 l 706 537 l 706 178 q 699 95 706 130 q 673 37 692 60 q 622 3 654 14 q 540 -8 590 -8 q 455 3 490 -8 q 400 36 421 14 q 370 94 379 59 q 361 178 361 130 l 361 407 l 189 407 l 189 0 l 75 0 l 75 886 l 189 886 l 189 511 l 361 511 l 361 886 l 475 886 z "},"\u050c":{"ha":764,"x_min":45,"x_max":709,"o":"m 661 734 q 604 759 631 748 q 551 776 577 769 q 496 787 524 783 q 435 791 468 791 q 327 770 376 791 q 243 707 278 750 q 190 598 209 665 q 171 441 171 532 q 188 289 171 354 q 236 180 205 224 q 312 115 268 136 q 411 93 356 93 q 501 106 467 93 q 554 145 535 119 q 581 206 574 170 q 587 288 587 242 l 587 340 l 406 340 l 406 440 l 709 440 l 709 303 q 690 155 709 216 q 632 58 671 95 q 536 4 594 21 q 400 -12 478 -12 q 256 16 321 -12 q 144 101 191 45 q 71 240 97 157 q 45 433 45 323 q 75 637 45 550 q 158 782 105 724 q 283 869 211 840 q 441 898 356 898 q 661 854 548 898 l 661 734 z "},"\u050e":{"ha":764,"x_min":58,"x_max":692,"o":"m 678 783 l 426 783 l 426 182 q 432 138 426 156 q 447 110 437 121 q 470 95 456 100 q 498 91 483 91 q 531 95 515 91 q 559 109 547 98 q 579 136 572 119 q 587 179 587 153 l 587 537 l 692 537 l 692 178 q 645 37 692 82 q 497 -8 597 -8 q 350 36 396 -8 q 304 178 304 80 l 304 783 l 58 783 l 58 886 l 678 886 l 678 783 z "},"\u0510":{"ha":764,"x_min":74,"x_max":668,"o":"m 668 26 q 548 -2 614 7 q 412 -11 481 -11 q 158 59 243 -11 q 74 256 74 129 q 88 334 74 298 q 127 398 102 370 q 183 443 151 425 q 252 468 216 461 q 140 542 174 493 q 106 662 106 590 q 125 759 106 715 q 182 833 144 802 q 275 881 220 864 q 401 897 330 897 q 537 889 479 897 q 645 865 595 880 l 645 760 q 528 788 585 779 q 413 797 470 797 q 326 785 360 797 q 270 753 291 773 q 240 708 249 734 q 232 655 232 682 q 245 589 232 617 q 283 543 259 562 q 342 516 308 525 q 417 507 376 507 l 600 507 l 600 407 l 414 407 q 326 397 366 407 q 259 369 287 387 q 217 323 232 350 q 203 262 203 296 q 254 136 203 180 q 410 91 306 91 q 556 104 494 91 q 668 138 617 117 l 668 26 z "},"\u0512":{"ha":764,"x_min":18,"x_max":750,"o":"m 509 0 l 509 782 l 340 782 q 306 362 331 524 q 242 121 281 200 q 203 59 222 83 q 165 22 184 35 q 123 3 145 8 q 77 -3 102 -2 q 18 4 47 -3 l 24 107 q 89 126 61 102 q 138 199 117 151 q 174 318 159 248 q 199 477 189 389 q 216 669 209 566 q 228 886 222 772 l 630 886 l 630 113 l 750 113 l 750 -65 q 738 -164 750 -126 q 703 -225 726 -203 q 649 -255 681 -247 q 578 -262 617 -262 q 529 -261 553 -262 q 490 -257 506 -259 l 490 -162 q 525 -168 505 -165 q 562 -171 544 -171 q 591 -168 576 -171 q 616 -155 605 -164 q 634 -128 627 -145 q 641 -84 641 -111 l 641 0 l 509 0 z "},"\u048b":{"ha":764,"x_min":118,"x_max":750,"o":"m 610 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 l 236 201 l 533 681 l 646 681 l 646 101 l 750 101 l 648 -173 l 538 -173 l 610 0 m 590 943 q 575 872 590 903 q 532 819 559 841 q 466 785 505 797 q 380 774 427 774 q 288 785 326 774 q 224 819 249 797 q 188 872 199 841 q 176 943 176 903 l 283 943 q 288 907 283 924 q 304 877 293 890 q 334 856 315 863 q 382 848 353 848 q 430 856 411 848 q 461 877 450 863 q 477 907 473 890 q 482 943 482 924 l 590 943 z "},"\u048d":{"ha":764,"x_min":24,"x_max":704,"o":"m 583 208 q 573 254 583 234 q 540 289 562 275 q 482 311 517 303 q 396 318 446 318 q 327 317 358 318 q 268 315 296 317 l 268 96 q 325 91 296 92 q 382 90 353 90 q 478 100 439 90 q 541 125 517 109 q 573 163 564 142 q 583 208 583 184 m 268 414 q 327 416 296 415 q 397 416 359 416 q 534 401 477 416 q 630 357 592 385 q 686 292 667 330 q 704 210 704 254 q 682 117 704 157 q 618 49 660 77 q 515 6 576 21 q 376 -8 454 -8 q 257 -5 313 -8 q 150 5 200 -2 l 150 753 l 24 753 l 24 852 l 150 852 l 150 945 l 268 976 l 268 852 l 486 852 l 486 753 l 268 753 l 268 414 z "},"\u048f":{"ha":764,"x_min":109,"x_max":690,"o":"m 690 353 q 665 194 690 262 q 595 81 640 126 q 489 14 550 37 q 357 -8 428 -8 q 292 -5 324 -8 q 227 7 260 -1 l 227 -278 l 109 -278 l 109 681 l 214 681 l 221 567 q 330 665 272 637 q 454 693 387 693 q 557 669 513 693 q 631 600 601 644 q 675 493 661 555 q 690 353 690 430 m 570 347 q 562 446 570 401 q 537 522 554 490 q 494 572 520 554 q 431 590 467 590 q 385 583 408 590 q 337 559 362 576 q 285 515 313 543 q 227 447 258 488 l 227 117 q 295 95 259 103 q 366 87 331 87 q 515 152 461 87 q 570 347 570 217 m 380 189 l 451 239 l 637 -26 l 566 -77 l 380 189 z "},"\u0493":{"ha":764,"x_min":45,"x_max":650,"o":"m 45 399 l 184 399 l 184 681 l 650 681 l 650 579 l 304 579 l 304 399 l 534 399 l 534 300 l 304 300 l 304 0 l 184 0 l 184 300 l 45 300 l 45 399 z "},"\u0495":{"ha":764,"x_min":113,"x_max":669,"o":"m 113 681 l 567 681 l 567 583 l 231 583 l 231 410 q 283 417 257 415 q 332 419 309 419 q 471 400 409 419 q 577 341 534 380 q 645 241 621 301 q 669 102 669 182 q 652 -45 669 24 q 597 -166 635 -114 q 499 -248 559 -218 q 350 -278 438 -278 q 335 -278 343 -278 q 319 -277 327 -277 q 304 -276 311 -277 q 293 -275 297 -275 l 293 -176 q 343 -180 319 -180 q 436 -161 397 -180 q 500 -106 475 -142 q 537 -18 525 -70 q 549 99 549 34 q 533 201 549 159 q 488 269 517 243 q 417 308 459 296 q 322 320 375 320 q 278 318 300 320 q 231 311 256 315 l 231 0 l 113 0 l 113 681 z "},"\u0497":{"ha":764,"x_min":-1,"x_max":772,"o":"m 676 97 l 772 97 l 765 -174 l 661 -174 l 661 0 l 609 0 l 422 346 l 422 0 l 314 0 l 314 346 l 127 0 l -1 0 l 224 353 l 4 681 l 121 681 l 314 353 l 314 681 l 422 681 l 422 353 l 616 681 l 732 681 l 527 353 l 676 97 z "},"\u0499":{"ha":764,"x_min":90,"x_max":665,"o":"m 90 122 q 154 108 120 114 q 221 97 188 102 q 285 90 254 92 q 340 87 316 87 q 436 95 398 87 q 497 116 475 102 q 530 150 520 130 q 539 195 539 170 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 160 677 127 671 q 225 686 192 682 q 291 691 258 689 q 354 693 324 693 q 488 680 434 693 q 574 643 541 667 q 620 587 606 619 q 633 515 633 554 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 648 112 665 151 q 591 46 631 74 q 488 3 552 19 q 330 -12 423 -12 q 274 -11 304 -12 q 212 -6 244 -9 q 149 2 180 -3 q 90 12 117 6 l 90 122 m 256 -178 q 288 -180 271 -179 q 317 -180 304 -180 q 380 -166 362 -180 q 399 -131 399 -153 q 396 -105 399 -118 q 385 -77 393 -92 q 361 -43 376 -62 q 322 0 347 -24 l 428 0 q 470 -47 454 -26 q 495 -85 486 -68 q 507 -119 504 -103 q 510 -150 510 -134 q 467 -230 510 -199 q 350 -261 425 -261 q 295 -259 314 -261 q 256 -254 275 -258 l 256 -178 z "},"\u049b":{"ha":764,"x_min":123,"x_max":731,"o":"m 632 97 l 731 97 l 724 -174 l 620 -174 l 620 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 384 367 l 632 97 z "},"\u049d":{"ha":764,"x_min":123,"x_max":722,"o":"m 277 190 l 277 313 l 241 313 l 241 0 l 123 0 l 123 681 l 241 681 l 241 407 l 277 407 l 277 532 l 351 532 l 351 407 l 376 407 l 559 681 l 703 681 l 472 368 l 722 0 l 570 0 l 376 313 l 351 313 l 351 190 l 277 190 z "},"\u049f":{"ha":764,"x_min":15,"x_max":721,"o":"m 15 868 l 123 868 l 123 958 l 241 958 l 241 868 l 421 868 l 421 772 l 241 772 l 241 370 l 547 681 l 703 681 l 384 367 l 721 0 l 559 0 l 241 365 l 241 0 l 123 0 l 123 772 l 15 772 l 15 868 z "},"\u04a1":{"ha":764,"x_min":24,"x_max":721,"o":"m 721 0 l 570 0 l 282 365 l 282 0 l 164 0 l 164 582 l 24 582 l 24 681 l 282 681 l 282 370 l 554 681 l 703 681 l 421 367 l 721 0 z "},"\u04a3":{"ha":764,"x_min":109,"x_max":714,"o":"m 603 0 l 538 0 l 538 301 l 227 301 l 227 0 l 109 0 l 109 681 l 227 681 l 227 404 l 538 404 l 538 681 l 656 681 l 656 97 l 714 97 l 707 -174 l 603 -174 l 603 0 z "},"\u04a5":{"ha":764,"x_min":109,"x_max":764,"o":"m 505 404 l 505 681 l 764 681 l 764 582 l 623 582 l 623 0 l 505 0 l 505 301 l 227 301 l 227 0 l 109 0 l 109 681 l 227 681 l 227 404 l 505 404 z "},"\u04a7":{"ha":764,"x_min":68,"x_max":727,"o":"m 456 0 l 341 0 l 341 583 l 182 583 l 182 0 l 68 0 l 68 681 l 456 681 l 456 410 q 477 412 467 412 q 498 413 488 413 q 593 398 551 413 q 666 344 636 382 q 711 240 695 306 q 727 74 727 174 q 717 -92 727 -24 q 684 -201 707 -159 q 624 -260 661 -242 q 530 -278 586 -278 q 500 -277 515 -278 q 470 -273 485 -277 l 470 -180 q 494 -183 483 -182 q 515 -184 506 -184 q 570 -169 551 -184 q 599 -122 590 -154 q 610 -41 608 -90 q 611 77 611 8 q 603 205 611 157 q 579 278 595 253 q 540 311 563 304 q 488 319 517 319 q 472 318 481 319 q 456 317 463 318 l 456 0 z "},"\u04a9":{"ha":764,"x_min":62,"x_max":699,"o":"m 660 82 q 679 83 669 82 q 699 85 688 84 l 699 -10 q 676 -12 689 -12 q 654 -12 663 -12 q 584 -4 617 -12 q 522 18 551 4 q 375 -12 456 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 83 481 62 416 q 144 594 104 547 q 244 667 184 641 q 382 693 304 693 l 382 593 q 283 568 321 589 q 222 513 245 547 q 192 435 200 479 q 183 340 183 391 q 197 229 183 277 q 237 148 211 180 q 299 98 262 115 q 382 81 336 81 q 434 87 408 81 q 365 203 389 138 q 341 336 341 269 q 350 446 341 397 q 380 529 359 494 q 435 582 401 564 q 519 601 469 601 q 597 583 566 601 q 649 534 629 566 q 677 457 669 502 q 686 359 686 413 q 666 199 686 266 q 610 87 646 132 q 634 83 621 85 q 660 82 646 82 m 580 350 q 577 414 580 385 q 567 463 574 443 q 547 495 559 484 q 517 506 535 506 q 485 494 498 506 q 463 461 471 482 q 451 411 454 440 q 447 349 447 382 q 465 233 447 288 q 521 140 484 178 q 564 223 549 172 q 580 350 580 274 z "},"\u04ab":{"ha":764,"x_min":107,"x_max":637,"o":"m 637 25 q 543 -1 591 7 q 443 -9 494 -9 q 194 78 281 -9 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 548 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 550 102 505 92 q 637 135 595 113 l 637 25 m 300 -178 q 332 -180 315 -179 q 361 -180 349 -180 q 425 -166 406 -180 q 443 -131 443 -153 q 440 -105 443 -118 q 429 -77 437 -92 q 406 -43 420 -62 q 366 0 391 -24 l 472 0 q 514 -47 498 -26 q 539 -85 530 -68 q 551 -119 548 -103 q 554 -150 554 -134 q 511 -230 554 -199 q 394 -261 469 -261 q 339 -259 358 -261 q 300 -254 319 -258 l 300 -178 z "},"\u04ad":{"ha":764,"x_min":64,"x_max":700,"o":"m 402 0 l 322 0 l 322 579 l 64 579 l 64 681 l 700 681 l 700 579 l 441 579 l 441 97 l 513 97 l 507 -174 l 402 -174 l 402 0 z "},"\u04af":{"ha":764,"x_min":45,"x_max":714,"o":"m 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 443 0 l 443 -278 l 321 -278 l 321 0 l 45 681 z "},"\u04b1":{"ha":764,"x_min":45,"x_max":714,"o":"m 129 0 l 321 0 l 45 681 l 179 681 l 346 231 l 382 121 l 419 233 l 585 681 l 714 681 l 443 0 l 635 0 l 635 -101 l 443 -101 l 443 -278 l 321 -278 l 321 -101 l 129 -101 l 129 0 z "},"\u04b3":{"ha":764,"x_min":47,"x_max":745,"o":"m 646 97 l 745 97 l 738 -174 l 633 -174 l 633 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 646 97 z "},"\u04b5":{"ha":764,"x_min":29,"x_max":732,"o":"m 732 102 l 725 -174 l 618 -174 l 618 0 l 132 0 l 132 582 l 29 582 l 29 681 l 351 681 l 351 582 l 250 582 l 250 102 l 532 102 l 532 681 l 650 681 l 650 102 l 732 102 z "},"\u04b7":{"ha":764,"x_min":92,"x_max":724,"o":"m 656 97 l 724 97 l 718 -174 l 613 -174 l 613 0 l 538 0 l 538 264 l 397 264 q 165 323 239 264 q 92 494 92 382 l 92 681 l 211 681 l 211 510 q 222 441 211 469 q 257 396 233 414 q 318 372 281 379 q 410 364 356 364 l 538 364 l 538 681 l 656 681 l 656 97 z "},"\u04b9":{"ha":764,"x_min":92,"x_max":656,"o":"m 338 153 l 338 266 q 151 335 210 277 q 92 494 92 393 l 92 681 l 211 681 l 211 510 q 218 452 211 477 q 240 411 225 428 q 280 384 256 394 q 338 368 304 373 l 338 481 l 424 481 l 424 364 l 538 364 l 538 681 l 656 681 l 656 0 l 538 0 l 538 264 l 424 264 l 424 153 l 338 153 z "},"\u04bb":{"ha":764,"x_min":108,"x_max":672,"o":"m 226 417 l 366 417 q 598 358 524 417 q 672 186 672 299 l 672 0 l 553 0 l 553 171 q 542 239 553 212 q 507 284 531 267 q 445 309 483 302 q 354 317 408 317 l 226 317 l 226 0 l 108 0 l 108 681 l 226 681 l 226 417 z "},"\u04bd":{"ha":764,"x_min":-10,"x_max":704,"o":"m 704 376 q 703 334 704 351 q 701 302 703 317 l 277 302 q 288 210 277 250 q 322 142 298 170 q 384 100 346 115 q 477 86 422 86 q 532 89 507 86 q 581 95 557 91 q 625 104 604 98 q 667 115 646 109 l 667 18 q 620 6 643 12 q 572 -4 597 0 q 520 -10 547 -8 q 460 -12 492 -12 q 326 9 382 -12 q 232 71 269 31 q 176 170 195 111 q 155 303 157 229 q 81 314 112 304 q 30 344 50 325 q 0 390 9 363 q -10 449 -10 416 q -5 492 -10 469 q 7 534 1 515 l 110 534 q 97 494 102 515 q 91 455 91 474 q 105 414 91 431 q 156 393 119 396 q 181 510 162 456 q 235 606 201 565 q 320 670 270 646 q 436 693 370 693 q 558 671 507 693 q 641 607 609 648 q 689 508 673 566 q 704 376 704 449 m 581 393 q 577 476 583 439 q 553 541 570 514 q 505 584 535 568 q 431 599 475 599 q 365 584 392 599 q 319 542 337 569 q 291 477 300 515 q 277 393 281 439 l 581 393 z "},"\u04bf":{"ha":764,"x_min":-10,"x_max":704,"o":"m 704 376 q 703 334 704 351 q 701 302 703 317 l 277 302 q 288 210 277 250 q 322 142 298 170 q 384 100 346 115 q 477 86 422 86 q 532 89 507 86 q 581 95 557 91 q 625 104 604 98 q 667 115 646 109 l 667 18 q 587 -1 627 7 q 498 -12 548 -9 l 494 -174 l 390 -174 l 390 -7 q 288 27 331 2 q 215 91 244 52 q 172 184 186 131 q 155 303 157 237 q 81 314 112 304 q 30 344 50 325 q 0 390 9 363 q -10 449 -10 416 q -5 492 -10 469 q 7 534 1 515 l 110 534 q 97 494 102 515 q 91 455 91 474 q 105 414 91 431 q 156 393 119 396 q 181 510 162 456 q 235 606 201 565 q 320 670 270 646 q 436 693 370 693 q 558 671 507 693 q 641 607 609 648 q 689 508 673 566 q 704 376 704 449 m 581 393 q 577 476 583 439 q 553 541 570 514 q 505 584 535 568 q 431 599 475 599 q 365 584 392 599 q 319 542 337 569 q 291 477 300 515 q 277 393 281 439 l 581 393 z "},"\u04c2":{"ha":764,"x_min":-1,"x_max":765,"o":"m 4 681 l 121 681 l 328 353 l 328 681 l 436 681 l 436 353 l 643 681 l 760 681 l 541 353 l 765 0 l 636 0 l 436 346 l 436 0 l 328 0 l 328 346 l 127 0 l -1 0 l 224 353 l 4 681 m 590 943 q 575 872 590 903 q 532 819 559 841 q 466 785 505 797 q 380 774 427 774 q 288 785 326 774 q 224 819 249 797 q 188 872 199 841 q 176 943 176 903 l 283 943 q 288 907 283 924 q 304 877 293 890 q 334 856 315 863 q 382 848 353 848 q 430 856 411 848 q 461 877 450 863 q 477 907 473 890 q 482 943 482 924 l 590 943 m 0 681 z "},"\u04c4":{"ha":764,"x_min":123,"x_max":703,"o":"m 390 371 q 515 344 458 366 q 615 282 573 321 q 680 188 656 243 q 703 61 703 132 q 686 -79 703 -16 q 632 -186 669 -142 q 533 -254 594 -231 q 385 -278 473 -278 q 354 -277 371 -278 q 328 -275 338 -276 l 328 -176 q 378 -180 354 -180 q 471 -168 432 -180 q 535 -126 510 -155 q 571 -52 559 -98 q 583 58 583 -7 q 565 162 583 118 q 513 235 547 206 q 433 279 480 264 q 330 293 387 293 l 241 293 l 241 0 l 123 0 l 123 681 l 241 681 l 241 370 l 547 681 l 703 681 l 390 371 z "},"\u04c6":{"ha":764,"x_min":22,"x_max":754,"o":"m 650 101 l 754 101 l 652 -173 l 542 -173 l 614 0 l 532 0 l 532 579 l 342 579 q 318 340 334 439 q 279 173 302 240 q 229 68 257 106 q 167 13 200 30 q 98 -4 134 -5 q 22 5 61 -4 l 28 103 q 79 106 55 100 q 123 132 102 111 q 160 192 143 153 q 190 296 176 231 q 213 455 203 361 q 229 681 223 550 l 650 681 l 650 101 z "},"\u04c8":{"ha":764,"x_min":109,"x_max":656,"o":"m 656 47 q 639 -91 656 -30 q 585 -193 623 -151 q 488 -256 548 -235 q 339 -278 427 -278 q 309 -277 326 -278 q 282 -275 292 -276 l 282 -176 q 332 -180 309 -180 q 426 -170 387 -180 q 489 -133 465 -159 q 526 -64 514 -107 q 538 45 538 -20 l 538 301 l 227 301 l 227 0 l 109 0 l 109 681 l 227 681 l 227 404 l 538 404 l 538 681 l 656 681 l 656 47 z "},"\u04ca":{"ha":764,"x_min":109,"x_max":760,"o":"m 538 0 l 538 301 l 227 301 l 227 0 l 109 0 l 109 681 l 227 681 l 227 404 l 538 404 l 538 681 l 656 681 l 656 101 l 760 101 l 658 -173 l 548 -173 l 620 0 l 538 0 z "},"\u04cc":{"ha":764,"x_min":92,"x_max":656,"o":"m 538 102 l 538 264 l 397 264 q 165 323 239 264 q 92 494 92 382 l 92 681 l 211 681 l 211 510 q 222 441 211 469 q 257 396 233 414 q 318 372 281 379 q 410 364 356 364 l 538 364 l 538 681 l 656 681 l 656 0 l 519 0 l 519 -174 l 412 -174 l 406 102 l 538 102 z "},"\u04ce":{"ha":764,"x_min":33,"x_max":822,"o":"m 711 101 l 822 101 l 720 -173 l 610 -173 l 682 0 l 600 0 l 583 425 l 575 576 l 535 471 l 414 161 l 328 161 l 212 458 l 170 576 l 164 416 l 146 0 l 33 0 l 77 681 l 233 681 l 343 387 l 375 300 l 407 387 l 519 681 l 674 681 l 711 101 z "},"\u04cf":{"ha":764,"x_min":117,"x_max":647,"o":"m 321 785 l 117 785 l 117 886 l 647 886 l 647 785 l 443 785 l 443 103 l 647 103 l 647 0 l 117 0 l 117 103 l 321 103 l 321 785 z "},"\u04d1":{"ha":764,"x_min":0,"x_max":652,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u04d3":{"ha":764,"x_min":60,"x_max":664,"o":"m 546 0 l 543 92 q 430 12 488 37 q 310 -12 373 -12 q 210 3 252 -12 q 142 44 169 18 q 103 105 115 70 q 90 182 90 140 q 166 342 90 284 q 392 400 243 400 l 533 400 l 533 460 q 494 556 533 520 q 376 593 456 593 q 263 580 319 593 q 147 543 207 567 l 147 650 q 197 666 170 658 q 255 680 224 673 q 319 689 286 686 q 386 693 352 693 q 497 680 448 693 q 581 638 547 666 q 633 568 615 610 q 652 469 652 526 l 652 0 l 546 0 m 533 310 l 383 310 q 307 301 339 310 q 255 276 275 292 q 225 237 235 260 q 215 186 215 214 q 221 148 215 166 q 241 116 227 130 q 276 94 254 102 q 329 86 298 86 q 422 111 370 86 q 533 189 475 136 l 533 310 m 296 953 q 325 947 311 953 q 350 930 339 941 q 366 906 360 920 q 372 876 372 892 q 366 847 372 861 q 350 823 360 833 q 325 806 339 812 q 296 800 311 800 q 266 806 280 800 q 242 823 252 812 q 226 847 232 833 q 220 876 220 861 q 226 906 220 892 q 242 930 232 920 q 266 947 252 941 q 296 953 280 953 m 587 953 q 617 947 603 953 q 641 930 631 941 q 658 906 652 920 q 664 876 664 892 q 658 847 664 861 q 641 823 652 833 q 617 806 631 812 q 587 800 603 800 q 558 806 572 800 q 534 823 544 812 q 517 847 524 833 q 511 876 511 861 q 517 906 511 892 q 534 930 524 920 q 558 947 544 941 q 587 953 572 953 m 60 681 z "},"\u04d5":{"ha":764,"x_min":21,"x_max":737,"o":"m 231 693 q 334 673 292 693 q 393 611 376 653 q 455 671 417 649 q 542 693 492 693 q 632 671 595 693 q 692 610 669 650 q 726 516 715 571 q 737 393 737 460 q 736 338 737 357 q 734 310 736 320 l 433 310 q 465 143 433 201 q 570 85 496 85 q 646 93 608 85 q 713 113 684 101 l 713 18 q 677 6 697 12 q 634 -4 656 0 q 589 -10 612 -8 q 545 -12 566 -12 q 363 106 413 -12 q 283 19 328 50 q 187 -12 239 -12 q 63 37 106 -12 q 21 182 21 87 q 34 273 21 233 q 75 341 47 313 q 145 383 102 368 q 248 397 188 397 l 329 397 l 329 454 q 306 560 329 523 q 225 597 282 597 q 143 584 186 597 q 58 547 100 571 l 58 650 q 95 666 75 658 q 138 680 116 673 q 184 689 161 686 q 231 693 208 693 m 244 310 q 159 276 185 310 q 132 186 132 242 q 150 110 132 135 q 200 85 168 85 q 260 108 229 85 q 329 191 292 131 l 329 310 l 244 310 m 538 599 q 492 583 511 599 q 459 541 473 568 q 440 477 446 514 q 433 397 433 440 l 627 397 q 623 476 627 439 q 608 541 618 513 q 580 583 597 568 q 538 599 563 599 z "},"\u04d7":{"ha":764,"x_min":0,"x_max":684,"o":"m 684 376 q 683 334 684 351 q 681 302 682 317 l 203 302 q 261 142 203 198 q 429 86 319 86 q 489 89 459 86 q 547 95 519 91 q 600 104 574 99 q 647 115 625 109 l 647 18 q 538 -4 599 5 q 412 -12 477 -12 q 262 12 325 -12 q 158 80 199 35 q 99 191 118 125 q 79 339 79 256 q 100 475 79 411 q 160 588 121 539 q 258 665 200 636 q 389 693 315 693 q 515 671 460 693 q 607 607 570 648 q 664 508 645 566 q 684 376 684 449 m 561 393 q 552 476 563 439 q 518 541 541 514 q 462 584 496 568 q 383 599 428 599 q 313 584 345 599 q 258 542 281 569 q 220 477 235 515 q 203 393 206 439 l 561 393 m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u04d9":{"ha":764,"x_min":80,"x_max":684,"o":"m 80 304 q 81 347 80 330 q 83 378 81 363 l 561 378 q 503 537 561 484 q 334 591 445 591 q 217 583 274 591 q 117 562 160 574 l 117 663 q 225 685 165 676 q 351 693 286 693 q 502 669 439 693 q 605 601 565 646 q 665 490 646 555 q 684 342 684 425 q 664 206 684 270 q 605 93 644 142 q 509 16 566 45 q 378 -12 452 -12 q 252 10 307 -12 q 158 74 196 33 q 100 173 120 115 q 80 304 80 232 m 203 288 q 212 204 201 242 q 245 138 222 165 q 302 94 268 110 q 380 79 336 79 q 451 94 419 79 q 506 137 483 110 q 544 203 530 165 q 561 288 557 241 l 203 288 z "},"\u04db":{"ha":764,"x_min":0,"x_max":684,"o":"m 80 304 q 81 347 80 330 q 83 378 81 363 l 561 378 q 503 537 561 484 q 334 591 445 591 q 217 583 274 591 q 117 562 160 574 l 117 663 q 225 685 165 676 q 351 693 286 693 q 502 669 439 693 q 605 601 565 646 q 665 490 646 555 q 684 342 684 425 q 664 206 684 270 q 605 93 644 142 q 509 16 566 45 q 378 -12 452 -12 q 252 10 307 -12 q 158 74 196 33 q 100 173 120 115 q 80 304 80 232 m 203 288 q 212 204 201 242 q 245 138 222 165 q 302 94 268 110 q 380 79 336 79 q 451 94 419 79 q 506 137 483 110 q 544 203 530 165 q 561 288 557 241 l 203 288 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04dd":{"ha":764,"x_min":-1,"x_max":765,"o":"m 4 681 l 121 681 l 328 353 l 328 681 l 436 681 l 436 353 l 643 681 l 760 681 l 541 353 l 765 0 l 636 0 l 436 346 l 436 0 l 328 0 l 328 346 l 127 0 l -1 0 l 224 353 l 4 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04df":{"ha":764,"x_min":0,"x_max":665,"o":"m 90 122 q 154 108 120 114 q 221 97 188 102 q 285 90 254 92 q 340 87 316 87 q 436 95 398 87 q 497 116 475 102 q 530 150 520 130 q 539 195 539 170 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 160 677 127 671 q 225 686 192 682 q 291 691 258 689 q 354 693 324 693 q 488 680 434 693 q 574 643 541 667 q 620 587 606 619 q 633 515 633 554 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 648 112 665 151 q 591 46 631 74 q 488 3 552 19 q 330 -12 423 -12 q 274 -11 304 -12 q 212 -6 244 -9 q 149 2 180 -3 q 90 12 117 6 l 90 122 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04e1":{"ha":764,"x_min":127,"x_max":652,"o":"m 652 62 q 633 -47 652 4 q 571 -137 614 -98 q 457 -197 528 -175 q 284 -219 387 -219 q 237 -218 258 -219 q 197 -216 216 -217 q 162 -212 179 -214 q 127 -207 145 -210 l 127 -103 q 208 -115 169 -111 q 295 -119 246 -119 q 407 -106 361 -119 q 479 -72 452 -94 q 517 -17 506 -49 q 529 56 529 16 q 516 130 529 97 q 475 186 503 163 q 400 222 446 210 q 286 234 353 234 l 248 234 l 248 315 l 475 582 l 138 582 l 138 681 l 612 681 l 612 583 l 376 322 q 472 301 423 317 q 561 254 521 285 q 627 177 602 224 q 652 62 652 130 z "},"\u04e3":{"ha":764,"x_min":0,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u04e5":{"ha":764,"x_min":0,"x_max":646,"o":"m 236 681 l 236 201 l 533 681 l 646 681 l 646 0 l 528 0 l 528 479 l 231 0 l 118 0 l 118 681 l 236 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04e7":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 581 340 q 567 451 581 404 q 527 529 553 498 q 464 577 501 561 q 382 593 427 593 q 291 572 329 593 q 230 517 254 551 q 194 436 205 482 q 183 340 183 391 q 197 230 183 277 q 237 151 211 182 q 299 103 262 119 q 382 87 336 87 q 472 108 435 87 q 534 163 510 129 q 569 244 558 198 q 581 340 581 290 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04e9":{"ha":764,"x_min":62,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 382 87 q 465 104 430 87 q 523 151 500 121 q 561 219 547 180 q 578 302 575 258 l 185 302 q 241 144 189 200 q 382 87 294 87 m 382 593 q 300 577 335 593 q 242 532 266 560 q 203 468 218 505 q 185 393 189 432 l 578 393 q 513 544 566 495 q 382 593 461 593 z "},"\u04eb":{"ha":764,"x_min":0,"x_max":701,"o":"m 701 346 q 679 200 701 267 q 614 87 656 134 q 512 14 572 40 q 375 -12 452 -12 q 244 11 302 -12 q 145 77 186 33 q 84 186 105 121 q 62 336 62 252 q 85 481 62 416 q 149 594 107 547 q 252 667 191 641 q 389 693 312 693 q 520 670 462 693 q 618 604 578 648 q 680 495 659 560 q 701 346 701 430 m 382 87 q 465 104 430 87 q 523 151 500 121 q 561 219 547 180 q 578 302 575 258 l 185 302 q 241 144 189 200 q 382 87 294 87 m 382 593 q 300 577 335 593 q 242 532 266 560 q 203 468 218 505 q 185 393 189 432 l 578 393 q 513 544 566 495 q 382 593 461 593 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04ed":{"ha":764,"x_min":3,"x_max":676,"o":"m 550 393 q 527 483 545 441 q 477 549 508 524 q 402 585 446 574 q 309 596 358 596 q 203 585 254 596 q 106 553 152 574 l 106 659 q 210 685 156 676 q 321 693 264 693 q 476 670 409 693 q 587 603 543 647 q 654 493 631 558 q 676 345 676 429 q 653 190 676 257 q 583 77 629 123 q 469 10 536 32 q 315 -12 401 -12 q 204 -5 256 -12 q 106 20 152 3 l 106 129 q 205 95 154 106 q 310 85 256 85 q 486 140 427 85 q 553 300 545 195 l 146 300 l 146 393 l 550 393 m 239 953 q 268 947 254 953 q 293 930 282 941 q 309 906 303 920 q 315 876 315 892 q 309 847 315 861 q 293 823 303 833 q 268 806 282 812 q 239 800 254 800 q 209 806 223 800 q 185 823 195 812 q 169 847 175 833 q 163 876 163 861 q 169 906 163 892 q 185 930 175 920 q 209 947 195 941 q 239 953 223 953 m 530 953 q 560 947 546 953 q 584 930 574 941 q 601 906 595 920 q 607 876 607 892 q 601 847 607 861 q 584 823 595 833 q 560 806 574 812 q 530 800 546 800 q 501 806 515 800 q 477 823 487 812 q 460 847 467 833 q 454 876 454 861 q 460 906 454 892 q 477 930 467 920 q 501 947 487 941 q 530 953 515 953 m 3 681 z "},"\u04ef":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u04f1":{"ha":764,"x_min":0,"x_max":714,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04f3":{"ha":764,"x_min":40,"x_max":790,"o":"m 714 681 l 482 72 q 408 -88 446 -21 q 324 -198 370 -155 q 224 -262 279 -241 q 103 -282 170 -282 q 71 -281 85 -282 q 40 -279 57 -281 l 40 -172 q 73 -176 55 -174 q 110 -178 90 -178 q 171 -168 142 -178 q 224 -137 199 -159 q 272 -82 249 -116 q 317 0 295 -48 l 45 681 l 179 681 l 351 231 l 386 125 l 425 233 l 585 681 l 714 681 m 483 958 l 318 794 l 199 794 l 340 958 l 483 958 m 790 958 l 601 794 l 483 794 l 633 958 l 790 958 m 43 681 z "},"\u04f5":{"ha":764,"x_min":28,"x_max":656,"o":"m 538 264 l 397 264 q 165 323 239 264 q 92 494 92 382 l 92 681 l 211 681 l 211 510 q 222 441 211 469 q 257 396 233 414 q 318 372 281 379 q 410 364 356 364 l 538 364 l 538 681 l 656 681 l 656 0 l 538 0 l 538 264 m 264 953 q 293 947 279 953 q 318 930 307 941 q 334 906 328 920 q 340 876 340 892 q 334 847 340 861 q 318 823 328 833 q 293 806 307 812 q 264 800 279 800 q 234 806 248 800 q 210 823 220 812 q 194 847 200 833 q 188 876 188 861 q 194 906 188 892 q 210 930 200 920 q 234 947 220 941 q 264 953 248 953 m 555 953 q 585 947 571 953 q 609 930 599 941 q 626 906 620 920 q 632 876 632 892 q 626 847 632 861 q 609 823 620 833 q 585 806 599 812 q 555 800 571 800 q 526 806 540 800 q 502 823 512 812 q 486 847 492 833 q 479 876 479 861 q 486 906 479 892 q 502 930 492 920 q 526 947 512 941 q 555 953 540 953 m 28 681 z "},"\u04f7":{"ha":764,"x_min":164,"x_max":657,"o":"m 283 97 l 406 97 l 399 -174 l 294 -174 l 294 0 l 164 0 l 164 681 l 657 681 l 657 579 l 283 579 l 283 97 z "},"\u04f9":{"ha":764,"x_min":0,"x_max":708,"o":"m 591 0 l 591 681 l 708 681 l 708 0 l 591 0 m 395 209 q 361 292 395 262 q 254 321 328 321 q 214 321 235 321 q 172 319 194 320 l 172 95 q 214 91 194 92 q 253 90 233 90 q 321 99 294 90 q 365 125 349 109 q 388 163 380 142 q 395 209 395 185 m 172 418 q 218 419 197 418 q 262 419 239 419 q 374 404 326 419 q 454 361 422 389 q 501 295 486 334 q 517 212 517 257 q 498 117 517 158 q 446 48 480 76 q 363 6 412 20 q 246 -8 314 -8 q 154 -6 203 -8 q 56 4 106 -3 l 56 681 l 172 681 l 172 418 m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u04fb":{"ha":764,"x_min":45,"x_max":650,"o":"m 429 100 l 429 -56 q 416 -157 429 -117 q 382 -220 404 -197 q 328 -253 359 -243 q 257 -262 296 -262 q 208 -261 231 -262 q 169 -257 184 -259 l 169 -162 q 203 -168 184 -165 q 240 -171 222 -171 q 269 -168 255 -171 q 295 -156 283 -165 q 313 -127 306 -146 q 319 -75 319 -108 l 319 0 l 184 0 l 184 300 l 45 300 l 45 399 l 184 399 l 184 681 l 650 681 l 650 579 l 304 579 l 304 399 l 534 399 l 534 300 l 304 300 l 304 100 l 429 100 z "},"\u04fd":{"ha":764,"x_min":47,"x_max":749,"o":"m 644 100 l 749 100 l 749 -56 q 737 -157 749 -117 q 703 -220 725 -197 q 648 -253 680 -243 q 578 -262 616 -262 q 529 -261 552 -262 q 490 -257 505 -259 l 490 -162 q 524 -168 505 -165 q 561 -171 543 -171 q 590 -168 576 -171 q 615 -156 604 -165 q 633 -127 627 -146 q 640 -75 640 -108 l 640 0 l 566 0 l 382 260 l 200 0 l 47 0 l 311 342 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 456 339 l 644 100 z "},"\u04ff":{"ha":764,"x_min":47,"x_max":722,"o":"m 691 294 l 491 294 l 722 0 l 566 0 l 382 260 l 200 0 l 47 0 l 274 294 l 66 294 l 66 392 l 274 392 l 60 681 l 211 681 l 390 419 l 566 681 l 711 681 l 495 392 l 691 392 l 691 294 z "},"\u0501":{"ha":764,"x_min":74,"x_max":652,"o":"m 74 326 q 98 480 74 413 q 165 594 121 548 q 270 665 209 641 q 407 689 332 689 q 471 685 439 689 q 533 672 503 681 l 533 958 l 652 958 l 652 0 l 546 0 l 542 129 q 435 22 492 57 q 310 -12 377 -12 q 207 12 252 -12 q 133 81 163 37 q 89 188 104 125 q 74 326 74 250 m 195 334 q 231 150 195 210 q 334 89 267 89 q 428 129 378 89 q 533 248 478 169 l 533 564 q 469 584 504 577 q 399 591 433 591 q 249 529 302 591 q 195 334 195 467 z "},"\u0503":{"ha":764,"x_min":64,"x_max":690,"o":"m 185 334 q 192 215 185 262 q 209 140 198 168 q 236 100 220 112 q 271 89 252 89 q 320 109 303 89 q 337 182 337 130 l 337 567 q 306 583 321 578 q 269 589 290 589 q 228 574 244 589 q 202 528 212 559 q 189 448 193 496 q 185 334 185 400 m 456 182 q 471 110 456 130 q 516 91 486 91 q 545 95 532 91 q 565 109 557 98 q 577 136 573 119 q 581 179 581 153 l 581 442 l 690 442 l 690 178 q 682 95 690 130 q 655 37 674 60 q 602 3 635 14 q 519 -8 569 -8 q 441 7 471 -8 q 393 45 411 22 q 335 4 368 20 q 258 -12 301 -12 q 162 12 200 -12 q 103 81 125 37 q 73 188 81 125 q 64 326 64 250 q 72 480 64 413 q 102 593 80 547 q 163 663 124 639 q 265 686 203 686 q 301 684 282 686 q 337 674 320 681 l 337 958 l 456 958 l 456 182 z "},"\u0505":{"ha":764,"x_min":42,"x_max":683,"o":"m 313 195 q 306 240 313 220 q 279 275 299 260 q 222 298 259 290 q 127 306 186 306 l 89 306 l 89 397 l 126 397 q 209 404 178 397 q 256 424 239 411 q 277 455 272 437 q 281 497 281 473 q 251 569 281 543 q 157 595 220 595 q 137 594 147 595 q 114 591 127 593 q 83 585 100 589 q 42 574 66 581 l 42 673 q 84 683 66 680 q 118 689 102 687 q 150 692 134 692 q 184 693 165 693 q 285 680 243 693 q 353 643 327 667 q 391 587 379 619 q 404 515 404 554 q 374 420 404 458 q 278 361 345 381 q 392 306 353 349 q 431 191 431 263 l 431 165 q 450 100 431 119 q 503 82 469 82 q 535 86 522 82 q 557 99 548 90 q 570 124 566 109 q 574 164 574 140 l 574 442 l 683 442 l 683 178 q 672 95 683 130 q 639 37 662 60 q 581 3 616 14 q 495 -8 545 -8 q 430 -2 463 -8 q 371 24 397 5 q 329 77 345 43 q 313 168 313 111 l 313 195 z "},"\u0507":{"ha":764,"x_min":100,"x_max":713,"o":"m 471 0 l 471 195 q 463 240 471 220 q 432 275 454 260 q 372 298 410 290 q 275 306 334 306 l 176 306 l 176 397 l 275 397 q 359 404 326 397 q 411 424 392 411 q 437 455 430 437 q 444 497 444 473 q 411 569 444 543 q 308 595 379 595 q 256 593 280 595 q 208 587 232 591 q 157 578 183 584 q 100 566 131 572 l 100 665 q 212 685 156 677 q 322 693 267 693 q 435 680 389 693 q 510 643 481 667 q 552 587 539 619 q 566 515 566 554 q 557 461 566 487 q 532 416 549 436 q 489 381 515 395 q 427 361 463 367 q 551 310 511 350 q 591 195 591 269 l 591 97 l 713 97 l 706 -174 l 602 -174 l 602 0 l 471 0 z "},"\u0509":{"ha":764,"x_min":-5,"x_max":706,"o":"m 368 579 l 267 579 q 250 372 260 461 q 228 218 241 283 q 199 111 215 153 q 162 42 182 68 q 117 6 142 17 q 64 -4 93 -4 q -5 5 33 -4 l 0 103 q 14 102 5 102 q 26 101 22 101 q 68 110 50 101 q 99 142 85 119 q 121 207 112 165 q 138 313 131 248 q 152 468 146 377 q 163 681 157 558 l 478 681 l 478 165 q 491 100 478 119 q 536 82 505 82 q 565 86 553 82 q 584 99 576 90 q 594 124 591 109 q 597 164 597 140 l 597 442 l 706 442 l 706 178 q 697 95 706 130 q 668 37 688 60 q 615 3 648 14 q 534 -8 582 -8 q 469 -2 499 -8 q 416 24 439 5 q 381 77 394 43 q 368 168 368 111 l 368 579 z "},"\u050b":{"ha":764,"x_min":109,"x_max":706,"o":"m 470 681 l 470 165 q 485 100 470 119 q 532 82 500 82 q 562 86 549 82 q 582 99 574 90 q 594 124 590 109 q 597 164 597 140 l 597 442 l 706 442 l 706 178 q 696 95 706 130 q 666 37 687 60 q 611 3 645 14 q 530 -8 578 -8 q 464 -2 495 -8 q 410 24 433 5 q 374 77 387 43 q 360 168 360 111 l 360 301 l 218 301 l 218 0 l 109 0 l 109 681 l 218 681 l 218 404 l 360 404 l 360 681 l 470 681 z "},"\u050d":{"ha":764,"x_min":107,"x_max":708,"o":"m 435 92 q 556 126 517 92 q 595 235 595 160 l 595 269 l 441 269 l 441 359 l 708 359 l 708 248 q 689 127 708 176 q 633 48 669 78 q 544 4 597 18 q 425 -9 492 -9 q 295 13 353 -9 q 194 78 236 35 q 130 185 153 121 q 107 334 107 250 q 132 483 107 416 q 203 595 157 549 q 311 666 248 641 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 574 408 590 q 296 527 327 559 q 248 448 266 496 q 231 338 231 401 q 247 228 231 275 q 290 152 262 182 q 355 106 317 121 q 435 92 393 92 z "},"\u050f":{"ha":764,"x_min":57,"x_max":670,"o":"m 544 579 l 359 579 l 359 183 q 369 133 359 152 q 393 103 378 114 q 426 90 408 93 q 459 86 443 86 q 494 89 476 86 q 527 102 512 92 q 552 131 542 113 q 562 182 562 150 l 562 442 l 670 442 l 670 192 q 619 44 670 96 q 456 -8 568 -8 q 375 0 414 -8 q 307 31 336 9 q 259 89 277 52 q 241 181 241 125 l 241 579 l 57 579 l 57 681 l 544 681 l 544 579 z "},"\u0511":{"ha":764,"x_min":90,"x_max":665,"o":"m 665 12 q 607 1 639 6 q 544 -6 576 -3 q 481 -11 511 -9 q 426 -12 450 -12 q 268 2 332 -12 q 164 42 203 16 q 107 105 125 68 q 90 186 90 142 q 102 252 90 223 q 135 302 114 281 q 183 338 156 323 q 243 361 211 352 q 151 415 180 381 q 122 506 122 449 q 136 578 122 545 q 182 638 149 612 q 268 678 214 663 q 401 693 321 693 q 464 691 431 693 q 530 685 497 689 q 596 676 564 682 q 656 665 628 671 l 656 566 q 529 587 592 580 q 414 595 467 595 q 333 588 366 595 q 281 569 300 581 q 253 538 261 556 q 244 497 244 520 q 251 455 244 473 q 277 424 258 437 q 328 404 296 411 q 413 397 361 397 l 579 397 l 579 306 l 412 306 q 315 298 353 306 q 255 275 277 290 q 225 240 233 260 q 216 195 216 220 q 226 150 216 170 q 258 116 235 130 q 319 95 281 102 q 415 87 357 87 q 470 90 439 87 q 535 97 501 92 q 602 107 568 101 q 665 122 635 114 l 665 12 z "},"\u0513":{"ha":764,"x_min":22,"x_max":741,"o":"m 616 681 l 616 100 l 741 100 l 741 -56 q 728 -157 741 -117 q 694 -220 716 -197 q 640 -253 671 -243 q 569 -262 608 -262 q 520 -261 543 -262 q 481 -257 496 -259 l 481 -162 q 515 -168 496 -165 q 552 -171 534 -171 q 581 -168 567 -171 q 607 -156 595 -165 q 625 -127 618 -146 q 631 -75 631 -108 l 631 0 l 498 0 l 498 579 l 342 579 q 318 340 334 439 q 279 173 302 240 q 228 68 256 106 q 167 13 200 30 q 98 -4 134 -5 q 22 5 61 -4 l 28 103 q 79 106 55 100 q 123 132 102 111 q 160 192 143 153 q 190 296 177 231 q 213 455 203 361 q 229 681 223 550 l 616 681 z "},"\u2000":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2001":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2002":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2003":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2004":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2005":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2006":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2007":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2008":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2009":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u200a":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u200b":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u200c":{"ha":0,"x_min":-24,"x_max":24,"o":"m 24 1187 l 24 -277 l -24 -277 l -24 1187 l 24 1187 z "},"\u200d":{"ha":0,"x_min":-149,"x_max":149,"o":"m 24 -277 l -24 -277 l -24 984 l -115 892 l -149 925 l -33 1040 l -149 1154 l -115 1187 l 0 1071 l 115 1187 l 149 1154 l 33 1040 l 149 925 l 115 892 l 24 984 l 24 -277 z "},"\u2012":{"ha":764,"x_min":90,"x_max":673,"o":"m 673 318 l 90 318 l 90 421 l 673 421 l 673 318 z "},"\u2016":{"ha":764,"x_min":216,"x_max":549,"o":"m 549 -278 l 437 -278 l 437 1111 l 549 1111 l 549 -278 m 327 -278 l 216 -278 l 216 1111 l 327 1111 l 327 -278 z "},"\u201b":{"ha":764,"x_min":275,"x_max":603,"o":"m 603 517 q 460 541 522 517 q 358 604 399 564 q 296 696 317 644 q 275 804 275 748 q 285 876 275 846 q 312 927 295 907 q 350 957 328 947 q 396 966 372 966 q 437 958 420 966 q 466 937 454 950 q 482 909 477 924 q 488 879 488 894 q 478 834 488 851 q 456 802 468 817 q 434 770 444 787 q 424 724 424 752 q 439 673 424 695 q 478 637 454 652 q 536 615 503 623 q 603 610 568 608 l 603 517 z "},"\u201f":{"ha":764,"x_min":39,"x_max":693,"o":"m 337 545 q 208 567 264 545 q 115 627 153 589 q 58 712 77 664 q 39 814 39 761 q 48 881 39 852 q 73 929 57 910 q 109 957 88 947 q 151 966 129 966 q 190 959 174 966 q 217 939 206 951 q 232 913 227 927 q 237 885 237 899 q 229 842 237 859 q 209 812 220 826 q 189 782 198 798 q 180 739 180 766 q 194 692 180 713 q 229 658 208 671 q 279 637 251 644 q 337 632 308 631 l 337 545 m 693 545 q 564 567 620 545 q 470 627 508 589 q 413 712 433 664 q 394 814 394 761 q 403 881 394 852 q 428 929 412 910 q 464 957 444 947 q 507 966 484 966 q 545 959 529 966 q 572 939 562 951 q 588 913 583 927 q 593 885 593 899 q 584 842 593 859 q 564 812 575 826 q 545 782 553 798 q 536 739 536 766 q 549 692 536 713 q 585 658 563 671 q 635 637 607 644 q 693 632 663 631 l 693 545 z "},"\u02b9":{"ha":764,"x_min":230,"x_max":536,"o":"m 321 514 l 230 547 l 371 977 l 536 925 l 321 514 z "},"\u2033":{"ha":764,"x_min":56,"x_max":708,"o":"m 148 514 l 56 547 l 197 977 l 362 925 l 148 514 m 494 514 l 402 547 l 543 977 l 708 925 l 494 514 z "},"\u2034":{"ha":764,"x_min":12,"x_max":751,"o":"m 83 519 l 12 547 l 153 977 l 298 930 l 83 519 m 311 519 l 240 547 l 381 977 l 526 930 l 311 519 m 537 519 l 466 547 l 607 977 l 751 930 l 537 519 z "},"\u203e":{"ha":764,"x_min":1,"x_max":762,"o":"m 762 1050 l 1 1050 l 1 1141 l 762 1141 l 762 1050 z "},"\u2e17":{"ha":764,"x_min":111,"x_max":653,"o":"m 653 526 l 111 336 l 111 443 l 653 633 l 653 526 m 653 290 l 111 100 l 111 207 l 653 397 l 653 290 z "},"\u20a0":{"ha":764,"x_min":33,"x_max":726,"o":"m 726 0 l 355 0 l 355 262 q 117 341 200 262 q 33 579 33 420 q 56 710 33 652 q 117 810 78 769 q 209 873 156 851 q 324 896 262 896 q 407 889 366 896 q 481 867 448 882 l 481 758 q 408 786 448 777 q 328 795 369 795 q 198 743 242 795 q 155 580 155 690 q 165 482 155 524 q 199 413 176 440 q 261 372 222 385 q 355 359 299 359 l 355 604 l 726 604 l 726 508 l 471 508 l 471 361 l 715 361 l 715 264 l 471 264 l 471 98 l 726 98 l 726 0 z "},"\u20a1":{"ha":764,"x_min":56,"x_max":688,"o":"m 275 -129 l 191 -129 l 222 49 q 98 197 141 101 q 56 433 56 292 q 78 604 56 527 q 141 740 100 682 q 241 837 182 798 q 372 889 299 875 l 394 1016 l 478 1016 l 457 897 l 458 897 q 510 896 487 897 q 555 890 534 894 l 577 1016 l 661 1016 l 635 872 l 688 854 l 688 736 q 651 751 669 744 q 616 764 634 758 l 498 98 q 590 114 545 102 q 688 147 635 127 l 688 33 q 479 -10 583 -5 l 458 -129 l 374 -129 l 395 -7 q 345 0 369 -5 q 300 12 321 4 l 275 -129 m 463 790 q 450 790 456 790 q 437 789 444 789 l 321 131 q 414 100 363 107 l 536 785 q 501 789 519 787 q 463 790 483 790 m 184 444 q 200 301 184 363 q 248 196 216 239 l 350 767 q 228 650 272 732 q 184 444 184 568 z "},"\u20a2":{"ha":764,"x_min":62,"x_max":707,"o":"m 608 360 q 604 393 607 378 q 595 418 602 408 q 579 434 589 429 q 551 440 568 440 q 530 435 540 440 q 511 421 519 429 q 495 405 503 414 q 484 389 488 396 l 484 97 q 583 112 535 99 q 675 147 630 125 l 675 33 q 452 -11 567 -11 q 292 17 363 -11 q 169 101 220 45 q 90 240 118 157 q 62 433 62 323 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 626 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 238 217 191 301 q 378 108 286 134 l 378 516 l 474 516 l 477 463 q 494 487 484 476 q 517 507 504 498 q 549 521 531 516 q 589 526 566 526 q 646 515 624 526 q 682 484 669 505 q 700 432 694 463 q 707 360 705 401 l 608 360 z "},"\u20a5":{"ha":764,"x_min":29,"x_max":736,"o":"m 594 0 l 594 489 q 592 541 594 521 q 584 573 589 562 q 571 590 579 585 q 552 595 564 595 q 527 587 538 595 q 502 560 515 578 q 473 512 489 542 q 435 437 457 481 l 435 0 l 328 0 l 328 476 q 325 536 328 513 q 318 572 323 559 q 304 590 313 585 q 285 595 296 595 q 262 588 273 595 q 238 564 251 581 q 208 515 224 546 q 170 437 192 485 l 170 0 l 61 0 l 61 681 l 151 681 l 157 551 q 191 617 174 590 q 225 661 208 644 q 263 685 243 677 q 307 693 283 693 q 391 657 362 693 q 419 546 419 621 q 451 609 435 581 q 485 655 467 636 q 524 683 503 673 q 574 693 546 693 q 703 496 703 693 l 703 0 l 594 0 m 736 722 l 156 -117 l 29 -117 l 610 722 l 736 722 z "},"\u20a6":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 378 l 94 378 l 94 499 l 0 499 l 0 591 l 94 591 l 94 886 l 250 886 l 373 591 l 557 591 l 557 886 l 670 886 l 670 591 l 763 591 l 763 499 l 670 499 l 670 378 l 764 378 l 764 286 l 670 286 l 670 0 l 513 0 l 391 286 l 207 286 l 207 0 l 94 0 l 94 286 l 0 286 l 0 378 m 207 378 l 355 378 l 302 499 l 207 499 l 207 378 m 463 378 l 557 378 l 557 499 l 410 499 l 463 378 m 207 591 l 265 591 l 207 730 l 207 591 m 557 160 l 557 286 l 500 286 l 557 160 z "},"\u20a8":{"ha":764,"x_min":47,"x_max":741,"o":"m 402 0 l 279 0 l 252 283 q 238 340 248 318 q 215 374 229 361 q 187 390 202 386 q 158 395 172 395 l 158 0 l 47 0 l 47 886 l 113 886 q 248 868 196 886 q 330 817 300 850 q 369 739 359 784 q 380 640 380 693 q 375 570 380 604 q 358 509 370 537 q 326 459 346 481 q 274 422 305 437 q 333 380 307 411 q 366 292 359 350 l 402 0 m 267 643 q 263 705 267 678 q 247 749 258 732 q 213 776 235 767 q 158 785 192 785 l 158 492 l 165 492 q 218 502 198 492 q 249 531 237 511 q 263 578 260 550 q 267 643 267 606 m 741 169 q 727 89 741 123 q 689 33 713 55 q 632 -1 665 10 q 564 -12 600 -12 q 496 -6 527 -12 q 433 11 465 -1 l 433 117 q 465 102 450 109 q 493 93 479 96 q 520 87 507 89 q 551 85 534 85 q 610 106 587 85 q 634 170 634 127 q 619 225 634 201 q 582 271 604 250 q 533 313 559 292 q 484 360 507 334 q 446 422 461 387 q 431 506 431 457 q 443 581 431 547 q 477 639 454 614 q 535 677 500 663 q 620 690 571 690 q 667 687 644 690 q 722 673 690 684 l 722 571 q 665 590 688 585 q 619 595 642 595 q 580 588 595 595 q 555 569 564 581 q 542 543 546 557 q 538 515 538 529 q 553 459 538 484 q 590 412 568 434 q 640 367 613 389 q 689 317 666 345 q 726 253 711 289 q 741 169 741 218 z "},"\u20a9":{"ha":764,"x_min":0,"x_max":763,"o":"m 763 591 l 763 499 l 693 499 l 685 378 l 763 378 l 763 286 l 679 286 l 660 0 l 503 0 l 418 286 l 339 286 l 256 0 l 105 0 l 85 286 l 0 286 l 0 378 l 79 378 l 71 499 l 0 499 l 0 591 l 64 591 l 44 886 l 158 886 l 175 591 l 595 591 l 612 886 l 720 886 l 699 591 l 763 591 m 488 378 l 584 378 l 590 499 l 450 499 l 488 378 m 187 378 l 279 378 l 313 499 l 180 499 l 187 378 m 532 235 l 574 118 l 576 240 l 578 286 l 516 286 l 532 235 m 193 283 l 203 118 l 245 258 l 253 286 l 193 286 l 193 283 m 362 378 l 393 378 l 377 440 l 362 378 z "},"\u20aa":{"ha":764,"x_min":60,"x_max":704,"o":"m 60 762 l 314 762 q 473 701 420 762 q 527 513 527 639 l 527 183 l 416 183 l 416 528 q 407 594 416 568 q 382 635 399 620 q 343 657 366 651 q 290 664 319 664 l 171 664 l 171 0 l 60 0 l 60 762 m 704 0 l 450 0 q 290 62 344 0 q 237 249 237 123 l 237 579 l 348 579 l 348 235 q 356 169 348 195 q 381 127 365 142 q 420 105 397 111 q 473 98 444 98 l 593 98 l 593 762 l 704 762 l 704 0 z "},"\u20ad":{"ha":764,"x_min":0,"x_max":710,"o":"m 0 517 l 106 517 l 106 886 l 227 886 l 227 517 l 260 517 l 551 886 l 694 886 l 388 517 l 649 517 l 649 416 l 383 416 l 710 0 l 558 0 l 241 416 l 227 416 l 227 0 l 106 0 l 106 416 l 0 416 l 0 517 z "},"\u20ae":{"ha":764,"x_min":58,"x_max":705,"o":"m 638 358 l 443 275 l 443 0 l 321 0 l 321 223 l 127 141 l 127 234 l 321 316 l 321 459 l 127 377 l 127 470 l 321 552 l 321 783 l 58 783 l 58 886 l 705 886 l 705 783 l 443 783 l 443 604 l 638 687 l 638 594 l 443 511 l 443 368 l 638 451 l 638 358 z "},"\u20af":{"ha":764,"x_min":0,"x_max":751,"o":"m 621 -16 q 594 -13 607 -16 q 571 -1 581 -9 l 553 -160 l 486 -160 l 541 317 q 557 386 546 358 q 582 430 568 414 q 614 454 597 447 q 650 461 631 461 q 690 455 671 461 q 722 431 708 449 q 743 380 735 413 q 751 294 751 347 q 743 166 751 223 q 719 68 735 109 q 679 6 703 28 q 621 -16 654 -16 m 649 389 q 630 382 637 389 q 617 364 622 376 q 610 336 612 352 q 605 302 607 320 l 578 68 q 593 54 584 60 q 616 47 602 47 q 666 112 646 47 q 686 300 686 176 q 677 366 686 343 q 649 389 669 389 m 113 801 q 158 820 134 812 q 205 832 182 827 q 251 840 229 838 q 289 842 273 842 q 332 914 308 884 q 393 969 357 943 l 433 909 q 388 870 404 886 q 363 836 373 854 q 424 804 399 829 q 466 741 450 779 q 490 656 482 703 q 498 557 498 608 q 483 337 498 439 q 440 159 468 235 q 373 39 412 83 q 286 -5 334 -5 q 262 -3 273 -5 q 239 3 251 -2 q 216 16 228 7 q 189 37 203 24 q 93 -3 153 -3 q 63 1 79 -3 q 33 17 47 6 q 9 44 19 27 q 0 83 0 60 q 7 119 0 104 q 27 144 15 134 q 53 158 39 153 q 81 163 68 163 q 150 136 123 163 q 177 229 165 175 q 197 342 188 282 q 213 465 205 402 q 227 585 220 528 q 242 688 234 642 q 261 762 250 734 q 228 760 246 762 q 192 754 210 758 q 156 745 174 751 q 125 732 139 739 l 113 801 m 332 754 q 315 673 323 725 q 300 559 307 622 q 284 427 292 496 q 265 294 275 357 q 242 177 255 230 q 214 92 230 123 q 268 73 243 73 q 316 92 294 73 q 353 143 337 111 q 381 221 370 176 q 400 318 393 266 q 411 426 408 370 q 414 538 414 482 q 411 629 414 589 q 398 696 407 669 q 373 739 389 724 q 332 754 357 754 m 90 109 q 71 101 80 109 q 62 79 62 94 q 71 56 62 64 q 89 49 80 49 q 114 57 102 49 q 134 85 127 65 q 114 102 126 96 q 90 109 102 109 z "},"\u20b0":{"ha":764,"x_min":31,"x_max":700,"o":"m 589 838 q 584 778 589 810 q 570 704 580 745 q 543 610 559 663 q 501 488 526 557 q 575 373 539 431 q 638 257 610 315 q 683 142 666 199 q 700 28 700 84 q 681 -90 700 -37 q 621 -181 661 -143 q 517 -239 580 -218 q 367 -260 454 -260 l 364 -188 q 457 -173 416 -188 q 525 -132 497 -159 q 566 -67 552 -105 q 581 18 581 -29 q 546 188 581 102 q 456 361 512 273 l 313 -14 l 210 210 l 119 0 l 31 0 l 214 399 l 306 181 l 391 431 q 320 537 355 484 q 259 640 286 590 q 216 735 232 690 q 199 817 199 781 q 214 907 199 869 q 256 971 229 945 q 318 1009 282 996 q 397 1021 355 1021 q 484 1007 448 1021 q 544 969 520 994 q 578 911 567 945 q 589 838 589 878 m 488 821 q 480 874 488 852 q 461 909 473 896 q 434 929 450 923 q 401 935 418 935 q 371 930 386 935 q 343 914 355 926 q 323 882 331 902 q 316 833 316 863 q 325 766 316 799 q 349 701 334 734 q 386 634 365 669 q 431 563 407 600 q 459 652 448 614 q 477 720 471 690 q 485 774 483 750 q 488 821 488 798 z "},"\u20b1":{"ha":764,"x_min":0,"x_max":764,"o":"m 764 483 l 643 483 q 604 418 628 448 q 543 366 579 388 q 457 331 506 344 q 345 318 408 318 l 241 318 l 241 0 l 121 0 l 121 483 l 0 483 l 0 568 l 121 568 l 121 648 l 0 648 l 0 734 l 121 734 l 121 886 l 363 886 q 459 878 414 886 q 541 851 504 869 q 605 804 577 833 q 648 734 632 774 l 764 734 l 764 648 l 667 648 q 668 632 668 640 q 669 615 669 624 q 668 592 669 604 q 666 568 667 580 l 764 568 l 764 483 m 543 610 q 543 629 543 620 q 541 648 542 639 l 241 648 l 241 568 l 541 568 q 543 588 542 578 q 543 610 543 598 m 347 421 q 449 436 409 421 q 511 483 489 452 l 241 483 l 241 421 l 347 421 m 358 786 l 241 786 l 241 734 l 507 734 q 448 773 485 760 q 358 786 412 786 z "},"\u20b2":{"ha":764,"x_min":45,"x_max":686,"o":"m 395 -231 l 292 -231 l 319 2 q 204 54 254 18 q 118 144 153 90 q 63 270 82 198 q 45 433 45 342 q 72 619 45 536 q 149 761 99 701 q 268 854 198 820 q 422 897 337 889 l 441 1063 l 544 1063 l 524 896 q 682 854 610 888 l 682 734 q 600 770 642 756 q 512 788 559 783 l 478 494 l 686 494 l 686 41 q 627 18 659 28 q 564 1 596 8 q 500 -9 532 -5 q 439 -12 469 -12 q 429 -12 433 -12 q 420 -12 425 -12 l 395 -231 m 171 441 q 209 233 171 317 q 332 115 248 150 l 410 785 q 308 747 353 776 q 233 674 264 718 q 187 570 203 629 q 171 441 171 511 m 456 94 q 484 96 469 94 q 513 99 498 97 q 542 105 528 102 q 567 113 556 109 l 567 395 l 467 395 l 432 95 q 444 94 437 94 q 456 94 450 94 z "},"\u20b3":{"ha":764,"x_min":34,"x_max":730,"o":"m 730 557 l 730 465 l 589 465 l 623 345 l 730 345 l 730 252 l 650 252 l 723 0 l 591 0 l 522 252 l 235 252 l 166 0 l 41 0 l 115 252 l 34 252 l 34 345 l 142 345 l 177 465 l 34 465 l 34 557 l 204 557 l 301 886 l 467 886 l 562 557 l 730 557 m 260 345 l 497 345 l 464 465 l 294 465 l 260 345 m 379 775 l 319 557 l 439 557 l 379 775 z "},"\u20b4":{"ha":764,"x_min":34,"x_max":730,"o":"m 730 557 l 730 465 l 538 465 q 477 432 510 447 q 412 402 445 416 q 351 374 380 388 q 300 345 321 359 l 730 345 l 730 252 l 227 252 q 222 220 222 238 q 232 163 222 186 q 265 124 241 139 q 327 101 288 109 q 425 94 366 94 q 576 105 506 94 q 696 135 646 116 l 696 18 q 643 7 673 12 q 577 -3 612 1 q 506 -10 543 -7 q 433 -12 469 -12 q 286 1 349 -12 q 180 44 222 15 q 117 118 138 73 q 96 227 96 163 q 96 240 96 233 q 96 252 96 246 l 34 252 l 34 345 l 130 345 q 195 413 155 384 q 281 465 235 441 l 34 465 l 34 557 l 470 557 q 535 610 510 581 q 559 680 559 640 q 550 731 559 709 q 517 766 540 752 q 459 787 495 781 q 372 794 423 794 q 320 792 347 794 q 264 786 292 790 q 207 777 235 783 q 153 764 179 771 l 153 872 q 203 882 175 878 q 261 891 231 887 q 318 897 290 895 q 369 899 347 899 q 522 880 461 899 q 620 829 583 861 q 671 755 656 798 q 686 668 686 713 q 675 608 686 635 q 648 557 665 581 l 730 557 z "},"\u20b5":{"ha":764,"x_min":62,"x_max":675,"o":"m 408 -231 l 306 -231 l 332 3 q 131 143 200 35 q 62 433 62 250 q 89 620 62 536 q 163 764 115 704 q 281 858 212 824 q 435 897 350 892 l 455 1063 l 557 1063 l 538 892 q 608 878 574 888 q 675 854 642 869 l 675 736 q 603 768 640 755 q 526 786 566 781 l 446 98 q 455 97 451 97 q 465 97 460 97 q 574 110 523 97 q 675 147 626 123 l 675 33 q 452 -11 567 -11 q 443 -11 447 -11 q 433 -10 438 -11 l 408 -231 m 191 444 q 346 119 191 185 l 423 787 q 326 754 369 781 q 253 684 283 728 q 207 580 223 640 q 191 444 191 519 z "},"\u2105":{"ha":764,"x_min":3,"x_max":771,"o":"m 752 194 q 738 100 752 140 q 698 35 723 61 q 638 -3 673 9 q 566 -16 604 -16 q 486 -2 519 -16 q 430 39 452 12 q 398 103 408 65 q 387 189 387 141 q 401 282 387 243 q 441 348 416 322 q 500 386 466 373 q 572 398 534 398 q 652 384 618 398 q 708 344 686 370 q 741 279 730 317 q 752 194 752 241 m 667 190 q 662 252 667 225 q 646 295 657 278 q 616 321 635 313 q 569 330 597 330 q 523 321 542 330 q 493 294 505 311 q 476 251 481 276 q 471 193 471 225 q 476 131 471 157 q 492 87 481 104 q 523 61 504 69 q 569 52 541 52 q 645 89 623 52 q 667 190 667 125 m 771 887 l 78 0 l 3 0 l 695 887 l 771 887 m 341 554 q 218 533 284 533 q 131 547 168 533 q 67 587 93 561 q 28 651 41 614 q 16 736 16 689 q 28 823 16 784 q 67 889 41 862 q 130 932 92 917 q 216 947 168 947 q 282 942 250 947 q 341 928 315 937 l 341 851 q 224 879 277 879 q 134 845 169 879 q 100 739 100 811 q 110 675 100 701 q 137 633 119 649 q 177 609 154 616 q 227 602 200 602 q 283 609 254 602 q 341 628 313 616 l 341 554 z "},"\u214d":{"ha":764,"x_min":0,"x_max":771,"o":"m 372 557 l 293 557 l 261 650 l 108 650 l 76 557 l 0 557 l 137 942 l 237 942 l 372 557 m 240 712 l 185 882 l 129 712 l 240 712 m 771 887 l 78 0 l 3 0 l 695 887 l 771 887 m 728 101 q 715 51 728 73 q 681 16 703 30 q 628 -5 659 2 q 561 -12 597 -12 q 527 -11 545 -12 q 492 -8 509 -10 q 459 -4 475 -6 q 434 1 444 -1 l 434 73 q 487 60 456 65 q 553 56 517 56 q 622 66 601 56 q 643 105 643 76 q 628 134 643 123 q 590 154 612 145 q 540 173 567 163 q 491 197 513 182 q 453 234 468 212 q 437 290 437 256 q 449 333 437 313 q 480 367 460 353 q 527 389 500 381 q 586 397 554 397 q 654 394 626 397 q 702 386 682 391 l 702 321 q 654 331 679 328 q 594 334 629 334 q 539 323 559 334 q 519 292 519 313 q 535 261 519 273 q 573 240 550 249 q 624 221 597 231 q 674 197 650 212 q 712 160 697 182 q 728 101 728 137 z "},"\u2153":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 167 572 l 167 861 l 54 800 l 17 879 l 179 966 l 273 966 l 273 572 l 167 572 m 717 121 q 705 68 717 92 q 668 27 692 45 q 609 0 644 9 q 526 -10 573 -10 q 483 -8 505 -10 q 444 -1 461 -5 l 444 79 q 480 74 459 76 q 520 72 500 72 q 581 84 563 72 q 599 118 599 97 q 583 150 599 141 q 530 159 566 159 l 469 159 l 469 236 l 526 236 q 569 248 557 236 q 581 277 581 260 q 569 304 581 293 q 526 315 556 315 q 486 312 505 315 q 450 304 468 308 l 450 380 q 499 392 473 389 q 555 395 524 395 q 658 370 623 395 q 694 300 694 344 q 681 243 694 264 q 640 210 668 221 q 697 180 677 202 q 717 121 717 157 z "},"\u2154":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 717 121 q 705 68 717 92 q 668 27 692 45 q 609 0 644 9 q 526 -10 573 -10 q 483 -8 505 -10 q 444 -1 461 -5 l 444 79 q 480 74 459 76 q 520 72 500 72 q 581 84 563 72 q 599 118 599 97 q 583 150 599 141 q 530 159 566 159 l 469 159 l 469 236 l 526 236 q 569 248 557 236 q 581 277 581 260 q 569 304 581 293 q 526 315 556 315 q 486 312 505 315 q 450 304 468 308 l 450 380 q 499 392 473 389 q 555 395 524 395 q 658 370 623 395 q 694 300 694 344 q 681 243 694 264 q 640 210 668 221 q 697 180 677 202 q 717 121 717 157 m 351 572 l 52 572 l 52 657 l 178 757 q 221 798 210 781 q 233 835 233 815 q 230 854 233 845 q 222 870 228 863 q 205 881 216 877 q 178 885 195 885 q 138 876 157 885 q 94 844 119 866 l 48 913 q 79 936 63 926 q 112 954 94 947 q 149 965 129 961 q 193 968 169 968 q 249 960 222 968 q 295 935 275 951 q 327 895 315 919 q 338 839 338 871 q 332 801 338 819 q 312 765 326 783 q 276 728 298 747 q 222 686 254 709 l 180 657 l 351 657 l 351 572 z "},"\u2155":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 167 572 l 167 861 l 54 800 l 17 879 l 179 966 l 273 966 l 273 572 l 167 572 m 733 126 q 683 27 733 64 q 534 -10 633 -10 q 499 -9 514 -10 q 472 -8 484 -9 q 450 -5 460 -7 q 431 -3 440 -4 l 431 79 q 472 74 448 76 q 528 72 496 72 q 596 86 576 72 q 615 123 615 100 q 596 156 615 146 q 530 166 578 166 l 436 166 l 436 387 l 716 387 l 716 302 l 533 302 l 533 243 l 570 243 q 630 237 601 243 q 682 219 659 232 q 719 183 705 205 q 733 126 733 161 z "},"\u2156":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 733 126 q 683 27 733 64 q 534 -10 633 -10 q 499 -9 514 -10 q 472 -8 484 -9 q 450 -5 460 -7 q 431 -3 440 -4 l 431 79 q 472 74 448 76 q 528 72 496 72 q 596 86 576 72 q 615 123 615 100 q 596 156 615 146 q 530 166 578 166 l 436 166 l 436 387 l 716 387 l 716 302 l 533 302 l 533 243 l 570 243 q 630 237 601 243 q 682 219 659 232 q 719 183 705 205 q 733 126 733 161 m 351 572 l 52 572 l 52 657 l 178 757 q 221 798 210 781 q 233 835 233 815 q 230 854 233 845 q 222 870 228 863 q 205 881 216 877 q 178 885 195 885 q 138 876 157 885 q 94 844 119 866 l 48 913 q 79 936 63 926 q 112 954 94 947 q 149 965 129 961 q 193 968 169 968 q 249 960 222 968 q 295 935 275 951 q 327 895 315 919 q 338 839 338 871 q 332 801 338 819 q 312 765 326 783 q 276 728 298 747 q 222 686 254 709 l 180 657 l 351 657 l 351 572 z "},"\u2157":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 733 126 q 683 27 733 64 q 534 -10 633 -10 q 499 -9 514 -10 q 472 -8 484 -9 q 450 -5 460 -7 q 431 -3 440 -4 l 431 79 q 472 74 448 76 q 528 72 496 72 q 596 86 576 72 q 615 123 615 100 q 596 156 615 146 q 530 166 578 166 l 436 166 l 436 387 l 716 387 l 716 302 l 533 302 l 533 243 l 570 243 q 630 237 601 243 q 682 219 659 232 q 719 183 705 205 q 733 126 733 161 m 349 694 q 336 642 349 665 q 300 600 324 618 q 240 573 276 583 q 157 563 205 563 q 115 565 136 563 q 75 572 93 568 l 75 652 q 112 647 91 649 q 152 645 132 645 q 213 657 195 645 q 231 691 231 670 q 214 723 231 714 q 161 732 198 732 l 100 732 l 100 809 l 157 809 q 201 821 189 809 q 213 850 213 833 q 200 877 213 866 q 157 888 188 888 q 118 885 136 888 q 82 877 100 881 l 82 954 q 131 965 105 962 q 186 968 156 968 q 290 943 254 968 q 326 873 326 917 q 313 816 326 838 q 271 783 300 794 q 329 753 309 775 q 349 694 349 730 z "},"\u2158":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 m 733 126 q 683 27 733 64 q 534 -10 633 -10 q 499 -9 514 -10 q 472 -8 484 -9 q 450 -5 460 -7 q 431 -3 440 -4 l 431 79 q 472 74 448 76 q 528 72 496 72 q 596 86 576 72 q 615 123 615 100 q 596 156 615 146 q 530 166 578 166 l 436 166 l 436 387 l 716 387 l 716 302 l 533 302 l 533 243 l 570 243 q 630 237 601 243 q 682 219 659 232 q 719 183 705 205 q 733 126 733 161 m 396 646 l 335 646 l 335 572 l 231 572 l 231 646 l 28 646 l 28 729 l 177 958 l 335 958 l 335 729 l 396 729 l 396 646 m 231 882 l 132 729 l 231 729 l 231 882 z "},"\u2159":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 959 l 125 1 l 14 1 l 637 959 l 750 959 m 167 573 l 167 862 l 54 801 l 17 880 l 179 967 l 273 967 l 273 573 l 167 573 m 713 123 q 703 72 713 96 q 673 29 693 47 q 623 0 653 11 q 553 -10 593 -10 q 429 32 471 -10 q 387 165 387 74 q 399 251 387 210 q 440 323 411 292 q 519 373 469 355 q 645 392 569 392 l 696 392 l 696 307 l 652 307 q 542 288 576 307 q 502 231 507 269 l 500 218 q 543 236 519 229 q 595 243 567 243 q 649 234 627 243 q 686 208 671 224 q 706 170 700 192 q 713 123 713 148 m 595 121 q 584 156 595 143 q 551 170 573 170 q 524 165 538 170 q 500 153 510 160 q 513 87 500 105 q 549 70 526 70 q 582 83 569 70 q 595 121 595 97 z "},"\u215a":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 959 l 125 1 l 14 1 l 637 959 l 750 959 m 713 123 q 703 72 713 96 q 673 29 693 47 q 623 0 653 11 q 553 -10 593 -10 q 429 32 471 -10 q 387 165 387 74 q 399 251 387 210 q 440 323 411 292 q 519 373 469 355 q 645 392 569 392 l 696 392 l 696 307 l 652 307 q 542 288 576 307 q 502 231 507 269 l 500 218 q 543 236 519 229 q 595 243 567 243 q 649 234 627 243 q 686 208 671 224 q 706 170 700 192 q 713 123 713 148 m 595 121 q 584 156 595 143 q 551 170 573 170 q 524 165 538 170 q 500 153 510 160 q 513 87 500 105 q 549 70 526 70 q 582 83 569 70 q 595 121 595 97 m 371 699 q 321 599 371 636 q 172 562 271 562 q 137 563 152 562 q 110 565 122 564 q 88 567 98 566 q 68 570 78 568 l 68 652 q 110 646 86 648 q 165 644 134 644 q 234 658 214 644 q 253 695 253 672 q 234 728 253 718 q 168 739 216 739 l 74 739 l 74 959 l 354 959 l 354 874 l 171 874 l 171 815 l 208 815 q 268 810 239 815 q 320 791 297 804 q 357 755 343 778 q 371 699 371 733 z "},"\u03e2":{"ha":764,"x_min":61,"x_max":703,"o":"m 221 -249 l 221 -142 q 277 -131 252 -134 q 329 -128 303 -128 q 356 -129 339 -128 q 393 -130 374 -130 q 434 -132 413 -131 q 471 -132 454 -132 q 521 -130 498 -132 q 560 -119 544 -127 q 586 -96 576 -111 q 595 -58 595 -81 l 595 13 q 563 -5 580 3 q 519 -12 546 -12 q 477 -8 496 -12 q 441 6 458 -4 q 409 34 424 16 q 380 77 394 51 q 351 34 366 51 q 319 6 336 16 q 280 -8 302 -4 q 230 -12 258 -12 q 168 0 198 -12 q 113 37 137 12 q 75 99 90 62 q 61 185 61 136 l 61 886 l 170 886 l 170 192 q 177 140 170 160 q 196 107 184 119 q 220 91 207 96 q 244 86 233 86 q 272 91 257 86 q 300 107 287 96 q 321 140 313 119 q 329 191 329 160 l 329 886 l 436 886 l 436 192 q 444 140 436 160 q 463 107 452 119 q 489 91 475 96 q 517 86 503 86 q 541 91 528 86 q 567 106 555 95 q 587 137 578 117 q 595 186 595 156 l 595 886 l 703 886 l 703 -45 q 688 -133 703 -98 q 646 -189 673 -168 q 581 -219 618 -210 q 497 -228 543 -228 q 473 -228 486 -228 q 445 -227 459 -227 q 418 -225 431 -226 q 395 -225 405 -225 q 345 -226 368 -225 q 302 -230 323 -227 q 262 -237 282 -233 q 221 -249 243 -242 z "},"\u03e4":{"ha":764,"x_min":73,"x_max":656,"o":"m 333 786 l 319 786 q 229 739 260 786 q 199 592 199 691 q 251 446 199 491 q 415 401 304 401 q 475 404 444 401 q 536 412 507 407 l 536 886 l 656 886 l 656 0 l 536 0 l 536 309 q 505 304 522 306 q 471 300 488 302 q 437 298 454 299 q 407 298 420 298 q 251 320 315 298 q 148 383 187 343 q 91 478 109 423 q 73 597 73 532 q 137 815 73 745 q 319 886 201 886 l 333 886 l 333 786 z "},"\u03e6":{"ha":764,"x_min":91,"x_max":673,"o":"m 209 554 q 264 562 235 558 q 322 568 293 565 q 379 572 351 570 q 431 573 407 573 q 524 564 479 573 q 601 528 568 554 q 653 454 633 501 q 673 334 673 408 l 673 -45 q 655 -133 673 -98 q 608 -189 638 -168 q 538 -219 578 -210 q 453 -228 498 -228 q 429 -228 442 -228 q 401 -227 415 -227 q 374 -225 387 -226 q 351 -225 361 -225 q 301 -226 323 -225 q 258 -230 279 -227 q 218 -237 238 -233 q 177 -249 199 -242 l 177 -142 q 233 -131 208 -134 q 285 -128 259 -128 q 312 -129 295 -128 q 349 -130 330 -130 q 390 -132 369 -131 q 427 -132 410 -132 q 477 -130 454 -132 q 517 -119 500 -127 q 543 -96 534 -111 q 552 -58 552 -81 l 552 338 q 544 400 552 375 q 517 440 536 425 q 470 461 499 455 q 400 467 441 467 q 302 463 353 467 q 209 450 252 458 l 209 1 l 91 1 l 91 958 l 209 958 l 209 554 z "},"\u03e8":{"ha":764,"x_min":90,"x_max":675,"o":"m 90 246 q 107 347 90 304 q 154 421 125 390 q 220 476 183 453 q 297 518 258 499 q 373 554 336 537 q 439 590 410 571 q 486 634 468 610 q 504 692 504 658 q 500 730 504 711 q 483 763 496 749 q 448 786 471 777 q 387 794 425 794 q 336 789 359 794 q 297 772 313 784 q 272 741 281 760 q 262 694 262 722 q 267 655 262 676 l 151 655 q 147 702 147 680 q 171 796 147 758 q 232 857 195 834 q 313 889 269 880 q 397 899 357 899 q 507 879 463 899 q 577 830 551 860 q 614 764 604 800 q 625 696 625 728 q 608 611 625 646 q 561 548 590 575 q 495 500 532 521 q 419 461 458 480 q 344 423 381 443 q 278 378 307 404 q 231 320 249 353 q 214 240 214 286 q 229 170 214 198 q 273 126 245 142 q 338 102 300 109 q 420 95 376 95 q 489 100 453 95 q 558 112 524 104 q 622 129 592 119 q 675 149 652 138 l 675 32 q 555 -1 620 12 q 414 -13 490 -13 q 289 -1 348 -13 q 186 41 230 12 q 116 121 142 71 q 90 246 90 171 z "},"\u03ea":{"ha":764,"x_min":20,"x_max":743,"o":"m 399 743 q 438 818 418 789 q 480 863 458 847 q 528 885 503 879 q 582 890 553 890 q 624 888 602 890 q 671 881 646 885 l 671 781 q 647 789 663 784 q 606 793 631 793 q 573 791 588 793 q 543 778 558 789 q 510 742 528 767 q 469 672 492 718 l 436 606 l 743 9 l 743 0 l 20 0 l 20 9 l 323 603 l 290 669 q 250 739 267 714 q 219 777 233 764 q 190 791 204 789 q 158 793 176 793 q 117 789 132 793 q 92 781 101 784 l 92 881 q 140 888 117 885 q 182 890 162 890 q 235 884 211 890 q 281 862 260 878 q 323 817 303 846 q 362 743 342 788 l 381 698 l 399 743 m 578 101 l 382 489 l 185 101 l 578 101 z "},"\u03ec":{"ha":764,"x_min":45,"x_max":718,"o":"m 597 326 q 580 452 597 400 q 535 535 564 503 q 468 582 507 568 q 386 596 430 596 q 278 579 334 596 q 168 533 222 562 q 166 501 167 519 q 166 464 166 483 q 166 428 166 446 q 166 397 166 410 q 184 245 166 305 q 231 151 201 186 q 297 102 260 116 q 374 89 335 89 q 463 109 422 89 q 533 162 503 129 q 580 237 563 195 q 597 326 597 280 m 704 975 l 704 868 q 671 863 688 865 q 637 860 654 861 q 604 859 620 859 q 575 859 588 859 q 544 859 565 859 q 498 860 522 859 q 451 861 473 861 q 415 861 428 861 q 305 843 348 861 q 235 793 262 825 q 193 720 208 762 q 167 630 178 677 q 286 676 225 661 q 404 692 346 692 q 525 671 468 692 q 625 607 582 650 q 692 494 667 563 q 718 330 718 426 q 689 193 718 256 q 613 84 661 130 q 502 13 565 39 q 368 -12 438 -12 q 234 13 294 -12 q 133 91 174 39 q 68 224 91 144 q 45 415 45 304 q 48 505 45 456 q 56 596 50 553 q 86 733 65 668 q 146 848 108 799 q 242 927 184 898 q 380 957 299 957 q 417 957 394 957 q 464 956 439 956 q 512 956 488 956 q 551 956 535 956 q 578 956 561 956 q 615 958 595 956 q 659 964 636 960 q 704 975 682 968 z "},"\u03ee":{"ha":764,"x_min":60,"x_max":690,"o":"m 321 781 l 321 886 l 442 886 l 442 781 l 690 781 l 690 681 l 442 681 l 442 0 l 321 0 l 321 681 l 222 681 q 160 674 185 681 q 116 656 134 667 q 85 630 98 644 q 60 599 72 615 l 60 683 q 94 756 60 732 q 188 781 127 781 l 321 781 z "},"\u03e3":{"ha":764,"x_min":61,"x_max":703,"o":"m 170 681 l 170 192 q 172 140 170 160 q 179 107 174 119 q 192 91 184 96 q 212 86 200 86 q 236 91 224 86 q 261 111 248 96 q 291 152 275 125 q 328 223 307 179 l 328 681 l 436 681 l 436 205 q 438 144 436 168 q 446 109 441 121 q 459 91 451 96 q 479 86 467 86 q 502 90 491 86 q 526 107 513 94 q 555 148 539 121 q 594 223 572 176 l 594 681 l 703 681 l 703 -45 q 687 -133 703 -98 q 645 -189 672 -168 q 580 -219 618 -210 q 496 -228 542 -228 q 472 -228 486 -228 q 445 -227 458 -227 q 417 -225 431 -226 q 394 -225 404 -225 q 345 -226 367 -225 q 302 -230 322 -227 q 262 -237 281 -233 q 220 -249 242 -242 l 220 -142 q 277 -131 251 -134 q 328 -128 302 -128 q 356 -129 338 -128 q 393 -130 373 -130 q 433 -132 412 -131 q 471 -132 454 -132 q 522 -130 498 -132 q 563 -119 546 -127 q 591 -96 581 -111 q 601 -58 601 -81 l 601 97 q 537 14 570 41 q 456 -12 503 -12 q 376 19 401 -12 q 345 115 350 51 q 315 65 330 88 q 281 25 300 42 q 240 -2 262 7 q 189 -12 218 -12 q 61 185 61 -12 l 61 681 l 170 681 z "},"\u03e5":{"ha":764,"x_min":73,"x_max":655,"o":"m 537 681 l 655 681 l 655 -278 l 537 -278 l 537 103 q 466 84 507 94 q 377 75 425 75 q 261 90 317 75 q 164 138 206 104 q 98 230 123 172 q 73 374 73 287 q 84 497 73 441 q 122 595 94 554 q 199 658 151 635 q 324 681 248 681 l 324 581 q 255 565 281 581 q 216 521 229 549 q 198 455 202 493 q 194 371 194 416 q 207 279 194 316 q 243 220 220 242 q 302 188 267 197 q 380 178 336 178 q 461 187 419 178 q 537 209 503 195 l 537 681 z "},"\u03e7":{"ha":764,"x_min":53,"x_max":690,"o":"m 490 555 q 426 592 460 582 q 351 603 392 603 q 278 582 304 603 q 252 530 252 561 q 274 484 252 501 q 333 466 296 466 q 415 490 377 466 q 490 555 452 513 m 210 114 q 166 83 179 114 q 152 0 153 52 l 53 0 q 54 30 53 10 q 61 72 56 49 q 76 119 66 95 q 103 162 85 143 q 145 194 120 182 q 207 207 171 207 q 252 200 232 207 q 288 184 272 194 q 318 161 304 174 q 344 136 332 149 q 365 115 354 125 q 386 97 375 105 q 410 85 397 90 q 439 81 423 81 q 494 102 470 81 q 536 159 519 124 q 562 239 553 195 q 571 330 571 283 q 566 413 571 376 q 544 480 561 450 q 446 401 498 427 q 331 374 393 374 q 258 385 292 374 q 200 414 224 395 q 162 463 176 434 q 149 528 149 491 q 161 590 149 560 q 198 643 173 621 q 261 680 223 666 q 349 693 298 693 q 453 677 406 693 q 543 627 500 661 q 559 653 551 639 q 574 684 568 667 l 679 684 q 673 663 678 676 q 660 632 668 649 q 641 598 652 616 q 617 565 629 581 q 672 457 654 518 q 690 319 690 397 q 675 193 690 253 q 629 87 660 133 q 552 13 599 41 q 442 -14 505 -14 q 385 -7 410 -14 q 340 12 360 1 q 306 38 321 24 q 277 65 290 52 q 243 99 259 85 q 210 114 227 114 z "},"\u03e9":{"ha":764,"x_min":129,"x_max":635,"o":"m 129 186 q 143 264 129 231 q 180 320 157 296 q 233 359 203 343 q 293 389 262 376 q 354 413 324 401 q 406 437 383 424 q 444 467 429 450 q 458 507 458 484 q 454 542 458 526 q 438 569 450 557 q 407 588 427 581 q 354 595 387 595 q 314 591 332 595 q 282 578 296 587 q 260 554 269 569 q 252 517 252 540 q 255 492 252 505 l 150 492 q 148 517 148 504 q 159 578 148 547 q 195 635 170 610 q 258 677 219 661 q 353 693 297 693 q 438 684 403 693 q 498 661 474 675 q 536 628 522 646 q 558 589 551 609 q 568 551 566 570 q 570 516 570 532 q 556 448 570 476 q 519 398 542 419 q 467 363 496 378 q 408 335 438 348 q 349 309 378 321 q 297 279 319 296 q 260 241 274 263 q 246 188 246 219 q 252 148 246 166 q 273 116 258 130 q 316 95 289 103 q 385 87 342 87 q 510 101 444 87 q 635 136 575 115 l 635 27 q 513 -1 580 9 q 368 -12 447 -12 q 267 1 311 -12 q 191 41 222 15 q 145 103 161 66 q 129 186 129 140 z "},"\u03eb":{"ha":764,"x_min":20,"x_max":682,"o":"m 368 569 q 401 625 383 602 q 439 661 418 647 q 484 681 460 675 q 536 686 507 686 q 616 680 571 686 l 616 591 q 594 598 608 595 q 556 602 580 602 q 526 599 540 602 q 498 587 512 596 q 470 561 484 578 q 438 517 455 545 l 408 469 l 682 7 l 682 -1 l 20 -1 l 20 7 l 291 467 l 260 515 q 228 561 242 544 q 201 587 214 578 q 175 599 188 596 q 146 602 162 602 q 108 598 123 602 q 86 591 94 595 l 86 680 q 127 685 108 683 q 165 686 147 686 q 214 681 191 686 q 256 661 236 675 q 295 625 277 648 q 332 568 314 602 l 351 534 l 368 569 m 521 89 l 351 383 l 182 89 l 521 89 z "},"\u03ed":{"ha":764,"x_min":85,"x_max":703,"o":"m 582 326 q 569 429 582 385 q 533 502 555 473 q 483 545 511 531 q 423 559 454 559 q 365 551 392 559 q 312 524 338 542 q 260 477 286 505 q 205 410 234 449 l 205 397 q 219 245 205 305 q 258 151 233 186 q 317 102 283 116 q 390 89 351 89 q 473 109 437 89 q 533 162 509 129 q 570 237 557 195 q 582 326 582 280 m 197 527 q 303 627 245 594 q 435 659 361 659 q 542 637 493 659 q 627 574 591 616 q 683 471 663 532 q 703 330 703 410 q 679 193 703 256 q 613 84 656 130 q 512 13 571 39 q 383 -12 454 -12 q 253 13 309 -12 q 160 91 197 39 q 104 224 123 144 q 85 415 85 304 q 87 505 85 456 q 95 596 90 553 q 125 733 104 668 q 184 848 146 799 q 278 927 222 898 q 416 957 335 957 q 474 956 445 957 q 536 956 504 956 q 563 956 546 956 q 601 958 580 956 q 644 964 621 960 q 689 975 667 968 l 689 868 q 656 863 673 865 q 622 860 640 861 q 589 859 605 859 q 560 859 573 859 q 533 859 550 859 q 496 860 516 859 q 455 861 476 861 q 415 861 434 861 q 315 838 354 861 q 253 778 276 815 q 219 692 230 740 q 203 596 208 645 q 200 561 201 580 q 197 527 199 543 z "},"\u03ef":{"ha":764,"x_min":75,"x_max":689,"o":"m 452 681 l 689 681 l 689 582 l 452 582 l 452 -48 q 443 -152 452 -109 q 410 -225 433 -196 q 350 -268 387 -254 q 259 -281 313 -281 q 241 -281 251 -281 q 221 -280 231 -281 q 201 -279 211 -280 q 184 -278 191 -279 l 184 -178 q 214 -181 196 -180 q 241 -182 231 -182 q 289 -173 271 -182 q 317 -147 307 -165 q 331 -102 328 -129 q 334 -39 334 -75 l 334 582 l 75 582 l 75 681 l 334 681 l 334 852 l 452 852 l 452 681 z "},"\u0483":{"ha":764,"x_min":0,"x_max":631,"o":"m 214 886 l 496 886 q 499 912 496 900 q 510 933 503 924 q 531 948 518 943 q 562 954 543 954 q 615 933 600 954 q 631 881 631 913 q 625 847 631 861 q 607 825 618 833 q 581 812 595 816 q 549 808 566 808 l 268 808 q 264 783 268 795 q 253 761 261 770 q 233 747 245 752 q 202 741 220 741 q 148 761 164 741 q 132 814 132 781 q 139 847 132 833 q 157 870 146 861 q 183 882 168 878 q 214 886 198 886 m 0 681 z "},"\u0484":{"ha":764,"x_min":0,"x_max":643,"o":"m 123 827 q 205 834 168 827 q 274 851 243 841 q 332 873 305 861 q 383 895 359 885 q 432 912 408 905 q 481 919 456 919 q 603 878 563 919 q 643 750 643 837 l 553 749 q 533 819 553 798 q 478 840 514 840 q 440 833 460 840 q 397 816 420 826 q 347 795 374 806 q 287 773 319 783 q 214 757 254 764 q 125 750 174 750 l 123 827 m 0 681 z "},"\u0485":{"ha":764,"x_min":307,"x_max":457,"o":"m 454 673 q 384 686 412 674 q 339 718 356 698 q 314 763 321 737 q 307 817 307 788 q 330 878 307 859 q 389 897 354 897 q 441 881 425 897 q 457 845 457 865 q 447 812 457 823 q 424 794 437 802 q 401 778 412 787 q 391 751 391 770 q 404 728 391 737 q 454 715 416 718 l 454 673 z "},"\u0486":{"ha":764,"x_min":307,"x_max":457,"o":"m 310 715 q 360 728 347 718 q 372 751 372 737 q 362 778 372 770 q 339 794 352 787 q 317 812 327 802 q 307 845 307 823 q 322 881 307 865 q 375 897 338 897 q 433 878 410 897 q 457 817 457 859 q 450 763 457 788 q 425 718 442 737 q 379 686 408 698 q 310 673 351 674 l 310 715 z "},"\u0482":{"ha":764,"x_min":37,"x_max":722,"o":"m 215 701 l 261 789 l 439 696 l 544 897 l 647 844 l 543 642 l 722 550 l 677 462 l 498 554 l 364 294 l 543 201 l 498 114 l 319 206 l 207 -7 l 103 47 l 215 260 l 37 353 l 82 440 l 260 348 l 394 608 l 215 701 z "},"\u20dd":{"ha":764,"x_min":6,"x_max":758,"o":"m 6 372 q 36 518 6 450 q 116 637 65 587 q 235 718 167 688 q 382 747 304 747 q 528 718 460 747 q 648 637 597 688 q 728 518 699 587 q 758 372 758 450 q 728 225 758 294 q 648 106 699 157 q 528 25 597 55 q 382 -4 460 -4 q 235 25 304 -4 q 116 106 167 55 q 36 225 65 157 q 6 372 6 294 m 63 372 q 88 248 63 306 q 157 146 113 190 q 258 78 200 103 q 382 53 316 53 q 506 78 448 53 q 607 146 564 103 q 675 248 650 190 q 701 372 701 306 q 675 495 701 437 q 607 597 650 553 q 506 665 564 640 q 382 690 448 690 q 258 665 316 690 q 157 597 200 640 q 88 495 113 553 q 63 372 63 437 z "},"\u0488":{"ha":764,"x_min":0,"x_max":764,"o":"m 432 -50 q 417 5 430 -12 q 376 21 404 21 q 351 16 361 21 q 335 2 340 11 q 326 -21 329 -7 q 322 -50 323 -34 l 263 -50 q 290 44 263 11 q 376 77 316 77 q 491 -52 491 77 l 432 -50 m 432 628 q 417 683 430 667 q 376 699 404 699 q 351 694 361 699 q 335 681 340 690 q 326 658 329 671 q 322 628 323 645 l 263 629 q 290 722 263 690 q 376 755 316 755 q 491 627 491 755 l 432 628 m 169 290 q 154 345 167 328 q 114 361 140 361 q 87 356 98 361 q 71 342 77 351 q 62 320 65 333 q 58 290 60 307 l 0 290 q 26 384 0 351 q 114 416 53 416 q 228 289 228 416 l 169 290 m 705 290 q 690 345 703 328 q 649 361 677 361 q 623 356 633 361 q 607 342 613 351 q 599 320 602 333 q 595 290 596 307 l 536 290 q 563 384 536 351 q 649 416 589 416 q 764 289 764 416 l 705 290 m 229 472 q 213 527 227 511 q 173 543 200 543 q 148 538 157 543 q 132 524 138 533 q 123 502 125 515 q 119 472 120 488 l 60 473 q 86 566 60 532 q 173 599 113 599 q 287 471 287 599 l 229 472 m 639 472 q 624 527 637 511 q 584 543 610 543 q 558 538 568 543 q 542 524 548 533 q 533 502 536 515 q 529 472 530 488 l 470 473 q 497 566 470 533 q 584 599 524 599 q 699 471 699 599 l 639 472 m 229 102 q 213 156 227 140 q 173 173 200 173 q 148 168 157 173 q 132 154 138 163 q 123 131 125 144 q 119 102 120 118 l 60 102 q 86 195 60 162 q 173 228 113 228 q 287 100 287 228 l 229 102 m 639 102 q 624 156 637 140 q 584 173 610 173 q 558 168 568 173 q 542 154 548 163 q 533 131 536 144 q 529 102 530 118 l 470 102 q 497 195 470 162 q 584 228 524 228 q 699 100 699 228 l 639 102 z "},"\u0489":{"ha":764,"x_min":0,"x_max":764,"o":"m 324 623 l 400 753 l 451 752 l 403 631 l 403 552 l 323 552 l 324 623 m 439 79 l 364 -52 l 313 -51 l 361 71 l 361 149 l 440 149 l 439 79 m 267 134 l 122 96 l 86 132 l 206 184 l 262 240 l 317 184 l 267 134 m 496 566 l 642 605 l 677 568 l 557 516 l 502 460 l 446 517 l 496 566 m 186 485 l 147 631 l 184 666 l 236 547 l 292 490 l 235 435 l 186 485 m 577 216 l 616 70 l 579 35 l 527 154 l 472 210 l 528 266 l 577 216 m 130 292 l 0 368 l 1 419 l 122 372 l 201 372 l 201 292 l 130 292 m 633 408 l 764 332 l 763 281 l 642 330 l 563 330 l 563 408 l 633 408 z "},"\u0460":{"ha":764,"x_min":47,"x_max":716,"o":"m 444 896 q 455 897 450 897 q 466 897 460 897 q 584 867 536 897 q 661 780 632 838 q 703 635 690 722 q 716 433 716 548 q 707 240 716 323 q 674 101 697 157 q 612 17 651 45 q 514 -11 573 -11 q 474 -6 494 -11 q 436 8 454 -2 q 405 35 418 18 q 382 75 391 51 q 329 8 361 28 q 250 -11 296 -11 q 152 17 191 -11 q 90 101 113 45 q 57 240 66 157 q 47 433 47 323 q 60 635 47 548 q 102 780 73 722 q 179 867 132 838 q 298 897 227 897 q 309 897 303 897 q 319 896 314 897 l 319 786 q 305 787 313 787 q 291 787 296 787 q 230 767 253 787 q 193 704 206 746 q 176 597 180 662 q 172 444 172 532 q 174 293 172 358 q 184 184 176 228 q 208 119 192 141 q 252 97 224 97 q 309 122 291 97 q 327 206 327 147 l 327 401 l 437 401 l 437 206 q 454 122 437 147 q 512 97 472 97 q 556 119 540 97 q 580 184 572 141 q 590 293 588 228 q 592 444 592 358 q 588 597 592 532 q 570 704 583 662 q 534 767 557 746 q 473 787 511 787 q 459 787 467 787 q 444 786 450 787 l 444 896 z "},"\u0464":{"ha":764,"x_min":57,"x_max":710,"o":"m 295 509 q 323 694 300 620 q 384 813 347 768 q 472 878 422 859 q 581 897 523 897 q 662 891 631 897 q 710 880 694 885 l 710 772 q 647 785 675 781 q 593 789 620 789 q 517 774 549 789 q 464 727 486 760 q 430 640 442 694 q 415 509 418 587 l 669 509 l 669 410 l 414 410 q 427 263 416 323 q 459 166 437 203 q 514 113 481 129 q 593 96 547 96 q 647 101 620 96 q 710 114 675 105 l 710 5 q 662 -5 694 1 q 581 -12 629 -12 q 471 8 523 -12 q 379 76 418 28 q 318 205 340 124 q 295 410 295 286 l 170 410 l 170 0 l 57 0 l 57 886 l 170 886 l 170 509 l 295 509 z "},"\u0466":{"ha":764,"x_min":7,"x_max":757,"o":"m 7 0 l 301 886 l 467 886 l 757 0 l 625 0 l 495 410 l 437 410 l 437 0 l 321 0 l 321 410 l 263 410 l 132 0 l 7 0 m 379 775 l 295 511 l 463 511 l 379 775 z "},"\u0468":{"ha":764,"x_min":54,"x_max":743,"o":"m 210 0 l 300 415 l 168 415 l 168 0 l 54 0 l 54 886 l 168 886 l 168 511 l 321 511 l 403 886 l 555 886 l 743 0 l 629 0 l 547 415 l 522 415 l 522 0 l 425 0 l 425 415 l 400 415 l 319 0 l 210 0 m 474 789 l 419 511 l 528 511 l 474 789 z "},"\u046a":{"ha":764,"x_min":-7,"x_max":774,"o":"m 722 886 l 722 881 l 509 505 l 774 0 l 646 0 l 437 412 l 437 0 l 326 0 l 326 412 l 118 0 l -7 0 l 262 505 l 40 881 l 40 886 l 722 886 m 213 795 l 383 494 l 566 795 l 213 795 z "},"\u046c":{"ha":764,"x_min":51,"x_max":747,"o":"m 722 886 l 722 881 l 570 473 l 747 0 l 632 0 l 526 364 l 526 0 l 428 0 l 428 365 l 321 0 l 210 0 l 359 412 l 161 412 l 161 0 l 51 0 l 51 886 l 161 886 l 161 506 l 372 506 l 243 881 l 243 886 l 722 886 m 376 795 l 478 481 l 593 795 l 376 795 z "},"\u046e":{"ha":764,"x_min":41,"x_max":682,"o":"m 41 -77 q 55 -10 41 -38 q 93 37 68 18 q 152 67 118 56 q 224 81 185 77 q 307 90 266 86 q 385 99 348 93 q 452 116 421 106 q 505 145 483 127 q 540 192 528 164 q 553 262 553 220 q 538 323 553 296 q 496 369 524 350 q 429 397 469 387 q 341 407 390 407 l 155 407 l 155 507 l 338 507 q 414 516 380 507 q 472 543 448 525 q 510 589 496 562 q 524 655 524 617 q 515 708 524 682 q 486 753 507 734 q 430 785 465 773 q 342 797 395 797 q 228 788 286 797 q 111 760 170 779 l 111 865 q 193 884 150 877 q 290 895 237 892 l 145 1040 l 264 1040 l 360 952 l 427 1015 q 462 1039 444 1030 q 508 1047 479 1047 q 530 1046 519 1047 q 551 1041 541 1044 l 551 966 q 526 970 539 970 q 502 965 513 970 q 478 947 491 960 l 425 893 q 594 822 538 880 q 650 671 650 764 q 615 547 650 599 q 504 469 581 494 q 572 446 540 463 q 629 405 604 430 q 667 344 653 379 q 682 265 682 309 q 664 161 682 204 q 617 87 647 117 q 545 39 587 58 q 455 10 503 21 q 354 -7 407 -1 q 248 -19 301 -14 q 202 -26 220 -22 q 173 -36 184 -30 q 158 -53 162 -43 q 153 -77 153 -62 q 176 -122 153 -105 q 242 -140 198 -140 q 309 -137 272 -140 q 384 -131 346 -134 q 458 -124 422 -127 q 522 -121 494 -121 q 568 -123 548 -121 q 605 -127 588 -124 q 639 -134 623 -130 q 674 -144 655 -138 l 674 -254 q 630 -239 650 -245 q 590 -229 610 -233 q 550 -223 570 -225 q 507 -221 530 -221 q 430 -223 465 -221 q 362 -227 395 -225 q 294 -231 328 -229 q 218 -233 259 -233 q 87 -192 134 -233 q 41 -77 41 -150 z "},"\u0470":{"ha":764,"x_min":43,"x_max":721,"o":"m 440 0 l 323 0 l 323 262 q 197 291 250 269 q 110 350 144 313 q 59 438 76 387 q 43 553 43 490 l 43 886 l 161 886 l 161 562 q 201 424 161 472 q 323 364 241 376 l 323 886 l 440 886 l 440 364 q 561 427 519 378 q 603 564 603 477 l 603 886 l 721 886 l 721 571 q 702 452 721 505 q 647 360 683 399 q 558 296 610 321 q 440 264 506 272 l 440 0 z "},"\u0476":{"ha":764,"x_min":0,"x_max":760,"o":"m 708 892 q 733 891 720 892 q 760 888 747 890 l 760 781 q 745 782 752 782 q 733 782 739 782 q 705 778 718 782 q 683 763 693 774 q 665 735 673 753 q 650 692 657 718 l 458 0 l 289 0 l 3 886 l 139 886 l 325 289 l 376 114 l 419 289 l 534 741 q 556 800 543 772 q 591 848 570 827 q 641 880 612 868 q 708 892 669 892 m 474 1125 l 604 981 l 481 981 l 330 1125 l 474 1125 m 181 1125 l 324 981 l 201 981 l 24 1125 l 181 1125 m 0 886 z "},"\u0478":{"ha":764,"x_min":50,"x_max":737,"o":"m 214 75 q 249 96 236 75 q 267 162 261 117 q 275 276 273 206 q 277 442 277 345 q 276 616 277 546 q 269 729 275 686 q 250 791 262 772 q 214 810 237 810 q 179 791 191 810 q 160 729 166 772 q 154 616 155 686 q 153 442 153 546 q 154 276 153 345 q 162 162 156 206 q 180 96 168 117 q 214 75 193 75 m 210 -12 q 122 8 154 -12 q 74 80 90 28 q 54 221 58 132 q 50 448 50 311 q 54 663 50 577 q 75 801 58 749 q 126 875 92 853 q 219 897 160 897 q 311 875 279 897 q 358 801 343 853 q 376 663 374 749 q 379 448 379 577 q 377 287 379 356 q 369 166 375 217 q 351 80 363 115 q 321 25 340 46 q 275 -4 302 5 q 210 -12 248 -12 m 737 681 l 650 72 q 624 -83 636 -17 q 591 -192 612 -149 q 534 -258 570 -236 q 437 -281 498 -280 q 415 -280 425 -281 q 391 -278 405 -279 l 391 -182 q 431 -186 412 -186 q 477 -173 460 -186 q 504 -136 494 -160 q 522 -78 515 -112 q 539 0 529 -43 l 425 681 l 530 681 l 577 232 l 585 140 l 593 232 l 639 681 l 737 681 z "},"\u047a":{"ha":764,"x_min":39,"x_max":726,"o":"m 384 956 q 449 936 420 956 q 492 885 478 916 q 595 830 551 867 q 668 737 639 793 q 712 609 697 682 q 726 449 726 536 q 709 283 726 356 q 661 156 692 210 q 589 65 631 101 q 497 9 547 28 q 481 -24 492 -9 q 455 -51 470 -40 q 422 -69 441 -62 q 384 -75 404 -75 q 315 -54 345 -75 q 273 1 286 -33 q 169 55 213 18 q 96 149 125 93 q 53 277 67 204 q 39 439 39 351 q 56 606 39 532 q 105 733 74 679 q 179 824 136 788 q 273 879 222 861 q 315 934 286 913 q 384 956 345 956 m 384 161 q 436 150 412 161 q 475 117 459 138 q 531 169 508 136 q 570 243 555 201 q 593 335 586 285 q 601 440 601 385 q 594 551 601 499 q 573 645 587 602 q 535 719 558 687 q 480 768 512 750 q 439 732 465 745 q 384 719 414 719 q 329 732 353 719 q 288 768 304 745 q 233 716 256 748 q 194 642 210 684 q 172 550 179 600 q 164 446 164 500 q 171 332 164 385 q 194 237 178 279 q 233 163 209 195 q 290 114 256 132 q 330 149 305 136 q 384 161 354 161 z "},"\u047c":{"ha":764,"x_min":47,"x_max":716,"o":"m 444 896 q 455 897 450 897 q 466 897 460 897 q 584 867 536 897 q 661 780 632 838 q 703 635 690 722 q 716 433 716 548 q 707 240 716 323 q 674 101 697 157 q 612 17 651 45 q 514 -11 573 -11 q 474 -6 494 -11 q 436 8 454 -2 q 405 35 418 18 q 382 75 391 51 q 329 8 361 28 q 250 -11 296 -11 q 152 17 191 -11 q 90 101 113 45 q 57 240 66 157 q 47 433 47 323 q 60 635 47 548 q 102 780 73 722 q 179 867 132 838 q 298 897 227 897 q 309 897 303 897 q 319 896 314 897 l 319 786 q 305 787 313 787 q 291 787 296 787 q 230 767 253 787 q 193 704 206 746 q 176 597 180 662 q 172 444 172 532 q 174 293 172 358 q 184 184 176 228 q 208 119 192 141 q 252 97 224 97 q 309 122 291 97 q 327 198 327 147 l 437 198 q 455 121 437 145 q 512 97 472 97 q 556 119 540 97 q 580 184 572 141 q 590 293 588 228 q 592 444 592 358 q 588 597 592 532 q 570 704 583 662 q 534 767 557 746 q 473 787 511 787 q 459 787 467 787 q 444 786 450 787 l 444 896 m 587 1123 q 488 1137 529 1123 q 417 1168 448 1151 q 364 1199 387 1185 q 319 1213 341 1213 q 276 1192 291 1213 q 260 1122 260 1171 l 170 1123 q 203 1251 170 1210 q 304 1292 236 1292 q 344 1285 325 1292 q 382 1268 363 1278 q 421 1246 401 1258 q 467 1224 442 1234 q 521 1207 491 1214 q 589 1200 551 1200 l 587 1123 m 312 971 q 362 984 349 975 q 374 1008 374 994 q 370 1023 374 1017 q 357 1031 365 1028 q 341 1038 350 1035 q 326 1046 333 1041 q 313 1060 318 1052 q 309 1084 309 1069 q 325 1120 309 1104 q 377 1135 340 1135 q 435 1116 412 1135 q 459 1055 459 1097 q 452 1008 459 1031 q 427 969 444 986 q 381 941 410 951 q 312 930 353 930 l 312 971 z "},"\u047e":{"ha":764,"x_min":0,"x_max":716,"o":"m 444 896 q 455 897 450 897 q 466 897 460 897 q 584 867 536 897 q 661 780 632 838 q 703 635 690 722 q 716 433 716 548 q 707 240 716 323 q 674 101 697 157 q 612 17 651 45 q 514 -11 573 -11 q 474 -6 494 -11 q 436 8 454 -2 q 405 35 418 18 q 382 75 391 51 q 329 8 361 28 q 250 -11 296 -11 q 152 17 191 -11 q 90 101 113 45 q 57 240 66 157 q 47 433 47 323 q 60 635 47 548 q 102 780 73 722 q 179 867 132 838 q 298 897 227 897 q 309 897 303 897 q 319 896 314 897 l 319 786 q 305 787 313 787 q 291 787 296 787 q 230 767 253 787 q 193 704 206 746 q 176 597 180 662 q 172 444 172 532 q 174 293 172 358 q 184 184 176 228 q 208 119 192 141 q 252 97 224 97 q 309 122 291 97 q 327 206 327 147 l 327 401 l 437 401 l 437 206 q 454 122 437 147 q 512 97 472 97 q 556 119 540 97 q 580 184 572 141 q 590 293 588 228 q 592 444 592 358 q 588 597 592 532 q 570 704 583 662 q 534 767 557 746 q 473 787 511 787 q 459 787 467 787 q 444 786 450 787 l 444 896 m 692 1078 l 631 946 l 608 946 l 575 1014 l 426 1014 l 393 946 l 370 946 l 338 1014 l 189 1014 l 156 946 l 133 946 l 72 1078 l 692 1078 m 0 886 z "},"\u0480":{"ha":764,"x_min":62,"x_max":675,"o":"m 441 -10 q 282 19 352 -9 q 163 102 212 47 q 88 241 114 158 q 62 433 62 323 q 90 626 62 540 q 170 772 118 712 q 294 865 221 832 q 458 897 368 897 q 573 887 520 897 q 675 854 626 876 l 675 736 q 575 776 626 762 q 463 790 524 790 q 350 767 400 790 q 264 699 299 743 q 210 590 229 654 q 191 444 191 526 q 260 184 191 271 q 465 97 330 97 q 512 99 489 97 q 557 106 535 100 l 557 -278 l 441 -278 l 441 -10 z "},"\u0461":{"ha":764,"x_min":56,"x_max":708,"o":"m 705 681 q 707 638 706 659 q 708 597 708 618 q 700 441 708 517 q 677 290 692 364 q 644 143 663 216 q 603 0 625 71 l 448 0 l 386 336 l 323 0 l 168 0 l 56 681 l 171 681 l 254 102 l 338 514 l 309 681 l 419 681 l 531 100 q 582 342 567 220 q 596 581 596 465 q 595 632 596 607 q 591 681 594 657 l 705 681 z "},"\u0465":{"ha":764,"x_min":58,"x_max":705,"o":"m 170 307 l 170 0 l 58 0 l 58 681 l 170 681 l 170 393 l 293 393 q 318 527 296 471 q 376 620 339 583 q 463 674 412 656 q 574 692 513 692 q 639 686 603 692 q 705 671 675 680 l 705 567 q 674 579 691 574 q 641 590 657 585 q 608 596 624 594 q 578 599 591 599 q 510 590 540 599 q 458 558 479 581 q 423 495 436 535 q 406 393 410 455 l 671 393 l 671 308 l 404 308 q 420 195 407 239 q 455 126 433 151 q 508 92 477 101 q 578 82 539 82 q 608 84 591 82 q 641 91 624 87 q 674 101 657 96 q 705 114 691 107 l 705 10 q 672 2 690 5 q 636 -5 654 -2 q 600 -9 617 -7 q 568 -11 583 -11 q 456 9 507 -11 q 369 69 406 29 q 313 168 333 109 q 293 307 293 228 l 170 307 z "},"\u0467":{"ha":764,"x_min":27,"x_max":736,"o":"m 736 0 l 602 0 l 482 301 l 434 301 l 434 0 l 324 0 l 324 301 l 273 301 l 153 0 l 27 0 l 314 681 l 450 681 l 736 0 m 311 397 l 444 397 l 379 560 l 311 397 z "},"\u0469":{"ha":764,"x_min":34,"x_max":750,"o":"m 750 0 l 638 0 l 553 308 l 516 308 l 516 0 l 419 0 l 419 308 l 382 308 l 297 0 l 190 0 l 286 308 l 144 308 l 144 0 l 34 0 l 34 681 l 144 681 l 144 397 l 313 397 l 402 681 l 538 681 l 750 0 m 406 397 l 528 397 l 467 581 l 406 397 z "},"\u046b":{"ha":764,"x_min":-1,"x_max":765,"o":"m 56 674 l 56 681 l 707 681 l 707 673 l 509 376 l 765 0 l 636 0 l 436 315 l 436 0 l 328 0 l 328 315 l 127 0 l -1 0 l 254 378 l 56 674 m 380 356 l 384 356 l 543 599 l 221 599 l 380 356 z "},"\u046d":{"ha":764,"x_min":51,"x_max":732,"o":"m 240 674 l 240 681 l 713 681 l 713 673 l 592 376 l 732 0 l 629 0 l 524 310 l 524 0 l 429 0 l 429 310 l 324 0 l 219 0 l 335 304 l 153 304 l 153 0 l 51 0 l 51 681 l 153 681 l 153 401 l 351 401 l 240 674 m 475 348 l 479 348 l 586 599 l 361 599 l 475 348 z "},"\u046f":{"ha":764,"x_min":81,"x_max":665,"o":"m 264 79 q 325 85 293 82 q 387 93 356 88 q 445 105 417 98 q 493 124 473 112 q 527 153 514 136 q 539 195 539 171 q 531 240 539 220 q 500 275 522 260 q 440 298 478 290 q 343 306 402 306 l 176 306 l 176 397 l 342 397 q 427 404 394 397 q 479 424 460 411 q 505 455 498 437 q 511 497 511 473 q 503 538 511 520 q 475 569 494 556 q 422 588 455 581 q 342 595 390 595 q 226 587 289 595 q 100 566 163 580 l 100 665 q 189 681 140 674 q 286 690 238 687 l 148 826 l 264 826 l 355 739 l 422 802 q 455 826 437 818 q 500 833 473 833 q 522 832 511 833 q 543 827 532 831 l 543 756 q 530 759 536 758 q 518 760 524 760 q 494 755 505 760 q 471 738 484 750 l 424 690 q 523 669 483 684 q 588 631 564 654 q 623 579 612 608 q 633 515 633 549 q 625 461 633 487 q 600 416 617 436 q 557 381 583 395 q 494 361 531 367 q 562 343 531 355 q 616 310 593 330 q 652 260 639 289 q 665 195 665 232 q 640 100 665 138 q 567 38 614 62 q 452 2 519 14 q 301 -17 385 -11 q 250 -24 271 -19 q 217 -37 229 -29 q 199 -54 205 -44 q 194 -77 194 -64 q 216 -122 194 -105 q 283 -140 239 -140 q 336 -137 304 -140 q 401 -131 368 -134 q 466 -124 435 -127 q 515 -121 496 -121 q 551 -122 534 -121 q 584 -124 568 -122 q 617 -129 600 -125 q 652 -137 633 -132 l 652 -247 q 610 -234 629 -239 q 575 -226 592 -229 q 541 -222 559 -223 q 500 -221 523 -221 q 452 -222 473 -221 q 413 -224 431 -223 q 379 -227 395 -226 q 346 -230 363 -229 q 307 -232 328 -231 q 259 -233 286 -233 q 128 -192 174 -233 q 81 -77 81 -150 q 95 -10 81 -38 q 132 36 108 18 q 190 64 156 54 q 264 79 223 74 z "},"\u0471":{"ha":764,"x_min":58,"x_max":720,"o":"m 437 -278 l 326 -278 l 326 -11 q 211 12 261 -7 q 127 66 161 31 q 76 154 93 101 q 58 279 58 207 l 58 681 l 170 681 l 170 301 q 208 147 170 198 q 326 86 247 96 l 326 958 l 437 958 l 437 86 q 512 114 479 94 q 565 171 544 135 q 597 259 587 207 q 608 382 608 311 q 602 532 608 458 q 586 681 595 606 l 697 681 q 712 534 705 607 q 720 387 720 461 q 703 233 720 302 q 651 115 686 165 q 563 33 616 64 q 437 -8 510 2 l 437 -278 z "},"\u0477":{"ha":764,"x_min":0,"x_max":739,"o":"m 519 543 q 544 602 530 576 q 576 646 557 628 q 624 675 596 665 q 692 685 652 685 q 713 684 700 685 q 739 681 726 683 l 739 576 q 725 578 732 578 q 713 578 718 578 q 685 575 697 578 q 664 564 673 572 q 647 543 654 556 q 632 509 640 529 l 452 0 l 311 0 l 45 681 l 179 681 l 346 231 l 382 121 l 416 233 l 519 543 m 467 958 l 607 794 l 488 794 l 323 958 l 467 958 m 174 958 l 323 794 l 205 794 l 16 958 l 174 958 m 0 681 z "},"\u0479":{"ha":764,"x_min":63,"x_max":737,"o":"m 397 344 q 388 175 397 243 q 359 66 379 107 q 306 8 338 25 q 226 -9 273 -9 q 149 8 180 -9 q 99 65 118 25 q 72 171 80 106 q 63 334 63 237 q 72 505 63 436 q 101 614 81 573 q 154 673 121 656 q 233 690 186 690 q 310 673 279 690 q 360 616 341 656 q 388 509 380 576 q 397 344 397 443 m 300 338 q 298 449 300 400 q 288 533 296 498 q 267 585 281 567 q 230 603 253 603 q 190 585 204 603 q 169 533 176 567 q 161 449 162 498 q 159 338 159 400 q 162 226 159 275 q 172 142 164 176 q 193 91 179 109 q 230 73 207 73 q 269 90 254 73 q 290 142 283 108 q 299 225 297 176 q 300 338 300 275 m 737 681 l 650 72 q 624 -83 636 -17 q 591 -192 612 -149 q 534 -258 570 -236 q 437 -281 498 -280 q 415 -280 425 -281 q 391 -278 405 -279 l 391 -182 q 431 -186 412 -186 q 477 -173 460 -186 q 504 -136 494 -160 q 522 -78 515 -112 q 539 0 529 -43 l 425 681 l 530 681 l 577 232 l 585 140 l 593 232 l 639 681 l 737 681 z "},"\u047b":{"ha":764,"x_min":62,"x_max":701,"o":"m 385 751 q 449 732 421 751 q 489 680 477 712 q 646 569 590 653 q 701 346 701 484 q 687 227 701 282 q 645 129 673 172 q 578 54 618 85 q 488 5 539 22 q 448 -47 477 -26 q 383 -68 420 -68 q 320 -50 348 -68 q 280 -1 293 -31 q 119 110 176 25 q 62 336 62 195 q 77 455 62 400 q 120 554 92 511 q 188 629 148 598 q 280 677 229 661 q 320 731 292 710 q 385 751 349 751 m 383 157 q 435 144 412 157 q 474 109 458 131 q 522 148 502 124 q 555 202 543 172 q 574 268 568 233 q 581 340 581 302 q 553 488 581 430 q 475 572 526 546 q 437 538 460 551 q 385 526 414 526 q 333 539 357 526 q 294 573 309 551 q 244 535 264 559 q 210 480 223 511 q 190 414 196 450 q 183 340 183 378 q 212 191 183 249 q 291 107 240 133 q 330 143 306 130 q 383 157 354 157 z "},"\u047d":{"ha":764,"x_min":56,"x_max":708,"o":"m 382 88 q 326 15 361 41 q 237 -11 290 -11 q 148 15 183 -11 q 92 86 113 41 q 64 194 72 132 q 56 332 56 257 q 72 507 56 439 q 121 613 89 574 q 199 665 153 651 q 306 680 245 680 q 317 680 311 680 q 328 679 322 680 l 328 569 q 313 570 321 570 q 299 570 304 570 q 238 561 261 570 q 201 525 214 551 q 184 451 189 498 q 180 329 180 404 q 183 224 180 268 q 194 152 186 180 q 216 111 202 124 q 253 97 231 97 q 310 122 294 97 q 327 198 327 147 l 437 198 q 453 122 437 147 q 511 97 470 97 q 547 111 533 97 q 570 152 562 124 q 581 224 578 180 q 584 329 584 268 q 579 451 584 404 q 562 525 575 498 q 526 561 549 551 q 465 570 503 570 q 451 570 459 570 q 436 569 442 570 l 436 679 q 447 680 441 680 q 458 680 452 680 q 564 665 517 680 q 643 613 611 651 q 691 507 675 574 q 708 332 708 439 q 700 194 708 257 q 671 86 692 132 q 616 15 651 41 q 526 -11 581 -11 q 438 15 474 -11 q 382 88 402 41 m 593 912 q 495 926 536 912 q 424 957 454 940 q 371 988 393 974 q 326 1002 348 1002 q 282 981 298 1002 q 267 911 267 960 l 177 912 q 210 1040 177 999 q 311 1081 243 1081 q 351 1074 332 1081 q 389 1057 370 1067 q 428 1035 408 1047 q 473 1013 449 1023 q 528 996 498 1003 q 595 989 557 989 l 593 912 m 319 760 q 369 773 356 764 q 381 797 381 783 q 376 812 381 806 q 364 821 372 817 q 348 827 357 824 q 332 836 340 830 q 320 849 325 841 q 315 873 315 858 q 331 909 315 893 q 384 924 347 924 q 442 905 418 924 q 466 844 466 886 q 458 798 466 820 q 434 758 451 775 q 388 730 416 741 q 319 719 360 720 l 319 760 z "},"\u047f":{"ha":764,"x_min":0,"x_max":708,"o":"m 705 681 q 707 638 706 659 q 708 597 708 618 q 700 441 708 517 q 677 290 692 364 q 644 143 663 216 q 603 0 625 71 l 448 0 l 386 336 l 323 0 l 168 0 l 56 681 l 171 681 l 254 102 l 338 514 l 309 681 l 419 681 l 531 100 q 582 342 567 220 q 596 581 596 465 q 595 632 596 607 q 591 681 594 657 l 705 681 m 692 873 l 631 741 l 608 741 l 575 809 l 426 809 l 393 741 l 370 741 l 338 809 l 189 809 l 156 741 l 133 741 l 72 873 l 692 873 m 0 682 z "},"\u0481":{"ha":764,"x_min":107,"x_max":637,"o":"m 437 -10 q 191 79 275 -7 q 107 334 107 165 q 132 480 107 414 q 203 593 157 546 q 311 665 248 640 q 450 690 374 690 q 549 683 503 690 q 637 659 595 675 l 637 546 q 547 579 593 569 q 453 590 502 590 q 367 573 408 590 q 296 523 327 555 q 248 444 266 490 q 231 338 231 397 q 291 153 231 214 q 457 92 351 92 q 504 93 481 92 q 548 100 526 95 l 548 -278 l 437 -278 l 437 -10 z "},"\u02ba":{"ha":764,"x_min":67,"x_max":719,"o":"m 159 514 l 67 547 l 208 977 l 373 925 l 159 514 m 505 514 l 413 547 l 554 977 l 719 925 l 505 514 z "},"\u0300":{"ha":764,"x_min":96,"x_max":549,"o":"m 549 794 l 431 794 l 214 958 l 385 958 l 549 794 m 96 681 z "},"\u0301":{"ha":764,"x_min":-96,"x_max":549,"o":"m 549 958 l 333 794 l 215 794 l 378 958 l 549 958 m -96 681 z "},"\u0302":{"ha":764,"x_min":0,"x_max":596,"o":"m 431 958 l 596 794 l 476 794 l 380 876 l 285 794 l 168 794 l 334 958 l 431 958 m 0 681 z "},"\u0303":{"ha":764,"x_min":0,"x_max":628,"o":"m 136 860 q 202 933 165 909 q 286 958 239 958 q 353 947 326 958 q 401 922 380 935 q 440 897 422 908 q 482 885 459 885 q 530 904 509 885 q 570 951 551 922 l 628 893 q 562 820 598 844 q 478 795 525 795 q 411 806 438 795 q 363 831 385 817 q 324 857 342 845 q 282 868 305 868 q 234 849 254 868 q 195 802 214 831 l 136 860 m 0 681 z "},"\u0304":{"ha":764,"x_min":0,"x_max":559,"o":"m 559 831 l 204 831 l 204 921 l 559 921 l 559 831 m 0 681 z "},"\u0306":{"ha":764,"x_min":0,"x_max":550,"o":"m 550 958 q 536 886 550 917 q 500 835 523 855 q 447 804 477 814 q 382 794 416 794 q 317 804 347 794 q 263 835 286 814 q 227 886 241 855 q 214 958 214 917 l 306 958 q 325 903 306 924 q 382 882 344 882 q 439 903 420 882 q 458 958 458 924 l 550 958 m 0 681 z "},"\u0307":{"ha":764,"x_min":0,"x_max":472,"o":"m 382 964 q 417 957 401 964 q 446 937 434 949 q 465 909 458 925 q 472 873 472 892 q 465 838 472 854 q 446 810 458 822 q 417 790 434 798 q 382 783 401 783 q 346 790 362 783 q 317 810 330 798 q 298 838 305 822 q 292 873 292 854 q 298 909 292 892 q 317 937 305 925 q 346 957 330 949 q 382 964 362 964 m 0 681 z "},"\u0308":{"ha":764,"x_min":0,"x_max":604,"o":"m 236 953 q 266 947 252 953 q 290 930 279 941 q 307 906 300 920 q 313 876 313 892 q 307 847 313 861 q 290 823 300 833 q 266 806 279 812 q 236 800 252 800 q 207 806 220 800 q 182 823 193 812 q 166 847 172 833 q 160 876 160 861 q 166 906 160 892 q 182 930 172 920 q 207 947 193 941 q 236 953 220 953 m 528 953 q 557 947 543 953 q 582 930 571 941 q 598 906 592 920 q 604 876 604 892 q 598 847 604 861 q 582 823 592 833 q 557 806 571 812 q 528 800 543 800 q 498 806 512 800 q 474 823 484 812 q 458 847 464 833 q 452 876 452 861 q 458 906 452 892 q 474 930 464 920 q 498 947 484 941 q 528 953 512 953 m 0 681 z "},"\u030a":{"ha":764,"x_min":0,"x_max":528,"o":"m 382 1018 q 439 1007 412 1018 q 485 977 465 996 q 516 932 505 958 q 528 878 528 907 q 516 823 528 848 q 485 779 505 798 q 439 749 465 760 q 382 738 412 738 q 325 749 351 738 q 279 779 298 760 q 248 823 259 798 q 236 878 236 848 q 248 932 236 907 q 279 977 259 958 q 325 1007 298 996 q 382 1018 351 1018 m 382 946 q 355 941 368 946 q 334 926 343 935 q 319 904 325 917 q 314 878 314 892 q 334 829 314 849 q 382 810 353 810 q 408 815 396 810 q 430 830 420 821 q 444 851 439 839 q 450 878 450 863 q 444 904 450 892 q 430 926 439 917 q 408 941 420 935 q 382 946 396 946 m 0 681 z "},"\u030b":{"ha":764,"x_min":-70,"x_max":677,"o":"m 370 958 l 205 794 l 87 794 l 227 958 l 370 958 m 677 958 l 488 794 l 370 794 l 520 958 l 677 958 m -70 681 z "},"\u030c":{"ha":764,"x_min":0,"x_max":596,"o":"m 334 794 l 168 958 l 288 958 l 383 876 l 479 958 l 596 958 l 431 794 l 334 794 m 0 681 z "},"\u031b":{"ha":764,"x_min":279,"x_max":484,"o":"m 326 511 q 362 548 351 519 q 374 631 374 577 l 374 726 l 484 726 l 484 670 q 475 569 484 611 q 449 500 466 528 q 407 457 431 473 q 351 435 382 441 l 279 419 l 279 498 l 326 511 z "},"\u0327":{"ha":764,"x_min":301,"x_max":463,"o":"m 463 0 l 404 -200 l 301 -200 l 346 0 l 463 0 z "},"\u0328":{"ha":764,"x_min":271,"x_max":494,"o":"m 494 -254 q 457 -259 477 -258 q 419 -261 436 -261 q 308 -230 346 -261 q 271 -150 271 -199 q 274 -119 271 -134 q 286 -85 277 -103 q 310 -47 294 -68 q 353 0 326 -26 l 458 0 q 419 -43 434 -24 q 396 -77 404 -62 q 385 -105 388 -92 q 382 -131 382 -118 q 396 -166 382 -153 q 447 -180 411 -180 q 470 -180 456 -180 q 494 -178 483 -179 l 494 -254 z "},"\u0344":{"ha":764,"x_min":0,"x_max":659,"o":"m 178 943 q 206 938 193 943 q 229 922 220 932 q 244 899 239 912 q 250 871 250 886 q 244 843 250 856 q 229 820 239 829 q 206 805 220 810 q 178 799 193 799 q 126 820 147 799 q 106 871 106 840 q 112 899 106 886 q 127 922 117 912 q 150 938 136 932 q 178 943 163 943 m 586 943 q 614 938 601 943 q 637 922 628 932 q 653 899 647 912 q 659 871 659 886 q 653 843 659 856 q 637 820 647 829 q 614 805 628 810 q 586 799 601 799 q 535 820 555 799 q 514 871 514 840 q 520 899 514 886 q 535 922 526 912 q 558 938 545 932 q 586 943 571 943 m 488 978 l 401 790 l 300 790 l 353 978 l 488 978 m 0 681 z "},"\u0e3f":{"ha":764,"x_min":107,"x_max":689,"o":"m 424 -197 l 319 -197 l 319 0 l 107 0 l 107 886 l 319 886 l 319 1084 l 424 1084 l 424 884 q 657 671 657 862 q 623 547 657 599 q 511 471 589 496 q 579 448 547 464 q 636 406 612 431 q 675 345 661 380 q 689 265 689 309 q 664 152 689 201 q 594 69 640 103 q 483 18 548 35 q 424 5 455 9 l 424 -197 m 561 261 q 547 322 561 295 q 505 368 532 349 q 439 397 478 387 q 424 400 431 399 l 424 106 q 510 140 477 115 q 561 261 561 179 m 228 102 l 319 102 l 319 407 l 228 407 l 228 102 m 228 507 l 319 507 l 319 785 l 228 785 l 228 507 m 532 654 q 524 706 532 682 q 495 747 515 730 q 440 774 475 764 q 424 779 432 777 l 424 516 q 481 543 457 525 q 518 589 505 562 q 532 654 532 616 z "},"\u200e":{"ha":0,"x_min":-24,"x_max":292,"o":"m 292 1041 l 145 896 l 112 929 l 205 1017 l 24 1017 l 24 -277 l -24 -277 l -24 1065 l 205 1065 l 112 1154 l 145 1187 l 292 1041 z "},"\u200f":{"ha":0,"x_min":-292,"x_max":24,"o":"m 24 -277 l -24 -277 l -24 1017 l -205 1017 l -112 929 l -145 896 l -292 1041 l -145 1187 l -112 1154 l -205 1065 l 24 1065 l 24 -277 z "},"\u202f":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u205e":{"ha":764,"x_min":264,"x_max":489,"o":"m 376 -123 q 420 -132 399 -123 q 456 -156 441 -140 q 480 -192 471 -172 q 489 -237 489 -213 q 480 -280 489 -260 q 456 -316 471 -300 q 420 -340 441 -331 q 376 -349 399 -349 q 332 -340 353 -349 q 297 -316 312 -331 q 273 -280 281 -300 q 264 -237 264 -260 q 273 -192 264 -213 q 297 -156 281 -172 q 332 -132 312 -140 q 376 -123 353 -123 m 376 1040 q 420 1031 399 1040 q 456 1007 441 1023 q 480 971 471 991 q 489 926 489 950 q 480 883 489 903 q 456 847 471 863 q 420 823 441 832 q 376 814 399 814 q 332 823 353 814 q 297 847 312 832 q 273 883 281 863 q 264 926 264 903 q 273 971 264 950 q 297 1007 281 991 q 332 1031 312 1023 q 376 1040 353 1040 m 376 652 q 420 644 399 652 q 456 619 441 635 q 480 583 471 604 q 489 538 489 562 q 480 495 489 515 q 456 459 471 475 q 420 435 441 444 q 376 427 399 427 q 332 435 353 427 q 297 459 312 444 q 273 495 281 475 q 264 538 264 515 q 273 583 264 562 q 297 619 281 604 q 332 644 312 635 q 376 652 353 652 m 376 265 q 420 256 399 265 q 456 232 441 248 q 480 196 471 216 q 489 151 489 175 q 480 108 489 128 q 456 72 471 87 q 420 48 441 57 q 376 39 399 39 q 332 48 353 39 q 297 72 312 57 q 273 108 281 87 q 264 151 264 128 q 273 196 264 175 q 297 232 281 216 q 332 256 312 248 q 376 265 353 265 z "},"\u205f":{"ha":764,"x_min":0,"x_max":0,"o":""},"\u2071":{"ha":764,"x_min":203,"x_max":569,"o":"m 348 856 l 218 856 l 218 929 l 439 929 l 439 586 l 569 586 l 569 512 l 203 512 l 203 586 l 348 586 l 348 856 m 370 991 q 323 1010 342 991 q 304 1054 304 1028 q 310 1078 304 1067 q 323 1098 315 1090 q 344 1112 332 1107 q 370 1116 356 1116 q 396 1112 384 1116 q 416 1098 408 1107 q 430 1078 425 1090 q 435 1054 435 1067 q 430 1030 435 1041 q 416 1010 425 1019 q 396 997 408 1002 q 370 991 384 991 z "},"\u2215":{"ha":764,"x_min":14,"x_max":750,"o":"m 750 958 l 125 0 l 14 0 l 637 958 l 750 958 z "},"\u25a1":{"ha":764,"x_min":62,"x_max":702,"o":"m 62 640 l 702 640 l 702 0 l 62 0 l 62 640 m 113 589 l 113 52 l 650 52 l 650 589 l 113 589 z "},"\u25ab":{"ha":764,"x_min":185,"x_max":579,"o":"m 185 581 l 579 581 l 579 186 l 185 186 l 185 581 m 237 529 l 237 238 l 528 238 l 528 529 l 237 529 z "},"\u25cf":{"ha":764,"x_min":83,"x_max":680,"o":"m 680 392 q 593 180 680 267 q 382 93 506 93 q 170 180 258 93 q 83 392 83 267 q 172 604 83 517 q 381 690 260 690 q 593 602 505 690 q 680 392 680 514 z "},"\u25e6":{"ha":764,"x_min":212,"x_max":552,"o":"m 552 460 q 503 338 552 388 q 382 289 453 289 q 262 339 312 289 q 212 460 212 389 q 261 579 212 529 q 382 629 311 629 q 502 579 452 629 q 552 460 552 529 m 263 460 q 298 375 263 410 q 382 340 333 340 q 467 375 433 340 q 500 460 500 410 q 466 544 500 509 q 381 578 431 578 q 298 543 332 578 q 263 460 263 508 z "},"\ufe20":{"ha":764,"x_min":0,"x_max":765,"o":"m 765 821 q 38 690 359 821 l 2 751 q 191 838 96 802 q 383 895 287 873 q 574 926 479 916 q 765 935 669 935 l 765 821 m 0 681 z "},"\ufe21":{"ha":764,"x_min":-1,"x_max":762,"o":"m -1 935 q 190 926 95 935 q 381 895 285 916 q 572 838 477 873 q 762 751 668 802 l 726 690 q -1 821 405 821 l -1 935 m 0 681 z "},"\ufe22":{"ha":764,"x_min":0,"x_max":765,"o":"m 765 761 q 700 779 748 767 q 601 800 652 791 q 488 814 549 808 q 380 820 426 820 q 209 794 265 820 q 153 714 153 768 l 45 714 q 65 795 43 755 q 132 866 87 836 q 246 912 178 897 q 404 927 314 927 q 522 922 463 927 q 629 908 581 916 q 714 891 677 901 q 765 880 752 882 l 765 761 m 0 681 z "},"\ufe23":{"ha":764,"x_min":-1,"x_max":720,"o":"m -1 880 q 63 862 16 874 q 163 842 111 850 q 276 827 214 833 q 384 821 338 821 q 554 847 498 821 q 610 927 610 873 l 719 927 q 699 846 720 886 q 631 775 677 806 q 518 729 586 745 q 359 714 450 714 q 242 720 300 714 q 135 733 183 725 q 49 750 87 741 q -1 762 12 759 l -1 880 m 0 681 z "},"\ufeff":{"ha":0,"x_min":0,"x_max":0,"o":""},"\u24ff":{"ha":764,"x_min":0,"x_max":764,"o":"m 575 375 q 562 498 575 446 q 523 583 548 549 q 464 632 498 616 q 386 648 429 648 q 299 629 336 648 q 238 573 262 609 q 201 487 213 537 q 189 375 189 436 q 202 253 189 304 q 240 168 216 201 q 300 118 265 134 q 378 102 335 102 q 464 122 427 102 q 526 178 501 142 q 563 264 551 214 q 575 375 575 314 m 503 373 q 470 216 503 269 q 382 163 437 163 q 313 190 339 163 q 275 260 288 217 l 500 427 q 503 400 502 414 q 503 373 503 387 m 260 378 q 293 535 260 481 q 382 588 326 588 q 449 562 424 588 q 487 494 475 536 l 262 328 q 260 352 260 340 q 260 378 260 365 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u2776":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 559 183 l 440 183 l 440 651 l 378 651 l 208 562 l 235 502 l 362 571 l 362 183 l 225 183 l 225 117 l 559 117 l 559 183 z "},"\u2777":{"ha":764,"x_min":0,"x_max":764,"o":"m 567 186 l 309 186 l 405 280 q 464 341 439 313 q 506 394 489 368 q 530 447 522 420 q 538 503 538 473 q 527 568 538 539 q 494 617 515 597 q 444 647 473 637 q 379 658 414 658 q 288 639 327 658 q 218 588 249 620 l 258 541 q 308 580 281 565 q 370 595 336 595 q 411 588 394 595 q 440 567 429 580 q 456 535 451 553 q 462 498 462 517 q 458 459 462 477 q 442 421 454 441 q 409 377 430 401 q 354 319 388 352 l 216 182 l 216 119 l 567 119 l 567 186 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u2778":{"ha":764,"x_min":0,"x_max":764,"o":"m 569 278 q 559 324 569 303 q 533 360 549 345 q 496 385 517 375 q 456 398 476 395 q 520 447 496 416 q 543 524 543 478 q 500 620 543 585 q 372 655 456 655 q 311 650 343 655 q 250 635 279 644 l 250 573 q 366 594 314 594 q 443 574 417 594 q 469 512 469 555 q 440 444 469 468 q 362 419 411 419 l 301 419 l 301 361 l 361 361 q 415 356 391 361 q 458 339 440 351 q 485 312 475 328 q 495 274 495 296 q 461 198 495 226 q 347 170 427 170 q 289 173 317 170 q 236 180 262 175 l 236 116 q 283 111 258 113 q 340 109 308 109 q 440 122 397 109 q 512 158 484 136 q 555 212 541 181 q 569 278 569 243 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u2779":{"ha":764,"x_min":0,"x_max":764,"o":"m 570 298 l 479 298 l 479 650 l 377 650 l 151 298 l 151 235 l 406 235 l 406 117 l 479 117 l 479 235 l 570 235 l 570 298 m 406 298 l 221 298 l 406 581 l 406 298 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u277a":{"ha":764,"x_min":0,"x_max":764,"o":"m 566 290 q 548 362 566 334 q 503 409 531 391 q 438 433 474 426 q 363 440 401 440 l 317 440 l 317 589 l 537 589 l 537 651 l 250 651 l 250 379 l 351 379 q 454 357 418 379 q 489 284 489 334 q 451 203 489 233 q 349 174 414 174 q 291 176 319 174 q 241 184 263 178 l 241 119 q 290 114 262 116 q 342 112 319 112 q 431 125 390 112 q 501 161 471 138 q 548 217 531 184 q 566 290 566 250 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u277b":{"ha":764,"x_min":0,"x_max":764,"o":"m 566 290 q 555 354 566 325 q 525 404 545 383 q 474 437 505 425 q 404 449 444 449 q 331 440 365 449 q 272 416 298 431 l 274 432 q 290 497 277 468 q 326 548 302 527 q 384 580 349 568 q 467 591 419 591 l 524 591 l 524 653 l 471 653 q 338 628 391 653 q 254 562 285 604 q 211 465 223 520 q 199 349 199 410 q 245 171 199 228 q 380 114 292 114 q 456 127 422 114 q 515 165 490 141 q 552 221 539 189 q 566 290 566 253 m 492 286 q 484 237 492 258 q 462 202 476 216 q 428 180 448 187 q 386 172 409 172 q 337 181 358 172 q 301 211 315 190 q 279 268 287 233 q 272 355 272 302 q 327 381 295 370 q 389 391 358 391 q 467 363 443 391 q 492 286 492 334 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u277c":{"ha":764,"x_min":0,"x_max":764,"o":"m 561 640 l 201 640 l 201 573 l 488 573 l 257 107 l 338 107 l 561 573 l 561 640 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u277d":{"ha":764,"x_min":0,"x_max":764,"o":"m 563 247 q 554 295 563 273 q 531 334 546 317 q 496 366 516 352 q 452 392 475 380 q 526 449 500 416 q 551 528 551 481 q 509 619 551 585 q 385 652 467 652 q 309 641 341 652 q 255 611 277 630 q 223 569 234 593 q 213 519 213 545 q 237 445 213 477 q 313 386 260 413 q 228 321 255 357 q 201 237 201 286 q 213 185 201 209 q 246 143 224 161 q 302 116 269 126 q 378 106 335 106 q 452 116 418 106 q 510 143 486 125 q 549 187 535 161 q 563 247 563 213 m 479 522 q 457 468 479 491 q 388 422 435 444 q 310 469 335 446 q 286 524 286 492 q 311 576 286 559 q 382 593 336 593 q 454 576 429 593 q 479 522 479 559 m 486 241 q 478 208 486 222 q 456 185 470 194 q 422 171 441 176 q 382 167 404 167 q 308 186 337 167 q 278 243 278 206 q 283 274 278 259 q 300 302 288 288 q 330 329 311 315 q 376 355 349 342 q 430 327 409 340 q 464 299 452 313 q 481 271 476 285 q 486 241 486 256 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u277e":{"ha":764,"x_min":0,"x_max":764,"o":"m 570 408 q 556 520 570 474 q 518 596 543 567 q 460 638 494 625 q 387 651 427 651 q 313 637 347 651 q 255 600 279 624 q 217 544 231 576 q 203 475 203 511 q 214 411 203 440 q 244 361 224 382 q 295 328 264 340 q 366 316 325 316 q 438 325 405 316 q 497 349 471 334 l 495 333 q 440 215 489 257 q 286 174 391 174 l 236 174 l 236 112 l 281 112 q 406 129 351 112 q 496 182 460 146 q 552 274 533 218 q 570 408 570 330 m 384 593 q 431 584 410 593 q 467 554 452 575 q 489 497 481 532 q 497 410 497 462 q 443 384 475 395 q 380 374 411 374 q 302 402 326 374 q 278 479 278 430 q 286 528 278 507 q 309 563 294 549 q 342 585 323 578 q 384 593 361 593 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24ea":{"ha":764,"x_min":0,"x_max":764,"o":"m 554 374 q 543 275 554 320 q 510 199 532 231 q 455 149 488 167 q 378 132 422 132 q 309 146 340 132 q 255 190 277 160 q 221 265 233 219 q 210 374 210 311 q 221 473 210 429 q 254 550 232 518 q 308 600 275 582 q 385 617 341 617 q 455 603 424 617 q 508 559 486 589 q 542 483 530 529 q 554 374 554 437 m 490 372 q 488 420 490 397 l 287 271 q 321 209 298 233 q 382 185 343 185 q 460 232 431 185 q 490 372 490 279 m 274 376 q 274 354 274 365 q 275 332 274 343 l 475 480 q 442 540 465 517 q 382 564 419 564 q 303 516 332 564 q 274 376 274 469 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2460":{"ha":764,"x_min":0,"x_max":764,"o":"m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 540 144 l 242 144 l 242 203 l 364 203 l 364 549 l 251 487 l 227 541 l 378 620 l 434 620 l 434 203 l 540 203 l 540 144 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2461":{"ha":764,"x_min":0,"x_max":764,"o":"m 547 146 l 235 146 l 235 203 l 357 324 q 406 376 387 354 q 435 415 425 397 q 449 449 446 433 q 453 484 453 465 q 448 517 453 501 q 434 544 444 532 q 408 563 424 556 q 371 570 393 570 q 316 557 340 570 q 271 522 292 544 l 236 564 q 298 609 264 592 q 379 626 333 626 q 437 616 410 626 q 482 589 463 607 q 511 546 500 571 q 522 488 522 520 q 514 438 522 461 q 492 391 507 414 q 455 343 477 368 q 402 290 433 319 l 317 206 l 547 206 l 547 146 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2462":{"ha":764,"x_min":0,"x_max":764,"o":"m 549 288 q 536 229 549 256 q 498 182 524 202 q 434 150 473 161 q 345 138 396 138 q 294 139 316 138 q 252 144 272 140 l 252 200 q 351 192 297 192 q 452 217 421 192 q 483 284 483 241 q 450 342 483 323 q 363 362 416 362 l 310 362 l 310 414 l 364 414 q 434 435 408 414 q 460 496 460 457 q 436 552 460 534 q 368 569 413 569 q 264 551 322 569 l 264 606 q 318 618 290 614 q 373 623 347 623 q 487 592 448 623 q 526 507 526 561 q 505 438 526 466 q 448 395 484 411 q 484 383 466 391 q 516 361 502 374 q 540 329 531 347 q 549 288 549 310 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2463":{"ha":764,"x_min":0,"x_max":764,"o":"m 549 250 l 468 250 l 468 144 l 404 144 l 404 250 l 176 250 l 176 305 l 378 618 l 468 618 l 468 305 l 549 305 l 549 250 m 404 557 l 239 305 l 404 305 l 404 557 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2464":{"ha":764,"x_min":0,"x_max":764,"o":"m 538 298 q 523 234 538 263 q 481 184 508 205 q 418 151 454 163 q 340 140 382 140 q 293 141 319 140 q 250 146 268 143 l 250 204 q 294 197 269 199 q 345 195 319 195 q 437 221 404 195 q 471 293 471 248 q 439 358 471 338 q 348 378 408 378 l 258 378 l 258 620 l 513 620 l 513 565 l 317 565 l 317 432 l 359 432 q 425 426 393 432 q 483 405 457 420 q 523 363 508 389 q 538 298 538 338 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2465":{"ha":764,"x_min":0,"x_max":764,"o":"m 535 298 q 523 237 535 266 q 490 187 511 208 q 437 154 468 166 q 370 142 407 142 q 250 192 291 142 q 209 351 209 243 q 220 455 209 406 q 258 541 231 504 q 332 600 286 578 q 451 622 379 622 l 498 622 l 498 567 l 448 567 q 374 557 405 567 q 322 528 342 547 q 290 483 301 509 q 275 425 278 457 l 274 410 q 327 432 297 424 q 391 440 357 440 q 454 430 427 440 q 499 400 481 419 q 526 355 517 381 q 535 298 535 330 m 469 294 q 448 363 469 338 q 378 389 426 389 q 322 379 350 389 q 274 357 294 370 q 280 279 274 310 q 300 229 287 248 q 332 202 313 210 q 375 194 351 194 q 443 220 416 194 q 469 294 469 246 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2466":{"ha":764,"x_min":0,"x_max":764,"o":"m 541 551 l 342 136 l 271 136 l 477 551 l 221 551 l 221 610 l 541 610 l 541 551 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2467":{"ha":764,"x_min":0,"x_max":764,"o":"m 543 260 q 531 207 543 230 q 496 168 518 184 q 444 143 474 152 q 379 135 414 135 q 261 168 301 135 q 221 252 221 201 q 245 327 221 295 q 320 384 269 358 q 252 436 273 408 q 231 503 231 465 q 241 546 231 525 q 269 584 250 568 q 317 611 288 601 q 385 621 346 621 q 495 591 458 621 q 533 510 533 562 q 510 440 533 469 q 444 389 487 411 q 484 366 465 378 q 515 338 502 353 q 536 303 528 322 q 543 260 543 283 m 468 505 q 446 553 468 538 q 382 568 423 568 q 319 553 341 568 q 296 507 296 538 q 318 458 296 478 q 387 416 340 438 q 448 457 429 436 q 468 505 468 477 m 475 255 q 470 281 475 269 q 455 307 466 294 q 425 331 444 319 q 377 357 406 343 q 309 309 328 333 q 290 256 290 286 q 316 206 290 224 q 382 189 342 189 q 418 193 401 189 q 448 205 435 197 q 468 225 460 213 q 475 255 475 238 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2468":{"ha":764,"x_min":0,"x_max":764,"o":"m 549 403 q 484 202 549 265 q 292 140 418 140 l 252 140 l 252 195 l 296 195 q 434 232 390 195 q 483 336 477 269 l 484 351 q 432 330 461 338 q 368 321 402 321 q 304 332 332 321 q 259 361 277 342 q 232 407 241 380 q 223 463 223 433 q 235 525 223 496 q 269 574 247 553 q 320 608 290 595 q 387 620 351 620 q 452 608 422 620 q 503 571 481 597 q 537 504 525 545 q 549 403 549 463 m 384 568 q 316 542 343 568 q 290 467 290 516 q 311 398 290 422 q 380 373 332 373 q 436 382 408 373 q 484 405 465 391 q 477 483 484 452 q 457 533 471 514 q 426 559 444 551 q 384 568 407 568 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2469":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 382 q 571 199 596 258 q 492 140 547 140 q 445 152 465 140 q 414 192 426 163 q 396 266 401 220 q 391 382 391 313 q 397 499 391 452 q 417 573 404 545 q 449 613 430 602 q 495 625 469 625 q 540 613 521 625 q 571 573 559 602 q 590 499 584 545 q 596 382 596 452 m 536 380 q 534 473 536 436 q 525 531 531 510 q 512 562 519 553 q 494 570 504 570 q 450 385 450 570 q 454 291 450 328 q 463 233 457 254 q 476 203 469 212 q 494 195 484 195 q 525 241 513 195 q 536 380 536 288 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246a":{"ha":764,"x_min":0,"x_max":764,"o":"m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 590 144 l 403 144 l 403 199 l 475 199 l 475 545 l 416 505 l 389 549 l 495 620 l 532 620 l 532 199 l 590 199 l 590 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246b":{"ha":764,"x_min":0,"x_max":764,"o":"m 393 591 q 434 617 414 609 q 482 625 454 625 q 553 598 527 625 q 579 511 579 571 q 575 467 579 487 q 564 426 571 446 q 546 386 556 406 q 522 340 535 365 l 448 199 l 578 199 l 578 144 l 386 144 l 386 196 l 459 336 q 490 396 478 372 q 509 440 502 421 q 518 475 515 459 q 520 509 520 491 q 508 557 520 545 q 472 570 496 570 q 444 565 456 570 q 420 549 432 559 l 393 591 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246c":{"ha":764,"x_min":0,"x_max":764,"o":"m 586 288 q 578 229 586 256 q 556 182 571 202 q 517 150 541 161 q 463 138 494 138 q 430 139 443 138 q 403 144 416 140 l 403 200 q 456 192 427 192 q 510 217 494 192 q 526 284 526 241 q 465 362 526 362 l 432 362 l 432 414 l 466 414 q 503 436 491 414 q 515 498 515 459 q 504 553 515 536 q 469 569 492 569 q 409 551 444 569 l 409 606 q 446 618 427 614 q 484 623 466 623 q 552 592 528 623 q 575 507 575 561 q 563 440 575 466 q 524 394 551 414 q 568 358 551 382 q 586 288 586 333 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246d":{"ha":764,"x_min":0,"x_max":764,"o":"m 608 250 l 560 250 l 560 144 l 506 144 l 506 250 l 366 250 l 366 296 l 482 620 l 560 620 l 560 303 l 608 303 l 608 250 m 506 547 l 421 303 l 506 303 l 506 547 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246e":{"ha":764,"x_min":0,"x_max":764,"o":"m 576 297 q 569 233 576 262 q 546 183 562 204 q 508 151 531 163 q 453 140 484 140 q 425 141 439 140 q 399 144 411 142 l 399 201 q 423 196 411 198 q 448 195 435 195 q 500 221 483 195 q 517 294 517 248 q 498 358 517 338 q 439 378 479 378 l 404 378 l 404 620 l 559 620 l 559 565 l 460 565 l 460 432 q 504 425 483 432 q 541 402 525 418 q 567 360 557 386 q 576 297 576 334 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u246f":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 298 q 589 233 596 262 q 568 183 581 203 q 535 151 554 162 q 493 140 516 140 q 450 150 469 140 q 417 184 431 160 q 397 250 404 209 q 391 353 391 291 q 399 464 391 414 q 426 549 407 513 q 476 605 445 585 q 554 625 508 625 l 559 625 l 559 570 l 552 570 q 510 557 528 570 q 478 524 491 545 q 458 474 465 503 q 451 414 451 446 l 451 409 q 479 431 464 422 q 514 440 494 440 q 574 405 552 440 q 596 298 596 369 m 536 294 q 527 362 536 338 q 496 387 517 387 q 472 377 485 387 q 450 353 459 367 q 453 279 450 309 q 462 230 456 249 q 475 203 467 211 q 494 195 484 195 q 524 220 512 195 q 536 294 536 246 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2470":{"ha":764,"x_min":0,"x_max":764,"o":"m 570 574 l 473 140 l 416 140 l 513 565 l 382 565 l 382 620 l 570 620 l 570 574 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2471":{"ha":764,"x_min":0,"x_max":764,"o":"m 601 260 q 592 207 601 230 q 569 168 584 184 q 534 143 555 152 q 491 135 514 135 q 413 168 439 135 q 386 252 386 201 q 401 329 386 296 q 447 389 416 363 q 405 440 418 413 q 392 505 392 468 q 398 552 392 530 q 417 590 404 574 q 449 616 430 606 q 494 625 468 625 q 537 616 519 625 q 569 591 556 607 q 588 555 581 576 q 594 510 594 534 q 579 439 594 469 q 541 388 565 410 q 564 365 553 377 q 583 337 574 353 q 596 302 591 321 q 601 260 601 283 m 536 505 q 493 570 536 570 q 462 554 473 570 q 450 507 450 538 q 452 480 450 492 q 460 457 454 468 q 475 435 465 446 q 500 413 484 425 q 527 455 517 433 q 536 505 536 477 m 540 255 q 531 309 540 283 q 490 360 522 334 q 455 311 465 336 q 446 256 446 286 q 460 207 446 224 q 493 190 473 190 q 526 205 513 190 q 540 255 540 220 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2472":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 406 q 586 285 596 335 q 556 203 576 235 q 506 157 536 172 q 434 142 475 142 l 410 142 l 410 197 l 431 197 q 510 236 484 197 q 536 354 536 274 q 472 327 509 327 q 411 363 431 327 q 391 466 391 399 q 398 532 391 503 q 418 582 405 562 q 451 614 432 603 q 494 625 471 625 q 538 613 519 625 q 570 575 557 602 q 589 507 583 549 q 596 406 596 465 m 492 570 q 462 545 475 570 q 450 470 450 519 q 459 402 450 425 q 491 379 469 379 q 515 387 503 379 q 536 408 528 394 q 533 486 536 454 q 525 535 530 517 q 511 562 519 554 q 492 570 503 570 m 366 144 l 178 144 l 178 199 l 251 199 l 251 545 l 191 505 l 164 549 l 271 620 l 307 620 l 307 199 l 366 199 l 366 144 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u2473":{"ha":764,"x_min":0,"x_max":764,"o":"m 606 382 q 582 199 606 258 q 502 140 557 140 q 455 152 475 140 q 424 192 436 163 q 406 266 412 220 q 401 382 401 313 q 407 499 401 452 q 427 573 414 545 q 459 613 440 602 q 505 625 479 625 q 550 613 531 625 q 582 573 569 602 q 600 499 594 545 q 606 382 606 452 m 547 380 q 544 473 547 436 q 535 531 541 510 q 522 562 530 553 q 504 570 514 570 q 460 385 460 570 q 464 291 460 328 q 473 233 467 254 q 487 203 479 212 q 504 195 494 195 q 535 241 523 195 q 547 380 547 288 m 178 591 q 219 617 199 609 q 267 625 239 625 q 338 598 312 625 q 364 511 364 571 q 360 467 364 487 q 349 426 356 446 q 331 386 341 406 q 307 340 320 365 l 233 199 l 363 199 l 363 144 l 171 144 l 171 196 l 244 336 q 275 396 263 372 q 294 440 287 421 q 303 475 300 459 q 305 509 305 491 q 293 557 305 545 q 257 570 281 570 q 229 565 241 570 q 205 549 217 559 l 178 591 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 m 44 367 q 71 235 44 296 q 143 127 97 173 q 250 54 189 81 q 382 27 311 27 q 513 54 452 27 q 621 127 575 81 q 693 235 667 173 q 720 367 720 296 q 693 499 720 437 q 621 607 667 561 q 513 680 575 653 q 382 707 452 707 q 250 680 311 707 q 143 607 189 653 q 71 499 97 561 q 44 367 44 437 z "},"\u277f":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 382 q 590 499 596 452 q 571 573 584 545 q 540 613 559 602 q 495 625 521 625 q 449 613 469 625 q 417 573 430 602 q 397 499 404 545 q 391 382 391 452 q 396 266 391 313 q 414 192 401 220 q 445 152 426 163 q 492 140 465 140 q 571 199 547 140 q 596 382 596 258 m 536 380 q 525 241 536 288 q 494 195 513 195 q 476 203 484 195 q 463 233 469 212 q 454 291 457 254 q 450 385 450 328 q 494 570 450 570 q 512 562 504 570 q 525 531 519 553 q 534 473 531 510 q 536 380 536 436 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24eb":{"ha":764,"x_min":0,"x_max":764,"o":"m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 590 199 l 532 199 l 532 620 l 495 620 l 389 549 l 416 505 l 475 545 l 475 199 l 403 199 l 403 144 l 590 144 l 590 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24ec":{"ha":764,"x_min":0,"x_max":764,"o":"m 420 549 q 444 565 432 559 q 472 570 456 570 q 508 557 496 570 q 520 509 520 545 q 518 475 520 491 q 509 440 515 459 q 490 396 502 421 q 459 336 478 372 l 386 196 l 386 144 l 578 144 l 578 199 l 448 199 l 522 340 q 546 386 535 365 q 564 426 556 406 q 575 467 571 446 q 579 511 579 487 q 553 598 579 571 q 482 625 527 625 q 434 617 454 625 q 393 591 414 609 l 420 549 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24ed":{"ha":764,"x_min":0,"x_max":764,"o":"m 586 288 q 568 358 586 333 q 524 394 551 382 q 563 440 551 414 q 575 507 575 466 q 552 592 575 561 q 484 623 528 623 q 446 618 466 623 q 409 606 427 614 l 409 551 q 469 569 444 569 q 504 553 492 569 q 515 498 515 536 q 503 436 515 459 q 466 414 491 414 l 432 414 l 432 362 l 465 362 q 526 284 526 362 q 510 217 526 241 q 456 192 494 192 q 403 200 427 192 l 403 144 q 430 139 416 140 q 463 138 443 138 q 517 150 494 138 q 556 182 541 161 q 578 229 571 202 q 586 288 586 256 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24ee":{"ha":764,"x_min":0,"x_max":764,"o":"m 608 303 l 560 303 l 560 620 l 482 620 l 366 296 l 366 250 l 506 250 l 506 144 l 560 144 l 560 250 l 608 250 l 608 303 m 506 303 l 421 303 l 506 547 l 506 303 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24ef":{"ha":764,"x_min":0,"x_max":764,"o":"m 576 297 q 567 360 576 334 q 541 402 557 386 q 504 425 525 418 q 460 432 483 432 l 460 565 l 559 565 l 559 620 l 404 620 l 404 378 l 439 378 q 498 358 479 378 q 517 294 517 338 q 500 221 517 248 q 448 195 483 195 q 423 196 435 195 q 399 201 411 198 l 399 144 q 425 141 411 142 q 453 140 439 140 q 508 151 484 140 q 546 183 531 163 q 569 233 562 204 q 576 297 576 262 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24f0":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 298 q 574 405 596 369 q 514 440 552 440 q 479 431 494 440 q 451 409 464 422 l 451 414 q 458 474 451 446 q 478 524 465 503 q 510 557 491 545 q 552 570 528 570 l 559 570 l 559 625 l 554 625 q 476 605 508 625 q 426 549 445 585 q 399 464 407 513 q 391 353 391 414 q 397 250 391 291 q 417 184 404 209 q 450 150 431 160 q 493 140 469 140 q 535 151 516 140 q 568 183 554 162 q 589 233 581 203 q 596 298 596 262 m 536 294 q 524 220 536 246 q 494 195 512 195 q 475 203 484 195 q 462 230 467 211 q 453 279 456 249 q 450 353 450 309 q 472 377 459 367 q 496 387 485 387 q 527 362 517 387 q 536 294 536 338 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24f1":{"ha":764,"x_min":0,"x_max":764,"o":"m 570 620 l 382 620 l 382 565 l 513 565 l 416 140 l 473 140 l 570 574 l 570 620 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24f2":{"ha":764,"x_min":0,"x_max":764,"o":"m 601 260 q 596 302 601 283 q 583 337 591 321 q 564 365 574 353 q 541 388 553 377 q 579 439 565 410 q 594 510 594 469 q 588 555 594 534 q 569 591 581 576 q 537 616 556 607 q 494 625 519 625 q 449 616 468 625 q 417 590 430 606 q 398 552 404 574 q 392 505 392 530 q 405 440 392 468 q 447 389 418 413 q 401 329 416 363 q 386 252 386 296 q 413 168 386 201 q 491 135 439 135 q 534 143 514 135 q 569 168 555 152 q 592 207 584 184 q 601 260 601 230 m 536 505 q 527 455 536 477 q 500 413 517 433 q 475 435 484 425 q 460 457 465 446 q 452 480 454 468 q 450 507 450 492 q 462 554 450 538 q 493 570 473 570 q 536 505 536 570 m 540 255 q 526 205 540 220 q 493 190 513 190 q 460 207 473 190 q 446 256 446 224 q 455 311 446 286 q 490 360 465 336 q 531 309 522 334 q 540 255 540 283 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24f3":{"ha":764,"x_min":0,"x_max":764,"o":"m 596 406 q 589 507 596 465 q 570 575 583 549 q 538 613 557 602 q 494 625 519 625 q 451 614 471 625 q 418 582 432 603 q 398 532 405 562 q 391 466 391 503 q 411 363 391 399 q 472 327 431 327 q 536 354 509 327 q 510 236 536 274 q 431 197 484 197 l 410 197 l 410 142 l 434 142 q 506 157 475 142 q 556 203 536 172 q 586 285 576 235 q 596 406 596 335 m 492 570 q 511 562 503 570 q 525 535 519 554 q 533 486 530 517 q 536 408 536 454 q 515 387 528 394 q 491 379 503 379 q 459 402 469 379 q 450 470 450 425 q 462 545 450 519 q 492 570 475 570 m 366 199 l 307 199 l 307 620 l 271 620 l 164 549 l 191 505 l 251 545 l 251 199 l 178 199 l 178 144 l 366 144 l 366 199 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u24f4":{"ha":764,"x_min":0,"x_max":764,"o":"m 606 382 q 600 499 606 452 q 582 573 594 545 q 550 613 569 602 q 505 625 531 625 q 459 613 479 625 q 427 573 440 602 q 407 499 414 545 q 401 382 401 452 q 406 266 401 313 q 424 192 412 220 q 455 152 436 163 q 502 140 475 140 q 582 199 557 140 q 606 382 606 258 m 547 380 q 535 241 547 288 q 504 195 523 195 q 487 203 494 195 q 473 233 479 212 q 464 291 467 254 q 460 385 460 328 q 504 570 460 570 q 522 562 514 570 q 535 531 530 553 q 544 473 541 510 q 547 380 547 436 m 205 549 q 229 565 217 559 q 257 570 241 570 q 293 557 281 570 q 305 509 305 545 q 303 475 305 491 q 294 440 300 459 q 275 396 287 421 q 244 336 263 372 l 171 196 l 171 144 l 363 144 l 363 199 l 233 199 l 307 340 q 331 386 320 365 q 349 426 341 406 q 360 467 356 446 q 364 511 364 487 q 338 598 364 571 q 267 625 312 625 q 219 617 239 625 q 178 591 199 609 l 205 549 m 0 367 q 30 515 0 446 q 112 636 60 585 q 234 718 164 688 q 382 748 303 748 q 530 718 460 748 q 651 636 600 688 q 733 515 703 585 q 764 367 764 446 q 733 219 764 288 q 651 97 703 149 q 530 16 600 45 q 382 -14 460 -14 q 234 16 303 -14 q 112 97 164 45 q 30 219 60 149 q 0 367 0 288 z "},"\u1e9e":{"ha":764,"x_min":94,"x_max":708,"o":"m 708 256 q 675 118 708 178 q 578 25 642 58 q 425 -8 514 -8 q 306 0 379 -8 l 306 109 q 423 95 352 95 q 539 138 497 95 q 581 255 581 182 q 528 374 581 323 q 348 483 475 425 l 523 694 q 467 767 508 740 q 372 793 427 793 q 254 751 292 793 q 216 621 216 709 l 216 0 l 94 0 l 94 617 q 171 824 94 750 q 383 899 247 899 q 658 696 590 899 l 511 519 q 663 405 618 467 q 708 256 708 344 z "},"\u20b8":{"ha":764,"x_min":58,"x_max":705,"o":"m 705 627 l 443 627 l 443 0 l 321 0 l 321 627 l 58 627 l 58 730 l 705 730 l 705 627 m 58 783 l 58 886 l 705 886 l 705 783 l 58 783 z "},"\u20b9":{"ha":764,"x_min":87,"x_max":700,"o":"m 87 484 l 238 484 q 354 513 308 484 q 416 593 401 542 l 87 593 l 87 685 l 419 685 q 368 764 408 736 q 262 795 328 793 l 87 795 l 87 886 l 700 886 l 700 795 l 486 795 q 548 685 538 750 l 700 685 l 700 593 l 543 593 q 481 486 528 531 q 360 422 435 440 q 420 375 393 406 q 477 292 446 343 l 651 0 l 515 0 l 349 283 q 276 372 308 351 q 197 393 245 393 l 87 393 l 87 484 z "},"\u20ba":{"ha":764,"x_min":31,"x_max":725,"o":"m 31 431 l 31 524 l 172 584 l 172 886 l 294 886 l 294 636 l 543 741 l 543 648 l 294 543 l 294 400 l 543 505 l 543 412 l 294 307 l 294 103 l 356 103 q 537 174 467 103 q 614 370 606 245 l 725 370 q 612 99 711 198 q 353 0 514 0 l 172 0 l 172 255 l 31 195 l 31 288 l 172 348 l 172 491 l 31 431 z "}},"familyName":"Consolas","ascender":1031,"descender":-357,"underlinePosition":-180,"underlineThickness":98,"boundingBox":{"yMin":-420,"xMin":-600,"yMax":1404,"xMax":941},"resolution":1000,"original_font_information":{"format":0,"copyright":"\xa9 2013 Microsoft Corporation. All Rights Reserved.","fontFamily":"Consolas","fontSubfamily":"Regular","uniqueID":"Microsoft: Consolas","fullName":"Consolas","version":"Version 5.33","postScriptName":"Consolas","trademark":"Consolas is a trademark of the Microsoft group of companies.","manufacturer":"Microsoft Corporation","designer":"Luc(as) de Groot","description":"Consolas is aimed for use in programming environments and other circumstances where a monospaced font is specified. All characters have the same width, like old typewriters, making it a good choice for personal and business correspondance. The improved Windows font display allowed a design with proportions closer to normal text than traditional monospaced fonts like Courier. This allows for more comfortably reading of extended text on screen. OpenType features include hanging or lining numerals; slashed, dotted and normal zeros; and alternative shapes for a number of lowercase letters. The look of text can be tuned to personal taste by varying the number of bars and waves.","manufacturerURL":"http://www.microsoft.com/typography/ctfonts","designerURL":"http://fontfabrik.com","licence":"You may use this font as permitted by the EULA for the product in which this font is included to display and print content. You may only (i) embed this font in content as permitted by the embedding restrictions included in this font; and (ii) temporarily download this font to a printer or other output device to help print content.","licenceURL":"http://www.microsoft.com/typography/fonts/default.aspx"},"cssFontWeight":"normal","cssFontStyle":"normal"}'),cw=uw||(uw={});cw.Pop="POP",cw.Push="PUSH",cw.Replace="REPLACE";var mw=function(e){return e};function hw(e){e.preventDefault(),e.returnValue=""}function fw(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function dw(){return Math.random().toString(36).substr(2,8)}function pw(e){var t=e.pathname;t=void 0===t?"/":t;var n=e.search;return n=void 0===n?"":n,e=void 0===(e=e.hash)?"":e,n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),e&&"#"!==e&&(t+="#"===e.charAt(0)?e:"#"+e),t}function xw(e){var t={};if(e){var n=e.indexOf("#");0<=n&&(t.hash=e.substr(n),e=e.substr(0,n)),0<=(n=e.indexOf("?"))&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}function vw(e,t){if(!e)throw new Error(t)}var gw=(0,q.createContext)(null);var _w=(0,q.createContext)(null);var yw=(0,q.createContext)({outlet:null,matches:[]});function bw(e){return function(e){var t=(0,q.useContext)(yw).outlet;if(t)return(0,q.createElement)(Cw.Provider,{value:e},t);return t}(e.context)}function ww(e){vw(!1)}function Mw(e){var t=e.basename,n=void 0===t?"/":t,l=e.children,r=void 0===l?null:l,i=e.location,a=e.navigationType,o=void 0===a?uw.Pop:a,s=e.navigator,u=e.static,A=void 0!==u&&u;zw()&&vw(!1);var c=jw(n),m=(0,q.useMemo)((function(){return{basename:c,navigator:s,static:A}}),[c,s,A]);"string"===typeof i&&(i=xw(i));var h=i,f=h.pathname,d=void 0===f?"/":f,p=h.search,x=void 0===p?"":p,v=h.hash,g=void 0===v?"":v,_=h.state,y=void 0===_?null:_,b=h.key,w=void 0===b?"default":b,M=(0,q.useMemo)((function(){var e=Hw(d,c);return null==e?null:{pathname:e,search:x,hash:g,state:y,key:w}}),[c,d,x,g,y,w]);return null==M?null:(0,q.createElement)(gw.Provider,{value:m},(0,q.createElement)(_w.Provider,{children:r,value:{location:M,navigationType:o}}))}function Sw(e){var t=e.children,n=e.location;return function(e,t){zw()||vw(!1);var n=(0,q.useContext)(yw).matches,l=n[n.length-1],r=l?l.params:{},i=(l&&l.pathname,l?l.pathnameBase:"/");l&&l.route;0;var a,o=kw();if(t){var s,u="string"===typeof t?xw(t):t;"/"===i||(null==(s=u.pathname)?void 0:s.startsWith(i))||vw(!1),a=u}else a=o;var A=a.pathname||"/",c="/"===i?A:A.slice(i.length)||"/",m=function(e,t,n){void 0===n&&(n="/");var l=Hw(("string"===typeof t?xw(t):t).pathname||"/",n);if(null==l)return null;var q=Rw(e);!function(e){e.sort((function(e,t){return e.score!==t.score?t.score-e.score:function(e,t){var n=e.length===t.length&&e.slice(0,-1).every((function(e,n){return e===t[n]}));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((function(e){return e.childrenIndex})),t.routesMeta.map((function(e){return e.childrenIndex})))}))}(q);for(var r=null,i=0;null==r&&i<q.length;++i)r=Bw(q[i],l);return r}(e,{pathname:c});0;return Nw(m&&m.map((function(e){return Object.assign({},e,{params:Object.assign({},r,e.params),pathname:Gw([i,e.pathname]),pathnameBase:"/"===e.pathnameBase?i:Gw([i,e.pathnameBase])})})),n)}(Pw(t),n)}function Ew(e){zw()||vw(!1);var t=(0,q.useContext)(gw),n=t.basename,l=t.navigator,r=Lw(e),i=r.hash,a=r.pathname,o=r.search,s=a;if("/"!==n){var u=function(e){return""===e||""===e.pathname?"/":"string"===typeof e?xw(e).pathname:e.pathname}(e),A=null!=u&&u.endsWith("/");s="/"===a?n+(A?"/":""):Gw([n,a])}return l.createHref({pathname:s,search:o,hash:i})}function zw(){return null!=(0,q.useContext)(_w)}function kw(){return zw()||vw(!1),(0,q.useContext)(_w).location}function Tw(){zw()||vw(!1);var e=(0,q.useContext)(gw),t=e.basename,n=e.navigator,l=(0,q.useContext)(yw).matches,r=kw().pathname,i=JSON.stringify(l.map((function(e){return e.pathnameBase}))),a=(0,q.useRef)(!1);(0,q.useEffect)((function(){a.current=!0}));var o=(0,q.useCallback)((function(e,l){if(void 0===l&&(l={}),a.current)if("number"!==typeof e){var q=Fw(e,JSON.parse(i),r);"/"!==t&&(q.pathname=Gw([t,q.pathname])),(l.replace?n.replace:n.push)(q,l.state)}else n.go(e)}),[t,n,i,r]);return o}var Cw=(0,q.createContext)(null);function Lw(e){var t=(0,q.useContext)(yw).matches,n=kw().pathname,l=JSON.stringify(t.map((function(e){return e.pathnameBase})));return(0,q.useMemo)((function(){return Fw(e,JSON.parse(l),n)}),[e,l,n])}function Pw(e){var t=[];return q.Children.forEach(e,(function(e){if((0,q.isValidElement)(e))if(e.type!==q.Fragment){e.type!==ww&&vw(!1);var n={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(n.children=Pw(e.props.children)),t.push(n)}else t.push.apply(t,Pw(e.props.children))})),t}function Rw(e,t,n,l){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===l&&(l=""),e.forEach((function(e,q){var r={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:q,route:e};r.relativePath.startsWith("/")&&(r.relativePath.startsWith(l)||vw(!1),r.relativePath=r.relativePath.slice(l.length));var i=Gw([l,r.relativePath]),a=n.concat(r);e.children&&e.children.length>0&&(!0===e.index&&vw(!1),Rw(e.children,t,a,i)),(null!=e.path||e.index)&&t.push({path:i,score:Ow(i,e.index),routesMeta:a})})),t}var Dw=/^:\w+$/,Iw=function(e){return"*"===e};function Ow(e,t){var n=e.split("/"),l=n.length;return n.some(Iw)&&(l+=-2),t&&(l+=2),n.filter((function(e){return!Iw(e)})).reduce((function(e,t){return e+(Dw.test(t)?3:""===t?1:10)}),l)}function Bw(e,t){for(var n=e.routesMeta,l={},q="/",r=[],i=0;i<n.length;++i){var a=n[i],o=i===n.length-1,s="/"===q?t:t.slice(q.length)||"/",u=Uw({path:a.relativePath,caseSensitive:a.caseSensitive,end:o},s);if(!u)return null;Object.assign(l,u.params);var A=a.route;r.push({params:l,pathname:Gw([q,u.pathname]),pathnameBase:Gw([q,u.pathnameBase]),route:A}),"/"!==u.pathnameBase&&(q=Gw([q,u.pathnameBase]))}return r}function Nw(e,t){return void 0===t&&(t=[]),null==e?null:e.reduceRight((function(n,l,r){return(0,q.createElement)(yw.Provider,{children:void 0!==l.route.element?l.route.element:(0,q.createElement)(bw,null),value:{outlet:n,matches:t.concat(e.slice(0,r+1))}})}),null)}function Uw(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});var n=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);var l=[],q="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(function(e,t){return l.push(t),"([^\\/]+)"}));e.endsWith("*")?(l.push("*"),q+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):q+=n?"\\/*$":"(?:\\b|\\/|$)";return[new RegExp(q,t?void 0:"i"),l]}(e.path,e.caseSensitive,e.end),l=M(n,2),q=l[0],r=l[1],i=t.match(q);if(!i)return null;var a=i[0],o=a.replace(/(.)\/+$/,"$1"),s=i.slice(1),u=r.reduce((function(e,t,n){if("*"===t){var l=s[n]||"";o=a.slice(0,a.length-l.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return e}}(s[n]||""),e}),{});return{params:u,pathname:a,pathnameBase:o,pattern:e}}function Fw(e,t,n){var l,q="string"===typeof e?xw(e):e,r=""===e||""===q.pathname?"/":q.pathname;if(null==r)l=n;else{var i=t.length-1;if(r.startsWith("..")){for(var a=r.split("/");".."===a[0];)a.shift(),i-=1;q.pathname=a.join("/")}l=i>=0?t[i]:"/"}var o=function(e,t){void 0===t&&(t="/");var n="string"===typeof e?xw(e):e,l=n.pathname,q=n.search,r=void 0===q?"":q,i=n.hash,a=void 0===i?"":i,o=l?l.startsWith("/")?l:function(e,t){var n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((function(e){".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(l,t):t;return{pathname:o,search:Vw(r),hash:Ww(a)}}(q,l);return r&&"/"!==r&&r.endsWith("/")&&!o.pathname.endsWith("/")&&(o.pathname+="/"),o}function Hw(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;var n=e.charAt(t.length);return n&&"/"!==n?null:e.slice(t.length)||"/"}var Gw=function(e){return e.join("/").replace(/\/\/+/g,"/")},jw=function(e){return e.replace(/\/+$/,"").replace(/^\/*/,"/")},Vw=function(e){return e&&"?"!==e?e.startsWith("?")?e:"?"+e:""},Ww=function(e){return e&&"#"!==e?e.startsWith("#")?e:"#"+e:""};function Qw(){return Qw=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},Qw.apply(this,arguments)}function Yw(e,t){if(null==e)return{};var n,l,q={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(q[n]=e[n]);return q}var Xw=["onClick","reloadDocument","replace","state","target","to"];function Zw(e){var t=e.basename,n=e.children,l=e.window,r=(0,q.useRef)();null==r.current&&(r.current=function(e){function t(){var e=xw(a.location.hash.substr(1)),t=e.pathname,n=e.search;e=e.hash;var l=o.state||{};return[l.idx,mw({pathname:void 0===t?"/":t,search:void 0===n?"":n,hash:void 0===e?"":e,state:l.usr||null,key:l.key||"default"})]}function n(){if(s)h.call(s),s=null;else{var e=uw.Pop,n=t(),l=n[0];if(n=n[1],h.length){if(null!=l){var q=A-l;q&&(s={action:e,location:n,retry:function(){i(-1*q)}},i(q))}}else r(e)}}function l(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=-1===(n=(t=a.location.href).indexOf("#"))?t:t.slice(0,n)),n+"#"+("string"===typeof e?e:pw(e))}function q(e,t){return void 0===t&&(t=null),mw(ub({pathname:c.pathname,hash:"",search:""},"string"===typeof e?xw(e):e,{state:t,key:dw()}))}function r(e){u=e,e=t(),A=e[0],c=e[1],m.call({action:u,location:c})}function i(e){o.go(e)}void 0===e&&(e={});var a=void 0===(e=e.window)?document.defaultView:e,o=a.history,s=null;a.addEventListener("popstate",n),a.addEventListener("hashchange",(function(){pw(t()[1])!==pw(c)&&n()}));var u=uw.Pop,A=(e=t())[0],c=e[1],m=fw(),h=fw();return null==A&&(A=0,o.replaceState(ub({},o.state,{idx:A}),"")),{get action(){return u},get location(){return c},createHref:l,push:function e(t,n){var i=uw.Push,s=q(t,n);if(!h.length||(h.call({action:i,location:s,retry:function(){e(t,n)}}),0)){var u=[{usr:s.state,key:s.key,idx:A+1},l(s)];s=u[0],u=u[1];try{o.pushState(s,"",u)}catch(c){a.location.assign(u)}r(i)}},replace:function e(t,n){var i=uw.Replace,a=q(t,n);h.length&&(h.call({action:i,location:a,retry:function(){e(t,n)}}),1)||(a=[{usr:a.state,key:a.key,idx:A},l(a)],o.replaceState(a[0],"",a[1]),r(i))},go:i,back:function(){i(-1)},forward:function(){i(1)},listen:function(e){return m.push(e)},block:function(e){var t=h.push(e);return 1===h.length&&a.addEventListener("beforeunload",hw),function(){t(),h.length||a.removeEventListener("beforeunload",hw)}}}}({window:l}));var i=r.current,a=M((0,q.useState)({action:i.action,location:i.location}),2),o=a[0],s=a[1];return(0,q.useLayoutEffect)((function(){return i.listen(s)}),[i]),(0,q.createElement)(Mw,{basename:t,children:n,location:o.location,navigationType:o.action,navigator:i})}var Jw=(0,q.forwardRef)((function(e,t){var n=e.onClick,l=e.reloadDocument,r=e.replace,i=void 0!==r&&r,a=e.state,o=e.target,s=e.to,u=Yw(e,Xw),A=Ew(s),c=function(e,t){var n=void 0===t?{}:t,l=n.target,r=n.replace,i=n.state,a=Tw(),o=kw(),s=Lw(e);return(0,q.useCallback)((function(t){if(0===t.button&&(!l||"_self"===l)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(t)){t.preventDefault();var n=!!r||pw(o)===pw(s);a(e,{replace:n,state:i})}}),[o,a,s,r,i,l,e])}(s,{replace:i,state:a,target:o});return(0,q.createElement)("a",Qw({},u,{href:A,onClick:function(e){n&&n(e),e.defaultPrevented||l||c(e)},ref:t,target:o}))}));var Kw=n(184),$w=[{lat:41.372108,long:-73.92112,label:"New York",color:"rgba(100, 100, 100, 1)",length:.025,size:1.65},{lat:29.717394,long:-95.401833,label:"Rice University",color:"rgba(150, 150, 150, 1)",length:.035,size:1.5},{lat:37.484928,long:-122.148201,label:"Meta",color:"rgba(255, 255, 255, 1)",length:.05,size:1.75}],eM=[[41.372108,-73.92112,0],[29.717394,-95.401833,0],[37.484928,-122.148201,0]];var tM=function(){(0,q.useEffect)((function(){var e=document.querySelector("#intro"),t=[{t:"",ms:300},{t:"_",ms:300},{t:"",ms:300},{t:"_",ms:300},{t:"K_",ms:100},{t:"KE_",ms:100},{t:"KEI_",ms:100},{t:"KEIF_",ms:100},{t:"KEIFE_",ms:100},{t:"KEIFER_",ms:100},{t:"KEIFER _",ms:100},{t:"KEIFER C_",ms:100},{t:"KEIFER CO_",ms:100},{t:"KEIFER CON_",ms:100},{t:"KEIFER CONV_",ms:100},{t:"KEIFER CONVE_",ms:100},{t:"KEIFER CONVER_",ms:100},{t:"KEIFER CONVERT_",ms:100},{t:"KEIFER CONVERTI_",ms:100},{t:"KEIFER CONVERTIN_",ms:100},{t:"KEIFER CONVERTINO",ms:200},{t:"KEIFER CONVERTINO",ms:200},{t:"KEIFER CONVERTINO",ms:200}],n=1;window.localStorage.stepDenominator&&(n=window.localStorage.stepDenominator);var l=0;!function q(){var r=t[l];e.innerText=r.t,++l<t.length?setTimeout(q,r.ms/n):(e.classList.add("top"),setTimeout((function(){document.getElementById("main").style.opacity=1}),500),window.localStorage.stepDenominator=1.5)}()}),[]);var e=(0,q.useRef)();return(0,q.useEffect)((function(){e.current.controls().autoRotate=!0,e.current.controls().autoRotateSpeed=.65,e.current.controls().object.position.x=-200,e.current.controls().object.position.y=150,e.current.controls().object.position.z=100,e.current.controls().enableZoom=!1})),(0,Kw.jsxs)("div",{className:"App",children:[(0,Kw.jsx)("h1",{className:"intro",id:"intro"}),(0,Kw.jsxs)("div",{className:"main",id:"main",children:[(0,Kw.jsxs)("h3",{children:["Hello! I am a 22 year old developer currently working for Meta in the Bay Area.",(0,Kw.jsx)("br",{}),"Check out my ",(0,Kw.jsxs)(Jw,{to:"/experience",className:"experience",children:["Experience",(0,Kw.jsx)("span",{style:{backgroundColor:"rgb(90, 90, 90)"},className:"underline"})," "]})," or even my ",(0,Kw.jsxs)(Jw,{to:"/photos",className:"photos",children:["Photography ",(0,Kw.jsx)("span",{style:{backgroundColor:"rgb(90, 90, 90)"},className:"underline"})," "]}),"!"]}),(0,Kw.jsxs)("h4",{className:"contact",children:[(0,Kw.jsx)("a",{className:"info",href:"mailto: keiferconvertino@gmail.com",children:"Email"}),", ",(0,Kw.jsx)("a",{className:"info",href:"https://www.linkedin.com/in/keifer-convertino/",children:"Linkedin"}),", ",(0,Kw.jsx)("a",{className:"info",href:"https://github.com/keiferconvertino",children:"GitHub"})]}),(0,Kw.jsx)("div",{className:"globe",children:(0,Kw.jsx)(sw,{ref:e,height:window.innerHeight/2,backgroundColor:"rgba(0,0,0,0)",showAtmosphere:!1,globeImageUrl:"//unpkg.com/three-globe/example/img/earth-dark.jpg",bumpImageUrl:"//unpkg.com/three-globe/example/img/earth-topology.png",pointsData:$w,pointLat:function(e){return e.lat},pointLng:function(e){return e.long},pointAltitude:function(e){return.025},pointRadius:.225,pointColor:function(e){return e.color},labelsData:$w,labelLat:function(e){return e.lat},labelLng:function(e){return e.long},labelText:function(e){return e.label},labelSize:function(e){return e.size},labelDotRadius:function(e){return 0},labelColor:function(e){return e.color},labelResolution:2,labelTypeFace:Aw,labelAltitude:function(e){return.025},pathsData:[eM],pathStroke:1.5,pathColor:function(){return["rgba(120, 120, 120, 0.2)","rgba(255, 255, 255, 0.2)"]},pathDashLength:.02,pathDashGap:.03,pathDashAnimateTime:25e3})})]})]})},nM=["soccer","zach2","scratches","jn3","andy","angel","bike","blur","blur2","door","eth","jackson","jn","jn2","kite","pond","ross2","skyspace","snow","streetLight","trees","zach"],lM=["1","2","3","5","6","7","8","9","10","11","12","13","14","15","16","17","18"];var qM=function(){var e=M((0,q.useState)(0),2),t=e[0],n=e[1],l=M((0,q.useState)(nM),2),r=l[0],i=l[1],a=M((0,q.useState)(2021),2),o=a[0],s=a[1];function u(e){document.getElementById("imgCarousel").classList.add("fadeOut"),document.getElementById("imgContainer").classList.remove("loaded"),0==e?(i(nM),s(2021)):(i(lM),s(2022)),n(0),document.getElementById("imgCarousel").classList.remove("fadeOut"),setTimeout((function(){document.getElementById("imgContainer").classList.add("loaded")}),300)}function A(e){document.getElementById("imgContainer").classList.remove("loaded"),document.getElementById("imgCarousel").classList.add("fadeOut"),setTimeout((function(){var t=parseInt(document.getElementById("carouselText").innerText.split(" ")[1])-1+e;-1==t&&(t=r.length-1),n(t%r.length),document.getElementById("imgCarousel").classList.remove("fadeOut"),setTimeout((function(){document.getElementById("imgContainer").classList.add("loaded")}),300)}),500)}function c(e){if(!e.repeat){var t=0;if("ArrowLeft"==e.key)t=-1;else{if("ArrowRight"!=e.key)return;t=1}document.getElementById("imgCarousel").classList.add("fadeOut"),document.getElementById("imgContainer").classList.remove("loaded");var l=parseInt(document.getElementById("carouselText").innerText.split(" ")[1])-1;setTimeout((function(){var e=l+t;-1==e&&(e=r.length-1),n(e%r.length),document.getElementById("imgCarousel").classList.remove("fadeOut"),setTimeout((function(){document.getElementById("imgContainer").classList.add("loaded")}),300)}),500)}}return(0,q.useEffect)((function(){var e=document.querySelector("#top-p"),t=[{t:"",ms:300},{t:"_",ms:300},{t:"",ms:300},{t:"_",ms:300},{t:"P_",ms:100},{t:"PH_",ms:100},{t:"PHO_",ms:100},{t:"PHOT_",ms:100},{t:"PHOTO_",ms:100},{t:"PHOTOG_",ms:100},{t:"PHOTOGR_",ms:100},{t:"PHOTOGRA_",ms:100},{t:"PHOTOGRAP_",ms:100},{t:"PHOTOGRAPH_",ms:100},{t:"PHOTOGRAPHY",ms:200}],n=0;!function l(){var q=t[n];e.innerText=q.t,++n<t.length?setTimeout(l,q.ms/1.75):(document.addEventListener("keydown",c),setTimeout((function(){document.getElementById("main-pic").style.opacity=1,setTimeout((function(){document.getElementById("imgContainer").classList.add("loaded")}),400)}),500))}()}),[]),(0,Kw.jsxs)("div",{children:[(0,Kw.jsx)(Jw,{className:"back",to:"/",children:"back"}),(0,Kw.jsx)("h1",{className:"top-p",id:"top-p"}),(0,Kw.jsxs)("div",{className:"main-pic",id:"main-pic",children:[(0,Kw.jsxs)("div",{className:"photoSelect",children:[2021==o&&(0,Kw.jsxs)("div",{style:{display:"flex"},children:[(0,Kw.jsx)("div",{className:"photoYear2021",style:{fontWeight:"bold"},onClick:function(){return u(0)},children:"2021"}),(0,Kw.jsx)("div",{className:"photoYear2022",onClick:function(){return u(1)},children:"2022"})]}),2022==o&&(0,Kw.jsxs)("div",{style:{display:"flex"},children:[(0,Kw.jsx)("div",{className:"photoYear2021",onClick:function(){return u(0)},children:"2021"}),(0,Kw.jsx)("div",{className:"photoYear2022",style:{fontWeight:"bold"},onClick:function(){return u(1)},children:"2022"})]})]}),(0,Kw.jsxs)("div",{id:"carousel",className:"carousel",children:[(0,Kw.jsx)("div",{id:"imgContainer",onClick:function(){return A(1)},className:"imgContainer",children:(0,Kw.jsx)("img",{id:"imgCarousel",className:"imgCarousel",src:"/images/"+r[t]+".jpg"})}),(0,Kw.jsxs)("div",{id:"carouselText",className:"carouselText",children:[(0,Kw.jsx)("span",{onClick:function(){return A(-1)},id:"leftArrow",children:"< "})," ",t+1," / ",r.length," ",(0,Kw.jsx)("span",{onClick:function(){return A(1)},id:"rightArrow",children:" >"})]})]})]})]})},rM=function(e){e&&e instanceof Function&&n.e(787).then(n.bind(n,787)).then((function(t){var n=t.getCLS,l=t.getFID,q=t.getFCP,r=t.getLCP,i=t.getTTFB;n(e),l(e),q(e),r(e),i(e)}))};var iM=function(){function e(e,t,n){var l=document.querySelector("#"+t),q=0;!function t(){var r=e.substring(0,q);l.innerText=r+"_",++q<e.length+1?setTimeout(t,100/e.length):(l.innerText=r,null!=n&&n())}()}return(0,q.useEffect)((function(){var t=document.querySelector("#top-p"),n=[{t:"",ms:300},{t:"_",ms:300},{t:"",ms:300},{t:"_",ms:300},{t:"E_",ms:100},{t:"EX_",ms:100},{t:"EXP_",ms:100},{t:"EXPE_",ms:100},{t:"EXPER_",ms:100},{t:"EXPERI_",ms:100},{t:"EXPERIE_",ms:100},{t:"EXPERIEN_",ms:100},{t:"EXPERIENC_",ms:100},{t:"EXPERIENCE",ms:100}],l=0;!function q(){var r=n[l];t.innerText=r.t,++l<n.length?setTimeout(q,r.ms/1.75):setTimeout((function(){document.getElementById("main-exp").style.opacity=1,e("Rice University","educationHeader",(function(){return e("Houston, TX","htx",(function(){return e("B.A. in Computer Science","major",(function(){return e("2018 - 2022","eduYear",(function(){return e("3.91 GPA","gpa",null)}))}))}))})),e("Tightrope Interactive","tightropeHeader",(function(){return e("Cold Spring, NY","tightropeLoc",(function(){return e("Software Engineer Intern","tightropeTitle",(function(){return e("May 2019 - August 2020","tightropeYear",(function(){return e("Researched and implemented a Thompson Sampling algorithm in Python that automated the distribution of web traffic towards landing pages for company products, entirely freeing the hours spent each week manually adjusting traffic rates.","tightropeInfo1",(function(){return e("Developed a REST API with Flask responsible for servicing this algorithm across company systems.","tightropeInfo2",(function(){return e("Increased the accuracy of revenue projections by over 20% by replacing old predictive models with a machine learning solution using XGBoost models on AWS Sagemaker.","tightropeInfo3",(function(){return e("Overhauled content management system with a Git-based static site generator workflow using Gatsby & React, allowing the creation of fast static sites that can use shared modular components.","tightropeInfo4",null)}))}))}))}))}))}))})),e("Meta","metaHeader",(function(){return e("Menlo Park, CA","metaLoc",(function(){return e("Software Engineer (EC3)","metaTitle",(function(){return e("August 2022 - Current","metaYear",(function(){return e("Incoming","metaInfo1",null)}))}))}))})),e("Indeed","indeedHeader",(function(){return e("Austin, TX","indeedLoc",(function(){return e("Software Developer Intern","indeedTitle",(function(){return e("May 2021 - August 2021","indeedYear",(function(){return e("Leveraged Apache Kafka in Java to develop a service for consuming, processing, and publishing application outcome logs in real time.","indeedInfo1",(function(){return e("Designed a pipeline on top of this service that reduced the latency of internal datasets from 3 hours to 10-30 minutes.","indeedInfo2",null)}))}))}))}))}))}),1e3)}()}),[]),(0,Kw.jsxs)("div",{children:[(0,Kw.jsx)(Jw,{className:"back",to:"/",children:"back"}),(0,Kw.jsx)("h1",{className:"top-p",id:"top-p"}),(0,Kw.jsx)("div",{className:"main-exp",id:"main-exp",children:(0,Kw.jsxs)("div",{className:"experienceContent",children:[(0,Kw.jsxs)("div",{className:"education",id:"education",children:[(0,Kw.jsx)("h3",{id:"educationHeader",children:"Education"}),(0,Kw.jsxs)("ul",{className:"dashed",children:[(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"htx"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"major"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"eduYear"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"gpa"})]})]}),(0,Kw.jsxs)("div",{className:"meta",id:"meta",children:[(0,Kw.jsx)("h3",{id:"metaHeader",children:"Current Job"}),(0,Kw.jsxs)("ul",{className:"dashed",children:[(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"metaLoc"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"metaTitle"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"metaYear"}),(0,Kw.jsx)("li",{id:"metaInfo1"})]})]}),(0,Kw.jsxs)("div",{className:"indeed",id:"indeed",children:[(0,Kw.jsx)("h3",{id:"indeedHeader",children:"Previous Job"}),(0,Kw.jsxs)("ul",{className:"dashed",children:[(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"indeedLoc"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"indeedTitle"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"indeedYear"}),(0,Kw.jsx)("li",{id:"indeedInfo1"}),(0,Kw.jsx)("li",{id:"indeedInfo2"})]})]}),(0,Kw.jsxs)("div",{className:"tightrope",id:"tightrope",children:[(0,Kw.jsx)("h3",{id:"tightropeHeader",children:"Previous Job"}),(0,Kw.jsxs)("ul",{className:"dashed",children:[(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"tightropeLoc"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"tightropeTitle"}),(0,Kw.jsx)("li",{style:{fontWeight:"bold"},id:"tightropeYear"}),(0,Kw.jsx)("li",{id:"tightropeInfo1"}),(0,Kw.jsx)("li",{id:"tightropeInfo2"}),(0,Kw.jsx)("li",{id:"tightropeInfo3"}),(0,Kw.jsx)("li",{id:"tightropeInfo4"})]})]})]})})]})};r.render((0,Kw.jsx)(q.StrictMode,{children:(0,Kw.jsx)(Zw,{children:(0,Kw.jsxs)(Sw,{children:[(0,Kw.jsx)(ww,{path:"/",element:(0,Kw.jsx)(tM,{})}),(0,Kw.jsx)(ww,{path:"/photos",element:(0,Kw.jsx)(qM,{})}),(0,Kw.jsx)(ww,{path:"/experience",element:(0,Kw.jsx)(iM,{})})]})})}),document.getElementById("root")),rM()},494:function(e){function t(e,t,n){var l,q,r,i,a;function o(){var s=Date.now()-i;s<t&&s>=0?l=setTimeout(o,t-s):(l=null,n||(a=e.apply(r,q),r=q=null))}null==t&&(t=100);var s=function(){r=this,q=arguments,i=Date.now();var s=n&&!l;return l||(l=setTimeout(o,t)),s&&(a=e.apply(r,q),r=q=null),a};return s.clear=function(){l&&(clearTimeout(l),l=null)},s.flush=function(){l&&(a=e.apply(r,q),r=q=null,clearTimeout(l),l=null)},s}t.debounce=t,e.exports=t},89:function(e){"use strict";function t(e,t,r){r=r||2;var i,a,o,A,c,h,f,d=t&&t.length,p=d?t[0]*r:e.length,x=n(e,0,p,r,!0),v=[];if(!x||x.next===x.prev)return v;if(d&&(x=function(e,t,q,r){var i,a,o,A=[];for(i=0,a=t.length;i<a;i++)(o=n(e,t[i]*r,i<a-1?t[i+1]*r:e.length,r,!1))===o.next&&(o.steiner=!0),A.push(m(o));for(A.sort(s),i=0;i<A.length;i++)q=l(q=u(A[i],q),q.next);return q}(e,t,x,r)),e.length>80*r){i=o=e[0],a=A=e[1];for(var g=r;g<p;g+=r)(c=e[g])<i&&(i=c),(h=e[g+1])<a&&(a=h),c>o&&(o=c),h>A&&(A=h);f=0!==(f=Math.max(o-i,A-a))?1/f:0}return q(x,v,r,i,a,f),v}function n(e,t,n,l,q){var r,i;if(q===S(e,t,n,l)>0)for(r=t;r<n;r+=l)i=b(r,e[r],e[r+1],i);else for(r=n-l;r>=t;r-=l)i=b(r,e[r],e[r+1],i);return i&&p(i,i.next)&&(w(i),i=i.next),i}function l(e,t){if(!e)return e;t||(t=e);var n,l=e;do{if(n=!1,l.steiner||!p(l,l.next)&&0!==d(l.prev,l,l.next))l=l.next;else{if(w(l),(l=t=l.prev)===l.next)break;n=!0}}while(n||l!==t);return t}function q(e,t,n,s,u,A,m){if(e){!m&&A&&function(e,t,n,l){var q=e;do{null===q.z&&(q.z=c(q.x,q.y,t,n,l)),q.prevZ=q.prev,q.nextZ=q.next,q=q.next}while(q!==e);q.prevZ.nextZ=null,q.prevZ=null,function(e){var t,n,l,q,r,i,a,o,s=1;do{for(n=e,e=null,r=null,i=0;n;){for(i++,l=n,a=0,t=0;t<s&&(a++,l=l.nextZ);t++);for(o=s;a>0||o>0&&l;)0!==a&&(0===o||!l||n.z<=l.z)?(q=n,n=n.nextZ,a--):(q=l,l=l.nextZ,o--),r?r.nextZ=q:e=q,q.prevZ=r,r=q;n=l}r.nextZ=null,s*=2}while(i>1)}(q)}(e,s,u,A);for(var h,f,d=e;e.prev!==e.next;)if(h=e.prev,f=e.next,A?i(e,s,u,A):r(e))t.push(h.i/n),t.push(e.i/n),t.push(f.i/n),w(e),e=f.next,d=f.next;else if((e=f)===d){m?1===m?q(e=a(l(e),t,n),t,n,s,u,A,2):2===m&&o(e,t,n,s,u,A):q(l(e),t,n,s,u,A,1);break}}}function r(e){var t=e.prev,n=e,l=e.next;if(d(t,n,l)>=0)return!1;for(var q=e.next.next;q!==e.prev;){if(h(t.x,t.y,n.x,n.y,l.x,l.y,q.x,q.y)&&d(q.prev,q,q.next)>=0)return!1;q=q.next}return!0}function i(e,t,n,l){var q=e.prev,r=e,i=e.next;if(d(q,r,i)>=0)return!1;for(var a=q.x<r.x?q.x<i.x?q.x:i.x:r.x<i.x?r.x:i.x,o=q.y<r.y?q.y<i.y?q.y:i.y:r.y<i.y?r.y:i.y,s=q.x>r.x?q.x>i.x?q.x:i.x:r.x>i.x?r.x:i.x,u=q.y>r.y?q.y>i.y?q.y:i.y:r.y>i.y?r.y:i.y,A=c(a,o,t,n,l),m=c(s,u,t,n,l),f=e.prevZ,p=e.nextZ;f&&f.z>=A&&p&&p.z<=m;){if(f!==e.prev&&f!==e.next&&h(q.x,q.y,r.x,r.y,i.x,i.y,f.x,f.y)&&d(f.prev,f,f.next)>=0)return!1;if(f=f.prevZ,p!==e.prev&&p!==e.next&&h(q.x,q.y,r.x,r.y,i.x,i.y,p.x,p.y)&&d(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;f&&f.z>=A;){if(f!==e.prev&&f!==e.next&&h(q.x,q.y,r.x,r.y,i.x,i.y,f.x,f.y)&&d(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;p&&p.z<=m;){if(p!==e.prev&&p!==e.next&&h(q.x,q.y,r.x,r.y,i.x,i.y,p.x,p.y)&&d(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function a(e,t,n){var q=e;do{var r=q.prev,i=q.next.next;!p(r,i)&&x(r,q,q.next,i)&&_(r,i)&&_(i,r)&&(t.push(r.i/n),t.push(q.i/n),t.push(i.i/n),w(q),w(q.next),q=e=i),q=q.next}while(q!==e);return l(q)}function o(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&f(o,s)){var u=y(o,s);return o=l(o,o.next),u=l(u,u.next),q(o,t,n,r,i,a),void q(u,t,n,r,i,a)}s=s.next}o=o.next}while(o!==e)}function s(e,t){return e.x-t.x}function u(e,t){var n=function(e,t){var n,l=t,q=e.x,r=e.y,i=-1/0;do{if(r<=l.y&&r>=l.next.y&&l.next.y!==l.y){var a=l.x+(r-l.y)*(l.next.x-l.x)/(l.next.y-l.y);if(a<=q&&a>i){if(i=a,a===q){if(r===l.y)return l;if(r===l.next.y)return l.next}n=l.x<l.next.x?l:l.next}}l=l.next}while(l!==t);if(!n)return null;if(q===i)return n;var o,s=n,u=n.x,c=n.y,m=1/0;l=n;do{q>=l.x&&l.x>=u&&q!==l.x&&h(r<c?q:i,r,u,c,r<c?i:q,r,l.x,l.y)&&(o=Math.abs(r-l.y)/(q-l.x),_(l,e)&&(o<m||o===m&&(l.x>n.x||l.x===n.x&&A(n,l)))&&(n=l,m=o)),l=l.next}while(l!==s);return n}(e,t);if(!n)return t;var q=y(n,e),r=l(n,n.next);return l(q,q.next),t===n?r:t}function A(e,t){return d(e.prev,e,t.prev)<0&&d(t.next,e,e.next)<0}function c(e,t,n,l,q){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*q)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-l)*q)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function m(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function h(e,t,n,l,q,r,i,a){return(q-i)*(t-a)-(e-i)*(r-a)>=0&&(e-i)*(l-a)-(n-i)*(t-a)>=0&&(n-i)*(r-a)-(q-i)*(l-a)>=0}function f(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&x(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(_(e,t)&&_(t,e)&&function(e,t){var n=e,l=!1,q=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!==n.next.y>r&&n.next.y!==n.y&&q<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(l=!l),n=n.next}while(n!==e);return l}(e,t)&&(d(e.prev,e,t.prev)||d(e,t.prev,t))||p(e,t)&&d(e.prev,e,e.next)>0&&d(t.prev,t,t.next)>0)}function d(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function p(e,t){return e.x===t.x&&e.y===t.y}function x(e,t,n,l){var q=g(d(e,t,n)),r=g(d(e,t,l)),i=g(d(n,l,e)),a=g(d(n,l,t));return q!==r&&i!==a||(!(0!==q||!v(e,n,t))||(!(0!==r||!v(e,l,t))||(!(0!==i||!v(n,e,l))||!(0!==a||!v(n,t,l)))))}function v(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function g(e){return e>0?1:e<0?-1:0}function _(e,t){return d(e.prev,e,e.next)<0?d(e,t,e.next)>=0&&d(e,e.prev,t)>=0:d(e,t,e.prev)<0||d(e,e.next,t)<0}function y(e,t){var n=new M(e.i,e.x,e.y),l=new M(t.i,t.x,t.y),q=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=q,q.prev=n,l.next=n,n.prev=l,r.next=l,l.prev=r,l}function b(e,t,n,l){var q=new M(e,t,n);return l?(q.next=l.next,q.prev=l,l.next.prev=q,l.next=q):(q.prev=q,q.next=q),q}function w(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function M(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function S(e,t,n,l){for(var q=0,r=t,i=n-l;r<n;r+=l)q+=(e[i]-e[r])*(e[r+1]+e[i+1]),i=r;return q}e.exports=t,e.exports.default=t,t.deviation=function(e,t,n,l){var q=t&&t.length,r=q?t[0]*n:e.length,i=Math.abs(S(e,0,r,n));if(q)for(var a=0,o=t.length;a<o;a++){var s=t[a]*n,u=a<o-1?t[a+1]*n:e.length;i-=Math.abs(S(e,s,u,n))}var A=0;for(a=0;a<l.length;a+=3){var c=l[a]*n,m=l[a+1]*n,h=l[a+2]*n;A+=Math.abs((e[c]-e[h])*(e[m+1]-e[c+1])-(e[c]-e[m])*(e[h+1]-e[c+1]))}return 0===i&&0===A?0:Math.abs((A-i)/i)},t.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},l=0,q=0;q<e.length;q++){for(var r=0;r<e[q].length;r++)for(var i=0;i<t;i++)n.vertices.push(e[q][r][i]);q>0&&(l+=e[q-1].length,n.holes.push(l))}return n}},253:function(e){e.exports=function(e){function t(l){if(n[l])return n[l].exports;var q=n[l]={exports:{},id:l,loaded:!1};return e[l].call(q.exports,q,q.exports,t),q.loaded=!0,q.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";var l=n(1),q=function(){function e(e,t,n){void 0===e&&(e=NaN),void 0===t&&(t=NaN),void 0===n&&(n=!1),this._minFPS=t,this._maxFPS=e,this._timeScale=1,this._currentTick=0,this._currentTime=0,this._tickDeltaTime=0,this._isRunning=!1,this._maxInterval=isNaN(this._minFPS)?NaN:1e3/this._minFPS,this._minInterval=isNaN(this._maxFPS)?NaN:1e3/this._maxFPS,this._onResume=new l.default,this._onPause=new l.default,this._onTick=new l.default,this._onTickOncePerFrame=new l.default,n||this.resume()}return e.prototype.updateOnce=function(e){e(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._lastTimeUpdated=this.getTimer(),this._onResume.dispatch(),this.animateOnce())},e.prototype.pause=function(){this._isRunning&&(this._isRunning=!1,this._onPause.dispatch(),window.cancelAnimationFrame(this._animationFrameHandle))},e.prototype.dispose=function(){this.pause(),this._onResume.removeAll(),this._onPause.removeAll(),this._onTick.removeAll()},Object.defineProperty(e.prototype,"currentTick",{get:function(){return this._currentTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentTimeSeconds",{get:function(){return this._currentTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tickDeltaTimeSeconds",{get:function(){return this._tickDeltaTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timeScale",{get:function(){return this._timeScale},set:function(e){this._timeScale!==e&&(this._timeScale=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onResume",{get:function(){return this._onResume},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onPause",{get:function(){return this._onPause},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onTick",{get:function(){return this._onTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onTickOncePerFrame",{get:function(){return this._onTickOncePerFrame},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isRunning",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),e.prototype.animateOnce=function(){var e=this;this._animationFrameHandle=window.requestAnimationFrame((function(){return e.onFrame()}))},e.prototype.onFrame=function(){if(this._now=this.getTimer(),this._frameDeltaTime=this._now-this._lastTimeUpdated,isNaN(this._minInterval)||this._frameDeltaTime>=this._minInterval)if(isNaN(this._maxInterval))this.update(this._frameDeltaTime*this._timeScale,!0),this._lastTimeUpdated=this._now;else for(this._interval=Math.min(this._frameDeltaTime,this._maxInterval);this._now>=this._lastTimeUpdated+this._interval;)this.update(this._interval*this._timeScale,this._now<=this._lastTimeUpdated+2*this._maxInterval),this._lastTimeUpdated+=this._interval;this._isRunning&&this.animateOnce()},e.prototype.update=function(e,t){void 0===t&&(t=!0),this._currentTick++,this._currentTime+=e,this._tickDeltaTime=e,this._onTick.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick),t&&this._onTickOncePerFrame.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.getTimer=function(){return Date.now()},e}();Object.defineProperty(t,"__esModule",{value:!0}),t.default=q},function(e,t,n){!function(t,n){e.exports=n()}(0,(function(){return function(e){function t(l){if(n[l])return n[l].exports;var q=n[l]={exports:{},id:l,loaded:!1};return e[l].call(q.exports,q,q.exports,t),q.loaded=!0,q.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){"use strict";var n=function(){function e(){this.functions=[]}return e.prototype.add=function(e){return-1===this.functions.indexOf(e)&&(this.functions.push(e),!0)},e.prototype.remove=function(e){var t=this.functions.indexOf(e);return t>-1&&(this.functions.splice(t,1),!0)},e.prototype.removeAll=function(){return this.functions.length>0&&(this.functions.length=0,!0)},e.prototype.dispatch=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.functions.concat().forEach((function(t){t.apply(void 0,e)}))},Object.defineProperty(e.prototype,"numItems",{get:function(){return this.functions.length},enumerable:!0,configurable:!0}),e}();Object.defineProperty(t,"__esModule",{value:!0}),t.default=n}])}))}])},189:function(e,t,n){var l=n(38).default,q=n(319).default;e.exports=function(e){return q(e).reduce((function(e,t){var n=l(t,2),q=n[0],r=n[1];return e[q]=r,e}),{})}},725:function(e){"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;function q(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var l={};return"abcdefghijklmnopqrst".split("").forEach((function(e){l[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},l)).join("")}catch(q){return!1}}()?Object.assign:function(e,r){for(var i,a,o=q(e),s=1;s<arguments.length;s++){for(var u in i=Object(arguments[s]))n.call(i,u)&&(o[u]=i[u]);if(t){a=t(i);for(var A=0;A<a.length;A++)l.call(i,a[A])&&(o[a[A]]=i[a[A]])}}return o}},888:function(e,t,n){"use strict";var l=n(47);function q(){}function r(){}r.resetWarningCache=q,e.exports=function(){function e(e,t,n,q,r,i){if(i!==l){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:q};return n.PropTypes=n,n}},7:function(e,t,n){e.exports=n(888)()},47:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},463:function(e,t,n){"use strict";var l=n(791),q=n(725),r=n(296);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!l)throw Error(i(227));var a=new Set,o={};function s(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)a.add(t[e])}var A=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),c=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,m=Object.prototype.hasOwnProperty,h={},f={};function d(e,t,n,l,q,r,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=l,this.attributeNamespace=q,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=i}var p={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){p[e]=new d(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];p[t]=new d(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){p[e]=new d(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){p[e]=new d(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){p[e]=new d(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){p[e]=new d(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){p[e]=new d(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){p[e]=new d(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){p[e]=new d(e,5,!1,e.toLowerCase(),null,!1,!1)}));var x=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function g(e,t,n,l){var q=p.hasOwnProperty(t)?p[t]:null;(null!==q?0===q.type:!l&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,l){if(null===t||"undefined"===typeof t||function(e,t,n,l){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!l&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,l))return!0;if(l)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,q,l)&&(n=null),l||null===q?function(e){return!!m.call(f,e)||!m.call(h,e)&&(c.test(e)?f[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):q.mustUseProperty?e[q.propertyName]=null===n?3!==q.type&&"":n:(t=q.attributeName,l=q.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(q=q.type)||4===q&&!0===n?"":""+n,l?e.setAttributeNS(l,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(x,v);p[t]=new d(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(x,v);p[t]=new d(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(x,v);p[t]=new d(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){p[e]=new d(e,1,!1,e.toLowerCase(),null,!1,!1)})),p.xlinkHref=new d("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){p[e]=new d(e,1,!1,e.toLowerCase(),null,!0,!0)}));var _=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=60103,b=60106,w=60107,M=60108,S=60114,E=60109,z=60110,k=60112,T=60113,C=60120,L=60115,P=60116,R=60121,D=60128,I=60129,O=60130,B=60131;if("function"===typeof Symbol&&Symbol.for){var N=Symbol.for;y=N("react.element"),b=N("react.portal"),w=N("react.fragment"),M=N("react.strict_mode"),S=N("react.profiler"),E=N("react.provider"),z=N("react.context"),k=N("react.forward_ref"),T=N("react.suspense"),C=N("react.suspense_list"),L=N("react.memo"),P=N("react.lazy"),R=N("react.block"),N("react.scope"),D=N("react.opaque.id"),I=N("react.debug_trace_mode"),O=N("react.offscreen"),B=N("react.legacy_hidden")}var U,F="function"===typeof Symbol&&Symbol.iterator;function H(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function G(e){if(void 0===U)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var j=!1;function V(e,t){if(!e||j)return"";j=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(o){var l=o}Reflect.construct(e,[],t)}else{try{t.call()}catch(o){l=o}e.call(t.prototype)}else{try{throw Error()}catch(o){l=o}e()}}catch(o){if(o&&l&&"string"===typeof o.stack){for(var q=o.stack.split("\n"),r=l.stack.split("\n"),i=q.length-1,a=r.length-1;1<=i&&0<=a&&q[i]!==r[a];)a--;for(;1<=i&&0<=a;i--,a--)if(q[i]!==r[a]){if(1!==i||1!==a)do{if(i--,0>--a||q[i]!==r[a])return"\n"+q[i].replace(" at new "," at ")}while(1<=i&&0<=a);break}}}finally{j=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?G(e):""}function W(e){switch(e.tag){case 5:return G(e.type);case 16:return G("Lazy");case 13:return G("Suspense");case 19:return G("SuspenseList");case 0:case 2:case 15:return e=V(e.type,!1);case 11:return e=V(e.type.render,!1);case 22:return e=V(e.type._render,!1);case 1:return e=V(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case w:return"Fragment";case b:return"Portal";case S:return"Profiler";case M:return"StrictMode";case T:return"Suspense";case C:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case z:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case k:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return Q(e.type);case R:return Q(e._render);case P:t=e._payload,e=e._init;try{return Q(e(t))}catch(n){}}return null}function Y(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function X(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Z(e){e._valueTracker||(e._valueTracker=function(e){var t=X(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),l=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var q=n.get,r=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return q.call(this)},set:function(e){l=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return l},setValue:function(e){l=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),l="";return e&&(l=X(e)?e.checked?"true":"false":e.value),(e=l)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function $(e,t){var n=t.checked;return q({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,l=null!=t.checked?t.checked:t.defaultChecked;n=Y(null!=t.value?t.value:n),e._wrapperState={initialChecked:l,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&g(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Y(t.value),l=t.type;if(null!=n)"number"===l?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===l||"reset"===l)return void e.removeAttribute("value");t.hasOwnProperty("value")?qe(e,t.type,n):t.hasOwnProperty("defaultValue")&&qe(e,t.type,Y(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function le(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var l=t.type;if(!("submit"!==l&&"reset"!==l||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function qe(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function re(e,t){return e=q({children:void 0},t),(t=function(e){var t="";return l.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,l){if(e=e.options,t){t={};for(var q=0;q<n.length;q++)t["$"+n[q]]=!0;for(n=0;n<e.length;n++)q=t.hasOwnProperty("$"+e[n].value),e[n].selected!==q&&(e[n].selected=q),q&&l&&(e[n].defaultSelected=!0)}else{for(n=""+Y(n),t=null,q=0;q<e.length;q++){if(e[q].value===n)return e[q].selected=!0,void(l&&(e[q].defaultSelected=!0));null!==t||e[q].disabled||(t=e[q])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return q({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Y(n)}}function se(e,t){var n=Y(t.value),l=Y(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=l&&(e.defaultValue=""+l)}function ue(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ae="http://www.w3.org/1999/xhtml",ce="http://www.w3.org/2000/svg";function me(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?me(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var fe,de,pe=(de=function(e,t){if(e.namespaceURI!==ce||"innerHTML"in e)e.innerHTML=t;else{for((fe=fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,l){MSApp.execUnsafeLocalFunction((function(){return de(e,t)}))}:de);function xe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ve={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ge=["Webkit","ms","Moz","O"];function _e(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||ve.hasOwnProperty(e)&&ve[e]?(""+t).trim():t+"px"}function ye(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var l=0===n.indexOf("--"),q=_e(n,t[n],l);"float"===n&&(n="cssFloat"),l?e.setProperty(n,q):e[n]=q}}Object.keys(ve).forEach((function(e){ge.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ve[t]=ve[e]}))}));var be=q({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function we(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function Me(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,ze=null,ke=null;function Te(e){if(e=lq(e)){if("function"!==typeof Ee)throw Error(i(280));var t=e.stateNode;t&&(t=rq(t),Ee(e.stateNode,e.type,t))}}function Ce(e){ze?ke?ke.push(e):ke=[e]:ze=e}function Le(){if(ze){var e=ze,t=ke;if(ke=ze=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Pe(e,t){return e(t)}function Re(e,t,n,l,q){return e(t,n,l,q)}function De(){}var Ie=Pe,Oe=!1,Be=!1;function Ne(){null===ze&&null===ke||(De(),Le())}function Ue(e,t){var n=e.stateNode;if(null===n)return null;var l=rq(n);if(null===l)return null;n=l[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(l=!l.disabled)||(l=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!l;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(i(231,t,typeof n));return n}var Fe=!1;if(A)try{var He={};Object.defineProperty(He,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",He,He),window.removeEventListener("test",He,He)}catch(de){Fe=!1}function Ge(e,t,n,l,q,r,i,a,o){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(u){this.onError(u)}}var je=!1,Ve=null,We=!1,Qe=null,Ye={onError:function(e){je=!0,Ve=e}};function Xe(e,t,n,l,q,r,i,a,o){je=!1,Ve=null,Ge.apply(Ye,arguments)}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ke(e){if(Ze(e)!==e)throw Error(i(188))}function $e(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,l=t;;){var q=n.return;if(null===q)break;var r=q.alternate;if(null===r){if(null!==(l=q.return)){n=l;continue}break}if(q.child===r.child){for(r=q.child;r;){if(r===n)return Ke(q),e;if(r===l)return Ke(q),t;r=r.sibling}throw Error(i(188))}if(n.return!==l.return)n=q,l=r;else{for(var a=!1,o=q.child;o;){if(o===n){a=!0,n=q,l=r;break}if(o===l){a=!0,l=q,n=r;break}o=o.sibling}if(!a){for(o=r.child;o;){if(o===n){a=!0,n=r,l=q;break}if(o===l){a=!0,l=r,n=q;break}o=o.sibling}if(!a)throw Error(i(189))}}if(n.alternate!==l)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var tt,nt,lt,qt,rt=!1,it=[],at=null,ot=null,st=null,ut=new Map,At=new Map,ct=[],mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,n,l,q){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:q,targetContainers:[l]}}function ft(e,t){switch(e){case"focusin":case"focusout":at=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":st=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":At.delete(t.pointerId)}}function dt(e,t,n,l,q,r){return null===e||e.nativeEvent!==r?(e=ht(t,n,l,q,r),null!==t&&(null!==(t=lq(t))&&nt(t)),e):(e.eventSystemFlags|=l,t=e.targetContainers,null!==q&&-1===t.indexOf(q)&&t.push(q),e)}function pt(e){var t=nq(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void qt(e.lanePriority,(function(){r.unstable_runWithPriority(e.priority,(function(){lt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function xt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=lq(n))&&nt(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){xt(e)&&n.delete(t)}function gt(){for(rt=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=lq(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var n=$t(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&it.shift()}null!==at&&xt(at)&&(at=null),null!==ot&&xt(ot)&&(ot=null),null!==st&&xt(st)&&(st=null),ut.forEach(vt),At.forEach(vt)}function _t(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,gt)))}function yt(e){function t(t){return _t(t,e)}if(0<it.length){_t(it[0],e);for(var n=1;n<it.length;n++){var l=it[n];l.blockedOn===e&&(l.blockedOn=null)}}for(null!==at&&_t(at,e),null!==ot&&_t(ot,e),null!==st&&_t(st,e),ut.forEach(t),At.forEach(t),n=0;n<ct.length;n++)(l=ct[n]).blockedOn===e&&(l.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)pt(n),null===n.blockedOn&&ct.shift()}function bt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wt={animationend:bt("Animation","AnimationEnd"),animationiteration:bt("Animation","AnimationIteration"),animationstart:bt("Animation","AnimationStart"),transitionend:bt("Transition","TransitionEnd")},Mt={},St={};function Et(e){if(Mt[e])return Mt[e];if(!wt[e])return e;var t,n=wt[e];for(t in n)if(n.hasOwnProperty(t)&&t in St)return Mt[e]=n[t];return e}A&&(St=document.createElement("div").style,"AnimationEvent"in window||(delete wt.animationend.animation,delete wt.animationiteration.animation,delete wt.animationstart.animation),"TransitionEvent"in window||delete wt.transitionend.transition);var zt=Et("animationend"),kt=Et("animationiteration"),Tt=Et("animationstart"),Ct=Et("transitionend"),Lt=new Map,Pt=new Map,Rt=["abort","abort",zt,"animationEnd",kt,"animationIteration",Tt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ct,"transitionEnd","waiting","waiting"];function Dt(e,t){for(var n=0;n<e.length;n+=2){var l=e[n],q=e[n+1];q="on"+(q[0].toUpperCase()+q.slice(1)),Pt.set(l,t),Lt.set(l,q),s(q,[l])}}(0,r.unstable_now)();var It=8;function Ot(e){if(0!==(1&e))return It=15,1;if(0!==(2&e))return It=14,2;if(0!==(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!==(32&e)?(It=11,32):0!==(t=192&e)?(It=10,t):0!==(256&e)?(It=9,256):0!==(t=3584&e)?(It=8,t):0!==(4096&e)?(It=7,4096):0!==(t=4186112&e)?(It=6,t):0!==(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!==(134217728&e)?(It=3,134217728):0!==(t=805306368&e)?(It=2,t):0!==(1073741824&e)?(It=1,1073741824):(It=8,e)}function Bt(e,t){var n=e.pendingLanes;if(0===n)return It=0;var l=0,q=0,r=e.expiredLanes,i=e.suspendedLanes,a=e.pingedLanes;if(0!==r)l=r,q=It=15;else if(0!==(r=134217727&n)){var o=r&~i;0!==o?(l=Ot(o),q=It):0!==(a&=r)&&(l=Ot(a),q=It)}else 0!==(r=n&~i)?(l=Ot(r),q=It):0!==a&&(l=Ot(a),q=It);if(0===l)return 0;if(l=n&((0>(l=31-jt(l))?0:1<<l)<<1)-1,0!==t&&t!==l&&0===(t&i)){if(Ot(t),q<=It)return t;It=q}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=l;0<t;)q=1<<(n=31-jt(t)),l|=e[n],t&=~q;return l}function Nt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ft(24&~t))?Ut(10,t):e;case 10:return 0===(e=Ft(192&~t))?Ut(8,t):e;case 8:return 0===(e=Ft(3584&~t))&&(0===(e=Ft(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ft(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ft(e){return e&-e}function Ht(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Gt(e,t,n){e.pendingLanes|=t;var l=t-1;e.suspendedLanes&=l,e.pingedLanes&=l,(e=e.eventTimes)[t=31-jt(t)]=n}var jt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/Wt|0)|0},Vt=Math.log,Wt=Math.LN2;var Qt=r.unstable_UserBlockingPriority,Yt=r.unstable_runWithPriority,Xt=!0;function Zt(e,t,n,l){Oe||De();var q=Kt,r=Oe;Oe=!0;try{Re(q,e,t,n,l)}finally{(Oe=r)||Ne()}}function Jt(e,t,n,l){Yt(Qt,Kt.bind(null,e,t,n,l))}function Kt(e,t,n,l){var q;if(Xt)if((q=0===(4&t))&&0<it.length&&-1<mt.indexOf(e))e=ht(null,e,t,n,l),it.push(e);else{var r=$t(e,t,n,l);if(null===r)q&&ft(e,l);else{if(q){if(-1<mt.indexOf(e))return e=ht(r,e,t,n,l),void it.push(e);if(function(e,t,n,l,q){switch(t){case"focusin":return at=dt(at,e,t,n,l,q),!0;case"dragenter":return ot=dt(ot,e,t,n,l,q),!0;case"mouseover":return st=dt(st,e,t,n,l,q),!0;case"pointerover":var r=q.pointerId;return ut.set(r,dt(ut.get(r)||null,e,t,n,l,q)),!0;case"gotpointercapture":return r=q.pointerId,At.set(r,dt(At.get(r)||null,e,t,n,l,q)),!0}return!1}(r,e,t,n,l))return;ft(e,l)}Dl(e,t,l,null,n)}}}function $t(e,t,n,l){var q=Se(l);if(null!==(q=nq(q))){var r=Ze(q);if(null===r)q=null;else{var i=r.tag;if(13===i){if(null!==(q=Je(r)))return q;q=null}else if(3===i){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;q=null}else r!==q&&(q=null)}}return Dl(e,t,l,q,n),null}var en=null,tn=null,nn=null;function ln(){if(nn)return nn;var e,t,n=tn,l=n.length,q="value"in en?en.value:en.textContent,r=q.length;for(e=0;e<l&&n[e]===q[e];e++);var i=l-e;for(t=1;t<=i&&n[l-t]===q[r-t];t++);return nn=q.slice(e,1<t?1-t:void 0)}function qn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,l,q,r){for(var i in this._reactName=t,this._targetInst=l,this.type=n,this.nativeEvent=q,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(q):q[i]);return this.isDefaultPrevented=(null!=q.defaultPrevented?q.defaultPrevented:!1===q.returnValue)?rn:an,this.isPropagationStopped=an,this}return q(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var sn,un,An,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},mn=on(cn),hn=q({},cn,{view:0,detail:0}),fn=on(hn),dn=q({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==An&&(An&&"mousemove"===e.type?(sn=e.screenX-An.screenX,un=e.screenY-An.screenY):un=sn=0,An=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:un}}),pn=on(dn),xn=on(q({},dn,{dataTransfer:0})),vn=on(q({},hn,{relatedTarget:0})),gn=on(q({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),_n=q({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yn=on(_n),bn=on(q({},cn,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function zn(){return En}var kn=q({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=qn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Mn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zn,charCode:function(e){return"keypress"===e.type?qn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?qn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=on(kn),Cn=on(q({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ln=on(q({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zn})),Pn=on(q({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=q({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Dn=on(Rn),In=[9,13,27,32],On=A&&"CompositionEvent"in window,Bn=null;A&&"documentMode"in document&&(Bn=document.documentMode);var Nn=A&&"TextEvent"in window&&!Bn,Un=A&&(!On||Bn&&8<Bn&&11>=Bn),Fn=String.fromCharCode(32),Hn=!1;function Gn(e,t){switch(e){case"keyup":return-1!==In.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function jn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function Yn(e,t,n,l){Ce(l),0<(t=Ol(t,"onChange")).length&&(n=new mn("onChange","change",null,n,l),e.push({event:n,listeners:t}))}var Xn=null,Zn=null;function Jn(e){kl(e,0)}function Kn(e){if(J(qq(e)))return e}function $n(e,t){if("change"===e)return t}var el=!1;if(A){var tl;if(A){var nl="oninput"in document;if(!nl){var ll=document.createElement("div");ll.setAttribute("oninput","return;"),nl="function"===typeof ll.oninput}tl=nl}else tl=!1;el=tl&&(!document.documentMode||9<document.documentMode)}function ql(){Xn&&(Xn.detachEvent("onpropertychange",rl),Zn=Xn=null)}function rl(e){if("value"===e.propertyName&&Kn(Zn)){var t=[];if(Yn(t,Zn,e,Se(e)),e=Jn,Oe)e(t);else{Oe=!0;try{Pe(e,t)}finally{Oe=!1,Ne()}}}}function il(e,t,n){"focusin"===e?(ql(),Zn=n,(Xn=t).attachEvent("onpropertychange",rl)):"focusout"===e&&ql()}function al(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Zn)}function ol(e,t){if("click"===e)return Kn(t)}function sl(e,t){if("input"===e||"change"===e)return Kn(t)}var ul="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},Al=Object.prototype.hasOwnProperty;function cl(e,t){if(ul(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),l=Object.keys(t);if(n.length!==l.length)return!1;for(l=0;l<n.length;l++)if(!Al.call(t,n[l])||!ul(e[n[l]],t[n[l]]))return!1;return!0}function ml(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function hl(e,t){var n,l=ml(e);for(e=0;l;){if(3===l.nodeType){if(n=e+l.textContent.length,e<=t&&n>=t)return{node:l,offset:t-e};e=n}e:{for(;l;){if(l.nextSibling){l=l.nextSibling;break e}l=l.parentNode}l=void 0}l=ml(l)}}function fl(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fl(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dl(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(l){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pl(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var xl=A&&"documentMode"in document&&11>=document.documentMode,vl=null,gl=null,_l=null,yl=!1;function bl(e,t,n){var l=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yl||null==vl||vl!==K(l)||("selectionStart"in(l=vl)&&pl(l)?l={start:l.selectionStart,end:l.selectionEnd}:l={anchorNode:(l=(l.ownerDocument&&l.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:l.anchorOffset,focusNode:l.focusNode,focusOffset:l.focusOffset},_l&&cl(_l,l)||(_l=l,0<(l=Ol(gl,"onSelect")).length&&(t=new mn("onSelect","select",null,t,n),e.push({event:t,listeners:l}),t.target=vl)))}Dt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Dt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Dt(Rt,2);for(var wl="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ml=0;Ml<wl.length;Ml++)Pt.set(wl[Ml],0);u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sl="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),El=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sl));function zl(e,t,n){var l=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,l,q,r,a,o,s){if(Xe.apply(this,arguments),je){if(!je)throw Error(i(198));var u=Ve;je=!1,Ve=null,We||(We=!0,Qe=u)}}(l,t,void 0,e),e.currentTarget=null}function kl(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var l=e[n],q=l.event;l=l.listeners;e:{var r=void 0;if(t)for(var i=l.length-1;0<=i;i--){var a=l[i],o=a.instance,s=a.currentTarget;if(a=a.listener,o!==r&&q.isPropagationStopped())break e;zl(q,a,s),r=o}else for(i=0;i<l.length;i++){if(o=(a=l[i]).instance,s=a.currentTarget,a=a.listener,o!==r&&q.isPropagationStopped())break e;zl(q,a,s),r=o}}}if(We)throw e=Qe,We=!1,Qe=null,e}function Tl(e,t){var n=iq(t),l=e+"__bubble";n.has(l)||(Rl(t,e,2,!1),n.add(l))}var Cl="_reactListening"+Math.random().toString(36).slice(2);function Ll(e){e[Cl]||(e[Cl]=!0,a.forEach((function(t){El.has(t)||Pl(t,!1,e,null),Pl(t,!0,e,null)})))}function Pl(e,t,n,l){var q=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,r=n;if("selectionchange"===e&&9!==n.nodeType&&(r=n.ownerDocument),null!==l&&!t&&El.has(e)){if("scroll"!==e)return;q|=2,r=l}var i=iq(r),a=e+"__"+(t?"capture":"bubble");i.has(a)||(t&&(q|=4),Rl(r,e,q,t),i.add(a))}function Rl(e,t,n,l){var q=Pt.get(t);switch(void 0===q?2:q){case 0:q=Zt;break;case 1:q=Jt;break;default:q=Kt}n=q.bind(null,t,n,e),q=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(q=!0),l?void 0!==q?e.addEventListener(t,n,{capture:!0,passive:q}):e.addEventListener(t,n,!0):void 0!==q?e.addEventListener(t,n,{passive:q}):e.addEventListener(t,n,!1)}function Dl(e,t,n,l,q){var r=l;if(0===(1&t)&&0===(2&t)&&null!==l)e:for(;;){if(null===l)return;var i=l.tag;if(3===i||4===i){var a=l.stateNode.containerInfo;if(a===q||8===a.nodeType&&a.parentNode===q)break;if(4===i)for(i=l.return;null!==i;){var o=i.tag;if((3===o||4===o)&&((o=i.stateNode.containerInfo)===q||8===o.nodeType&&o.parentNode===q))return;i=i.return}for(;null!==a;){if(null===(i=nq(a)))return;if(5===(o=i.tag)||6===o){l=r=i;continue e}a=a.parentNode}}l=l.return}!function(e,t,n){if(Be)return e(t,n);Be=!0;try{Ie(e,t,n)}finally{Be=!1,Ne()}}((function(){var l=r,q=Se(n),i=[];e:{var a=Lt.get(e);if(void 0!==a){var o=mn,s=e;switch(e){case"keypress":if(0===qn(n))break e;case"keydown":case"keyup":o=Tn;break;case"focusin":s="focus",o=vn;break;case"focusout":s="blur",o=vn;break;case"beforeblur":case"afterblur":o=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":o=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":o=xn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":o=Ln;break;case zt:case kt:case Tt:o=gn;break;case Ct:o=Pn;break;case"scroll":o=fn;break;case"wheel":o=Dn;break;case"copy":case"cut":case"paste":o=yn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":o=Cn}var u=0!==(4&t),A=!u&&"scroll"===e,c=u?null!==a?a+"Capture":null:a;u=[];for(var m,h=l;null!==h;){var f=(m=h).stateNode;if(5===m.tag&&null!==f&&(m=f,null!==c&&(null!=(f=Ue(h,c))&&u.push(Il(h,f,m)))),A)break;h=h.return}0<u.length&&(a=new o(a,s,null,n,q),i.push({event:a,listeners:u}))}}if(0===(7&t)){if(o="mouseout"===e||"pointerout"===e,(!(a="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(s=n.relatedTarget||n.fromElement)||!nq(s)&&!s[eq])&&(o||a)&&(a=q.window===q?q:(a=q.ownerDocument)?a.defaultView||a.parentWindow:window,o?(o=l,null!==(s=(s=n.relatedTarget||n.toElement)?nq(s):null)&&(s!==(A=Ze(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(o=null,s=l),o!==s)){if(u=pn,f="onMouseLeave",c="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(u=Cn,f="onPointerLeave",c="onPointerEnter",h="pointer"),A=null==o?a:qq(o),m=null==s?a:qq(s),(a=new u(f,h+"leave",o,n,q)).target=A,a.relatedTarget=m,f=null,nq(q)===l&&((u=new u(c,h+"enter",s,n,q)).target=m,u.relatedTarget=A,f=u),A=f,o&&s)e:{for(c=s,h=0,m=u=o;m;m=Bl(m))h++;for(m=0,f=c;f;f=Bl(f))m++;for(;0<h-m;)u=Bl(u),h--;for(;0<m-h;)c=Bl(c),m--;for(;h--;){if(u===c||null!==c&&u===c.alternate)break e;u=Bl(u),c=Bl(c)}u=null}else u=null;null!==o&&Nl(i,a,o,u,!1),null!==s&&null!==A&&Nl(i,A,s,u,!0)}if("select"===(o=(a=l?qq(l):window).nodeName&&a.nodeName.toLowerCase())||"input"===o&&"file"===a.type)var d=$n;else if(Qn(a))if(el)d=sl;else{d=al;var p=il}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(d=ol);switch(d&&(d=d(e,l))?Yn(i,d,n,q):(p&&p(e,a,l),"focusout"===e&&(p=a._wrapperState)&&p.controlled&&"number"===a.type&&qe(a,"number",a.value)),p=l?qq(l):window,e){case"focusin":(Qn(p)||"true"===p.contentEditable)&&(vl=p,gl=l,_l=null);break;case"focusout":_l=gl=vl=null;break;case"mousedown":yl=!0;break;case"contextmenu":case"mouseup":case"dragend":yl=!1,bl(i,n,q);break;case"selectionchange":if(xl)break;case"keydown":case"keyup":bl(i,n,q)}var x;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Vn?Gn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Un&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Vn&&(x=ln()):(tn="value"in(en=q)?en.value:en.textContent,Vn=!0)),0<(p=Ol(l,v)).length&&(v=new bn(v,e,null,n,q),i.push({event:v,listeners:p}),x?v.data=x:null!==(x=jn(n))&&(v.data=x))),(x=Nn?function(e,t){switch(e){case"compositionend":return jn(t);case"keypress":return 32!==t.which?null:(Hn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Hn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!On&&Gn(e,t)?(e=ln(),nn=tn=en=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Un&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(l=Ol(l,"onBeforeInput")).length&&(q=new bn("onBeforeInput","beforeinput",null,n,q),i.push({event:q,listeners:l}),q.data=x))}kl(i,t)}))}function Il(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ol(e,t){for(var n=t+"Capture",l=[];null!==e;){var q=e,r=q.stateNode;5===q.tag&&null!==r&&(q=r,null!=(r=Ue(e,n))&&l.unshift(Il(e,r,q)),null!=(r=Ue(e,t))&&l.push(Il(e,r,q))),e=e.return}return l}function Bl(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Nl(e,t,n,l,q){for(var r=t._reactName,i=[];null!==n&&n!==l;){var a=n,o=a.alternate,s=a.stateNode;if(null!==o&&o===l)break;5===a.tag&&null!==s&&(a=s,q?null!=(o=Ue(n,r))&&i.unshift(Il(n,o,a)):q||null!=(o=Ue(n,r))&&i.push(Il(n,o,a))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Ul(){}var Fl=null,Hl=null;function Gl(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function jl(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Vl="function"===typeof setTimeout?setTimeout:void 0,Wl="function"===typeof clearTimeout?clearTimeout:void 0;function Ql(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Yl(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Xl(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Zl=0;var Jl=Math.random().toString(36).slice(2),Kl="__reactFiber$"+Jl,$l="__reactProps$"+Jl,eq="__reactContainer$"+Jl,tq="__reactEvents$"+Jl;function nq(e){var t=e[Kl];if(t)return t;for(var n=e.parentNode;n;){if(t=n[eq]||n[Kl]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Xl(e);null!==e;){if(n=e[Kl])return n;e=Xl(e)}return t}n=(e=n).parentNode}return null}function lq(e){return!(e=e[Kl]||e[eq])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function qq(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function rq(e){return e[$l]||null}function iq(e){var t=e[tq];return void 0===t&&(t=e[tq]=new Set),t}var aq=[],oq=-1;function sq(e){return{current:e}}function uq(e){0>oq||(e.current=aq[oq],aq[oq]=null,oq--)}function Aq(e,t){oq++,aq[oq]=e.current,e.current=t}var cq={},mq=sq(cq),hq=sq(!1),fq=cq;function dq(e,t){var n=e.type.contextTypes;if(!n)return cq;var l=e.stateNode;if(l&&l.__reactInternalMemoizedUnmaskedChildContext===t)return l.__reactInternalMemoizedMaskedChildContext;var q,r={};for(q in n)r[q]=t[q];return l&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function pq(e){return null!==(e=e.childContextTypes)&&void 0!==e}function xq(){uq(hq),uq(mq)}function vq(e,t,n){if(mq.current!==cq)throw Error(i(168));Aq(mq,t),Aq(hq,n)}function gq(e,t,n){var l=e.stateNode;if(e=t.childContextTypes,"function"!==typeof l.getChildContext)return n;for(var r in l=l.getChildContext())if(!(r in e))throw Error(i(108,Q(t)||"Unknown",r));return q({},n,l)}function _q(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||cq,fq=mq.current,Aq(mq,e),Aq(hq,hq.current),!0}function yq(e,t,n){var l=e.stateNode;if(!l)throw Error(i(169));n?(e=gq(e,t,fq),l.__reactInternalMemoizedMergedChildContext=e,uq(hq),uq(mq),Aq(mq,e)):uq(hq),Aq(hq,n)}var bq=null,wq=null,Mq=r.unstable_runWithPriority,Sq=r.unstable_scheduleCallback,Eq=r.unstable_cancelCallback,zq=r.unstable_shouldYield,kq=r.unstable_requestPaint,Tq=r.unstable_now,Cq=r.unstable_getCurrentPriorityLevel,Lq=r.unstable_ImmediatePriority,Pq=r.unstable_UserBlockingPriority,Rq=r.unstable_NormalPriority,Dq=r.unstable_LowPriority,Iq=r.unstable_IdlePriority,Oq={},Bq=void 0!==kq?kq:function(){},Nq=null,Uq=null,Fq=!1,Hq=Tq(),Gq=1e4>Hq?Tq:function(){return Tq()-Hq};function jq(){switch(Cq()){case Lq:return 99;case Pq:return 98;case Rq:return 97;case Dq:return 96;case Iq:return 95;default:throw Error(i(332))}}function Vq(e){switch(e){case 99:return Lq;case 98:return Pq;case 97:return Rq;case 96:return Dq;case 95:return Iq;default:throw Error(i(332))}}function Wq(e,t){return e=Vq(e),Mq(e,t)}function Qq(e,t,n){return e=Vq(e),Sq(e,t,n)}function Yq(){if(null!==Uq){var e=Uq;Uq=null,Eq(e)}Xq()}function Xq(){if(!Fq&&null!==Nq){Fq=!0;var e=0;try{var t=Nq;Wq(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Nq=null}catch(n){throw null!==Nq&&(Nq=Nq.slice(e+1)),Sq(Lq,Yq),n}finally{Fq=!1}}}var Zq=_.ReactCurrentBatchConfig;function Jq(e,t){if(e&&e.defaultProps){for(var n in t=q({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Kq=sq(null),$q=null,er=null,tr=null;function nr(){tr=er=$q=null}function lr(e){var t=Kq.current;uq(Kq),e.type._context._currentValue=t}function qr(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function rr(e,t){$q=e,tr=er=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function ir(e,t){if(tr!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(tr=e,t=1073741823),t={context:e,observedBits:t,next:null},null===er){if(null===$q)throw Error(i(308));er=t,$q.dependencies={lanes:0,firstContext:t,responders:null}}else er=er.next=t;return e._currentValue}var ar=!1;function or(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function sr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ur(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ar(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function cr(e,t){var n=e.updateQueue,l=e.alternate;if(null!==l&&n===(l=l.updateQueue)){var q=null,r=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===r?q=r=i:r=r.next=i,n=n.next}while(null!==n);null===r?q=r=t:r=r.next=t}else q=r=t;return n={baseState:l.baseState,firstBaseUpdate:q,lastBaseUpdate:r,shared:l.shared,effects:l.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function mr(e,t,n,l){var r=e.updateQueue;ar=!1;var i=r.firstBaseUpdate,a=r.lastBaseUpdate,o=r.shared.pending;if(null!==o){r.shared.pending=null;var s=o,u=s.next;s.next=null,null===a?i=u:a.next=u,a=s;var A=e.alternate;if(null!==A){var c=(A=A.updateQueue).lastBaseUpdate;c!==a&&(null===c?A.firstBaseUpdate=u:c.next=u,A.lastBaseUpdate=s)}}if(null!==i){for(c=r.baseState,a=0,A=u=s=null;;){o=i.lane;var m=i.eventTime;if((l&o)===o){null!==A&&(A=A.next={eventTime:m,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,f=i;switch(o=t,m=n,f.tag){case 1:if("function"===typeof(h=f.payload)){c=h.call(m,c,o);break e}c=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(o="function"===typeof(h=f.payload)?h.call(m,c,o):h)||void 0===o)break e;c=q({},c,o);break e;case 2:ar=!0}}null!==i.callback&&(e.flags|=32,null===(o=r.effects)?r.effects=[i]:o.push(i))}else m={eventTime:m,lane:o,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===A?(u=A=m,s=c):A=A.next=m,a|=o;if(null===(i=i.next)){if(null===(o=r.shared.pending))break;i=o.next,o.next=null,r.lastBaseUpdate=o,r.shared.pending=null}}null===A&&(s=c),r.baseState=s,r.firstBaseUpdate=u,r.lastBaseUpdate=A,Ua|=a,e.lanes=a,e.memoizedState=c}}function hr(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var l=e[t],q=l.callback;if(null!==q){if(l.callback=null,l=n,"function"!==typeof q)throw Error(i(191,q));q.call(l)}}}var fr=(new l.Component).refs;function dr(e,t,n,l){n=null===(n=n(l,t=e.memoizedState))||void 0===n?t:q({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pr={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var l=Ao(),q=co(e),r=ur(l,q);r.payload=t,void 0!==n&&null!==n&&(r.callback=n),Ar(e,r),mo(e,q,l)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var l=Ao(),q=co(e),r=ur(l,q);r.tag=1,r.payload=t,void 0!==n&&null!==n&&(r.callback=n),Ar(e,r),mo(e,q,l)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ao(),l=co(e),q=ur(n,l);q.tag=2,void 0!==t&&null!==t&&(q.callback=t),Ar(e,q),mo(e,l,n)}};function xr(e,t,n,l,q,r,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(l,r,i):!t.prototype||!t.prototype.isPureReactComponent||(!cl(n,l)||!cl(q,r))}function vr(e,t,n){var l=!1,q=cq,r=t.contextType;return"object"===typeof r&&null!==r?r=ir(r):(q=pq(t)?fq:mq.current,r=(l=null!==(l=t.contextTypes)&&void 0!==l)?dq(e,q):cq),t=new t(n,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pr,e.stateNode=t,t._reactInternals=e,l&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=q,e.__reactInternalMemoizedMaskedChildContext=r),t}function gr(e,t,n,l){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,l),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,l),t.state!==e&&pr.enqueueReplaceState(t,t.state,null)}function _r(e,t,n,l){var q=e.stateNode;q.props=n,q.state=e.memoizedState,q.refs=fr,or(e);var r=t.contextType;"object"===typeof r&&null!==r?q.context=ir(r):(r=pq(t)?fq:mq.current,q.context=dq(e,r)),mr(e,n,q,l),q.state=e.memoizedState,"function"===typeof(r=t.getDerivedStateFromProps)&&(dr(e,t,r,n),q.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof q.getSnapshotBeforeUpdate||"function"!==typeof q.UNSAFE_componentWillMount&&"function"!==typeof q.componentWillMount||(t=q.state,"function"===typeof q.componentWillMount&&q.componentWillMount(),"function"===typeof q.UNSAFE_componentWillMount&&q.UNSAFE_componentWillMount(),t!==q.state&&pr.enqueueReplaceState(q,q.state,null),mr(e,n,q,l),q.state=e.memoizedState),"function"===typeof q.componentDidMount&&(e.flags|=4)}var yr=Array.isArray;function br(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var l=n.stateNode}if(!l)throw Error(i(147,e));var q=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===q?t.ref:(t=function(e){var t=l.refs;t===fr&&(t=l.refs={}),null===e?delete t[q]:t[q]=e},t._stringRef=q,t)}if("string"!==typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function wr(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Mr(e){function t(t,n){if(e){var l=t.lastEffect;null!==l?(l.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,l){if(!e)return null;for(;null!==l;)t(n,l),l=l.sibling;return null}function l(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function q(e,t){return(e=Wo(e,t)).index=0,e.sibling=null,e}function r(t,n,l){return t.index=l,e?null!==(l=t.alternate)?(l=l.index)<n?(t.flags=2,n):l:(t.flags=2,n):n}function a(t){return e&&null===t.alternate&&(t.flags=2),t}function o(e,t,n,l){return null===t||6!==t.tag?((t=Zo(n,e.mode,l)).return=e,t):((t=q(t,n)).return=e,t)}function s(e,t,n,l){return null!==t&&t.elementType===n.type?((l=q(t,n.props)).ref=br(e,t,n),l.return=e,l):((l=Qo(n.type,n.key,n.props,null,e.mode,l)).ref=br(e,t,n),l.return=e,l)}function u(e,t,n,l){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jo(n,e.mode,l)).return=e,t):((t=q(t,n.children||[])).return=e,t)}function A(e,t,n,l,r){return null===t||7!==t.tag?((t=Yo(n,e.mode,l,r)).return=e,t):((t=q(t,n)).return=e,t)}function c(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Zo(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case y:return(n=Qo(t.type,t.key,t.props,null,e.mode,n)).ref=br(e,null,t),n.return=e,n;case b:return(t=Jo(t,e.mode,n)).return=e,t}if(yr(t)||H(t))return(t=Yo(t,e.mode,n,null)).return=e,t;wr(e,t)}return null}function m(e,t,n,l){var q=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==q?null:o(e,t,""+n,l);if("object"===typeof n&&null!==n){switch(n.$$typeof){case y:return n.key===q?n.type===w?A(e,t,n.props.children,l,q):s(e,t,n,l):null;case b:return n.key===q?u(e,t,n,l):null}if(yr(n)||H(n))return null!==q?null:A(e,t,n,l,null);wr(e,n)}return null}function h(e,t,n,l,q){if("string"===typeof l||"number"===typeof l)return o(t,e=e.get(n)||null,""+l,q);if("object"===typeof l&&null!==l){switch(l.$$typeof){case y:return e=e.get(null===l.key?n:l.key)||null,l.type===w?A(t,e,l.props.children,q,l.key):s(t,e,l,q);case b:return u(t,e=e.get(null===l.key?n:l.key)||null,l,q)}if(yr(l)||H(l))return A(t,e=e.get(n)||null,l,q,null);wr(t,l)}return null}function f(q,i,a,o){for(var s=null,u=null,A=i,f=i=0,d=null;null!==A&&f<a.length;f++){A.index>f?(d=A,A=null):d=A.sibling;var p=m(q,A,a[f],o);if(null===p){null===A&&(A=d);break}e&&A&&null===p.alternate&&t(q,A),i=r(p,i,f),null===u?s=p:u.sibling=p,u=p,A=d}if(f===a.length)return n(q,A),s;if(null===A){for(;f<a.length;f++)null!==(A=c(q,a[f],o))&&(i=r(A,i,f),null===u?s=A:u.sibling=A,u=A);return s}for(A=l(q,A);f<a.length;f++)null!==(d=h(A,q,f,a[f],o))&&(e&&null!==d.alternate&&A.delete(null===d.key?f:d.key),i=r(d,i,f),null===u?s=d:u.sibling=d,u=d);return e&&A.forEach((function(e){return t(q,e)})),s}function d(q,a,o,s){var u=H(o);if("function"!==typeof u)throw Error(i(150));if(null==(o=u.call(o)))throw Error(i(151));for(var A=u=null,f=a,d=a=0,p=null,x=o.next();null!==f&&!x.done;d++,x=o.next()){f.index>d?(p=f,f=null):p=f.sibling;var v=m(q,f,x.value,s);if(null===v){null===f&&(f=p);break}e&&f&&null===v.alternate&&t(q,f),a=r(v,a,d),null===A?u=v:A.sibling=v,A=v,f=p}if(x.done)return n(q,f),u;if(null===f){for(;!x.done;d++,x=o.next())null!==(x=c(q,x.value,s))&&(a=r(x,a,d),null===A?u=x:A.sibling=x,A=x);return u}for(f=l(q,f);!x.done;d++,x=o.next())null!==(x=h(f,q,d,x.value,s))&&(e&&null!==x.alternate&&f.delete(null===x.key?d:x.key),a=r(x,a,d),null===A?u=x:A.sibling=x,A=x);return e&&f.forEach((function(e){return t(q,e)})),u}return function(e,l,r,o){var s="object"===typeof r&&null!==r&&r.type===w&&null===r.key;s&&(r=r.props.children);var u="object"===typeof r&&null!==r;if(u)switch(r.$$typeof){case y:e:{for(u=r.key,s=l;null!==s;){if(s.key===u){if(7===s.tag){if(r.type===w){n(e,s.sibling),(l=q(s,r.props.children)).return=e,e=l;break e}}else if(s.elementType===r.type){n(e,s.sibling),(l=q(s,r.props)).ref=br(e,s,r),l.return=e,e=l;break e}n(e,s);break}t(e,s),s=s.sibling}r.type===w?((l=Yo(r.props.children,e.mode,o,r.key)).return=e,e=l):((o=Qo(r.type,r.key,r.props,null,e.mode,o)).ref=br(e,l,r),o.return=e,e=o)}return a(e);case b:e:{for(s=r.key;null!==l;){if(l.key===s){if(4===l.tag&&l.stateNode.containerInfo===r.containerInfo&&l.stateNode.implementation===r.implementation){n(e,l.sibling),(l=q(l,r.children||[])).return=e,e=l;break e}n(e,l);break}t(e,l),l=l.sibling}(l=Jo(r,e.mode,o)).return=e,e=l}return a(e)}if("string"===typeof r||"number"===typeof r)return r=""+r,null!==l&&6===l.tag?(n(e,l.sibling),(l=q(l,r)).return=e,e=l):(n(e,l),(l=Zo(r,e.mode,o)).return=e,e=l),a(e);if(yr(r))return f(e,l,r,o);if(H(r))return d(e,l,r,o);if(u&&wr(e,r),"undefined"===typeof r&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,Q(e.type)||"Component"))}return n(e,l)}}var Sr=Mr(!0),Er=Mr(!1),zr={},kr=sq(zr),Tr=sq(zr),Cr=sq(zr);function Lr(e){if(e===zr)throw Error(i(174));return e}function Pr(e,t){switch(Aq(Cr,t),Aq(Tr,e),Aq(kr,zr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uq(kr),Aq(kr,t)}function Rr(){uq(kr),uq(Tr),uq(Cr)}function Dr(e){Lr(Cr.current);var t=Lr(kr.current),n=he(t,e.type);t!==n&&(Aq(Tr,e),Aq(kr,n))}function Ir(e){Tr.current===e&&(uq(kr),uq(Tr))}var Or=sq(0);function Br(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Nr=null,Ur=null,Fr=!1;function Hr(e,t){var n=jo(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Gr(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function jr(e){if(Fr){var t=Ur;if(t){var n=t;if(!Gr(e,t)){if(!(t=Yl(n.nextSibling))||!Gr(e,t))return e.flags=-1025&e.flags|2,Fr=!1,void(Nr=e);Hr(Nr,n)}Nr=e,Ur=Yl(t.firstChild)}else e.flags=-1025&e.flags|2,Fr=!1,Nr=e}}function Vr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Nr=e}function Wr(e){if(e!==Nr)return!1;if(!Fr)return Vr(e),Fr=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!jl(t,e.memoizedProps))for(t=Ur;t;)Hr(e,t),t=Yl(t.nextSibling);if(Vr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ur=Yl(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ur=null}}else Ur=Nr?Yl(e.stateNode.nextSibling):null;return!0}function Qr(){Ur=Nr=null,Fr=!1}var Yr=[];function Xr(){for(var e=0;e<Yr.length;e++)Yr[e]._workInProgressVersionPrimary=null;Yr.length=0}var Zr=_.ReactCurrentDispatcher,Jr=_.ReactCurrentBatchConfig,Kr=0,$r=null,ei=null,ti=null,ni=!1,li=!1;function qi(){throw Error(i(321))}function ri(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ul(e[n],t[n]))return!1;return!0}function ii(e,t,n,l,q,r){if(Kr=r,$r=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Zr.current=null===e||null===e.memoizedState?Li:Pi,e=n(l,q),li){r=0;do{if(li=!1,!(25>r))throw Error(i(301));r+=1,ti=ei=null,t.updateQueue=null,Zr.current=Ri,e=n(l,q)}while(li)}if(Zr.current=Ci,t=null!==ei&&null!==ei.next,Kr=0,ti=ei=$r=null,ni=!1,t)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ti?$r.memoizedState=ti=e:ti=ti.next=e,ti}function oi(){if(null===ei){var e=$r.alternate;e=null!==e?e.memoizedState:null}else e=ei.next;var t=null===ti?$r.memoizedState:ti.next;if(null!==t)ti=t,ei=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ei=e).memoizedState,baseState:ei.baseState,baseQueue:ei.baseQueue,queue:ei.queue,next:null},null===ti?$r.memoizedState=ti=e:ti=ti.next=e}return ti}function si(e,t){return"function"===typeof t?t(e):t}function ui(e){var t=oi(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var l=ei,q=l.baseQueue,r=n.pending;if(null!==r){if(null!==q){var a=q.next;q.next=r.next,r.next=a}l.baseQueue=q=r,n.pending=null}if(null!==q){q=q.next,l=l.baseState;var o=a=r=null,s=q;do{var u=s.lane;if((Kr&u)===u)null!==o&&(o=o.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),l=s.eagerReducer===e?s.eagerState:e(l,s.action);else{var A={lane:u,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===o?(a=o=A,r=l):o=o.next=A,$r.lanes|=u,Ua|=u}s=s.next}while(null!==s&&s!==q);null===o?r=l:o.next=a,ul(l,t.memoizedState)||(Ii=!0),t.memoizedState=l,t.baseState=r,t.baseQueue=o,n.lastRenderedState=l}return[t.memoizedState,n.dispatch]}function Ai(e){var t=oi(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var l=n.dispatch,q=n.pending,r=t.memoizedState;if(null!==q){n.pending=null;var a=q=q.next;do{r=e(r,a.action),a=a.next}while(a!==q);ul(r,t.memoizedState)||(Ii=!0),t.memoizedState=r,null===t.baseQueue&&(t.baseState=r),n.lastRenderedState=r}return[r,l]}function ci(e,t,n){var l=t._getVersion;l=l(t._source);var q=t._workInProgressVersionPrimary;if(null!==q?e=q===l:(e=e.mutableReadLanes,(e=(Kr&e)===e)&&(t._workInProgressVersionPrimary=l,Yr.push(t))),e)return n(t._source);throw Yr.push(t),Error(i(350))}function mi(e,t,n,l){var q=La;if(null===q)throw Error(i(349));var r=t._getVersion,a=r(t._source),o=Zr.current,s=o.useState((function(){return ci(q,t,n)})),u=s[1],A=s[0];s=ti;var c=e.memoizedState,m=c.refs,h=m.getSnapshot,f=c.source;c=c.subscribe;var d=$r;return e.memoizedState={refs:m,source:t,subscribe:l},o.useEffect((function(){m.getSnapshot=n,m.setSnapshot=u;var e=r(t._source);if(!ul(a,e)){e=n(t._source),ul(A,e)||(u(e),e=co(d),q.mutableReadLanes|=e&q.pendingLanes),e=q.mutableReadLanes,q.entangledLanes|=e;for(var l=q.entanglements,i=e;0<i;){var o=31-jt(i),s=1<<o;l[o]|=e,i&=~s}}}),[n,t,l]),o.useEffect((function(){return l(t._source,(function(){var e=m.getSnapshot,n=m.setSnapshot;try{n(e(t._source));var l=co(d);q.mutableReadLanes|=l&q.pendingLanes}catch(r){n((function(){throw r}))}}))}),[t,l]),ul(h,n)&&ul(f,t)&&ul(c,l)||((e={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:A}).dispatch=u=Ti.bind(null,$r,e),s.queue=e,s.baseQueue=null,A=ci(q,t,n),s.memoizedState=s.baseState=A),A}function hi(e,t,n){return mi(oi(),e,t,n)}function fi(e){var t=ai();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:e}).dispatch=Ti.bind(null,$r,e),[t.memoizedState,e]}function di(e,t,n,l){return e={tag:e,create:t,destroy:n,deps:l,next:null},null===(t=$r.updateQueue)?(t={lastEffect:null},$r.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(l=n.next,n.next=e,e.next=l,t.lastEffect=e),e}function pi(e){return e={current:e},ai().memoizedState=e}function xi(){return oi().memoizedState}function vi(e,t,n,l){var q=ai();$r.flags|=e,q.memoizedState=di(1|t,n,void 0,void 0===l?null:l)}function gi(e,t,n,l){var q=oi();l=void 0===l?null:l;var r=void 0;if(null!==ei){var i=ei.memoizedState;if(r=i.destroy,null!==l&&ri(l,i.deps))return void di(t,n,r,l)}$r.flags|=e,q.memoizedState=di(1|t,n,r,l)}function _i(e,t){return vi(516,4,e,t)}function yi(e,t){return gi(516,4,e,t)}function bi(e,t){return gi(4,2,e,t)}function wi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Mi(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,gi(4,2,wi.bind(null,t,e),n)}function Si(){}function Ei(e,t){var n=oi();t=void 0===t?null:t;var l=n.memoizedState;return null!==l&&null!==t&&ri(t,l[1])?l[0]:(n.memoizedState=[e,t],e)}function zi(e,t){var n=oi();t=void 0===t?null:t;var l=n.memoizedState;return null!==l&&null!==t&&ri(t,l[1])?l[0]:(e=e(),n.memoizedState=[e,t],e)}function ki(e,t){var n=jq();Wq(98>n?98:n,(function(){e(!0)})),Wq(97<n?97:n,(function(){var n=Jr.transition;Jr.transition=1;try{e(!1),t()}finally{Jr.transition=n}}))}function Ti(e,t,n){var l=Ao(),q=co(e),r={lane:q,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?r.next=r:(r.next=i.next,i.next=r),t.pending=r,i=e.alternate,e===$r||null!==i&&i===$r)li=ni=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,o=i(a,n);if(r.eagerReducer=i,r.eagerState=o,ul(o,a))return}catch(s){}mo(e,q,l)}}var Ci={readContext:ir,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useDeferredValue:qi,useTransition:qi,useMutableSource:qi,useOpaqueIdentifier:qi,unstable_isNewReconciler:!1},Li={readContext:ir,useCallback:function(e,t){return ai().memoizedState=[e,void 0===t?null:t],e},useContext:ir,useEffect:_i,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,vi(4,2,wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vi(4,2,e,t)},useMemo:function(e,t){var n=ai();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var l=ai();return t=void 0!==n?n(t):t,l.memoizedState=l.baseState=t,e=(e=l.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ti.bind(null,$r,e),[l.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:Si,useDeferredValue:function(e){var t=fi(e),n=t[0],l=t[1];return _i((function(){var t=Jr.transition;Jr.transition=1;try{l(e)}finally{Jr.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=ki.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var l=ai();return l.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},mi(l,e,t,n)},useOpaqueIdentifier:function(){if(Fr){var e=!1,t=function(e){return{$$typeof:D,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Zl++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0===(2&$r.mode)&&($r.flags|=516,di(5,(function(){n("r:"+(Zl++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Zl++).toString(36)),t},unstable_isNewReconciler:!1},Pi={readContext:ir,useCallback:Ei,useContext:ir,useEffect:yi,useImperativeHandle:Mi,useLayoutEffect:bi,useMemo:zi,useReducer:ui,useRef:xi,useState:function(){return ui(si)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(si),n=t[0],l=t[1];return yi((function(){var t=Jr.transition;Jr.transition=1;try{l(e)}finally{Jr.transition=t}}),[e]),n},useTransition:function(){var e=ui(si)[0];return[xi().current,e]},useMutableSource:hi,useOpaqueIdentifier:function(){return ui(si)[0]},unstable_isNewReconciler:!1},Ri={readContext:ir,useCallback:Ei,useContext:ir,useEffect:yi,useImperativeHandle:Mi,useLayoutEffect:bi,useMemo:zi,useReducer:Ai,useRef:xi,useState:function(){return Ai(si)},useDebugValue:Si,useDeferredValue:function(e){var t=Ai(si),n=t[0],l=t[1];return yi((function(){var t=Jr.transition;Jr.transition=1;try{l(e)}finally{Jr.transition=t}}),[e]),n},useTransition:function(){var e=Ai(si)[0];return[xi().current,e]},useMutableSource:hi,useOpaqueIdentifier:function(){return Ai(si)[0]},unstable_isNewReconciler:!1},Di=_.ReactCurrentOwner,Ii=!1;function Oi(e,t,n,l){t.child=null===e?Er(t,null,n,l):Sr(t,e.child,n,l)}function Bi(e,t,n,l,q){n=n.render;var r=t.ref;return rr(t,q),l=ii(e,t,n,l,r,q),null===e||Ii?(t.flags|=1,Oi(e,t,l,q),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~q,qa(e,t,q))}function Ni(e,t,n,l,q,r){if(null===e){var i=n.type;return"function"!==typeof i||Vo(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Qo(n.type,null,l,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ui(e,t,i,l,q,r))}return i=e.child,0===(q&r)&&(q=i.memoizedProps,(n=null!==(n=n.compare)?n:cl)(q,l)&&e.ref===t.ref)?qa(e,t,r):(t.flags|=1,(e=Wo(i,l)).ref=t.ref,e.return=t,t.child=e)}function Ui(e,t,n,l,q,r){if(null!==e&&cl(e.memoizedProps,l)&&e.ref===t.ref){if(Ii=!1,0===(r&q))return t.lanes=e.lanes,qa(e,t,r);0!==(16384&e.flags)&&(Ii=!0)}return Gi(e,t,n,l,r)}function Fi(e,t,n){var l=t.pendingProps,q=l.children,r=null!==e?e.memoizedState:null;if("hidden"===l.mode||"unstable-defer-without-hiding"===l.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},yo(t,n);else{if(0===(1073741824&n))return e=null!==r?r.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},yo(t,e),null;t.memoizedState={baseLanes:0},yo(t,null!==r?r.baseLanes:n)}else null!==r?(l=r.baseLanes|n,t.memoizedState=null):l=n,yo(t,l);return Oi(e,t,q,n),t.child}function Hi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Gi(e,t,n,l,q){var r=pq(n)?fq:mq.current;return r=dq(t,r),rr(t,q),n=ii(e,t,n,l,r,q),null===e||Ii?(t.flags|=1,Oi(e,t,n,q),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~q,qa(e,t,q))}function ji(e,t,n,l,q){if(pq(n)){var r=!0;_q(t)}else r=!1;if(rr(t,q),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),vr(t,n,l),_r(t,n,l,q),l=!0;else if(null===e){var i=t.stateNode,a=t.memoizedProps;i.props=a;var o=i.context,s=n.contextType;"object"===typeof s&&null!==s?s=ir(s):s=dq(t,s=pq(n)?fq:mq.current);var u=n.getDerivedStateFromProps,A="function"===typeof u||"function"===typeof i.getSnapshotBeforeUpdate;A||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(a!==l||o!==s)&&gr(t,i,l,s),ar=!1;var c=t.memoizedState;i.state=c,mr(t,l,i,q),o=t.memoizedState,a!==l||c!==o||hq.current||ar?("function"===typeof u&&(dr(t,n,u,l),o=t.memoizedState),(a=ar||xr(t,n,a,l,c,o,s))?(A||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=l,t.memoizedState=o),i.props=l,i.state=o,i.context=s,l=a):("function"===typeof i.componentDidMount&&(t.flags|=4),l=!1)}else{i=t.stateNode,sr(e,t),a=t.memoizedProps,s=t.type===t.elementType?a:Jq(t.type,a),i.props=s,A=t.pendingProps,c=i.context,"object"===typeof(o=n.contextType)&&null!==o?o=ir(o):o=dq(t,o=pq(n)?fq:mq.current);var m=n.getDerivedStateFromProps;(u="function"===typeof m||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(a!==A||c!==o)&&gr(t,i,l,o),ar=!1,c=t.memoizedState,i.state=c,mr(t,l,i,q);var h=t.memoizedState;a!==A||c!==h||hq.current||ar?("function"===typeof m&&(dr(t,n,m,l),h=t.memoizedState),(s=ar||xr(t,n,s,l,c,h,o))?(u||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(l,h,o),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(l,h,o)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.flags|=256),t.memoizedProps=l,t.memoizedState=h),i.props=l,i.state=h,i.context=o,l=s):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&c===e.memoizedState||(t.flags|=256),l=!1)}return Vi(e,t,n,l,r,q)}function Vi(e,t,n,l,q,r){Hi(e,t);var i=0!==(64&t.flags);if(!l&&!i)return q&&yq(t,n,!1),qa(e,t,r);l=t.stateNode,Di.current=t;var a=i&&"function"!==typeof n.getDerivedStateFromError?null:l.render();return t.flags|=1,null!==e&&i?(t.child=Sr(t,e.child,null,r),t.child=Sr(t,null,a,r)):Oi(e,t,a,r),t.memoizedState=l.state,q&&yq(t,n,!0),t.child}function Wi(e){var t=e.stateNode;t.pendingContext?vq(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vq(0,t.context,!1),Pr(e,t.containerInfo)}var Qi,Yi,Xi,Zi={dehydrated:null,retryLane:0};function Ji(e,t,n){var l,q=t.pendingProps,r=Or.current,i=!1;return(l=0!==(64&t.flags))||(l=(null===e||null!==e.memoizedState)&&0!==(2&r)),l?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===q.fallback||!0===q.unstable_avoidThisFallback||(r|=1),Aq(Or,1&r),null===e?(void 0!==q.fallback&&jr(t),e=q.children,r=q.fallback,i?(e=Ki(t,e,r,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Zi,e):"number"===typeof q.unstable_expectedLoadTime?(e=Ki(t,e,r,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Zi,t.lanes=33554432,e):((n=Xo({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(q=ea(e,t,q.children,q.fallback,n),i=t.child,r=e.child.memoizedState,i.memoizedState=null===r?{baseLanes:n}:{baseLanes:r.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Zi,q):(n=$i(e,t,q.children,n),t.memoizedState=null,n))}function Ki(e,t,n,l){var q=e.mode,r=e.child;return t={mode:"hidden",children:t},0===(2&q)&&null!==r?(r.childLanes=0,r.pendingProps=t):r=Xo(t,q,0,null),n=Yo(n,q,l,null),r.return=e,n.return=e,r.sibling=n,e.child=r,n}function $i(e,t,n,l){var q=e.child;return e=q.sibling,n=Wo(q,{mode:"visible",children:n}),0===(2&t.mode)&&(n.lanes=l),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}function ea(e,t,n,l,q){var r=t.mode,i=e.child;e=i.sibling;var a={mode:"hidden",children:n};return 0===(2&r)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=a,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Wo(i,a),null!==e?l=Wo(e,l):(l=Yo(l,r,q,null)).flags|=2,l.return=t,n.return=t,n.sibling=l,t.child=n,l}function ta(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),qr(e.return,t)}function na(e,t,n,l,q,r){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:l,tail:n,tailMode:q,lastEffect:r}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=l,i.tail=n,i.tailMode=q,i.lastEffect=r)}function la(e,t,n){var l=t.pendingProps,q=l.revealOrder,r=l.tail;if(Oi(e,t,l.children,n),0!==(2&(l=Or.current)))l=1&l|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ta(e,n);else if(19===e.tag)ta(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}l&=1}if(Aq(Or,l),0===(2&t.mode))t.memoizedState=null;else switch(q){case"forwards":for(n=t.child,q=null;null!==n;)null!==(e=n.alternate)&&null===Br(e)&&(q=n),n=n.sibling;null===(n=q)?(q=t.child,t.child=null):(q=n.sibling,n.sibling=null),na(t,!1,q,n,r,t.lastEffect);break;case"backwards":for(n=null,q=t.child,t.child=null;null!==q;){if(null!==(e=q.alternate)&&null===Br(e)){t.child=q;break}e=q.sibling,q.sibling=n,n=q,q=e}na(t,!0,n,null,r,t.lastEffect);break;case"together":na(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qa(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ua|=t.lanes,0!==(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Wo(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wo(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ra(e,t){if(!Fr)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var l=null;null!==n;)null!==n.alternate&&(l=n),n=n.sibling;null===l?t||null===e.tail?e.tail=null:e.tail.sibling=null:l.sibling=null}}function ia(e,t,n){var l=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return pq(t.type)&&xq(),null;case 3:return Rr(),uq(hq),uq(mq),Xr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==e&&null!==e.child||(Wr(t)?t.flags|=4:l.hydrate||(t.flags|=256)),null;case 5:Ir(t);var r=Lr(Cr.current);if(n=t.type,null!==e&&null!=t.stateNode)Yi(e,t,n,l),e.ref!==t.ref&&(t.flags|=128);else{if(!l){if(null===t.stateNode)throw Error(i(166));return null}if(e=Lr(kr.current),Wr(t)){l=t.stateNode,n=t.type;var a=t.memoizedProps;switch(l[Kl]=t,l[$l]=a,n){case"dialog":Tl("cancel",l),Tl("close",l);break;case"iframe":case"object":case"embed":Tl("load",l);break;case"video":case"audio":for(e=0;e<Sl.length;e++)Tl(Sl[e],l);break;case"source":Tl("error",l);break;case"img":case"image":case"link":Tl("error",l),Tl("load",l);break;case"details":Tl("toggle",l);break;case"input":ee(l,a),Tl("invalid",l);break;case"select":l._wrapperState={wasMultiple:!!a.multiple},Tl("invalid",l);break;case"textarea":oe(l,a),Tl("invalid",l)}for(var s in we(n,a),e=null,a)a.hasOwnProperty(s)&&(r=a[s],"children"===s?"string"===typeof r?l.textContent!==r&&(e=["children",r]):"number"===typeof r&&l.textContent!==""+r&&(e=["children",""+r]):o.hasOwnProperty(s)&&null!=r&&"onScroll"===s&&Tl("scroll",l));switch(n){case"input":Z(l),le(l,a,!0);break;case"textarea":Z(l),ue(l);break;case"select":case"option":break;default:"function"===typeof a.onClick&&(l.onclick=Ul)}l=e,t.updateQueue=l,null!==l&&(t.flags|=4)}else{switch(s=9===r.nodeType?r:r.ownerDocument,e===Ae&&(e=me(n)),e===Ae?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof l.is?e=s.createElement(n,{is:l.is}):(e=s.createElement(n),"select"===n&&(s=e,l.multiple?s.multiple=!0:l.size&&(s.size=l.size))):e=s.createElementNS(e,n),e[Kl]=t,e[$l]=l,Qi(e,t),t.stateNode=e,s=Me(n,l),n){case"dialog":Tl("cancel",e),Tl("close",e),r=l;break;case"iframe":case"object":case"embed":Tl("load",e),r=l;break;case"video":case"audio":for(r=0;r<Sl.length;r++)Tl(Sl[r],e);r=l;break;case"source":Tl("error",e),r=l;break;case"img":case"image":case"link":Tl("error",e),Tl("load",e),r=l;break;case"details":Tl("toggle",e),r=l;break;case"input":ee(e,l),r=$(e,l),Tl("invalid",e);break;case"option":r=re(e,l);break;case"select":e._wrapperState={wasMultiple:!!l.multiple},r=q({},l,{value:void 0}),Tl("invalid",e);break;case"textarea":oe(e,l),r=ae(e,l),Tl("invalid",e);break;default:r=l}we(n,r);var u=r;for(a in u)if(u.hasOwnProperty(a)){var A=u[a];"style"===a?ye(e,A):"dangerouslySetInnerHTML"===a?null!=(A=A?A.__html:void 0)&&pe(e,A):"children"===a?"string"===typeof A?("textarea"!==n||""!==A)&&xe(e,A):"number"===typeof A&&xe(e,""+A):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(o.hasOwnProperty(a)?null!=A&&"onScroll"===a&&Tl("scroll",e):null!=A&&g(e,a,A,s))}switch(n){case"input":Z(e),le(e,l,!1);break;case"textarea":Z(e),ue(e);break;case"option":null!=l.value&&e.setAttribute("value",""+Y(l.value));break;case"select":e.multiple=!!l.multiple,null!=(a=l.value)?ie(e,!!l.multiple,a,!1):null!=l.defaultValue&&ie(e,!!l.multiple,l.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=Ul)}Gl(n,l)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Xi(0,t,e.memoizedProps,l);else{if("string"!==typeof l&&null===t.stateNode)throw Error(i(166));n=Lr(Cr.current),Lr(kr.current),Wr(t)?(l=t.stateNode,n=t.memoizedProps,l[Kl]=t,l.nodeValue!==n&&(t.flags|=4)):((l=(9===n.nodeType?n:n.ownerDocument).createTextNode(l))[Kl]=t,t.stateNode=l)}return null;case 13:return uq(Or),l=t.memoizedState,0!==(64&t.flags)?(t.lanes=n,t):(l=null!==l,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Wr(t):n=null!==e.memoizedState,l&&!n&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&Or.current)?0===Oa&&(Oa=3):(0!==Oa&&3!==Oa||(Oa=4),null===La||0===(134217727&Ua)&&0===(134217727&Fa)||xo(La,Ra))),(l||n)&&(t.flags|=4),null);case 4:return Rr(),null===e&&Ll(t.stateNode.containerInfo),null;case 10:return lr(t),null;case 19:if(uq(Or),null===(l=t.memoizedState))return null;if(a=0!==(64&t.flags),null===(s=l.rendering))if(a)ra(l,!1);else{if(0!==Oa||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Br(e))){for(t.flags|=64,ra(l,!1),null!==(a=s.updateQueue)&&(t.updateQueue=a,t.flags|=4),null===l.lastEffect&&(t.firstEffect=null),t.lastEffect=l.lastEffect,l=n,n=t.child;null!==n;)e=l,(a=n).flags&=2,a.nextEffect=null,a.firstEffect=null,a.lastEffect=null,null===(s=a.alternate)?(a.childLanes=0,a.lanes=e,a.child=null,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=s.childLanes,a.lanes=s.lanes,a.child=s.child,a.memoizedProps=s.memoizedProps,a.memoizedState=s.memoizedState,a.updateQueue=s.updateQueue,a.type=s.type,e=s.dependencies,a.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Aq(Or,1&Or.current|2),t.child}e=e.sibling}null!==l.tail&&Gq()>Va&&(t.flags|=64,a=!0,ra(l,!1),t.lanes=33554432)}else{if(!a)if(null!==(e=Br(s))){if(t.flags|=64,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ra(l,!0),null===l.tail&&"hidden"===l.tailMode&&!s.alternate&&!Fr)return null!==(t=t.lastEffect=l.lastEffect)&&(t.nextEffect=null),null}else 2*Gq()-l.renderingStartTime>Va&&1073741824!==n&&(t.flags|=64,a=!0,ra(l,!1),t.lanes=33554432);l.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=l.last)?n.sibling=s:t.child=s,l.last=s)}return null!==l.tail?(n=l.tail,l.rendering=n,l.tail=n.sibling,l.lastEffect=t.lastEffect,l.renderingStartTime=Gq(),n.sibling=null,t=Or.current,Aq(Or,a?1&t|2:1&t),n):null;case 23:case 24:return bo(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==l.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function aa(e){switch(e.tag){case 1:pq(e.type)&&xq();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Rr(),uq(hq),uq(mq),Xr(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ir(e),null;case 13:return uq(Or),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return uq(Or),null;case 4:return Rr(),null;case 10:return lr(e),null;case 23:case 24:return bo(),null;default:return null}}function oa(e,t){try{var n="",l=t;do{n+=W(l),l=l.return}while(l);var q=n}catch(r){q="\nError generating stack: "+r.message+"\n"+r.stack}return{value:e,source:t,stack:q}}function sa(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}Qi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Yi=function(e,t,n,l){var r=e.memoizedProps;if(r!==l){e=t.stateNode,Lr(kr.current);var i,a=null;switch(n){case"input":r=$(e,r),l=$(e,l),a=[];break;case"option":r=re(e,r),l=re(e,l),a=[];break;case"select":r=q({},r,{value:void 0}),l=q({},l,{value:void 0}),a=[];break;case"textarea":r=ae(e,r),l=ae(e,l),a=[];break;default:"function"!==typeof r.onClick&&"function"===typeof l.onClick&&(e.onclick=Ul)}for(A in we(n,l),n=null,r)if(!l.hasOwnProperty(A)&&r.hasOwnProperty(A)&&null!=r[A])if("style"===A){var s=r[A];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==A&&"children"!==A&&"suppressContentEditableWarning"!==A&&"suppressHydrationWarning"!==A&&"autoFocus"!==A&&(o.hasOwnProperty(A)?a||(a=[]):(a=a||[]).push(A,null));for(A in l){var u=l[A];if(s=null!=r?r[A]:void 0,l.hasOwnProperty(A)&&u!==s&&(null!=u||null!=s))if("style"===A)if(s){for(i in s)!s.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in u)u.hasOwnProperty(i)&&s[i]!==u[i]&&(n||(n={}),n[i]=u[i])}else n||(a||(a=[]),a.push(A,n)),n=u;else"dangerouslySetInnerHTML"===A?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(a=a||[]).push(A,u)):"children"===A?"string"!==typeof u&&"number"!==typeof u||(a=a||[]).push(A,""+u):"suppressContentEditableWarning"!==A&&"suppressHydrationWarning"!==A&&(o.hasOwnProperty(A)?(null!=u&&"onScroll"===A&&Tl("scroll",e),a||s===u||(a=[])):"object"===typeof u&&null!==u&&u.$$typeof===D?u.toString():(a=a||[]).push(A,u))}n&&(a=a||[]).push("style",n);var A=a;(t.updateQueue=A)&&(t.flags|=4)}},Xi=function(e,t,n,l){n!==l&&(t.flags|=4)};var ua="function"===typeof WeakMap?WeakMap:Map;function Aa(e,t,n){(n=ur(-1,n)).tag=3,n.payload={element:null};var l=t.value;return n.callback=function(){Xa||(Xa=!0,Za=l),sa(0,t)},n}function ca(e,t,n){(n=ur(-1,n)).tag=3;var l=e.type.getDerivedStateFromError;if("function"===typeof l){var q=t.value;n.payload=function(){return sa(0,t),l(q)}}var r=e.stateNode;return null!==r&&"function"===typeof r.componentDidCatch&&(n.callback=function(){"function"!==typeof l&&(null===Ja?Ja=new Set([this]):Ja.add(this),sa(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ma="function"===typeof WeakSet?WeakSet:Set;function ha(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(n){Uo(e,n)}else t.current=null}function fa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,l=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jq(t.type,n),l),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ql(t.stateNode.containerInfo))}throw Error(i(163))}function da(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var l=e.create;e.destroy=l()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var q=e;l=q.next,0!==(4&(q=q.tag))&&0!==(1&q)&&(Oo(n,e),Io(n,e)),e=l}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(l=n.elementType===n.type?t.memoizedProps:Jq(n.type,t.memoizedProps),e.componentDidUpdate(l,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&hr(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}hr(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Gl(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&yt(n)))))}throw Error(i(163))}function pa(e,t){for(var n=e;;){if(5===n.tag){var l=n.stateNode;if(t)"function"===typeof(l=l.style).setProperty?l.setProperty("display","none","important"):l.display="none";else{l=n.stateNode;var q=n.memoizedProps.style;q=void 0!==q&&null!==q&&q.hasOwnProperty("display")?q.display:null,l.style.display=_e("display",q)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function xa(e,t){if(wq&&"function"===typeof wq.onCommitFiberUnmount)try{wq.onCommitFiberUnmount(bq,t)}catch(r){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var l=n,q=l.destroy;if(l=l.tag,void 0!==q)if(0!==(4&l))Oo(t,n);else{l=t;try{q()}catch(r){Uo(l,r)}}n=n.next}while(n!==e)}break;case 1:if(ha(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(r){Uo(t,r)}break;case 5:ha(t);break;case 4:wa(e,t)}}function va(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function ga(e){return 5===e.tag||3===e.tag||4===e.tag}function _a(e){e:{for(var t=e.return;null!==t;){if(ga(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var l=!1;break;case 3:case 4:t=t.containerInfo,l=!0;break;default:throw Error(i(161))}16&n.flags&&(xe(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ga(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}l?ya(e,n,t):ba(e,n,t)}function ya(e,t,n){var l=e.tag,q=5===l||6===l;if(q)e=q?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Ul));else if(4!==l&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ba(e,t,n){var l=e.tag,q=5===l||6===l;if(q)e=q?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==l&&null!==(e=e.child))for(ba(e,t,n),e=e.sibling;null!==e;)ba(e,t,n),e=e.sibling}function wa(e,t){for(var n,l,q=t,r=!1;;){if(!r){r=q.return;e:for(;;){if(null===r)throw Error(i(160));switch(n=r.stateNode,r.tag){case 5:l=!1;break e;case 3:case 4:n=n.containerInfo,l=!0;break e}r=r.return}r=!0}if(5===q.tag||6===q.tag){e:for(var a=e,o=q,s=o;;)if(xa(a,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===o)break e;for(;null===s.sibling;){if(null===s.return||s.return===o)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}l?(a=n,o=q.stateNode,8===a.nodeType?a.parentNode.removeChild(o):a.removeChild(o)):n.removeChild(q.stateNode)}else if(4===q.tag){if(null!==q.child){n=q.stateNode.containerInfo,l=!0,q.child.return=q,q=q.child;continue}}else if(xa(e,q),null!==q.child){q.child.return=q,q=q.child;continue}if(q===t)break;for(;null===q.sibling;){if(null===q.return||q.return===t)return;4===(q=q.return).tag&&(r=!1)}q.sibling.return=q.return,q=q.sibling}}function Ma(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var l=n=n.next;do{3===(3&l.tag)&&(e=l.destroy,l.destroy=void 0,void 0!==e&&e()),l=l.next}while(l!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){l=t.memoizedProps;var q=null!==e?e.memoizedProps:l;e=t.type;var r=t.updateQueue;if(t.updateQueue=null,null!==r){for(n[$l]=l,"input"===e&&"radio"===l.type&&null!=l.name&&te(n,l),Me(e,q),t=Me(e,l),q=0;q<r.length;q+=2){var a=r[q],o=r[q+1];"style"===a?ye(n,o):"dangerouslySetInnerHTML"===a?pe(n,o):"children"===a?xe(n,o):g(n,a,o,t)}switch(e){case"input":ne(n,l);break;case"textarea":se(n,l);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!l.multiple,null!=(r=l.value)?ie(n,!!l.multiple,r,!1):e!==!!l.multiple&&(null!=l.defaultValue?ie(n,!!l.multiple,l.defaultValue,!0):ie(n,!!l.multiple,l.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,yt(n.containerInfo)));case 13:return null!==t.memoizedState&&(ja=Gq(),pa(t.child,!0)),void Sa(t);case 19:return void Sa(t);case 23:case 24:return void pa(t,null!==t.memoizedState)}throw Error(i(163))}function Sa(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ma),t.forEach((function(t){var l=Ho.bind(null,e,t);n.has(t)||(n.add(t),t.then(l,l))}))}}function Ea(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var za=Math.ceil,ka=_.ReactCurrentDispatcher,Ta=_.ReactCurrentOwner,Ca=0,La=null,Pa=null,Ra=0,Da=0,Ia=sq(0),Oa=0,Ba=null,Na=0,Ua=0,Fa=0,Ha=0,Ga=null,ja=0,Va=1/0;function Wa(){Va=Gq()+500}var Qa,Ya=null,Xa=!1,Za=null,Ja=null,Ka=!1,$a=null,eo=90,to=[],no=[],lo=null,qo=0,ro=null,io=-1,ao=0,oo=0,so=null,uo=!1;function Ao(){return 0!==(48&Ca)?Gq():-1!==io?io:io=Gq()}function co(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===jq()?1:2;if(0===ao&&(ao=Na),0!==Zq.transition){0!==oo&&(oo=null!==Ga?Ga.pendingLanes:0),e=ao;var t=4186112&~oo;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=jq(),0!==(4&Ca)&&98===e?e=Ut(12,ao):e=Ut(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ao),e}function mo(e,t,n){if(50<qo)throw qo=0,ro=null,Error(i(185));if(null===(e=ho(e,t)))return null;Gt(e,t,n),e===La&&(Fa|=t,4===Oa&&xo(e,Ra));var l=jq();1===t?0!==(8&Ca)&&0===(48&Ca)?vo(e):(fo(e,n),0===Ca&&(Wa(),Yq())):(0===(4&Ca)||98!==l&&99!==l||(null===lo?lo=new Set([e]):lo.add(e)),fo(e,n)),Ga=e}function ho(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function fo(e,t){for(var n=e.callbackNode,l=e.suspendedLanes,q=e.pingedLanes,r=e.expirationTimes,a=e.pendingLanes;0<a;){var o=31-jt(a),s=1<<o,u=r[o];if(-1===u){if(0===(s&l)||0!==(s&q)){u=t,Ot(s);var A=It;r[o]=10<=A?u+250:6<=A?u+5e3:-1}}else u<=t&&(e.expiredLanes|=s);a&=~s}if(l=Bt(e,e===La?Ra:0),t=It,0===l)null!==n&&(n!==Oq&&Eq(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Oq&&Eq(n)}15===t?(n=vo.bind(null,e),null===Nq?(Nq=[n],Uq=Sq(Lq,Xq)):Nq.push(n),n=Oq):14===t?n=Qq(99,vo.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),n=Qq(n,po.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function po(e){if(io=-1,oo=ao=0,0!==(48&Ca))throw Error(i(327));var t=e.callbackNode;if(Do()&&e.callbackNode!==t)return null;var n=Bt(e,e===La?Ra:0);if(0===n)return null;var l=n,q=Ca;Ca|=16;var r=So();for(La===e&&Ra===l||(Wa(),wo(e,l));;)try{ko();break}catch(o){Mo(e,o)}if(nr(),ka.current=r,Ca=q,null!==Pa?l=0:(La=null,Ra=0,l=Oa),0!==(Na&Fa))wo(e,0);else if(0!==l){if(2===l&&(Ca|=64,e.hydrate&&(e.hydrate=!1,Ql(e.containerInfo)),0!==(n=Nt(e))&&(l=Eo(e,n))),1===l)throw t=Ba,wo(e,0),xo(e,n),fo(e,Gq()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,l){case 0:case 1:throw Error(i(345));case 2:case 5:Lo(e);break;case 3:if(xo(e,n),(62914560&n)===n&&10<(l=ja+500-Gq())){if(0!==Bt(e,0))break;if(((q=e.suspendedLanes)&n)!==n){Ao(),e.pingedLanes|=e.suspendedLanes&q;break}e.timeoutHandle=Vl(Lo.bind(null,e),l);break}Lo(e);break;case 4:if(xo(e,n),(4186112&n)===n)break;for(l=e.eventTimes,q=-1;0<n;){var a=31-jt(n);r=1<<a,(a=l[a])>q&&(q=a),n&=~r}if(n=q,10<(n=(120>(n=Gq()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*za(n/1960))-n)){e.timeoutHandle=Vl(Lo.bind(null,e),n);break}Lo(e);break;default:throw Error(i(329))}}return fo(e,Gq()),e.callbackNode===t?po.bind(null,e):null}function xo(e,t){for(t&=~Ha,t&=~Fa,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-jt(t),l=1<<n;e[n]=-1,t&=~l}}function vo(e){if(0!==(48&Ca))throw Error(i(327));if(Do(),e===La&&0!==(e.expiredLanes&Ra)){var t=Ra,n=Eo(e,t);0!==(Na&Fa)&&(n=Eo(e,t=Bt(e,t)))}else n=Eo(e,t=Bt(e,0));if(0!==e.tag&&2===n&&(Ca|=64,e.hydrate&&(e.hydrate=!1,Ql(e.containerInfo)),0!==(t=Nt(e))&&(n=Eo(e,t))),1===n)throw n=Ba,wo(e,0),xo(e,t),fo(e,Gq()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Lo(e),fo(e,Gq()),null}function go(e,t){var n=Ca;Ca|=1;try{return e(t)}finally{0===(Ca=n)&&(Wa(),Yq())}}function _o(e,t){var n=Ca;Ca&=-2,Ca|=8;try{return e(t)}finally{0===(Ca=n)&&(Wa(),Yq())}}function yo(e,t){Aq(Ia,Da),Da|=t,Na|=t}function bo(){Da=Ia.current,uq(Ia)}function wo(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Wl(n)),null!==Pa)for(n=Pa.return;null!==n;){var l=n;switch(l.tag){case 1:null!==(l=l.type.childContextTypes)&&void 0!==l&&xq();break;case 3:Rr(),uq(hq),uq(mq),Xr();break;case 5:Ir(l);break;case 4:Rr();break;case 13:case 19:uq(Or);break;case 10:lr(l);break;case 23:case 24:bo()}n=n.return}La=e,Pa=Wo(e.current,null),Ra=Da=Na=t,Oa=0,Ba=null,Ha=Fa=Ua=0}function Mo(e,t){for(;;){var n=Pa;try{if(nr(),Zr.current=Ci,ni){for(var l=$r.memoizedState;null!==l;){var q=l.queue;null!==q&&(q.pending=null),l=l.next}ni=!1}if(Kr=0,ti=ei=$r=null,li=!1,Ta.current=null,null===n||null===n.return){Oa=1,Ba=t,Pa=null;break}e:{var r=e,i=n.return,a=n,o=t;if(t=Ra,a.flags|=2048,a.firstEffect=a.lastEffect=null,null!==o&&"object"===typeof o&&"function"===typeof o.then){var s=o;if(0===(2&a.mode)){var u=a.alternate;u?(a.updateQueue=u.updateQueue,a.memoizedState=u.memoizedState,a.lanes=u.lanes):(a.updateQueue=null,a.memoizedState=null)}var A=0!==(1&Or.current),c=i;do{var m;if(m=13===c.tag){var h=c.memoizedState;if(null!==h)m=null!==h.dehydrated;else{var f=c.memoizedProps;m=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!A)}}if(m){var d=c.updateQueue;if(null===d){var p=new Set;p.add(s),c.updateQueue=p}else d.add(s);if(0===(2&c.mode)){if(c.flags|=64,a.flags|=16384,a.flags&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var x=ur(-1,1);x.tag=2,Ar(a,x)}a.lanes|=1;break e}o=void 0,a=t;var v=r.pingCache;if(null===v?(v=r.pingCache=new ua,o=new Set,v.set(s,o)):void 0===(o=v.get(s))&&(o=new Set,v.set(s,o)),!o.has(a)){o.add(a);var g=Fo.bind(null,r,s,a);s.then(g,g)}c.flags|=4096,c.lanes=t;break e}c=c.return}while(null!==c);o=Error((Q(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Oa&&(Oa=2),o=oa(o,a),c=i;do{switch(c.tag){case 3:r=o,c.flags|=4096,t&=-t,c.lanes|=t,cr(c,Aa(0,r,t));break e;case 1:r=o;var _=c.type,y=c.stateNode;if(0===(64&c.flags)&&("function"===typeof _.getDerivedStateFromError||null!==y&&"function"===typeof y.componentDidCatch&&(null===Ja||!Ja.has(y)))){c.flags|=4096,t&=-t,c.lanes|=t,cr(c,ca(c,r,t));break e}}c=c.return}while(null!==c)}Co(n)}catch(b){t=b,Pa===n&&null!==n&&(Pa=n=n.return);continue}break}}function So(){var e=ka.current;return ka.current=Ci,null===e?Ci:e}function Eo(e,t){var n=Ca;Ca|=16;var l=So();for(La===e&&Ra===t||wo(e,t);;)try{zo();break}catch(q){Mo(e,q)}if(nr(),Ca=n,ka.current=l,null!==Pa)throw Error(i(261));return La=null,Ra=0,Oa}function zo(){for(;null!==Pa;)To(Pa)}function ko(){for(;null!==Pa&&!zq();)To(Pa)}function To(e){var t=Qa(e.alternate,e,Da);e.memoizedProps=e.pendingProps,null===t?Co(e):Pa=t,Ta.current=null}function Co(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(n=ia(n,t,Da)))return void(Pa=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!==(1073741824&Da)||0===(4&n.mode)){for(var l=0,q=n.child;null!==q;)l|=q.lanes|q.childLanes,q=q.sibling;n.childLanes=l}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=aa(t)))return n.flags&=2047,void(Pa=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pa=t);Pa=t=e}while(null!==t);0===Oa&&(Oa=5)}function Lo(e){var t=jq();return Wq(99,Po.bind(null,e,t)),null}function Po(e,t){do{Do()}while(null!==$a);if(0!==(48&Ca))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var l=n.lanes|n.childLanes,q=l,r=e.pendingLanes&~q;e.pendingLanes=q,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=q,e.mutableReadLanes&=q,e.entangledLanes&=q,q=e.entanglements;for(var a=e.eventTimes,o=e.expirationTimes;0<r;){var s=31-jt(r),u=1<<s;q[s]=0,a[s]=-1,o[s]=-1,r&=~u}if(null!==lo&&0===(24&l)&&lo.has(e)&&lo.delete(e),e===La&&(Pa=La=null,Ra=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,l=n.firstEffect):l=n:l=n.firstEffect,null!==l){if(q=Ca,Ca|=32,Ta.current=null,Fl=Xt,pl(a=dl())){if("selectionStart"in a)o={start:a.selectionStart,end:a.selectionEnd};else e:if(o=(o=a.ownerDocument)&&o.defaultView||window,(u=o.getSelection&&o.getSelection())&&0!==u.rangeCount){o=u.anchorNode,r=u.anchorOffset,s=u.focusNode,u=u.focusOffset;try{o.nodeType,s.nodeType}catch(S){o=null;break e}var A=0,c=-1,m=-1,h=0,f=0,d=a,p=null;t:for(;;){for(var x;d!==o||0!==r&&3!==d.nodeType||(c=A+r),d!==s||0!==u&&3!==d.nodeType||(m=A+u),3===d.nodeType&&(A+=d.nodeValue.length),null!==(x=d.firstChild);)p=d,d=x;for(;;){if(d===a)break t;if(p===o&&++h===r&&(c=A),p===s&&++f===u&&(m=A),null!==(x=d.nextSibling))break;p=(d=p).parentNode}d=x}o=-1===c||-1===m?null:{start:c,end:m}}else o=null;o=o||{start:0,end:0}}else o=null;Hl={focusedElem:a,selectionRange:o},Xt=!1,so=null,uo=!1,Ya=l;do{try{Ro()}catch(S){if(null===Ya)throw Error(i(330));Uo(Ya,S),Ya=Ya.nextEffect}}while(null!==Ya);so=null,Ya=l;do{try{for(a=e;null!==Ya;){var v=Ya.flags;if(16&v&&xe(Ya.stateNode,""),128&v){var g=Ya.alternate;if(null!==g){var _=g.ref;null!==_&&("function"===typeof _?_(null):_.current=null)}}switch(1038&v){case 2:_a(Ya),Ya.flags&=-3;break;case 6:_a(Ya),Ya.flags&=-3,Ma(Ya.alternate,Ya);break;case 1024:Ya.flags&=-1025;break;case 1028:Ya.flags&=-1025,Ma(Ya.alternate,Ya);break;case 4:Ma(Ya.alternate,Ya);break;case 8:wa(a,o=Ya);var y=o.alternate;va(o),null!==y&&va(y)}Ya=Ya.nextEffect}}catch(S){if(null===Ya)throw Error(i(330));Uo(Ya,S),Ya=Ya.nextEffect}}while(null!==Ya);if(_=Hl,g=dl(),v=_.focusedElem,a=_.selectionRange,g!==v&&v&&v.ownerDocument&&fl(v.ownerDocument.documentElement,v)){null!==a&&pl(v)&&(g=a.start,void 0===(_=a.end)&&(_=g),"selectionStart"in v?(v.selectionStart=g,v.selectionEnd=Math.min(_,v.value.length)):(_=(g=v.ownerDocument||document)&&g.defaultView||window).getSelection&&(_=_.getSelection(),o=v.textContent.length,y=Math.min(a.start,o),a=void 0===a.end?y:Math.min(a.end,o),!_.extend&&y>a&&(o=a,a=y,y=o),o=hl(v,y),r=hl(v,a),o&&r&&(1!==_.rangeCount||_.anchorNode!==o.node||_.anchorOffset!==o.offset||_.focusNode!==r.node||_.focusOffset!==r.offset)&&((g=g.createRange()).setStart(o.node,o.offset),_.removeAllRanges(),y>a?(_.addRange(g),_.extend(r.node,r.offset)):(g.setEnd(r.node,r.offset),_.addRange(g))))),g=[];for(_=v;_=_.parentNode;)1===_.nodeType&&g.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"===typeof v.focus&&v.focus(),v=0;v<g.length;v++)(_=g[v]).element.scrollLeft=_.left,_.element.scrollTop=_.top}Xt=!!Fl,Hl=Fl=null,e.current=n,Ya=l;do{try{for(v=e;null!==Ya;){var b=Ya.flags;if(36&b&&da(v,Ya.alternate,Ya),128&b){g=void 0;var w=Ya.ref;if(null!==w){var M=Ya.stateNode;Ya.tag,g=M,"function"===typeof w?w(g):w.current=g}}Ya=Ya.nextEffect}}catch(S){if(null===Ya)throw Error(i(330));Uo(Ya,S),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Bq(),Ca=q}else e.current=n;if(Ka)Ka=!1,$a=e,eo=t;else for(Ya=l;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,8&Ya.flags&&((b=Ya).sibling=null,b.stateNode=null),Ya=t;if(0===(l=e.pendingLanes)&&(Ja=null),1===l?e===ro?qo++:(qo=0,ro=e):qo=0,n=n.stateNode,wq&&"function"===typeof wq.onCommitFiberRoot)try{wq.onCommitFiberRoot(bq,n,void 0,64===(64&n.current.flags))}catch(S){}if(fo(e,Gq()),Xa)throw Xa=!1,e=Za,Za=null,e;return 0!==(8&Ca)||Yq(),null}function Ro(){for(;null!==Ya;){var e=Ya.alternate;uo||null===so||(0!==(8&Ya.flags)?et(Ya,so)&&(uo=!0):13===Ya.tag&&Ea(e,Ya)&&et(Ya,so)&&(uo=!0));var t=Ya.flags;0!==(256&t)&&fa(e,Ya),0===(512&t)||Ka||(Ka=!0,Qq(97,(function(){return Do(),null}))),Ya=Ya.nextEffect}}function Do(){if(90!==eo){var e=97<eo?97:eo;return eo=90,Wq(e,Bo)}return!1}function Io(e,t){to.push(t,e),Ka||(Ka=!0,Qq(97,(function(){return Do(),null})))}function Oo(e,t){no.push(t,e),Ka||(Ka=!0,Qq(97,(function(){return Do(),null})))}function Bo(){if(null===$a)return!1;var e=$a;if($a=null,0!==(48&Ca))throw Error(i(331));var t=Ca;Ca|=32;var n=no;no=[];for(var l=0;l<n.length;l+=2){var q=n[l],r=n[l+1],a=q.destroy;if(q.destroy=void 0,"function"===typeof a)try{a()}catch(s){if(null===r)throw Error(i(330));Uo(r,s)}}for(n=to,to=[],l=0;l<n.length;l+=2){q=n[l],r=n[l+1];try{var o=q.create;q.destroy=o()}catch(s){if(null===r)throw Error(i(330));Uo(r,s)}}for(o=e.current.firstEffect;null!==o;)e=o.nextEffect,o.nextEffect=null,8&o.flags&&(o.sibling=null,o.stateNode=null),o=e;return Ca=t,Yq(),!0}function No(e,t,n){Ar(e,t=Aa(0,t=oa(n,t),1)),t=Ao(),null!==(e=ho(e,1))&&(Gt(e,1,t),fo(e,t))}function Uo(e,t){if(3===e.tag)No(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){No(n,e,t);break}if(1===n.tag){var l=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof l.componentDidCatch&&(null===Ja||!Ja.has(l))){var q=ca(n,e=oa(t,e),1);if(Ar(n,q),q=Ao(),null!==(n=ho(n,1)))Gt(n,1,q),fo(n,q);else if("function"===typeof l.componentDidCatch&&(null===Ja||!Ja.has(l)))try{l.componentDidCatch(t,e)}catch(r){}break}}n=n.return}}function Fo(e,t,n){var l=e.pingCache;null!==l&&l.delete(t),t=Ao(),e.pingedLanes|=e.suspendedLanes&n,La===e&&(Ra&n)===n&&(4===Oa||3===Oa&&(62914560&Ra)===Ra&&500>Gq()-ja?wo(e,0):Ha|=n),fo(e,t)}function Ho(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===jq()?1:2:(0===ao&&(ao=Na),0===(t=Ft(62914560&~ao))&&(t=4194304))),n=Ao(),null!==(e=ho(e,t))&&(Gt(e,t,n),fo(e,n))}function Go(e,t,n,l){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=l,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function jo(e,t,n,l){return new Go(e,t,n,l)}function Vo(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wo(e,t){var n=e.alternate;return null===n?((n=jo(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Qo(e,t,n,l,q,r){var a=2;if(l=e,"function"===typeof e)Vo(e)&&(a=1);else if("string"===typeof e)a=5;else e:switch(e){case w:return Yo(n.children,q,r,t);case I:a=8,q|=16;break;case M:a=8,q|=1;break;case S:return(e=jo(12,n,t,8|q)).elementType=S,e.type=S,e.lanes=r,e;case T:return(e=jo(13,n,t,q)).type=T,e.elementType=T,e.lanes=r,e;case C:return(e=jo(19,n,t,q)).elementType=C,e.lanes=r,e;case O:return Xo(n,q,r,t);case B:return(e=jo(24,n,t,q)).elementType=B,e.lanes=r,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case E:a=10;break e;case z:a=9;break e;case k:a=11;break e;case L:a=14;break e;case P:a=16,l=null;break e;case R:a=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=jo(a,n,t,q)).elementType=e,t.type=l,t.lanes=r,t}function Yo(e,t,n,l){return(e=jo(7,e,l,t)).lanes=n,e}function Xo(e,t,n,l){return(e=jo(23,e,l,t)).elementType=O,e.lanes=n,e}function Zo(e,t,n){return(e=jo(6,e,null,t)).lanes=n,e}function Jo(e,t,n){return(t=jo(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ko(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ht(0),this.expirationTimes=Ht(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ht(0),this.mutableSourceEagerHydrationData=null}function $o(e,t,n){var l=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:b,key:null==l?null:""+l,children:e,containerInfo:t,implementation:n}}function es(e,t,n,l){var q=t.current,r=Ao(),a=co(q);e:if(n){t:{if(Ze(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var o=n;do{switch(o.tag){case 3:o=o.stateNode.context;break t;case 1:if(pq(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break t}}o=o.return}while(null!==o);throw Error(i(171))}if(1===n.tag){var s=n.type;if(pq(s)){n=gq(n,s,o);break e}}n=o}else n=cq;return null===t.context?t.context=n:t.pendingContext=n,(t=ur(r,a)).payload={element:e},null!==(l=void 0===l?null:l)&&(t.callback=l),Ar(q,t),mo(q,a,r),a}function ts(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ns(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ls(e,t){ns(e,t),(e=e.alternate)&&ns(e,t)}function qs(e,t,n){var l=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Ko(e,t,null!=n&&!0===n.hydrate),t=jo(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,or(t),e[eq]=n.current,Ll(8===e.nodeType?e.parentNode:e),l)for(e=0;e<l.length;e++){var q=(t=l[e])._getVersion;q=q(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,q]:n.mutableSourceEagerHydrationData.push(t,q)}this._internalRoot=n}function rs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function is(e,t,n,l,q){var r=n._reactRootContainer;if(r){var i=r._internalRoot;if("function"===typeof q){var a=q;q=function(){var e=ts(i);a.call(e)}}es(t,i,e,q)}else{if(r=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qs(e,0,t?{hydrate:!0}:void 0)}(n,l),i=r._internalRoot,"function"===typeof q){var o=q;q=function(){var e=ts(i);o.call(e)}}_o((function(){es(t,i,e,q)}))}return ts(i)}function as(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rs(t))throw Error(i(200));return $o(e,t,null,n)}Qa=function(e,t,n){var l=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||hq.current)Ii=!0;else{if(0===(n&l)){switch(Ii=!1,t.tag){case 3:Wi(t),Qr();break;case 5:Dr(t);break;case 1:pq(t.type)&&_q(t);break;case 4:Pr(t,t.stateNode.containerInfo);break;case 10:l=t.memoizedProps.value;var q=t.type._context;Aq(Kq,q._currentValue),q._currentValue=l;break;case 13:if(null!==t.memoizedState)return 0!==(n&t.child.childLanes)?Ji(e,t,n):(Aq(Or,1&Or.current),null!==(t=qa(e,t,n))?t.sibling:null);Aq(Or,1&Or.current);break;case 19:if(l=0!==(n&t.childLanes),0!==(64&e.flags)){if(l)return la(e,t,n);t.flags|=64}if(null!==(q=t.memoizedState)&&(q.rendering=null,q.tail=null,q.lastEffect=null),Aq(Or,Or.current),l)break;return null;case 23:case 24:return t.lanes=0,Fi(e,t,n)}return qa(e,t,n)}Ii=0!==(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(l=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,q=dq(t,mq.current),rr(t,n),q=ii(null,t,l,e,q,n),t.flags|=1,"object"===typeof q&&null!==q&&"function"===typeof q.render&&void 0===q.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pq(l)){var r=!0;_q(t)}else r=!1;t.memoizedState=null!==q.state&&void 0!==q.state?q.state:null,or(t);var a=l.getDerivedStateFromProps;"function"===typeof a&&dr(t,l,a,e),q.updater=pr,t.stateNode=q,q._reactInternals=t,_r(t,l,e,n),t=Vi(null,t,l,!0,r,n)}else t.tag=0,Oi(null,t,q,n),t=t.child;return t;case 16:q=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,q=(r=q._init)(q._payload),t.type=q,r=t.tag=function(e){if("function"===typeof e)return Vo(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===k)return 11;if(e===L)return 14}return 2}(q),e=Jq(q,e),r){case 0:t=Gi(null,t,q,e,n);break e;case 1:t=ji(null,t,q,e,n);break e;case 11:t=Bi(null,t,q,e,n);break e;case 14:t=Ni(null,t,q,Jq(q.type,e),l,n);break e}throw Error(i(306,q,""))}return t;case 0:return l=t.type,q=t.pendingProps,Gi(e,t,l,q=t.elementType===l?q:Jq(l,q),n);case 1:return l=t.type,q=t.pendingProps,ji(e,t,l,q=t.elementType===l?q:Jq(l,q),n);case 3:if(Wi(t),l=t.updateQueue,null===e||null===l)throw Error(i(282));if(l=t.pendingProps,q=null!==(q=t.memoizedState)?q.element:null,sr(e,t),mr(t,l,null,n),(l=t.memoizedState.element)===q)Qr(),t=qa(e,t,n);else{if((r=(q=t.stateNode).hydrate)&&(Ur=Yl(t.stateNode.containerInfo.firstChild),Nr=t,r=Fr=!0),r){if(null!=(e=q.mutableSourceEagerHydrationData))for(q=0;q<e.length;q+=2)(r=e[q])._workInProgressVersionPrimary=e[q+1],Yr.push(r);for(n=Er(t,null,l,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Oi(e,t,l,n),Qr();t=t.child}return t;case 5:return Dr(t),null===e&&jr(t),l=t.type,q=t.pendingProps,r=null!==e?e.memoizedProps:null,a=q.children,jl(l,q)?a=null:null!==r&&jl(l,r)&&(t.flags|=16),Hi(e,t),Oi(e,t,a,n),t.child;case 6:return null===e&&jr(t),null;case 13:return Ji(e,t,n);case 4:return Pr(t,t.stateNode.containerInfo),l=t.pendingProps,null===e?t.child=Sr(t,null,l,n):Oi(e,t,l,n),t.child;case 11:return l=t.type,q=t.pendingProps,Bi(e,t,l,q=t.elementType===l?q:Jq(l,q),n);case 7:return Oi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Oi(e,t,t.pendingProps.children,n),t.child;case 10:e:{l=t.type._context,q=t.pendingProps,a=t.memoizedProps,r=q.value;var o=t.type._context;if(Aq(Kq,o._currentValue),o._currentValue=r,null!==a)if(o=a.value,0===(r=ul(o,r)?0:0|("function"===typeof l._calculateChangedBits?l._calculateChangedBits(o,r):1073741823))){if(a.children===q.children&&!hq.current){t=qa(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var s=o.dependencies;if(null!==s){a=o.child;for(var u=s.firstContext;null!==u;){if(u.context===l&&0!==(u.observedBits&r)){1===o.tag&&((u=ur(-1,n&-n)).tag=2,Ar(o,u)),o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),qr(o.return,n),s.lanes|=n;break}u=u.next}}else a=10===o.tag&&o.type===t.type?null:o.child;if(null!==a)a.return=o;else for(a=o;null!==a;){if(a===t){a=null;break}if(null!==(o=a.sibling)){o.return=a.return,a=o;break}a=a.return}o=a}Oi(e,t,q.children,n),t=t.child}return t;case 9:return q=t.type,l=(r=t.pendingProps).children,rr(t,n),l=l(q=ir(q,r.unstable_observedBits)),t.flags|=1,Oi(e,t,l,n),t.child;case 14:return r=Jq(q=t.type,t.pendingProps),Ni(e,t,q,r=Jq(q.type,r),l,n);case 15:return Ui(e,t,t.type,t.pendingProps,l,n);case 17:return l=t.type,q=t.pendingProps,q=t.elementType===l?q:Jq(l,q),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pq(l)?(e=!0,_q(t)):e=!1,rr(t,n),vr(t,l,q),_r(t,l,q,n),Vi(null,t,l,!0,e,n);case 19:return la(e,t,n);case 23:case 24:return Fi(e,t,n)}throw Error(i(156,t.tag))},qs.prototype.render=function(e){es(e,this._internalRoot,null,null)},qs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;es(null,e,null,(function(){t[eq]=null}))},tt=function(e){13===e.tag&&(mo(e,4,Ao()),ls(e,4))},nt=function(e){13===e.tag&&(mo(e,67108864,Ao()),ls(e,67108864))},lt=function(e){if(13===e.tag){var t=Ao(),n=co(e);mo(e,n,t),ls(e,n)}},qt=function(e,t){return t()},Ee=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var l=n[t];if(l!==e&&l.form===e.form){var q=rq(l);if(!q)throw Error(i(90));J(l),ne(l,q)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Pe=go,Re=function(e,t,n,l,q){var r=Ca;Ca|=4;try{return Wq(98,e.bind(null,t,n,l,q))}finally{0===(Ca=r)&&(Wa(),Yq())}},De=function(){0===(49&Ca)&&(function(){if(null!==lo){var e=lo;lo=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,fo(e,Gq())}))}Yq()}(),Do())},Ie=function(e,t){var n=Ca;Ca|=2;try{return e(t)}finally{0===(Ca=n)&&(Wa(),Yq())}};var os={Events:[lq,qq,rq,Ce,Le,Do,{current:!1}]},ss={findFiberByHostInstance:nq,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},us={bundleType:ss.bundleType,version:ss.version,rendererPackageName:ss.rendererPackageName,rendererConfig:ss.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:_.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:ss.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var As=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!As.isDisabled&&As.supportsFiber)try{bq=As.inject(us),wq=As}catch(de){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=os,t.createPortal=as,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ca;if(0!==(48&n))return e(t);Ca|=1;try{if(e)return Wq(99,e.bind(null,t))}finally{Ca=n,Yq()}},t.hydrate=function(e,t,n){if(!rs(t))throw Error(i(200));return is(null,e,t,!0,n)},t.render=function(e,t,n){if(!rs(t))throw Error(i(200));return is(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!rs(e))throw Error(i(40));return!!e._reactRootContainer&&(_o((function(){is(null,null,e,!1,(function(){e._reactRootContainer=null,e[eq]=null}))})),!0)},t.unstable_batchedUpdates=go,t.unstable_createPortal=function(e,t){return as(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,l){if(!rs(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return is(e,t,n,!1,l)},t.version="17.0.2"},164:function(e,t,n){"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(463)},374:function(e,t,n){"use strict";n(725);var l=n(791),q=60103;if(60107,"function"===typeof Symbol&&Symbol.for){var r=Symbol.for;q=r("react.element"),r("react.fragment")}var i=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,o={key:!0,ref:!0,__self:!0,__source:!0};function s(e,t,n){var l,r={},s=null,u=null;for(l in void 0!==n&&(s=""+n),void 0!==t.key&&(s=""+t.key),void 0!==t.ref&&(u=t.ref),t)a.call(t,l)&&!o.hasOwnProperty(l)&&(r[l]=t[l]);if(e&&e.defaultProps)for(l in t=e.defaultProps)void 0===r[l]&&(r[l]=t[l]);return{$$typeof:q,type:e,key:s,ref:u,props:r,_owner:i.current}}t.jsx=s,t.jsxs=s},117:function(e,t,n){"use strict";var l=n(725),q=60103,r=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,a=60110,o=60112;t.Suspense=60113;var s=60115,u=60116;if("function"===typeof Symbol&&Symbol.for){var A=Symbol.for;q=A("react.element"),r=A("react.portal"),t.Fragment=A("react.fragment"),t.StrictMode=A("react.strict_mode"),t.Profiler=A("react.profiler"),i=A("react.provider"),a=A("react.context"),o=A("react.forward_ref"),t.Suspense=A("react.suspense"),s=A("react.memo"),u=A("react.lazy")}var c="function"===typeof Symbol&&Symbol.iterator;function m(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function d(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||h}function p(){}function x(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||h}d.prototype.isReactComponent={},d.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(m(85));this.updater.enqueueSetState(this,e,t,"setState")},d.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},p.prototype=d.prototype;var v=x.prototype=new p;v.constructor=x,l(v,d.prototype),v.isPureReactComponent=!0;var g={current:null},_=Object.prototype.hasOwnProperty,y={key:!0,ref:!0,__self:!0,__source:!0};function b(e,t,n){var l,r={},i=null,a=null;if(null!=t)for(l in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)_.call(t,l)&&!y.hasOwnProperty(l)&&(r[l]=t[l]);var o=arguments.length-2;if(1===o)r.children=n;else if(1<o){for(var s=Array(o),u=0;u<o;u++)s[u]=arguments[u+2];r.children=s}if(e&&e.defaultProps)for(l in o=e.defaultProps)void 0===r[l]&&(r[l]=o[l]);return{$$typeof:q,type:e,key:i,ref:a,props:r,_owner:g.current}}function w(e){return"object"===typeof e&&null!==e&&e.$$typeof===q}var M=/\/+/g;function S(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,n,l,i){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var o=!1;if(null===e)o=!0;else switch(a){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case q:case r:o=!0}}if(o)return i=i(o=e),e=""===l?"."+S(o,0):l,Array.isArray(i)?(n="",null!=e&&(n=e.replace(M,"$&/")+"/"),E(i,t,n,"",(function(e){return e}))):null!=i&&(w(i)&&(i=function(e,t){return{$$typeof:q,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||o&&o.key===i.key?"":(""+i.key).replace(M,"$&/")+"/")+e)),t.push(i)),1;if(o=0,l=""===l?".":l+":",Array.isArray(e))for(var s=0;s<e.length;s++){var u=l+S(a=e[s],s);o+=E(a,t,n,u,i)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=c&&e[c]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),s=0;!(a=e.next()).done;)o+=E(a=a.value,t,n,u=l+S(a,s++),i);else if("object"===a)throw t=""+e,Error(m(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return o}function z(e,t,n){if(null==e)return e;var l=[],q=0;return E(e,l,"","",(function(e){return t.call(n,e,q++)})),l}function k(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function C(){var e=T.current;if(null===e)throw Error(m(321));return e}var L={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:g,IsSomeRendererActing:{current:!1},assign:l};t.Children={map:z,forEach:function(e,t,n){z(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return z(e,(function(){t++})),t},toArray:function(e){return z(e,(function(e){return e}))||[]},only:function(e){if(!w(e))throw Error(m(143));return e}},t.Component=d,t.PureComponent=x,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error(m(267,e));var r=l({},e.props),i=e.key,a=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,o=g.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in t)_.call(t,u)&&!y.hasOwnProperty(u)&&(r[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}var u=arguments.length-2;if(1===u)r.children=n;else if(1<u){s=Array(u);for(var A=0;A<u;A++)s[A]=arguments[A+2];r.children=s}return{$$typeof:q,type:e.type,key:i,ref:a,props:r,_owner:o}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:a,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=b,t.createFactory=function(e){var t=b.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:o,render:e}},t.isValidElement=w,t.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:k}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return C().useCallback(e,t)},t.useContext=function(e,t){return C().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return C().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return C().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return C().useLayoutEffect(e,t)},t.useMemo=function(e,t){return C().useMemo(e,t)},t.useReducer=function(e,t,n){return C().useReducer(e,t,n)},t.useRef=function(e){return C().useRef(e)},t.useState=function(e){return C().useState(e)},t.version="17.0.2"},791:function(e,t,n){"use strict";e.exports=n(117)},184:function(e,t,n){"use strict";e.exports=n(374)},727:function(e){var t=function(e){"use strict";var t,n=Object.prototype,l=n.hasOwnProperty,q="function"===typeof Symbol?Symbol:{},r=q.iterator||"@@iterator",i=q.asyncIterator||"@@asyncIterator",a=q.toStringTag||"@@toStringTag";function o(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{o({},"")}catch(C){o=function(e,t,n){return e[t]=n}}function s(e,t,n,l){var q=t&&t.prototype instanceof d?t:d,r=Object.create(q.prototype),i=new z(l||[]);return r._invoke=function(e,t,n){var l=A;return function(q,r){if(l===m)throw new Error("Generator is already running");if(l===h){if("throw"===q)throw r;return T()}for(n.method=q,n.arg=r;;){var i=n.delegate;if(i){var a=M(i,n);if(a){if(a===f)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(l===A)throw l=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);l=m;var o=u(e,t,n);if("normal"===o.type){if(l=n.done?h:c,o.arg===f)continue;return{value:o.arg,done:n.done}}"throw"===o.type&&(l=h,n.method="throw",n.arg=o.arg)}}}(e,n,i),r}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(C){return{type:"throw",arg:C}}}e.wrap=s;var A="suspendedStart",c="suspendedYield",m="executing",h="completed",f={};function d(){}function p(){}function x(){}var v={};o(v,r,(function(){return this}));var g=Object.getPrototypeOf,_=g&&g(g(k([])));_&&_!==n&&l.call(_,r)&&(v=_);var y=x.prototype=d.prototype=Object.create(v);function b(e){["next","throw","return"].forEach((function(t){o(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function n(q,r,i,a){var o=u(e[q],e,r);if("throw"!==o.type){var s=o.arg,A=s.value;return A&&"object"===typeof A&&l.call(A,"__await")?t.resolve(A.__await).then((function(e){n("next",e,i,a)}),(function(e){n("throw",e,i,a)})):t.resolve(A).then((function(e){s.value=e,i(s)}),(function(e){return n("throw",e,i,a)}))}a(o.arg)}var q;this._invoke=function(e,l){function r(){return new t((function(t,q){n(e,l,t,q)}))}return q=q?q.then(r,r):r()}}function M(e,n){var l=e.iterator[n.method];if(l===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,M(e,n),"throw"===n.method))return f;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var q=u(l,e.iterator,n.arg);if("throw"===q.type)return n.method="throw",n.arg=q.arg,n.delegate=null,f;var r=q.arg;return r?r.done?(n[e.resultName]=r.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,f):r:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,f)}function S(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function k(e){if(e){var n=e[r];if(n)return n.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var q=-1,i=function n(){for(;++q<e.length;)if(l.call(e,q))return n.value=e[q],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:T}}function T(){return{value:t,done:!0}}return p.prototype=x,o(y,"constructor",x),o(x,"constructor",p),p.displayName=o(x,a,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,o(e,a,"GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},b(w.prototype),o(w.prototype,i,(function(){return this})),e.AsyncIterator=w,e.async=function(t,n,l,q,r){void 0===r&&(r=Promise);var i=new w(s(t,n,l,q),r);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},b(y),o(y,a,"Generator"),o(y,r,(function(){return this})),o(y,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var l=t.pop();if(l in e)return n.value=l,n.done=!1,n}return n.done=!0,n}},e.values=k,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(E),!e)for(var n in this)"t"===n.charAt(0)&&l.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function q(l,q){return a.type="throw",a.arg=e,n.next=l,q&&(n.method="next",n.arg=t),!!q}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],a=i.completion;if("root"===i.tryLoc)return q("end");if(i.tryLoc<=this.prev){var o=l.call(i,"catchLoc"),s=l.call(i,"finallyLoc");if(o&&s){if(this.prev<i.catchLoc)return q(i.catchLoc,!0);if(this.prev<i.finallyLoc)return q(i.finallyLoc)}else if(o){if(this.prev<i.catchLoc)return q(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return q(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var q=this.tryEntries[n];if(q.tryLoc<=this.prev&&l.call(q,"finallyLoc")&&this.prev<q.finallyLoc){var r=q;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=e,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,f):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),f},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),f}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var l=n.completion;if("throw"===l.type){var q=l.arg;E(n)}return q}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,l){return this.delegate={iterator:k(e),resultName:n,nextLoc:l},"next"===this.method&&(this.arg=t),f}},e}(e.exports);try{regeneratorRuntime=t}catch(n){"object"===typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},813:function(e,t){"use strict";var n,l,q,r;if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var a=Date,o=a.now();t.unstable_now=function(){return a.now()-o}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,u=null,A=function e(){if(null!==s)try{var n=t.unstable_now();s(!0,n),s=null}catch(l){throw setTimeout(e,0),l}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(A,0))},l=function(e,t){u=setTimeout(e,t)},q=function(){clearTimeout(u)},t.unstable_shouldYield=function(){return!1},r=t.unstable_forceFrameRate=function(){}}else{var c=window.setTimeout,m=window.clearTimeout;if("undefined"!==typeof console){var h=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var f=!1,d=null,p=-1,x=5,v=0;t.unstable_shouldYield=function(){return t.unstable_now()>=v},r=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):x=0<e?Math.floor(1e3/e):5};var g=new MessageChannel,_=g.port2;g.port1.onmessage=function(){if(null!==d){var e=t.unstable_now();v=e+x;try{d(!0,e)?_.postMessage(null):(f=!1,d=null)}catch(n){throw _.postMessage(null),n}}else f=!1},n=function(e){d=e,f||(f=!0,_.postMessage(null))},l=function(e,n){p=c((function(){e(t.unstable_now())}),n)},q=function(){m(p),p=-1}}function y(e,t){var n=e.length;e.push(t);e:for(;;){var l=n-1>>>1,q=e[l];if(!(void 0!==q&&0<M(q,t)))break e;e[l]=t,e[n]=q,n=l}}function b(e){return void 0===(e=e[0])?null:e}function w(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var l=0,q=e.length;l<q;){var r=2*(l+1)-1,i=e[r],a=r+1,o=e[a];if(void 0!==i&&0>M(i,n))void 0!==o&&0>M(o,i)?(e[l]=o,e[a]=n,l=a):(e[l]=i,e[r]=n,l=r);else{if(!(void 0!==o&&0>M(o,n)))break e;e[l]=o,e[a]=n,l=a}}}return t}return null}function M(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var S=[],E=[],z=1,k=null,T=3,C=!1,L=!1,P=!1;function R(e){for(var t=b(E);null!==t;){if(null===t.callback)w(E);else{if(!(t.startTime<=e))break;w(E),t.sortIndex=t.expirationTime,y(S,t)}t=b(E)}}function D(e){if(P=!1,R(e),!L)if(null!==b(S))L=!0,n(I);else{var t=b(E);null!==t&&l(D,t.startTime-e)}}function I(e,n){L=!1,P&&(P=!1,q()),C=!0;var r=T;try{for(R(n),k=b(S);null!==k&&(!(k.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=k.callback;if("function"===typeof i){k.callback=null,T=k.priorityLevel;var a=i(k.expirationTime<=n);n=t.unstable_now(),"function"===typeof a?k.callback=a:k===b(S)&&w(S),R(n)}else w(S);k=b(S)}if(null!==k)var o=!0;else{var s=b(E);null!==s&&l(D,s.startTime-n),o=!1}return o}finally{k=null,T=r,C=!1}}var O=r;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||C||(L=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return T},t.unstable_getFirstCallbackNode=function(){return b(S)},t.unstable_next=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var n=T;T=t;try{return e()}finally{T=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=O,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=T;T=e;try{return t()}finally{T=n}},t.unstable_scheduleCallback=function(e,r,i){var a=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?a+i:a:i=a,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:z++,callback:r,priorityLevel:e,startTime:i,expirationTime:o=i+o,sortIndex:-1},i>a?(e.sortIndex=i,y(E,e),null===b(S)&&e===b(E)&&(P?q():P=!0,l(D,i-a))):(e.sortIndex=o,y(S,e),L||C||(L=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=T;return function(){var n=T;T=t;try{return e.apply(this,arguments)}finally{T=n}}}},296:function(e,t,n){"use strict";e.exports=n(813)},45:function(e,t,n){var l;!function(q){var r=/^\s+/,i=/\s+$/,a=0,o=q.round,s=q.min,u=q.max,A=q.random;function c(e,t){if(t=t||{},(e=e||"")instanceof c)return e;if(!(this instanceof c))return new c(e,t);var n=function(e){var t={r:0,g:0,b:0},n=1,l=null,a=null,o=null,A=!1,c=!1;"string"==typeof e&&(e=function(e){e=e.replace(r,"").replace(i,"").toLowerCase();var t,n=!1;if(T[e])e=T[e],n=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};if(t=U.rgb.exec(e))return{r:t[1],g:t[2],b:t[3]};if(t=U.rgba.exec(e))return{r:t[1],g:t[2],b:t[3],a:t[4]};if(t=U.hsl.exec(e))return{h:t[1],s:t[2],l:t[3]};if(t=U.hsla.exec(e))return{h:t[1],s:t[2],l:t[3],a:t[4]};if(t=U.hsv.exec(e))return{h:t[1],s:t[2],v:t[3]};if(t=U.hsva.exec(e))return{h:t[1],s:t[2],v:t[3],a:t[4]};if(t=U.hex8.exec(e))return{r:D(t[1]),g:D(t[2]),b:D(t[3]),a:N(t[4]),format:n?"name":"hex8"};if(t=U.hex6.exec(e))return{r:D(t[1]),g:D(t[2]),b:D(t[3]),format:n?"name":"hex"};if(t=U.hex4.exec(e))return{r:D(t[1]+""+t[1]),g:D(t[2]+""+t[2]),b:D(t[3]+""+t[3]),a:N(t[4]+""+t[4]),format:n?"name":"hex8"};if(t=U.hex3.exec(e))return{r:D(t[1]+""+t[1]),g:D(t[2]+""+t[2]),b:D(t[3]+""+t[3]),format:n?"name":"hex"};return!1}(e));"object"==typeof e&&(F(e.r)&&F(e.g)&&F(e.b)?(m=e.r,h=e.g,f=e.b,t={r:255*P(m,255),g:255*P(h,255),b:255*P(f,255)},A=!0,c="%"===String(e.r).substr(-1)?"prgb":"rgb"):F(e.h)&&F(e.s)&&F(e.v)?(l=O(e.s),a=O(e.v),t=function(e,t,n){e=6*P(e,360),t=P(t,100),n=P(n,100);var l=q.floor(e),r=e-l,i=n*(1-t),a=n*(1-r*t),o=n*(1-(1-r)*t),s=l%6;return{r:255*[n,a,i,i,o,n][s],g:255*[o,n,n,a,i,i][s],b:255*[i,i,o,n,n,a][s]}}(e.h,l,a),A=!0,c="hsv"):F(e.h)&&F(e.s)&&F(e.l)&&(l=O(e.s),o=O(e.l),t=function(e,t,n){var l,q,r;function i(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(e=P(e,360),t=P(t,100),n=P(n,100),0===t)l=q=r=n;else{var a=n<.5?n*(1+t):n+t-n*t,o=2*n-a;l=i(o,a,e+1/3),q=i(o,a,e),r=i(o,a,e-1/3)}return{r:255*l,g:255*q,b:255*r}}(e.h,l,o),A=!0,c="hsl"),e.hasOwnProperty("a")&&(n=e.a));var m,h,f;return n=L(n),{ok:A,format:e.format||c,r:s(255,u(t.r,0)),g:s(255,u(t.g,0)),b:s(255,u(t.b,0)),a:n}}(e);this._originalInput=e,this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=o(100*this._a)/100,this._format=t.format||n.format,this._gradientType=t.gradientType,this._r<1&&(this._r=o(this._r)),this._g<1&&(this._g=o(this._g)),this._b<1&&(this._b=o(this._b)),this._ok=n.ok,this._tc_id=a++}function m(e,t,n){e=P(e,255),t=P(t,255),n=P(n,255);var l,q,r=u(e,t,n),i=s(e,t,n),a=(r+i)/2;if(r==i)l=q=0;else{var o=r-i;switch(q=a>.5?o/(2-r-i):o/(r+i),r){case e:l=(t-n)/o+(t<n?6:0);break;case t:l=(n-e)/o+2;break;case n:l=(e-t)/o+4}l/=6}return{h:l,s:q,l:a}}function h(e,t,n){e=P(e,255),t=P(t,255),n=P(n,255);var l,q,r=u(e,t,n),i=s(e,t,n),a=r,o=r-i;if(q=0===r?0:o/r,r==i)l=0;else{switch(r){case e:l=(t-n)/o+(t<n?6:0);break;case t:l=(n-e)/o+2;break;case n:l=(e-t)/o+4}l/=6}return{h:l,s:q,v:a}}function f(e,t,n,l){var q=[I(o(e).toString(16)),I(o(t).toString(16)),I(o(n).toString(16))];return l&&q[0].charAt(0)==q[0].charAt(1)&&q[1].charAt(0)==q[1].charAt(1)&&q[2].charAt(0)==q[2].charAt(1)?q[0].charAt(0)+q[1].charAt(0)+q[2].charAt(0):q.join("")}function d(e,t,n,l){return[I(B(l)),I(o(e).toString(16)),I(o(t).toString(16)),I(o(n).toString(16))].join("")}function p(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.s-=t/100,n.s=R(n.s),c(n)}function x(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.s+=t/100,n.s=R(n.s),c(n)}function v(e){return c(e).desaturate(100)}function g(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.l+=t/100,n.l=R(n.l),c(n)}function _(e,t){t=0===t?0:t||10;var n=c(e).toRgb();return n.r=u(0,s(255,n.r-o(-t/100*255))),n.g=u(0,s(255,n.g-o(-t/100*255))),n.b=u(0,s(255,n.b-o(-t/100*255))),c(n)}function y(e,t){t=0===t?0:t||10;var n=c(e).toHsl();return n.l-=t/100,n.l=R(n.l),c(n)}function b(e,t){var n=c(e).toHsl(),l=(n.h+t)%360;return n.h=l<0?360+l:l,c(n)}function w(e){var t=c(e).toHsl();return t.h=(t.h+180)%360,c(t)}function M(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+120)%360,s:t.s,l:t.l}),c({h:(n+240)%360,s:t.s,l:t.l})]}function S(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+90)%360,s:t.s,l:t.l}),c({h:(n+180)%360,s:t.s,l:t.l}),c({h:(n+270)%360,s:t.s,l:t.l})]}function E(e){var t=c(e).toHsl(),n=t.h;return[c(e),c({h:(n+72)%360,s:t.s,l:t.l}),c({h:(n+216)%360,s:t.s,l:t.l})]}function z(e,t,n){t=t||6,n=n||30;var l=c(e).toHsl(),q=360/n,r=[c(e)];for(l.h=(l.h-(q*t>>1)+720)%360;--t;)l.h=(l.h+q)%360,r.push(c(l));return r}function k(e,t){t=t||6;for(var n=c(e).toHsv(),l=n.h,q=n.s,r=n.v,i=[],a=1/t;t--;)i.push(c({h:l,s:q,v:r})),r=(r+a)%1;return i}c.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var e,t,n,l=this.toRgb();return e=l.r/255,t=l.g/255,n=l.b/255,.2126*(e<=.03928?e/12.92:q.pow((e+.055)/1.055,2.4))+.7152*(t<=.03928?t/12.92:q.pow((t+.055)/1.055,2.4))+.0722*(n<=.03928?n/12.92:q.pow((n+.055)/1.055,2.4))},setAlpha:function(e){return this._a=L(e),this._roundA=o(100*this._a)/100,this},toHsv:function(){var e=h(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=h(this._r,this._g,this._b),t=o(360*e.h),n=o(100*e.s),l=o(100*e.v);return 1==this._a?"hsv("+t+", "+n+"%, "+l+"%)":"hsva("+t+", "+n+"%, "+l+"%, "+this._roundA+")"},toHsl:function(){var e=m(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=m(this._r,this._g,this._b),t=o(360*e.h),n=o(100*e.s),l=o(100*e.l);return 1==this._a?"hsl("+t+", "+n+"%, "+l+"%)":"hsla("+t+", "+n+"%, "+l+"%, "+this._roundA+")"},toHex:function(e){return f(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return function(e,t,n,l,q){var r=[I(o(e).toString(16)),I(o(t).toString(16)),I(o(n).toString(16)),I(B(l))];if(q&&r[0].charAt(0)==r[0].charAt(1)&&r[1].charAt(0)==r[1].charAt(1)&&r[2].charAt(0)==r[2].charAt(1)&&r[3].charAt(0)==r[3].charAt(1))return r[0].charAt(0)+r[1].charAt(0)+r[2].charAt(0)+r[3].charAt(0);return r.join("")}(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:o(this._r),g:o(this._g),b:o(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+o(this._r)+", "+o(this._g)+", "+o(this._b)+")":"rgba("+o(this._r)+", "+o(this._g)+", "+o(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:o(100*P(this._r,255))+"%",g:o(100*P(this._g,255))+"%",b:o(100*P(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+o(100*P(this._r,255))+"%, "+o(100*P(this._g,255))+"%, "+o(100*P(this._b,255))+"%)":"rgba("+o(100*P(this._r,255))+"%, "+o(100*P(this._g,255))+"%, "+o(100*P(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(C[f(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+d(this._r,this._g,this._b,this._a),n=t,l=this._gradientType?"GradientType = 1, ":"";if(e){var q=c(e);n="#"+d(q._r,q._g,q._b,q._a)}return"progid:DXImageTransform.Microsoft.gradient("+l+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,l=this._a<1&&this._a>=0;return t||!l||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex4"===e&&(n=this.toHex8String(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString()):"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return c(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(g,arguments)},brighten:function(){return this._applyModification(_,arguments)},darken:function(){return this._applyModification(y,arguments)},desaturate:function(){return this._applyModification(p,arguments)},saturate:function(){return this._applyModification(x,arguments)},greyscale:function(){return this._applyModification(v,arguments)},spin:function(){return this._applyModification(b,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(z,arguments)},complement:function(){return this._applyCombination(w,arguments)},monochromatic:function(){return this._applyCombination(k,arguments)},splitcomplement:function(){return this._applyCombination(E,arguments)},triad:function(){return this._applyCombination(M,arguments)},tetrad:function(){return this._applyCombination(S,arguments)}},c.fromRatio=function(e,t){if("object"==typeof e){var n={};for(var l in e)e.hasOwnProperty(l)&&(n[l]="a"===l?e[l]:O(e[l]));e=n}return c(e,t)},c.equals=function(e,t){return!(!e||!t)&&c(e).toRgbString()==c(t).toRgbString()},c.random=function(){return c.fromRatio({r:A(),g:A(),b:A()})},c.mix=function(e,t,n){n=0===n?0:n||50;var l=c(e).toRgb(),q=c(t).toRgb(),r=n/100;return c({r:(q.r-l.r)*r+l.r,g:(q.g-l.g)*r+l.g,b:(q.b-l.b)*r+l.b,a:(q.a-l.a)*r+l.a})},c.readability=function(e,t){var n=c(e),l=c(t);return(q.max(n.getLuminance(),l.getLuminance())+.05)/(q.min(n.getLuminance(),l.getLuminance())+.05)},c.isReadable=function(e,t,n){var l,q,r=c.readability(e,t);switch(q=!1,(l=function(e){var t,n;t=((e=e||{level:"AA",size:"small"}).level||"AA").toUpperCase(),n=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA");"small"!==n&&"large"!==n&&(n="small");return{level:t,size:n}}(n)).level+l.size){case"AAsmall":case"AAAlarge":q=r>=4.5;break;case"AAlarge":q=r>=3;break;case"AAAsmall":q=r>=7}return q},c.mostReadable=function(e,t,n){var l,q,r,i,a=null,o=0;q=(n=n||{}).includeFallbackColors,r=n.level,i=n.size;for(var s=0;s<t.length;s++)(l=c.readability(e,t[s]))>o&&(o=l,a=c(t[s]));return c.isReadable(e,a,{level:r,size:i})||!q?a:(n.includeFallbackColors=!1,c.mostReadable(e,["#fff","#000"],n))};var T=c.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},C=c.hexNames=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}(T);function L(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function P(e,t){(function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)})(e)&&(e="100%");var n=function(e){return"string"===typeof e&&-1!=e.indexOf("%")}(e);return e=s(t,u(0,parseFloat(e))),n&&(e=parseInt(e*t,10)/100),q.abs(e-t)<1e-6?1:e%t/parseFloat(t)}function R(e){return s(1,u(0,e))}function D(e){return parseInt(e,16)}function I(e){return 1==e.length?"0"+e:""+e}function O(e){return e<=1&&(e=100*e+"%"),e}function B(e){return q.round(255*parseFloat(e)).toString(16)}function N(e){return D(e)/255}var U=function(){var e="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)",t="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?",n="[\\s|\\(]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")[,|\\s]+("+e+")\\s*\\)?";return{CSS_UNIT:new RegExp(e),rgb:new RegExp("rgb"+t),rgba:new RegExp("rgba"+n),hsl:new RegExp("hsl"+t),hsla:new RegExp("hsla"+n),hsv:new RegExp("hsv"+t),hsva:new RegExp("hsva"+n),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function F(e){return!!U.CSS_UNIT.exec(e)}e.exports?e.exports=c:void 0===(l=function(){return c}.call(t,n,t,e))||(e.exports=l)}(Math)}},t={};function n(l){var q=t[l];if(void 0!==q)return q.exports;var r=t[l]={exports:{}};return e[l].call(r.exports,r,r.exports,n),r.exports}n.m=e,n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var l in t)n.o(t,l)&&!n.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:t[l]})},n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce((function(t,l){return n.f[l](e,t),t}),[]))},n.u=function(e){return"static/js/"+e+".5ebb2583.chunk.js"},n.miniCssF=function(e){},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e={},t="personal-site:";n.l=function(l,q,r,i){if(e[l])e[l].push(q);else{var a,o;if(void 0!==r)for(var s=document.getElementsByTagName("script"),u=0;u<s.length;u++){var A=s[u];if(A.getAttribute("src")==l||A.getAttribute("data-webpack")==t+r){a=A;break}}a||(o=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,n.nc&&a.setAttribute("nonce",n.nc),a.setAttribute("data-webpack",t+r),a.src=l),e[l]=[q];var c=function(t,n){a.onerror=a.onload=null,clearTimeout(m);var q=e[l];if(delete e[l],a.parentNode&&a.parentNode.removeChild(a),q&&q.forEach((function(e){return e(n)})),t)return t(n)},m=setTimeout(c.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=c.bind(null,a.onerror),a.onload=c.bind(null,a.onload),o&&document.head.appendChild(a)}}}(),n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/",function(){var e={179:0};n.f.j=function(t,l){var q=n.o(e,t)?e[t]:void 0;if(0!==q)if(q)l.push(q[2]);else{var r=new Promise((function(n,l){q=e[t]=[n,l]}));l.push(q[2]=r);var i=n.p+n.u(t),a=new Error;n.l(i,(function(l){if(n.o(e,t)&&(0!==(q=e[t])&&(e[t]=void 0),q)){var r=l&&("load"===l.type?"missing":l.type),i=l&&l.target&&l.target.src;a.message="Loading chunk "+t+" failed.\n("+r+": "+i+")",a.name="ChunkLoadError",a.type=r,a.request=i,q[1](a)}}),"chunk-"+t,t)}};var t=function(t,l){var q,r,i=l[0],a=l[1],o=l[2],s=0;if(i.some((function(t){return 0!==e[t]}))){for(q in a)n.o(a,q)&&(n.m[q]=a[q]);if(o)o(n)}for(t&&t(l);s<i.length;s++)r=i[s],n.o(e,r)&&e[r]&&e[r][0](),e[i[s]]=0},l=self.webpackChunkpersonal_site=self.webpackChunkpersonal_site||[];l.forEach(t.bind(null,0)),l.push=t.bind(null,l.push.bind(l))}();n(738)}();
//# sourceMappingURL=main.63bb8ff5.js.map